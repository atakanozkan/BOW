%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Dogi_Pirate_Lost.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: WINDOWS
%%CreationDate: 7/26/2014
%%BoundingBox: 0 0 734 160
%%HiResBoundingBox: 0 0 733.8780 159.8663
%%CropBox: 0 0 733.8780 159.8663
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.1 x399 R agm 4.5189 ct 5.1875%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 28 8%%BeginData: 5961 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD08FF522044446F20277DFD1CFF7D204B444B52FD54FF522044B5
%FCC3B5B58C4427FD19FF522044938CB5FC932052A8FD50FF52458CB5FCC3
%C3C3CAB5FC447DFD17FF524B8C938CB5B5C3CAB56827A8FD4EFFA820688D
%8CB5C3C3CACAFCB58C20FD12FF4B2752FFA8208C8D8CB0FCCABCC3C3B568
%27FD1AFFA8A8A8FD31FF7644938CB5FCB5C3C3B5B5FCB544FD12FF4BFC93
%204B68938C938CB5B5FFFFFFFCB520FD12FF7D2052FFFFFF7D2045444B20
%4B7DFD15FF27A8FD04FF524B444B207DFD0DFF208D8C938CB0FCB5FC8C44
%20F82052FD11FF278DFCB5208D8C938C8D8CB5B5BCB5B5FC6852FD11FF4B
%8D4427A84B448D8C8D8CB58C4427FD13FF5244204BFFA8206868938C8D44
%2052FD08FFA87D7D4B8C938C938C93444B6EC175FF7426A8FD10FFA82093
%8C4B8C938C938C938CB5FCB5FCB56852FD11FF4C8CB5684B44938C938CB5
%FCB5B56F27FD12FF5268B5684B20938C938CB5FCB5FC4B27FD06FFF84468
%44208D8C8D8C69202698C198994BC14A26FD10FF27204444448D8C684444
%F826446F4A20F84452FD11FF52688C8D208D8C8D8CB5FCC3C3FFB56827FD
%11FF7D448CB5208D8C8D8C8DFCBCCAFFB54452FD05FF4B8CB5FC6F8C938C
%6F4A75A8769F2751CEC29920FD04FFA84BFD09FF524BFCB58C4B444B20BB
%997D7CC1C1C17D7D20A8FD0FFFA8204B444B44938C938C938CB5BCCABCCA
%FC4BA8FD0FFF524B206F686F8C938C938CB5BCC3BCCAB54A7DFD04FF7D20
%688D44698C4420BB98759FCE7CA0C8CE6E4A52FFFF6F6E6FFD08FFA820FC
%B5FC8D204B6E4A98C14B759F517675516F27FD0EFFA820B5FCB58C448C93
%8C8D8C93FCBCCAFFC3B56852FD0EFF2068FCB568448C8D8C938C8DFCBCFF
%FFCAB58C4BFD05FF7D454493204B4A4A98C1C1CEC87C4BCEC84B4AFFFF7D
%6E6F6EFD08FFA82069686F204B6E6F4ABB98C8C8CE5176C8C16E27FD0EFF
%20938CB58C6F4445444B44454493FCB5B5B5FC9352FD0DFF5269FCB5FC93
%4493686968938CB5FCB5BCBCFCB520FD05FF278CB58C44206F449998C1C8
%C9A099C87B204BFFFF206F444BFD09FF7D276F2720446E4A4A98C1A6C951
%7D76CEC14A20FD0EFFA820444468F84A444A6EC1744A444A448CFCB56852
%FD0DFF7D2068688D4420204A20754A20204468B5FCB5FC27FD05FF20B5FC
%B5206F6E6F4ABB99C8C8CEA65152A8FFFF7D6F6E4BFD0EFF206F4A274ABB
%99C9C8936875C89F4A27FD10FFA852206F6E6F20BBC14B74C1C1C14A278C
%4B7DFD0FFF524B20276E6F4A999999C1C1BB9F4A4AFC934BFD05FF688C8D
%4420446F6E204A4B4A4A206F4B2727FFA84B444B7DFD0EFF4BF8F8F82620
%4A74C9A0C8C875444A7DFD11FF7D4A446F4A4A98C16E4A757598756E2020
%FD11FFA8204A6E6E4A98C16E2626C198C14A2020A8FD05FF2044207D274B
%6E4B2093F8B5B5BCC3FF6F2020994A6F52FD10FFA8275293932044444B44
%27204B7DFD13FF204B202799BB9FCEC8C9277626754A52FD12FF206F6E4B
%6EBBC1C8C8CE267D4A997426FD0BFF2620F8FFCA27A8FD04FF7626742026
%6E7DFD10FF27449AFF4BA1CACAFFFFA8207DFD14FFA176A1266F98C2C8A0
%517CC8C8744A52FD12FF4B204B206E92C1C8C87B7C51A64A4A26FD0CFF20
%93B5934BFFFFFFCABCFC7574754A6FA1FD10FF514493FC4BFD06FF2027FD
%17FF27204B99CE6F4B27CEC89F26A8FD15FF27206F9FCE6F7652C9C8C14A
%52FD09FF75A0FF4A444B204BB5BCFCB58C44264A446F52FD11FF4ABB6E20
%44BCC3C3BCB5FC6E4A4B4BA87D7D527676FD0DFFA8276FB5204A75C975C8
%C8C22026A8FD13FFA85276B0F8269FC86876C8C84A4A52FD08FFA8C8C87D
%4ABB984B68B5FCB56845274B264B4BFD0FFF7BA07D9998C12693FCB5FCB5
%8C6F20C1204B4A6F6E6F6E6F6EFD0BFFA82770FFA14BC39A4B75514B4A4B
%4BFD14FF4469FFCA27A1524BA0A0A04A4B20FD09FFA8A0C9A04A98C12620
%20442027272752FD11FF7DC8A6516EBB982620444444204420272026206F
%446E446F6E6FA8FD07FFA8A0767D2093FC4B7DFD04FFA8202052FD12FF7D
%A1A82044FC6F52FFFFFFA87D204A20A8FD09FFA8C8C8C14ABB994B202727
%4B274B27A8FD11FFA8C8CE9F759875F827274B274B274B20994A4BA8A87C
%7C767DFD09FF7CC8C84BBB4A4B20C3CAFFCAC3B5936E27FD11FF7DC8A652
%BB744B209AFD04C3B5B54A267DFD0AFF759998996E994A2720272027F827
%52FD11FFA8A0A6C16E4A2020202720272727F8FFA8FD11FF75CEC86E98C1
%26688CB5FCB5FCB54499206FFD10FF75CEC84B98C14A448CB5FCB5FC9320
%754A6FA8FD09FFA8759998992627F8272752F827204BFD12FF7699989920
%4B2027F827F827207DFD13FFA0C8C26EC1984B2045446F444B202726264A
%7DA8FD0EFF7CC8C84AC1C14B204B444B444B2027204B4A517DFD0AFFA8A8
%7D7DF8F8F8517D996EBB6EFD13FF7D752075984AF84B9899204BFD14FF51
%99926F98992027202720272727F84A206E444A4B7DFD0CFF51C8984A9299
%2027F82727272027204A446F446E2076A8FD0AFF529998C175A86EBB99C1
%7CFD14FF7D99C199752699BBC17DFD15FF6FBB4A756EFD04274B274B277D
%27754A6F6E6F4A75FD0CFF75BB6E4B6E4B2027274B274B27525275526F6E
%6F6E6FA8FD09FF7D6E999899A84A4A4B4A76FD14FFA82798C176A8209974
%FD17FF522798C16E20F820F827F82652FFFFFF524B4A6E6E76FD0CFF4B26
%6EC19820F827F827F82752FFFFFF7D4B446F6E6FFD09FF7D4B4A4B4AA8FF
%A87DFD17FF7D516FFFFFFF527DFD18FF4BC1994B2027274BF84B26A8FD04
%FFA84B6E6F4AFD0DFF76999875202720272027267DFD05FF7D4A754BFD0B
%FFA87DFD3EFFA87D522627277D7DFD1AFFA87D7D2626F87D7DA8FD09FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Dogi_Pirate_Lost</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:CreateDate>2014-07-26T12:35:29+07:00</xmp:CreateDate>
         <xmp:ModifyDate>2014-07-26T12:35:29+07:00</xmp:ModifyDate>
         <xmp:MetadataDate>2014-07-26T12:35:29+07:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>56</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAOAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q8P8Azu/O3VNF1N/K&#xA;XlN1i1SJFfVtWZVk+qiRQyQwo1VaZlIYlhRVI2JO1GfOIDzd12P2PLWSs+nHHmf0D8bPPvIf5e2P&#xA;ni5v9T80XV7q7afCks3MtfXsxlJCrCs3qABab8Vp02zXY8k8sjciAOg5vX6/SaXs+GMY8WOWTJ/F&#xA;k3iK77/YjfO/5eJ+Xd7Y6l5WvL3Qru6edY1SRFkH1Z14u6wUt5o5AVPB09j7HNkngIIJIPQ7tPZ2&#xA;k0vakZxlCEZxEfXjBiPUOXCe6q8+j2b8nfzIk86+X5xqCJD5g0mRbbVYo9kcsvKK4jFTRJlqaHow&#xA;Yds2eHKJxEg8T2joZ6XNLFPnH7R0LPsscJ2KuxV2Ksd0v8xvIWq6i+mad5g0+51JJGiNklxH6xdC&#xA;VYLGSGahHYYpp5b+dX55anpOqy+VPKEixajbBf0trDosgt2dQ6wQI4KNLxILswKoDShb7NGfOIe9&#xA;3XY/Y0tXKz6cY5n9AeP6Fp/mLzXrVva3GrX99f3kohjmur24PxH9onn8IUfyj5ZrZanLKQjE7l7g&#xA;dh6DT4JZMkLjAb87P4+D0mXTvzH8j2j6n5Z85LrVvZgte6PeyS3kISOQwMeM7NMiCUcS0Ui/IjMj&#xA;x5wFkiY697zx7L0uqlwwhPTzl9PF6oE8PEB3gkb/AIp67+WX5i2HnnQGv4oTZ6jaSG31XTmbk0Ew&#xA;HIUai843Uhkam49wRmdCYkLHJ5XVaWeDIccxUosuybjuxV2KuxV2KuxVSF1atOYBMhnHWIMOY7/Z&#xA;rXFVXFXYq7FXYq7FXYq7FXYq7FXYq7FXlUv/ADkt+WvqD6qNSvbc/Zu4LGb0iPFfUEbsPkuUy1GM&#xA;GiQ7HF2Rq8keKOOZj30XzHcak+q6hqOryEmbU726u5SQVNZZmahU9OIotO1KZrtRK5l9D7CweFpI&#xA;iqO9++/wETbecpfL0kVzFcSQXcZHoNA3GQ7incbV8dsx4YJGVx2c/tDtLT4sXDqAJRPTqfh+lkOr&#xA;6X5pvtMuNYvdThW8lhMlqJGa8kmcoWjT1CyLVjsAvP2zXjVwlkESJS33J2r7z9zq8vbGSGI+BGGO&#xA;Nekc/dyob/FOvyt8yx/l/wCe1ury+OqeWfMLrpE2s+i9oizxn1La49GT4lj/AHzxsG3WjNWgpm+0&#xA;2bGMksUTyo/j8dQ8V2nmz6mMc+Xn9PKuX4+x9W5sXSuxV2KuxV8OecbfRrLzV5h0RQmsaZbX08ln&#xA;eWyvcRhJ3M3pmRA1JIS5jeh6jbNTqsZjk4oyonzfRewNXjzaLwc2MzjC6PDKQ7+YBohJdOJNmtxL&#xA;I0klwWuJZpWLuzSkuWd23Zvi3JyGWRMjbtuzMMMWniI7RI4vnuj9N8yR6fdWzW80guJJlFm9sHaT&#xA;1qigjMYJ5Vp0ymeKR9Q24fg3S7X0kBwZJCUZbV9V+VC3onmj82/Ol/oM1rq6zW+msga5lFlPF8AN&#xA;T6jhNgT9oHInVzy+jiib7iP1ut02DsrS5BliZWO8Tof7FNP+cZtXW4/MHWorGUS2F1pMU1w6bqZr&#xA;e54xVI78J3zZdnxlGJEu9532vzYsueGTGRIGHMeRL6WzPeSdirsVdir45vfNHmTQPzG816vo2qS2&#xA;mqxa3fevDNIz2tzFFcOIYp4SeLJ6HFVYfEo+yc1ubUTx5e+L3HZvYem1mgEgeHOL3/QfKvi352/O&#xA;Xzh57pykk0PQHRfT0i0mYNLVfia5nTg0gYk8UHFaUqCd8nn1Ruoo7G9nISiMmfe+UfLvPvY15e8l&#xA;W2s39vY2dlG9zcSLFbqoVGLk7HntSnjXMI58nEBE7l6ifZujhilPJCAxxG/p/Bey2Gs/mp+VUMF3&#xA;qkr+ZvJzyelcQif63PbUJV/q9w1H5JT+6lJU04qynM7HnnCvEqu8fpeJ1fZmm1HEdHxCcRZxyG5H&#xA;fDv765vedG1jTda0q01bTJ1utPvolntZ06MjioNDuD4g7jocznlkZirsVdiryz/nI/VdX078vYW0&#xA;64mtFuNTs4L65tpHilS3ZmY8ZEKsvKRUU0PQ0yrMSIEjnTn9l4oZNTjhk+iUgC8x8vf85D+a/LGk&#xA;z6VqsTeZLmSKnl+/lZVkWQUBS+YcTJGq/GJFHM04nchhjafWCUTxbEO+7W9l54c0Y4TxQycr5jvv&#xA;y8/h74Frvm/zp5juXn1zXLy6aU1FpFM9vaJvssdvCyJtWlWqx7k5RPVSPLZ32k9mdNjA4hxy8/1M&#xA;s8g+X/zaML6j5N1HUUS2bjIrXCy2ZegPBre7cxvsf2AG32IwYdRmlvEcUWrtbsfsvFUMkvCyHcVZ&#xA;+Y32+T2v8sPzYk8yXc/lzzFZjSPOFgpae0AYQ3CIQrywc/iUqx+ONviWo3Yb5scWYTG3PueJ7Q7O&#xA;npZASqUZbxkPpkPIvR8tde+Rfzi8p2nlXz6+l+V7hWttQibULvT5FITTzM54iNxXksrB2WLYrTrx&#xA;IzWa7HjHqPP73u/ZTXayYOGABxx6n+G/v932vNv9LtbibT6h5yxlWcKRGEkPItQlt+ZNFrlFiQEu&#xA;jts+pnpTLEd5kmQNbVLcnmf4r2t6N5GsrRtJtZLSRrHWbWf14tUiWNp1uoaoZP3qyKQykkKwI4tT&#xA;NRn1eXDm448u7pR/HzdLPTR1GP1/Ve562Pxy7ma+e/JOk6F5a8u3Nrp11rE2nSrZzBJpVaWC4iIl&#xA;9f0mTksjRqlOnxUoa0y3Q6gmcyTwmYv4/gujywOQiO1Q5Weg/Tt8Skn/ADkdq+kTXGn+XLRRcaxO&#xA;TJc20I5SMJFaOCIKu5lld/hHWn0YezdNIz4wPL7R9zaM4GMxkdv2Hb4vU/zB89ax5D/LXR4pZkk8&#xA;23UFvac2pIPViiU3c9OjBaEA0pyZagjbOlz5OCN9XU6PT+LkEenVK/8AnHbXPMWuf4j1LV7u4vFk&#xA;ktljlmdmjEoErSrGD8CUVo6qgApTbplWklKQJk5PaePHCQjAVQ3eyZlusYV+cv8Aitvy51aHyvBN&#xA;carcqkFLWnrrBLIq3DRA7lxCW403B3HTBK625tuHg4xx/Re/u6vlDVLXzBoejmW48satp9jCFiDz&#xA;2FzBEhZhGimSSNEHJmAFW3zS/kp8VyfTh7UaKGIQxd1CIB+SS6RpirLYrcH15I5rVaP8SACeMEKt&#xA;OPTvStOuRzZdjW20vuLoTxGMRM3XCPLmOn4L2/SfKU3mCaM294tjEtq9rqDtDFNztXkjkZE9QH03&#xA;5wqVden3U0mk1k8XHEC+Nr7UwwPDI3cSk9hcw+aPNsml6R5k0uTSridW0V1lhnuTLYobhhJYkeo6&#xA;tNDXk5EZjU9ea02MNENNjjm4T4ke8it/x83VZe0ZZiYGuA9ydflGRoP54TaMrITqOjzfXlhRYo/r&#xA;cd2Z+QjQcEAVnCqOgIzY9laiWUSlLa5fqcftLBHHwCP819G5tnVuxV2Kvnj/AJyY8y+abfVLTSLh&#xA;bmw8kywBp7yDksV3cyMymC4mSnBEVf7skc61NaUzG1RyCPod72Bi0k83+En0jkOhPmXgusLoH1aO&#xA;LT4EWWZ1FLUBGaOvx14cajjXrtmtw+JdyO3m9z2mdFDGBjEQZEfRsTH+L6avbv2R+m22p6jOYLOw&#xA;lkkRVZhygUAOSF6yDrwOV5ckIC5S+/8AUiPa8CaEZ/7H/ik20DUtc0bWEkXTb2K50+UTCVYJZI1d&#xA;G+yZIOQINN6N0yozjtOMo/Ovvpth2vp8sJYcgmIyBB9N/dxBn/mD817PzDoFzaWukWtpdXoSK+u7&#xA;Z2KMsU/1j4YhRVcyklianfLc+p4o1w0T/ajsrsWMMscscxy44XwjY0THh3l5R6bV3PQP+cZLqeTy&#xA;NqloxP1ew1m6gs17LHJFDcsB7erO+bfSyJxxJ7nz3t/FGGtyxjy4vv3eu5kOodiqD1rUJtO0a/1C&#xA;G1kvprO3luI7KAVlnaJC4ijG/wATkcR74q+L9b83al52nnu/M+pTXUrv8elLJLDaWpU1ESWysoBQ&#xA;gfE45kipzUarPm4qGwfSuwuxdAcInIjJk6mzse4V+nf3MWjmtU1G5MXrSxxkRQbPLQUBejkHq1AQ&#xA;WrtkaPCLpyPzmDHmnvIiPpHOVdZb+/nZv0phJLLaWaanc280FlVCtxJGwQlqFR075UCJS4AQZdzf&#xA;/LOCIEiTEd5if1PTPy5/NPSNLsjpeo2j31lLMt7bRiQwXFvIYyhmiVgrElTsainUYcWU4gRIXG/k&#xA;WrXabF2hIZNPljHLw0QR9UbuiDvXwKH1rzYt/wDmPoXmLTYntGs9R06C2aR+c7wmSOzk9aT9ppoX&#xA;ZX/j1yenz8WexyO32OP2x2UMPZZjMiU4S4ttgDKW4j/R3fWObp8zfOf5kflR+Zutfmdrmo6NpkD6&#xA;ZqTWrW+p3F1FHGqxWcULKyD1JhxkjY7RnrmFqNJ4sgSdnqOxfaGOhwygIcU5Su/g8u/MTyFrX5fa&#xA;3Gmv3Quor+0imS/iidLVZVeUS26O1eTJ8LfFQmvTK82mIAEQjH2yc+SU8xAO1e7dG6Z5f/M6x8s/&#xA;4jsdJj/Q2oT2wsjPtIxuJIbOJyPVRlDuVKgr0oa5i5OzuMiweXSvMt2PtCAhKXHGJ4h6TGV16RxX&#xA;8zXl5vU9F/Lv8/b1FttR8wJo9hQKY4BDzCHrwcfWZdu37xPngx9lgcoj4m/sGzHLqdAPVKcsku6E&#xA;eAfEys/JjWn6pc/lN+YU2kJpo80NBG9zf3EkdvJqvCXk/wBbtro0m4uGVZIZWJ9TlwopFdhPUwwk&#xA;RltHv8+51P5DxcPiwPrMj6OvD/OvrvY96R+YfM2q/mz+YNjbAR6cjmKwtA7u8EKvV3lLOsVXdqqF&#xA;25Mqp13yiU/GlEHZy8MRpsc5D1S9x+D6q8seW9L8t6FaaLpcfp2donFSaF3YmryORSruxLMfHNkA&#xA;AKDoZyMiSeZTTCxdirGfzH8kQ+dvKN55ekumsWuGilgvEQSGKWCVZUYxkqHHJKFajbuMEo2KLKEz&#xA;GQkOYfK9v+V2r6r5s1DQPL3mK1vL/RGq0yxm0ElzGSJIrYPJJ6rR7qzMQgNRRuowZafGAY/VIjkX&#xA;f48ubJw5Ml48HF9URf4/HNk3kKD860OofVtBttZ0yOefTbz1pFtvWMDGKb7JlGzhlqq02zXT7KG0&#xA;oiUT8DX3OVmz4svFE5cZETsZCcSfPaMg15i0Xzd+XOkSecF8p2tnfrJ9UhvrvUTqMlpHODzZI4LW&#xA;BOPFacnkY123rQ3js8mNSlUe6uf2lxtf2lk1E48Uo5TEfwivfzhEs8/I/wDKXW9M1mTzz5lvoLy/&#xA;vYHNgLaX6wGW6CM9zJMFRWLJGqxqg4qn0AbDT6cYhQdRqtV4tbUA9tzJcR2KuxVbLFFLG0UqLJG4&#xA;KujAFSD1BB64q+K/PXlHXNJ/MDX45NAubcXuoztpxs7FzBLaFz9VEH1aMxn91xDKPi5V5b1zX6rF&#xA;OUttw7zs7U4cePc1LqnX5d2RWaSOSNodSa4a3ubOVSk1u8fwLBIrbqw3Y+7Gm2c52pGQlwkcvt/H&#xA;L4O90eWM8ZyA8/srp+n4s2vvI83l+2vjpuuSavriQh7HQby4hjiRJJATV2Hq02KxvK9P2a5GGDxg&#xA;Ljwx/ilGJ/s99Op/lCWMmjfcJFgn5keX9StbiXUNR0u50+6t7Nriz1KB7cIwCH/R75Flkr+9QcfT&#xA;LfaG43OXaUiB4IyEomXIg9/1R7tud93XZzcWtmD40AYyiOY5f1Zd4vl+h9Ffkr5et9D/ACy0KGNi&#xA;819bLqV5MwCs898PrD1p/L6nAf5KjOtjERFB5TPmllnKcvqkbPxZvkmp2KuxV4x/zk15P0+78i3G&#xA;sWehW91qqXFuL7VI4A17DZB/3kiug9QhaBT14qSe2QyXwmubdp5ATFmhe75q079G3Mlvp8E0aw3D&#xA;rbl4zWONXBJBdfhV2VWVATUt9OaXIJgGZB2/H9vk9R42I1jiR6tvh+OXm9v0jyjq2v2MaaTqJ0mS&#xA;1fk1x6azRkGq+m0JK8hTcUYU8c52BHGeKPEPl9rla/NwAUal0/ahdZ0bUybnSl03/FNra2ouE1FQ&#xA;np3EqqWeP4FeKGVePwgtXdadajJjphEcYn4Zvlvy/SHBh2lxemUeLzvr8tmN/lR5Q/Sv5qaNpv1q&#xA;7fS7BW8wNb30Lw3KLaTqlvE7OQzj6wytUr0FM3/ZvrJkRG47ek2D+ph2p2pmOAYJSlKJN+r6q7j3&#xA;7vrvNu8wh9RvY7HT7q+kBaO1hkndR1KxqWNPuxV4j5/17XF/LjUrTzLdyX9r5h0+JopoI0iFreM6&#xA;M8CiFQ5t2VqoZA1OLCRzzGajB2mJ8QNA78Pn+1zxpCJAjcXu8g8y2+o+VNM0fUINVd7aHUraVIHj&#xA;JpJEWuEZgh4t+8hXbh45gdn6s5MpAG4Hf7nsO0NRxwjjzGPhmQuXD6q58x7u5PdX/wCciPNl9AyL&#xA;qk0aOP7q0t/Qb6JGVGH/AAeZ5/My25fL+1sh/IeAcQHiSH9Y/Yaix/yFaeefOHmfUodA9FL5tMnl&#xA;YXErIxCzRKG9bhIDNylPENQdTXbcy7MjOIEjZBt0/aPtCcuXiEeGAjwgDn7/ANnIff2H8nPyS13S&#xA;vMQ8x+boEjubcSPb2zTeuz3LuCszcGaOkShinIsxZy3wcRmVp9LwHetuXk6TV60ZBUbHf+Pxu93z&#xA;Mde7FXYqwjVPzLOlz6hcXmm8NAsZJ7c6ospZxNAlSZoPTAjhMitGJPUO9CQFNRifnIeL4R+pu8GX&#xA;DxPmTzDp0dp5OufNH1iVdbmCT3M0ZXjcXVzIvKSRHVxVpJSx40Oc/j1M8up4DvEk/B7OGeej094p&#xA;cOwvkQT7jf2UnHkL8+dT8teWbTRLGSy+rWY4xm4hkWQ92ZjySpZqsT4nNxkz54naLLT9ldk5Y2cs&#xA;r67198Up/MD86td80aY+n31wbvTy8cktpGgt7c+k6yDm1Az7qNqkfLIgZ5/UeEMdXLsrT4zHAPEy&#xA;H+Kzt8T/AL0eSaeTvz217ypKul2Fw2r+W7MGPTrK7aONYYSgpB64SSasL1CKWI4AeGSw6nIIjjG9&#xA;fg/L7XQT7PxyJEDW/wAK7vff2Mkuf+cnfPDyA2um6ZDH3SRLiY0r2ZZou3+Tkzrj0DZHsYdZfY9c&#xA;/Kj8yb3zpp87XumPZ3NoFEt3GG+qSsagiMsSVdSKtHVuII+LfMnBm8SN1TrNZpfBnw2D+OrPMvcR&#xA;C6lqlhplqbq+mEMIIUEgszOxoqIigs7sdlVQST0GRlIRFnYJAJ2Dyv8ANL86rbS00XS9BuGin18G&#xA;STVzFVrO2SQxSFYJgpNxzVlCOvw8W5Coplc88Yx4ujnaDs7JqsnhwoS89vh73lUf5YanrX5jqPJf&#xA;m19Qufqp1C91u7knll3kEdtDdc1YGT4HIHEbL0XbMSWEZwbIlHp5O5zzx6Uwxzxzw5ADx1R4u47m&#xA;iOf62X+afyk80XHq635h0k6pqMPG4upvLl96L3X1dFTe3u4VZGeKMIUhm+L5nKoaDJj+iQ+P7Ofy&#xA;ddPtO8Rw88fFfIXflzru5lguseaPNP5z6snlvQ9Oe1s+axXnESSfV0ZzWa8lZIliCcS3pj4mZQor&#xA;mPo+zODIJHcj8fFnl1MYYjG9z0/Xyqu7vfXNrbQ2trDawLxhgRYol8FQBVH3DN86VVxV2KuxVLn8&#xA;xaEupTaX9ftzqlvCbiawEqeusQAPMx15AUI+8eONq+aNV85aJ+a9pqkvmTXZvLmkW7mTS9I4sLN4&#xA;kq/O9MJ5vOaBtzxj/Z5GpzCy6gE8APDLp5vUaDsiUIDUTgM2KjxASox8/gPx1TjyH+XH5nnyGpup&#xA;IdV0bXrZJJ9MMzWmpQo1HjEc0iPDI3E0dJuIPQmm2YuTsscXHD0y+z9nwddLtOzE8+E2L368v6Xx&#xA;CEPmeH8pprqHWLfW5L3VoYxpdpqRtks4I7bkPTjlS5uIvtzVZUO3ZRWpxtVpM+QREq9PvJ+5n+Yx&#xA;5spmBGHFzA9MftO1p3/zjho+s6t5k1nz/qETRWk9qum6W1CI5EaRZZvRLAM0aelGOfRnL06Zsuz9&#xA;KMOPhcXtHUeLku7+74PoDM516yaGKeGSGVQ8UqlJEPQqwoQfoxV89ebfJ3n6jaDqOm3eraZBB9Tt&#xA;L60Akjnt1XgryKjc45irfHyX7X2SRTOdz9l5I5OLHVXfuej0XaOnGLhnsTz83j/5pL5x0yy0/RPM&#xA;Nqtlut7bm44CaVV5xq7JG8gi5HlsTWv7IGZej7PGKfGdiRycbW9oeNDhG4B596WaN5M8x6l5Jn80&#xA;2htZLWDUF0pbX1G9d5miWXkOSpHw4yD9vrXNjkyRhEyJ2Dr8UZTkIRG5enf84z/pXy553mOvQNaW&#xA;utWxs7e4k4cTdLKjQxfCzcAw5heR+JqDckZTh1uLJPhjKy26nQ5cceKUaD6tzMcB2KuxV2KvHPzM&#xA;m1by0+qRi1lbQ9alN0uoRoXit2eNUuIJuIYpzdDKrtQHmRXah0PamhnKfHAX3u57KzYhKshquXc+&#xA;c/NFpqt75fZNMuJbjy/YSKyBwrO3pErWMBeTxw9Ksamh60qa9HKEM3rFZD+N/Mufrcc8mH92eLHH&#xA;8bd4H472O6DpOv6mkpsLMXUcQqzo4UE0+yC9ByPhXNtn1ePEQJGrdTp9JlygmIunqP5B/lPL5y16&#xA;5v8AzFZvD5f0dgktq/ON7i6ZQyRkjgyiNWEjcT/J2Jy+EozFjcOLl4oGj6T9r6N0T8n/AMv9Gvxq&#xA;Frpzy3iszJLdXNxdAc0MR+CaR0PwErUivvgx4IQNxFIyanJMVKRI5prceQfIly4e48uaXM4IIaSy&#xA;t2NR03KHplpAPNqjIjkU5tLS0s7aK1tIY7a1hUJDBEoSNFHRVVQAB8sLFVxVg35kajYafqXl651F&#xA;ylpDLdSQChIa79AxxqKftejJNT2qe2avtcnwdu8X+PfTm6DEZ5OEc6/H2PDv9xGteavMDXECtZNO&#xA;BbWlwFZUidfrRIBrTlc3M8n+sxpnO6rPk8PHROw/Sf2PUaPSRx8cTubH3D9NvMfK/n3UNC1bU7rR&#xA;5ry0hvp5GQ20xBaFHYQKwZk+whoOudH4GXgiAaNC+m/Vr0PaujuX5jGchJO5qRroPVyoJ1q35seZ&#xA;9St2gnu7+5RhQxXVwRCfmqu9fuyv8plltKWzs/8ARB2fh9WDB6/6sR9u5QPk/wA9a3o01nqekL6G&#xA;p2D3kRvYqhJxNK031adXDIYi7M3H4mGzLxpXBwnDkJEtjw7e4Vf4p52VascUo+omXLvJv5c+99ae&#xA;U/zo/L/zKY4YNQFhfyUAsL8C3lLHoqMSYpD7RuxzaQyxlyLpM2myY/qDOMsaHYq7FXzx5+1TTU8j&#xA;ak0d0RrLX2pyzulQyGaaezvFkr2S2meNa/Z4gj7IzmpaicNXLz2/V+h3WDR8eK/4Bv8Ar/S8w/NV&#xA;dJg0DTxHbwtf3dwsbsAEkaCJWd0LqOXGoVfkco7IE5ZZbnhA+Fu57SywxCJIuyLHK4jpfchrD83P&#xA;NMNnHCupasiqKBIrt+A++VP1Ztp6bNe0tveXPxdt9l8I4sA4v6kD9qSaj5x1G81O1u7tPXC3CNIk&#xA;7mWSYbhlZ2DU5IWFACfDwwS0R4JEy9RDha72gjnEcWPGIYhLy3/V8N/uerfkx+cy+U4ptH8wi7fR&#xA;CxFkkYWUWbCR+YWMn1VhKleKBn402XrW/T6mtpG+VOj1PZ0iOKEe+/n3dPm+jfLnm/yx5ktzcaHq&#xA;UF+igGRIm/eR16CSJqSRn2ZRmeJA8nUSgYmiKKb4WLsVeR/m75Q8z3fmO313StNfVLP6nHa3EMDR&#xA;iaNoZpZA3CRo+asJ6fASwp0zV9p6KecDh5i/tdv2Tr4acy4rqVfZbHPL/wCXvmjzBNqVhNYz+XtM&#xA;nto52ubqIMp1G2uIntWWAujN+59ZJStKqVHLZaU9n6HJHHLHlPpPJs1+uxyywyYt5R5/oTa3/JLz&#xA;lNNHb6hrllHpqyI7tbQTGcrG4eic3UIx47NVuJ7HJYexsePIJ2bCM/bU8kDHhG72nNw6V2KuxV2K&#xA;uxV4f5z/AC98w6N5jur3QtLk1fRtWkef6tbtH6tvczNzlRhIyD0pJCXVq0WpU8VC5o+0uyjmlxQN&#xA;Hr+t33Zva0cUOCd0OX6lW6/I/VdL0rTLzy4YDrCW8S6/YSOUhubriPWuYZCG4yFiQQ2zLTdSN8jW&#xA;9mRzQAGxApxtF2rLFI8XqjI2ff5PQvy18t6joHllbbUxEmo3NxNd3McBLRoZX+FAxA5FYwvI/wA1&#xA;abZmaXB4WOMLug4WqzeLkM+VspzIcd2KuxV2KpV5m8saP5l0mTS9WiMlu7LIjoxjkilTdJI3WhVl&#xA;/sNQSMjOAkKO4ZQmYkGJoh89eY/ykvdM85X0TWGsa1YyQwppt5CG/eoFJaKZ7MW8QpK7/wB6AKUz&#xA;SazQ5RUcAHD50aPx/Q73S9oY5Ayzk8fLaxt/m19rxjzZ5I826Lq91JcaLdaNavKxt4poGEAUnYJI&#xA;D6bHuQjkCubXBGUYAS3k6zNOMpkw2jfJfbfl7+Zd2toU0DUJbe+4m1mt7KcLIp2r6h5KgJruSPh+&#xA;KvHfLGviHUvsex/KbyVcaNYR63oVlPqMen29neOicV5wwJEWjCkBXUJxSRfjVdgQMkYRJshrjlkB&#xA;QJq7+LyTzz/zjdrllcGfykx1awlahsJ3ijuYgfCSRo4pU+ZVht9rrmFl0fWDt9N2ttWT5vVfyc03&#xA;zrpPlp9I8z2n1cWThdNcyxSsYWFSh9JpAFRvs1boeNAFFcnBGYjUubrtZLHLITj5FnuXOK7FXkv5&#xA;ofk62o2+s635auJbfVbqGWWbTFRJYrifhQtEHaP0pXp15cS25WpJOFqNDjyS4iPUPxu5+l7QyYom&#xA;APpP2e54r5r/AC01ebyoy6R5R1WS6jMf+kSW05mhCspZIo5azbrUUiQqc12i02pjl4p7R7tt/l+l&#xA;2Ot1WmljMYby2rnt8/0PMtN8t+brvU20nT7O4utRQc5LFbdnnVRWrMicWFAD2zd26e66vbf+cZ/y&#xA;98wDzTq995k0SVdJfTZbJ01K1MatLNNEeCRzICRwjcPT5N2whhM+e72Dzd+RfkXXtPWK0tE0W/hU&#xA;i3vrNApqTy/fR7CYV68vi60YVyE8EZCqbcOsyY5cQPPnfV5ZoP5M/mv5Z8zxajpkFvNNYSBre7We&#xA;NYZlNQVIciVVdPhccO5oTscxIaWcJ2CKdjm7RxZcZjIG/hsfm//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:E8A8D89E8514E411846E9A58BC82E63C</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:E8A8D89E8514E411846E9A58BC82E63C</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:E7A8D89E8514E411846E9A58BC82E63C</stRef:instanceID>
            <stRef:documentID>xmp.did:E7A8D89E8514E411846E9A58BC82E63C</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:65874799FF12E4119767B49514B84AF3</stEvt:instanceID>
                  <stEvt:when>2014-07-26T01:06:59+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:E7A8D89E8514E411846E9A58BC82E63C</stEvt:instanceID>
                  <stEvt:when>2014-07-26T12:35:18+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:E8A8D89E8514E411846E9A58BC82E63C</stEvt:instanceID>
                  <stEvt:when>2014-07-26T12:35:29+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>900.000000</stDim:w>
            <stDim:h>300.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=63 G=169 B=245</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>63</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>245</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=122 G=201 B=67</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>122</xmpG:red>
                           <xmpG:green>201</xmpG:green>
                           <xmpG:blue>67</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=29 B=37</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>29</xmpG:green>
                           <xmpG:blue>37</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=123 B=172</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>123</xmpG:green>
                           <xmpG:blue>172</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=189 G=204 B=212</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>189</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -159.866 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 159.866 li
733.878 159.866 li
733.878 0 li
cp
clp
[1 0 0 1 0 0 ]ct
127.855 102.4 mo
126.345 105.025 123.779 106.82 120.819 107.323 cv
115.1 108.294 105.482 105.798 97.5449 99.2373 cv
97.0605 99.418 96.5913 99.542 96.1353 99.6113 cv
94.8608 99.7988 li
93.9526 98.8848 li
91.187 96.1035 79.873 80.3706 84.373 72.5449 cv
84.6772 72.0151 85.0503 71.5308 85.4824 71.105 cv
89.4893 67.1455 97.0205 72.2725 104.992 77.7026 cv
106.267 78.5703 107.493 79.4053 108.615 80.1338 cv
109.878 80.9531 li
109.878 80.9531 109.763 82.542 109.759 82.5869 cv
112.348 83.9561 114.511 84.8271 116.615 85.6738 cv
119.327 86.7637 121.886 87.7949 124.617 89.6738 cv
129.814 93.252 129.938 98.7783 127.855 102.399 cv
127.855 102.4 127.855 102.4 127.855 102.4 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.75021 .679683 .670222 .90164 cmyk
f
86.9927 73.4102 mo
85.2822 75.5317 87.1372 83.9541 94.7295 92.8926 cv
103.091 102.734 114.824 105.754 120.391 104.808 cv
126.211 103.818 129.459 96.1055 123.171 91.7744 cv
116.88 87.4434 111.584 88.0508 99.5942 79.0757 cv
93.001 74.1416 88.9912 70.9321 86.9927 73.4102 cv
cp
.0250248 .567285 .998169 0 cmyk
f
85.7241 73.0137 mo
83.8696 76.2378 86.4141 85.0703 93.7573 93.7178 cv
102.417 103.91 114.669 107.075 120.605 106.065 cv
123.19 105.626 125.431 104.06 126.751 101.765 cv
128.611 98.5303 128.451 93.8613 123.894 90.7236 cv
121.28 88.9238 118.898 87.9668 116.14 86.8584 cv
112.069 85.2217 107.453 83.3652 100.357 78.0557 cv
99.418 77.3506 li
92.9482 72.499 88.6748 69.2939 86 72.6099 cv
85.8994 72.7339 85.8076 72.8711 85.7241 73.0137 cv
85.7241 73.0137 li
cp
86.8301 73.6499 mo
86.8799 73.5625 86.9336 73.4819 86.9927 73.4102 cv
88.9912 70.9321 93.001 74.1416 99.5942 79.0757 cv
111.584 88.0508 116.88 87.4434 123.171 91.7744 cv
126.984 94.3994 127.291 98.2666 125.645 101.129 cv
124.576 102.986 122.683 104.42 120.391 104.808 cv
114.824 105.754 103.091 102.734 94.7295 92.8926 cv
87.397 84.2588 85.4155 76.1074 86.8301 73.6499 cv
86.8301 73.6499 li
cp
.75021 .679683 .670222 .90164 cmyk
f
94.7324 92.8916 mo
87.1372 83.9502 85.2842 75.5288 86.9927 73.4136 cv
87.1768 73.1768 87.3911 72.9946 87.6226 72.8638 cv
86.9863 75.9106 89.1948 83.8701 102.238 93.7861 cv
117.911 105.698 127.473 97.9414 123.96 92.3896 cv
129.163 96.7939 125.946 103.867 120.393 104.812 cv
114.828 105.756 103.094 102.731 94.7324 92.8916 cv
cp
.101595 .727993 1 .0109865 cmyk
f
96.0977 74.9756 mo
97.9487 76.0508 99.9038 77.3418 101.805 78.6226 cv
99.9331 84.6357 95.0239 89.8604 91.6748 91.6416 cv
90.4409 89.7158 89.1958 87.499 88.1689 85.2598 cv
90.9663 83.1924 94.2661 79.3833 96.0977 74.9756 cv
cp
0 0 0 0 cmyk
f
101.805 78.6226 mo
103.728 79.9146 105.584 81.207 107.227 82.2705 cv
106.862 87.4541 100.05 96.4502 95.7588 97.0898 cv
94.7769 96.1035 93.2495 94.1055 91.6748 91.6416 cv
95.0239 89.8604 99.9331 84.6357 101.805 78.6226 cv
cp
0 .970642 .96051 0 cmyk
f
87.2764 72.9194 mo
88.8208 71.395 92.2349 72.7231 96.0977 74.9756 cv
94.2661 79.3833 90.9663 83.1924 88.1689 85.2598 cv
85.9443 80.3818 84.7954 75.3755 87.2764 72.9194 cv
cp
f
87.2764 72.9194 mo
87.3984 72.7939 87.5337 72.6943 87.686 72.6172 cv
87.1963 74.3062 87.6899 77.895 91.0391 82.6748 cv
90.0762 83.6992 89.0928 84.5752 88.1689 85.2598 cv
85.9443 80.3818 84.7954 75.3755 87.2764 72.9194 cv
cp
.132235 1 1 .0386358 cmyk
f
91.0391 82.6748 mo
92.2476 84.4092 93.8281 86.2988 95.8643 88.3145 cv
94.4141 89.8145 92.9336 90.9727 91.6748 91.6416 cv
90.4409 89.7158 89.1958 87.499 88.1689 85.2598 cv
89.0928 84.5752 90.0762 83.6992 91.0391 82.6748 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
95.8643 88.3145 mo
97.4429 89.8701 99.292 91.4932 101.455 93.1895 cv
99.5313 95.2891 97.4526 96.8389 95.7588 97.0898 cv
94.7769 96.1035 93.2495 94.1055 91.6748 91.6416 cv
92.9336 90.9727 94.4141 89.8145 95.8643 88.3145 cv
cp
.132235 1 1 .0386358 cmyk
f
85.4795 73.1787 mo
85.4795 73.1797 85.4795 73.1802 85.4795 73.1802 cv
81.6143 79.8994 91.7847 94.8965 94.8569 97.9863 cv
95.1421 98.2734 95.5469 98.4092 95.9468 98.3486 cv
99.5322 97.8154 103.748 93.083 106.149 88.9121 cv
107.13 87.207 108.334 84.6865 108.498 82.3643 cv
108.531 81.9004 108.309 81.4561 107.921 81.2041 cv
106.796 80.4736 105.57 79.6392 104.273 78.7568 cv
97.0781 73.856 89.6396 68.7896 86.3784 72.0107 cv
86.0293 72.3574 85.7271 72.7495 85.4795 73.1787 cv
85.4795 73.1787 li
cp
86.5835 73.8164 mo
86.7725 73.4868 87.0015 73.188 87.2739 72.9185 cv
90.3057 69.9229 100.562 77.9478 107.227 82.2734 cv
107.104 84 106.266 86.1514 105.044 88.2754 cv
102.6 92.5244 98.6206 96.6631 95.7607 97.0879 cv
92.5278 93.8359 83.2622 79.5928 86.5835 73.8164 cv
86.5835 73.8164 li
cp
.75021 .679683 .670222 .90164 cmyk
f
133.259 89.5146 mo
130.264 87.7178 li
147.723 63.9385 li
147.937 63.647 148.052 63.2944 148.052 62.9321 cv
148.051 49.7686 li
148.051 49.1709 147.738 48.6177 147.226 48.3105 cv
146.714 48.0039 146.078 47.9873 145.552 48.269 cv
133.937 54.4644 li
133.618 54.6348 133.361 54.9028 133.204 55.229 cv
120.443 81.8262 li
117.448 80.0298 li
116.644 79.5469 115.599 79.8081 115.116 80.6133 cv
112.503 84.9688 li
112.02 85.7744 112.281 86.8184 113.086 87.3018 cv
116.759 89.5049 li
110.809 101.907 li
110.429 102.699 110.714 103.649 111.467 104.101 cv
113.152 105.111 li
114.837 106.123 li
115.59 106.573 116.563 106.379 117.082 105.671 cv
125.224 94.582 li
128.897 96.7861 li
129.702 97.2695 130.747 97.0078 131.229 96.2021 cv
133.843 91.8467 li
134.325 91.042 134.064 89.998 133.259 89.5146 cv
cp
f
114.026 103.654 mo
115.712 104.664 li
146.352 62.9331 li
146.352 49.7686 li
134.736 55.9648 li
112.341 102.644 li
114.026 103.654 li
cp
.280522 .914061 1 .298253 cmyk
f
145.19 51.7036 mo
145.191 64.5142 li
146.352 62.9331 li
146.352 49.7686 li
134.736 55.9648 li
133.888 57.7334 li
145.19 51.7036 li
cp
.215396 .82446 1 .119539 cmyk
f
129.771 95.3281 mo
113.96 85.8438 li
116.574 81.4873 li
132.385 90.9727 li
129.771 95.3281 li
cp
f
131.997 91.6182 mo
116.187 82.1338 li
116.574 81.4873 li
132.385 90.9727 li
131.997 91.6182 li
cp
.144869 .807401 1 .0376593 cmyk
f
124.946 93.0928 mo
124.874 93.0488 124.813 92.9844 124.776 92.9014 cv
120.876 84.1182 li
120.781 83.9043 120.877 83.6523 121.092 83.5576 cv
121.307 83.4629 121.558 83.5586 121.653 83.7734 cv
125.553 92.5557 li
125.648 92.7705 125.552 93.0215 125.337 93.1172 cv
125.207 93.1748 125.061 93.1621 124.946 93.0928 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
118.204 89.0479 mo
118.089 88.9805 118.009 88.8584 117.999 88.7148 cv
117.982 88.4805 118.158 88.2773 118.392 88.2607 cv
127.977 87.5664 li
128.21 87.5498 128.414 87.7266 128.431 87.9609 cv
128.448 88.1943 128.272 88.3975 128.038 88.416 cv
118.453 89.1074 li
118.363 89.1143 118.276 89.0908 118.204 89.0479 cv
cp
f
119.934 95.332 mo
119.187 97.1914 116.72 97.9512 114.424 97.0283 cv
112.128 96.1055 110.873 93.8496 111.621 91.9902 cv
112.369 90.1299 114.835 89.3701 117.13 90.293 cv
119.427 91.2158 120.682 93.4717 119.934 95.332 cv
cp
f
118.686 94.8301 mo
118.073 96.3535 115.833 96.8887 113.682 96.0254 cv
111.531 95.1611 110.285 93.2236 110.897 91.6992 cv
111.51 90.1758 113.75 89.6387 115.901 90.5039 cv
118.052 91.3691 119.298 93.3057 118.686 94.8301 cv
cp
.0250248 .567285 .998169 0 cmyk
f
43.7021 133.171 mo
41.9219 133.316 40.0894 133.318 38.2554 133.18 cv
32.7959 132.764 28.4214 130.212 25.604 125.8 cv
20.7944 118.269 21.688 107.422 23.2349 103.289 cv
24.4004 100.174 26.3452 98.2832 28.5703 98.1006 cv
31.2285 97.8838 33.3564 99.8711 34.8945 104.01 cv
37.0659 109.852 42.8315 110.645 47.2856 110.279 cv
48.9663 110.142 50.7207 109.804 52.3599 109.302 cv
56.2451 108.112 58.7285 107.538 60.6631 107.38 cv
63.6875 107.132 65.8096 107.975 66.9692 109.888 cv
68.4604 112.345 68.271 115.801 66.4502 119.368 cv
63.5161 125.116 55.7988 132.181 43.7036 133.171 cv
43.7026 133.171 43.7031 133.171 43.7021 133.171 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
64.7896 111.21 mo
63.499 109.084 59.7622 109.703 53.1064 111.74 cv
46.2939 113.825 35.8618 113.933 32.5039 104.898 cv
30.0435 98.2773 27.0225 100.443 25.6226 104.182 cv
23.5532 109.712 22.9805 129.458 38.4492 130.637 cv
57.3296 132.076 68.2397 116.897 64.7896 111.21 cv
cp
.101595 .727993 1 .0109865 cmyk
f
27.7285 118.653 mo
26.7153 118.25 26.7007 121.304 27.3037 123.668 cv
23.5918 117.081 24.3013 107.729 25.6226 104.182 cv
27.0225 100.443 30.0435 98.2773 32.5039 104.898 cv
33.8501 108.523 36.3291 110.674 39.2627 111.824 cv
38.8906 113.108 35.5601 111.701 34.8789 112.234 cv
33.7021 113.175 36.6406 116.354 35.4043 116.882 cv
34.168 117.41 31.71 115.197 31.0879 116.246 cv
30.1572 117.798 32.2075 121.271 30.9365 121.376 cv
29.6655 121.48 29.0513 119.185 27.7285 118.653 cv
cp
.00985733 .0806592 .600977 0 cmyk
f
69.5254 155.835 mo
64.9736 155.34 60.7485 154.173 58.2227 152.719 cv
54.6284 150.646 54.3765 143.017 57.2607 123.561 cv
57.4009 122.611 li
58.5293 114.897 63.231 111.636 67.3887 111.827 cv
67.5854 111.836 67.7769 111.852 67.9668 111.872 cv
72.1997 112.332 74.8467 115.479 75.8335 121.227 cv
76.2002 123.364 76.3691 125.939 76.5483 128.664 cv
76.8135 132.691 77.2129 138.776 78.5181 140.14 cv
81.687 143.448 84.4575 148.846 81.8379 153.168 cv
79.9551 156.272 74.1035 156.331 69.5254 155.835 cv
69.5254 155.835 li
cp
.75021 .679683 .670222 .90164 cmyk
f
67.272 114.375 mo
63.8491 114.219 60.7549 117.3 59.9238 122.98 cv
59.0918 128.662 55.9546 148.469 59.4956 150.509 cv
64.5244 153.407 77.8335 154.854 79.6567 151.845 cv
81.48 148.837 79.2769 144.618 76.6768 141.902 cv
73.7764 138.876 74.3677 127.762 73.3198 121.658 cv
72.5352 117.085 70.6748 114.531 67.272 114.375 cv
cp
.101595 .727993 1 .0109865 cmyk
f
76.6768 141.902 mo
77.959 143.239 79.1494 144.95 79.7974 146.697 cv
75.7295 151.872 63.9189 146.159 66.4487 143.569 cv
68.5664 141.397 73.5503 140.777 76.5239 141.733 cv
76.5781 141.79 76.623 141.846 76.6768 141.902 cv
cp
.0250248 .567285 .998169 0 cmyk
f
73.3198 121.658 mo
73.9331 125.222 73.9829 130.503 74.4995 134.877 cv
69.5737 137.873 61.605 136.613 58.3662 134.867 cv
58.8535 129.995 59.5859 125.304 59.9238 122.98 cv
60.7549 117.3 63.8521 114.216 67.272 114.375 cv
70.6748 114.531 72.5352 117.085 73.3198 121.658 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
64.3984 137.164 mo
61.7368 136.876 59.3081 136.148 57.6953 135.259 cv
57.3813 135.086 57.2666 134.69 57.4399 134.375 cv
57.6138 134.063 58.0098 133.948 58.3237 134.12 cv
61.4351 135.838 69.4829 137.299 74.4414 134.098 cv
74.7441 133.904 75.146 133.99 75.3398 134.292 cv
75.5347 134.594 75.4478 134.995 75.1465 135.19 cv
72.1309 137.138 68.0464 137.562 64.3984 137.164 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
100.647 150.117 mo
96.0684 150.117 91.7417 149.415 89.0737 148.241 cv
85.2764 146.571 84.2012 139.012 84.9653 119.358 cv
85.002 118.399 li
85.2905 110.609 89.6113 106.859 93.7661 106.6 cv
93.9629 106.587 94.1548 106.581 94.3452 106.581 cv
98.6035 106.581 101.575 109.424 103.177 115.031 cv
103.773 117.115 104.219 119.657 104.692 122.348 cv
105.391 126.322 106.445 132.327 107.891 133.542 cv
111.398 136.488 114.736 141.556 112.599 146.136 cv
111.063 149.427 105.252 150.117 100.647 150.117 cv
100.647 150.117 li
cp
f
93.9253 109.145 mo
90.5054 109.358 87.7627 112.757 87.5503 118.494 cv
87.3379 124.231 86.3594 144.262 90.1006 145.907 cv
95.4131 148.244 108.8 148.244 110.288 145.057 cv
111.775 141.869 109.129 137.913 106.25 135.494 cv
103.04 132.798 102.427 121.686 100.726 115.731 cv
99.4502 111.27 97.3252 108.932 93.9253 109.145 cv
cp
.101595 .727993 1 .0109865 cmyk
f
106.25 135.494 mo
107.67 136.685 109.038 138.257 109.871 139.924 cv
106.387 145.509 94.0273 141.104 96.2627 138.257 cv
98.1328 135.869 103.021 134.712 106.08 135.342 cv
106.14 135.393 106.191 135.444 106.25 135.494 cv
cp
.0250248 .567285 .998169 0 cmyk
f
100.726 115.731 mo
101.72 119.208 102.34 124.452 103.326 128.745 cv
98.7534 132.256 90.6953 131.865 87.2866 130.479 cv
87.2446 125.583 87.4653 120.84 87.5503 118.494 cv
87.7627 112.757 90.5083 109.356 93.9253 109.145 cv
97.3252 108.932 99.4502 111.27 100.726 115.731 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
93.5313 132.11 mo
90.8545 132.11 88.3613 131.651 86.6621 130.941 cv
86.3311 130.803 86.1743 130.422 86.313 130.091 cv
86.4517 129.76 86.833 129.604 87.1636 129.741 cv
90.4429 131.112 98.6011 131.694 103.185 127.978 cv
103.464 127.751 103.874 127.794 104.099 128.072 cv
104.325 128.352 104.282 128.761 104.004 128.986 cv
101.216 131.248 97.2012 132.11 93.5313 132.11 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
75.9883 128.364 mo
59.1362 128.364 54.3433 118.942 53.2891 111.039 cv
49.8281 85.0811 63.6787 66.376 72.3735 64.8413 cv
73.2017 64.6953 74.0513 64.6206 74.8989 64.6206 cv
90.0898 64.6206 104.782 88.9766 105.959 104.272 cv
107.095 119.035 95.6299 126.041 84.5215 127.675 cv
81.3691 128.139 78.5781 128.364 75.9893 128.364 cv
75.9883 128.364 li
cp
f
103.414 104.472 mo
104.442 117.774 93.7832 123.733 84.1528 125.152 cv
75.6699 126.401 58.0835 127.702 55.814 110.702 cv
55.6948 109.836 55.6016 108.985 55.5249 108.145 cv
62.7075 111.586 89.7881 114.52 102.504 99.0742 cv
102.972 100.97 103.287 102.789 103.414 104.472 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
98.8496 89.0693 mo
100.456 92.4443 101.705 95.8701 102.504 99.0742 cv
89.7881 114.52 62.7075 111.586 55.5249 108.145 cv
55.1846 104.421 55.2104 100.901 55.5249 97.6035 cv
65.8354 99.4902 86.354 99.2188 98.8496 89.0693 cv
cp
.132235 1 1 .0386358 cmyk
f
92.8398 79.0654 mo
95.1436 82.1426 97.1836 85.5771 98.8496 89.0693 cv
86.354 99.2188 65.8354 99.4902 55.5249 97.6035 cv
55.9585 93.0049 56.9443 88.8486 58.2705 85.1943 cv
68.1899 86.1807 82.3252 85.3213 92.8398 79.0654 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
84.0679 70.3613 mo
87.2212 72.4863 90.2051 75.5459 92.8398 79.0654 cv
82.3252 85.3213 68.1899 86.1807 58.2705 85.1943 cv
59.7915 80.9521 61.7725 77.3823 63.8462 74.5771 cv
70.0513 74.96 77.6333 74.0503 84.0679 70.3613 cv
cp
.132235 1 1 .0386358 cmyk
f
72.814 67.3525 mo
76.6133 66.6807 80.4551 67.9136 84.0679 70.3613 cv
77.6333 74.0503 70.0513 74.96 63.8462 74.5771 cv
67.0166 70.2935 70.4165 67.7773 72.814 67.3525 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
102.504 99.0742 mo
102.972 100.97 103.287 102.789 103.414 104.472 cv
104.332 116.38 95.8916 122.406 87.1958 124.549 cv
77.438 125.433 72.2954 119.118 70.1538 110.855 cv
80.9653 111.204 94.5483 108.739 102.504 99.0742 cv
cp
.574731 .695186 .633936 .604669 cmyk
f
102.504 99.0742 mo
94.5483 108.739 80.9653 111.204 70.1538 110.855 cv
69.1333 106.979 68.7847 102.661 68.938 98.4707 cv
78.9082 98.1563 90.6211 95.751 98.8496 89.0693 cv
100.456 92.4443 101.705 95.8701 102.504 99.0742 cv
cp
0 .970642 .96051 0 cmyk
f
98.8496 89.0693 mo
90.6211 95.751 78.9082 98.1563 68.938 98.4707 cv
69.0996 93.6514 69.9155 88.9932 71.1221 85.3125 cv
78.5176 84.7266 86.3628 82.915 92.8398 79.0654 cv
95.1436 82.1426 97.1836 85.5771 98.8496 89.0693 cv
cp
0 0 0 0 cmyk
f
92.8398 79.0654 mo
86.3628 82.915 78.5176 84.7266 71.1221 85.3125 cv
71.9385 82.8389 72.9243 80.8076 74.021 79.4648 cv
79.2485 73.0474 84.7905 72.707 88.6494 74.1865 cv
90.1196 75.6655 91.5225 77.3057 92.8398 79.0654 cv
cp
0 .970642 .96051 0 cmyk
f
72.1558 111.544 mo
64.3735 111.536 57.6899 110.037 54.7314 108.584 cv
54.4106 108.424 54.2798 108.03 54.4404 107.701 cv
54.6011 107.372 54.9937 107.233 55.3145 107.392 cv
61.9043 110.629 89.6357 114.106 102.413 98.2598 cv
102.638 97.9805 103.045 97.9414 103.324 98.1719 cv
103.603 98.4004 103.646 98.8135 103.422 99.0928 cv
95.6631 108.726 82.8936 111.554 72.1558 111.544 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
54.2354 127.337 mo
51.209 127.229 48.4243 125.8 46.5947 123.418 cv
43.0625 118.816 40.7729 109.147 42.8638 99.0635 cv
42.4785 98.7197 42.1479 98.3633 41.8755 97.9922 cv
41.1123 96.9541 li
41.4961 95.7236 li
42.6616 91.9785 51.2817 74.623 60.3032 74.9424 cv
60.9136 74.9644 61.5161 75.0669 62.0942 75.2495 cv
67.4688 76.9414 66.4551 85.9961 65.3818 95.5811 cv
65.2104 97.1143 65.0454 98.5869 64.9253 99.9209 cv
64.7915 101.42 li
64.7915 101.42 63.3335 102.062 63.2925 102.079 cv
63.292 105.007 63.5337 107.326 63.769 109.582 cv
64.0718 112.488 64.3579 115.233 63.9727 118.525 cv
63.2383 124.793 58.4116 127.486 54.2368 127.337 cv
54.2358 127.337 54.2358 127.337 54.2354 127.337 cv
cp
f
60.7627 77.6626 mo
58.0874 77.1421 51.5098 82.7188 47.1567 93.6094 cv
42.3643 105.602 45.1792 117.386 48.6177 121.864 cv
52.2124 126.547 60.5518 125.813 61.4399 118.229 cv
62.3286 110.645 59.3164 106.246 61.6445 91.4512 cv
62.9243 83.3164 63.8877 78.271 60.7627 77.6626 cv
cp
.0250248 .567285 .998169 0 cmyk
f
60.5205 76.3564 mo
56.8027 76.2236 50.1836 82.6016 45.9731 93.1357 cv
41.0098 105.555 43.9399 117.866 47.606 122.642 cv
49.2036 124.722 51.6362 125.969 54.2813 126.063 cv
58.0107 126.196 62.063 123.872 62.7065 118.377 cv
63.0757 115.226 62.8091 112.672 62.5 109.716 cv
62.0439 105.352 61.5264 100.403 62.9043 91.6484 cv
63.0869 90.4893 li
64.3521 82.502 65.1875 77.2251 61.0063 76.4111 cv
60.8506 76.3804 60.6865 76.3628 60.5205 76.3564 cv
60.5205 76.3564 li
cp
60.4751 77.6313 mo
60.5752 77.6348 60.6714 77.6445 60.7627 77.6626 cv
63.8877 78.271 62.9243 83.3164 61.6445 91.4512 cv
59.3164 106.246 62.3286 110.645 61.4399 118.229 cv
60.9014 122.827 57.625 124.906 54.3267 124.789 cv
52.1851 124.713 50.0327 123.709 48.6177 121.864 cv
45.1792 117.386 42.3643 105.602 47.1567 93.6094 cv
51.3608 83.0918 57.6406 77.5298 60.4751 77.6313 cv
60.4751 77.6313 li
cp
.75021 .679683 .670222 .90164 cmyk
f
47.1597 93.6113 mo
51.5127 82.7178 58.0908 77.1431 60.7598 77.6646 cv
61.0562 77.7168 61.3159 77.8203 61.54 77.9639 cv
58.5493 78.8267 52.5459 84.498 49.876 100.665 cv
46.6733 120.088 57.9995 124.915 61.2656 119.215 cv
59.8027 125.873 52.0469 126.336 48.6167 121.867 cv
45.1792 117.39 42.3682 105.603 47.1597 93.6113 cv
cp
.101595 .727993 1 .0109865 cmyk
f
63.6357 86.4434 mo
63.5508 88.582 63.3228 90.9141 63.0796 93.1934 cv
56.8892 94.3496 49.9741 92.4521 46.8354 90.3242 cv
47.9604 88.333 49.3379 86.1963 50.8374 84.2422 cv
53.9727 85.749 58.8823 86.8848 63.6357 86.4434 cv
cp
0 0 0 0 cmyk
f
63.0796 93.1934 mo
62.8354 95.498 62.5601 97.7422 62.3887 99.6924 cv
57.6353 101.793 46.4985 99.9756 43.9272 96.4805 cv
44.3408 95.1514 45.3916 92.8682 46.8354 90.3242 cv
49.9741 92.4521 56.8892 94.3496 63.0796 93.1934 cv
cp
0 .970642 .96051 0 cmyk
f
61.3291 77.6846 mo
63.3979 78.3369 63.8203 81.9756 63.6357 86.4434 cv
58.8823 86.8848 53.9727 85.749 50.8374 84.2422 cv
54.1104 79.9951 57.9985 76.6387 61.3291 77.6846 cv
cp
f
61.3291 77.6846 mo
61.4976 77.7334 61.6479 77.8062 61.7886 77.9053 cv
60.0664 78.2612 57.1245 80.3755 54.4639 85.5713 cv
53.1079 85.1982 51.874 84.7383 50.8374 84.2422 cv
54.1104 79.9951 57.9985 76.6387 61.3291 77.6846 cv
cp
.132235 1 1 .0386358 cmyk
f
54.4639 85.5713 mo
53.4956 87.4502 52.564 89.7305 51.7339 92.4727 cv
49.7305 91.8916 48.0142 91.124 46.8354 90.3242 cv
47.9604 88.333 49.3379 86.1963 50.8374 84.2422 cv
51.874 84.7383 53.1079 85.1982 54.4639 85.5713 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
51.7339 92.4727 mo
51.0972 94.5947 50.5259 96.9883 50.0381 99.6934 cv
47.2827 98.9746 44.9414 97.8613 43.9272 96.4805 cv
44.3408 95.1514 45.3916 92.8682 46.8354 90.3242 cv
48.0142 91.124 49.7305 91.8916 51.7339 92.4727 cv
cp
.132235 1 1 .0386358 cmyk
f
60.2598 76.2168 mo
60.2593 76.2168 60.2588 76.2178 60.2588 76.2178 cv
52.5122 75.9419 44.0088 91.9424 42.7129 96.1025 cv
42.5923 96.4902 42.6626 96.9102 42.9023 97.2363 cv
45.0493 100.156 51.2031 101.671 56.0142 101.844 cv
57.9795 101.913 60.77 101.8 62.9004 100.859 cv
63.3252 100.672 63.6147 100.269 63.6563 99.8066 cv
63.7749 98.4707 63.9399 96.9971 64.1147 95.4385 cv
65.0835 86.7871 66.085 77.8428 61.7119 76.4658 cv
61.2441 76.3188 60.7554 76.2349 60.2598 76.2168 cv
60.2598 76.2168 li
cp
60.2124 77.4907 mo
60.5913 77.5044 60.9629 77.5674 61.3291 77.6816 cv
65.3945 78.9619 63.0938 91.7793 62.3857 99.6934 cv
60.8018 100.392 58.5083 100.657 56.0591 100.568 cv
51.1616 100.395 45.6421 98.8115 43.9302 96.4824 cv
45.2935 92.1045 53.5532 77.2554 60.2124 77.4907 cv
60.2124 77.4907 li
cp
.75021 .679683 .670222 .90164 cmyk
f
68.4648 0 mo
68.4644 0 68.4614 0 68.4614 0 cv
62.4595 0 53.5049 .953613 44.9302 5.49561 cv
36.2173 10.1104 30.0195 17.2798 26.5078 26.8037 cv
25.0293 30.814 24.332 35.2476 24.4229 40.0288 cv
24.3579 40.0088 24.2925 39.9888 24.2275 39.9707 cv
21.4058 39.1514 18.2959 38.7354 14.9858 38.7354 cv
10.8833 38.7354 6.54785 39.3647 2.10107 40.6064 cv
1.87891 40.668 li
1.21582 40.8486 .653809 41.2896 .320801 41.8906 cv
-.0126953 42.4907 -.090332 43.2002 .106934 43.8589 cv
2.4541 51.707 7.98584 56.772 13.5308 59.4824 cv
13.4219 59.5737 13.3135 59.666 13.2065 59.7588 cv
5.06494 66.8037 5.55371 79.2534 6.42871 83.4561 cv
6.67676 84.6455 7.72559 85.4863 8.92383 85.4863 cv
8.98584 85.4863 9.04883 85.4834 9.11182 85.4795 cv
17.2793 84.8799 25.2251 82.1406 30.8555 78.2124 cv
30.7988 79.7969 30.8833 81.3877 31.2188 83.0225 cv
32.25 88.0508 35.7017 91.0518 40.4521 91.0518 cv
46.0591 91.0518 52.8301 86.4082 54.5615 79.5513 cv
57.5083 80.3789 60.6782 80.7969 64.0249 80.7969 cv
66.5903 80.7969 69.3135 80.5508 72.1187 80.0649 cv
83.5444 78.0854 92.6792 74.6611 99.3057 69.8784 cv
100.47 70.4351 101.749 70.7231 103.087 70.7231 cv
106.358 70.7231 109.76 69.0391 112.419 66.1016 cv
115.399 62.8101 116.873 58.561 116.463 54.4448 cv
115.725 47.042 109.228 37.335 104.313 31.6367 cv
104.403 31.3179 104.431 30.9814 104.391 30.6445 cv
102.887 17.9438 94.8706 6.90088 83.9688 2.5127 cv
80.0029 .916016 74.3516 .000488281 68.4648 0 cv
68.4648 0 li
cp
f
32.2998 56.728 mo
34.9971 54.3013 32.2998 44.9692 23.5171 42.4194 cv
14.0942 39.6836 4.10791 42.7031 2.5498 43.1284 cv
7.0835 58.2861 25.2168 63.103 32.2998 56.728 cv
cp
0 .970642 .96051 0 cmyk
f
23.5142 42.4219 mo
32.3027 44.9717 34.9971 54.3052 32.3027 56.7275 cv
25.3071 63.0176 7.57666 58.4106 2.74854 43.7393 cv
5.97852 48.9927 13.9175 56.8296 22.0859 50.7773 cv
25.248 48.4316 23.9644 44.8271 21.9331 42.0225 cv
22.46 42.1328 22.9868 42.269 23.5142 42.4219 cv
cp
.132235 1 1 .0386358 cmyk
f
14.9858 40.0103 mo
10.999 40.0103 6.7793 40.624 2.44336 41.835 cv
2.21436 41.8979 li
1.88281 41.9883 1.60205 42.2085 1.43506 42.5088 cv
1.26855 42.8096 1.22998 43.1646 1.32861 43.4937 cv
4.71582 54.8208 15.3081 60.7466 24.0205 60.7466 cv
27.7095 60.7466 30.9526 59.6558 33.1528 57.6763 cv
34.4829 56.479 34.9087 54.3218 34.3218 51.7578 cv
33.4697 48.0371 30.2217 43.0386 23.8726 41.1948 cv
21.165 40.4087 18.1753 40.0103 14.9858 40.0103 cv
14.9858 40.0103 li
cp
14.9858 41.2856 mo
17.7114 41.2856 20.6406 41.5845 23.5171 42.4194 cv
32.2998 44.9692 34.9971 54.3013 32.2998 56.728 cv
30.2603 58.5645 27.3047 59.4717 24.0205 59.4717 cv
15.9014 59.4717 5.77832 53.9219 2.5498 43.1284 cv
3.63232 42.8325 8.78223 41.2856 14.9858 41.2856 cv
14.9858 41.2856 li
cp
.75021 .679683 .670222 .90164 cmyk
f
35.8418 59.9863 mo
33.4336 54.0361 22.4741 55.1104 14.8755 61.686 cv
7.5083 68.061 8.21729 79.5361 8.92529 82.9365 cv
24.3667 81.8027 40.8564 72.375 35.8418 59.9863 cv
cp
0 .970642 .96051 0 cmyk
f
35.8389 59.9829 mo
40.854 72.376 24.3638 81.8027 8.92773 82.9326 cv
8.74951 82.0996 8.5791 80.7822 8.52002 79.1758 cv
17.1133 77.0767 26.5996 74.4927 28.3081 67.0977 cv
29.6255 61.3857 26.1064 57.5771 23.2251 56.9824 cv
28.8774 55.1802 34.2412 56.0303 35.8389 59.9829 cv
cp
.132235 1 1 .0386358 cmyk
f
28.5967 54.8066 mo
23.835 54.8066 18.2573 57.0737 14.041 60.7217 cv
6.36475 67.3647 6.84424 79.1978 7.67725 83.1963 cv
7.80078 83.791 8.3252 84.2109 8.92432 84.2109 cv
8.95557 84.2109 8.9873 84.21 9.01855 84.208 cv
18.8926 83.4834 31.0674 79.1958 36.0098 71.2515 cv
38.2954 67.5767 38.646 63.5156 37.0239 59.5083 cv
35.8145 56.52 32.7427 54.8066 28.5967 54.8066 cv
28.5967 54.8066 li
cp
28.5967 56.0815 mo
32.0044 56.0815 34.77 57.3394 35.8418 59.9863 cv
40.8564 72.375 24.3667 81.8027 8.92529 82.9365 cv
8.21729 79.5361 7.5083 68.061 14.8755 61.686 cv
19.0928 58.0366 24.3447 56.0815 28.5967 56.0815 cv
28.5967 56.0815 li
cp
.75021 .679683 .670222 .90164 cmyk
f
98.1304 29.0674 mo
102.838 32.7124 113.062 46.0337 113.925 54.6978 cv
114.949 64.9731 101.481 73.9106 96.8413 63.6294 cv
93.876 57.0576 96.249 49.5913 92.0537 39.8037 cv
87.7686 29.8057 93.1177 25.187 98.1304 29.0674 cv
cp
.280522 .914061 1 .298253 cmyk
f
98.127 29.0684 mo
102.836 32.7148 113.062 46.0342 113.929 54.6963 cv
114.523 60.7051 110.163 66.2642 105.513 67.7773 cv
116.87 61.5303 111.251 49.6387 105.36 39.3364 cv
101.884 33.2588 98.4927 29.3232 95.8916 27.8872 cv
96.6221 28.0996 97.3789 28.4907 98.127 29.0684 cv
cp
.215396 .82446 1 .119539 cmyk
f
94.6187 26.4238 mo
94.6187 26.4238 li
92.8784 26.4238 91.3789 27.2456 90.3955 28.7373 cv
88.6729 31.3496 88.8506 35.5664 90.8818 40.3062 cv
93.0723 45.415 93.4116 49.9722 93.7109 53.9932 cv
93.9771 57.5649 94.2285 60.9385 95.6792 64.1543 cv
97.2227 67.5747 99.8511 69.4585 103.08 69.4585 cv
105.949 69.4585 109.085 67.8862 111.47 65.2524 cv
114.211 62.2241 115.568 58.3311 115.194 54.5718 cv
114.26 45.1958 103.426 31.5552 98.9111 28.0596 cv
97.5293 26.9897 96.0444 26.4238 94.6187 26.4238 cv
94.6187 26.4238 li
cp
94.6182 27.6987 mo
95.7178 27.6987 96.9336 28.1411 98.1304 29.0674 cv
102.838 32.7124 113.062 46.0337 113.925 54.6978 cv
114.628 61.7559 108.493 68.1831 103.08 68.1831 cv
100.612 68.1831 98.2939 66.8486 96.8413 63.6294 cv
93.876 57.0576 96.249 49.5913 92.0537 39.8037 cv
88.7915 32.1929 91.1128 27.6997 94.6182 27.6987 cv
94.6182 27.6987 li
cp
.75021 .679683 .670222 .90164 cmyk
f
34.0708 53.9648 mo
37.1245 62.1768 44.6958 82.2275 71.6836 77.5522 cv
98.6709 72.8774 107.596 60.7646 108.021 51.6274 cv
108.417 43.0942 104.511 42.5298 98.4585 25.7021 cv
89.7461 1.47754 64.2461 2.32715 48.7334 10.8271 cv
31.7021 20.1592 27.9082 37.3896 34.0708 53.9648 cv
cp
.0250248 .567285 .998169 0 cmyk
f
79.3418 6.76416 mo
65.5801 5.54053 51.8105 12.3574 51.0288 33.6836 cv
50.5098 48.0747 58.5337 74.8154 81.1357 75.4272 cv
78.2627 76.2432 75.1177 76.957 71.6836 77.5522 cv
44.6958 82.2275 37.1221 62.1758 34.0708 53.9648 cv
27.9082 37.3896 31.6992 20.1606 48.7334 10.8271 cv
57.3779 6.09277 69.1333 3.72998 79.3418 6.76416 cv
cp
.101595 .727993 1 .0109865 cmyk
f
69.6172 4.13135 mo
62.3198 4.13135 54.6855 6.11182 48.1206 9.70947 cv
31.7925 18.6558 25.9512 35.7837 32.876 54.4092 cv
35.6704 61.9243 42.2148 79.5244 63.9966 79.5244 cv
66.4976 79.5244 69.1572 79.2837 71.9009 78.8081 cv
84.4097 76.6416 94.0767 72.7495 100.633 67.2393 cv
105.96 62.7627 109.036 57.2397 109.294 51.6865 cv
109.538 46.46 108.209 43.9067 106.009 39.6758 cv
104.409 36.6006 102.218 32.3872 99.6582 25.2705 cv
93.043 6.87695 77.9971 4.13135 69.6172 4.13135 cv
69.6172 4.13135 li
cp
69.6172 5.40625 mo
81.4268 5.40625 93.1089 10.8281 98.4585 25.7021 cv
104.511 42.5298 108.417 43.0942 108.021 51.6274 cv
107.596 60.7646 98.6709 72.8774 71.6836 77.5522 cv
68.9224 78.0303 66.3667 78.2495 63.9966 78.2495 cv
43.1953 78.2495 36.812 61.3369 34.0708 53.9648 cv
27.9082 37.3896 31.7021 20.1592 48.7334 10.8271 cv
54.7212 7.54688 62.1934 5.40625 69.6172 5.40625 cv
69.6172 5.40625 li
cp
.75021 .679683 .670222 .90164 cmyk
f
42.5708 49.0771 mo
46.3628 53.6675 53.4082 68.9106 52.3457 77.5522 cv
51.0859 87.8018 35.9834 93.5605 33.7168 82.5107 cv
32.2686 75.4482 36.2246 68.6855 34.2832 58.2148 cv
32.3003 47.5195 38.5332 44.1899 42.5708 49.0771 cv
cp
.280522 .914061 1 .298253 cmyk
f
42.5708 49.0771 mo
46.3618 53.6675 53.4082 68.9077 52.3457 77.5522 cv
51.7339 82.5332 47.8662 86.4434 43.7778 87.8965 cv
53.3745 83.1279 50.3145 71.356 46.7529 60.8755 cv
43.9648 52.6558 40.6836 47.6919 38.0913 46.9185 cv
39.562 46.6978 41.1938 47.4116 42.5708 49.0771 cv
cp
.215396 .82446 1 .119539 cmyk
f
38.5981 45.5991 mo
38.5977 45.5991 li
37.0903 45.5991 35.6831 46.2935 34.6362 47.5527 cv
32.7241 49.8521 32.1533 53.7217 33.0298 58.4473 cv
34.043 63.9126 33.3726 68.4341 32.7808 72.4224 cv
32.2554 75.9653 31.7593 79.3115 32.4683 82.7666 cv
33.3682 87.1563 36.353 89.7773 40.4521 89.7773 cv
45.9741 89.7773 52.7368 84.8203 53.6113 77.7075 cv
54.7612 68.356 47.1904 52.6675 43.5537 48.2656 cv
42.1333 46.5454 40.3735 45.5991 38.5981 45.5991 cv
38.5981 45.5991 li
cp
38.5972 46.8745 mo
39.9307 46.8735 41.3506 47.6006 42.5708 49.0771 cv
46.3628 53.6675 53.4082 68.9106 52.3457 77.5522 cv
51.5679 83.8838 45.5059 88.502 40.4521 88.502 cv
37.3242 88.502 34.5835 86.7344 33.7168 82.5107 cv
32.2686 75.4482 36.2246 68.6855 34.2832 58.2148 cv
32.8999 50.7515 35.5171 46.8745 38.5972 46.8745 cv
38.5972 46.8745 li
cp
.75021 .679683 .670222 .90164 cmyk
f
34 64.9443 mo
36.9902 59.7114 70.4082 26.8364 101.858 30.9443 cv
100.583 20.1772 93.9253 9.26953 83.0171 4.87842 cv
72.0137 .44873 39.2417 -.36377 28.9004 27.686 cv
23.457 42.4507 30.8833 59.7031 34 64.9443 cv
cp
0 .970642 .96051 0 cmyk
f
99.5552 22.0391 mo
100.728 24.9204 101.501 27.938 101.858 30.9468 cv
98.1187 30.4536 94.353 30.4878 90.6128 30.9385 cv
95.4751 28.728 98.4668 25.8643 99.5552 22.0391 cv
cp
.132235 1 1 .0386358 cmyk
f
48.895 26.3057 mo
53.1108 36.6924 63.1494 37.3979 73.5107 35.6475 cv
52.8813 44.2837 36.0767 61.3003 34.0029 64.9468 cv
30.8833 59.7021 23.4541 42.4478 28.9028 27.6831 cv
34.0029 13.8364 44.5684 7.02832 55.2871 4.20605 cv
49.3794 8.73633 45.1631 17.1084 48.895 26.3057 cv
cp
f
68.4644 1.2749 mo
62.6064 1.2749 53.8726 2.20264 45.5278 6.62158 cv
37.1006 11.0845 31.104 18.0234 27.7041 27.2456 cv
21.0435 45.3115 32.7847 65.395 32.9043 65.5957 cv
33.1343 65.9829 33.5503 66.2192 34 66.2192 cv
34.0039 66.2192 34.0073 66.2192 34.0112 66.2192 cv
34.4644 66.2153 34.8818 65.9712 35.1069 65.5767 cv
37.7461 60.9585 66.9932 31.8647 96.3223 31.8647 cv
98.1411 31.8647 99.9482 31.981 101.693 32.2085 cv
101.749 32.2158 101.804 32.2192 101.858 32.2192 cv
102.192 32.2192 102.514 32.0889 102.754 31.8516 cv
103.034 31.5752 103.171 31.1851 103.125 30.7939 cv
101.674 18.5498 93.9688 7.91211 83.4932 3.69531 cv
79.728 2.17969 74.1099 1.2749 68.4644 1.2749 cv
68.4644 1.2749 li
cp
68.4644 2.5498 mo
74.4746 2.5498 79.7227 3.55273 83.0171 4.87842 cv
93.9253 9.26953 100.583 20.1772 101.858 30.9443 cv
100.016 30.7036 98.1719 30.5898 96.3223 30.5898 cv
66.6025 30.5898 36.8149 60.0176 34 64.9443 cv
30.8833 59.7031 23.457 42.4507 28.9004 27.686 cv
36.1455 8.03418 54.3989 2.5498 68.4644 2.5498 cv
68.4644 2.5498 li
cp
.75021 .679683 .670222 .90164 cmyk
f
101.894 52.2227 mo
104.994 58.4688 100.503 67.0068 91.8623 71.2969 cv
83.2217 75.5869 73.7026 74.0005 70.603 67.7549 cv
67.5024 61.5088 71.9941 52.9697 80.6353 48.6797 cv
89.2759 44.3901 98.7939 45.9771 101.894 52.2227 cv
cp
.00985733 .0806592 .600977 0 cmyk
f
90.5562 47.1543 mo
91.168 49.0923 89.3354 51.4009 86.4624 52.3062 cv
83.5894 53.2129 80.7646 52.3745 80.1533 50.4346 cv
79.541 48.4956 81.3735 46.187 84.2461 45.2813 cv
87.1196 44.375 89.9438 45.2134 90.5562 47.1543 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
89.8481 47.3774 mo
89.7886 47.189 89.6973 47.0171 89.5923 46.8535 cv
89.2734 48.1733 87.9111 49.4644 86.0283 50.0576 cv
83.8247 50.7524 81.6621 50.2559 80.833 48.9644 cv
80.7314 49.3838 80.7339 49.8071 80.8613 50.2114 cv
81.3901 51.8872 83.8296 52.6108 86.312 51.8281 cv
88.7935 51.0454 90.3765 49.0518 89.8481 47.3774 cv
cp
.636561 .700954 .654597 .746487 cmyk
f
71.5137 46.6685 mo
72.8311 49.7207 71.8018 53.1016 69.2158 54.2163 cv
66.6294 55.3311 63.4648 53.7607 62.1484 50.7061 cv
60.8315 47.6528 61.8608 44.2744 64.4468 43.1587 cv
67.0327 42.0439 70.1973 43.6138 71.5137 46.6685 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
69.5249 46.686 mo
70.4834 48.4575 70.0205 50.5635 68.4888 51.3921 cv
66.96 52.2217 64.9409 51.4585 63.9814 49.6865 cv
63.0234 47.9146 63.4868 45.8086 65.0171 44.979 cv
66.5483 44.1509 68.5654 44.9136 69.5249 46.686 cv
cp
0 0 0 0 cmyk
f
59.6699 47.1289 mo
61.5957 45.0864 63.7666 42.6948 65.165 38.7939 cv
66.1001 36.1855 68.1743 37.1484 67.7495 39.77 cv
67.4092 41.8745 64.3208 45.7432 60.5635 47.769 cv
58.9609 48.6338 58.8745 47.9707 59.6699 47.1289 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
98.8076 36.5044 mo
100.072 39.5288 99.084 42.8794 96.6025 43.9839 cv
94.1206 45.0889 91.084 43.5322 89.8208 40.5054 cv
88.5566 37.4795 89.5444 34.1318 92.0264 33.0264 cv
94.5078 31.9214 97.5439 33.4771 98.8076 36.5044 cv
cp
f
96.9565 36.4766 mo
97.8931 38.2646 97.4399 40.3911 95.9434 41.2261 cv
94.4482 42.0654 92.4746 41.2944 91.5376 39.5063 cv
90.6001 37.7163 91.0532 35.5898 92.5488 34.7534 cv
94.0459 33.9185 96.0181 34.6875 96.9565 36.4766 cv
cp
0 0 0 0 cmyk
f
97.5684 32.3652 mo
94.9897 32.3433 92.0288 32.2578 88.6729 30.5962 cv
86.4297 29.4844 85.5923 31.6128 87.4922 33.0957 cv
89.0181 34.2866 93.5166 34.7251 97.3467 33.4365 cv
98.9795 32.8862 98.6323 32.373 97.5684 32.3652 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
88.3438 46.895 mo
88.4058 47.5166 87.71 48.0952 86.7896 48.1875 cv
85.8687 48.2798 85.0718 47.8516 85.0093 47.2295 cv
84.9468 46.6079 85.6426 46.0283 86.5635 45.9365 cv
87.4839 45.8433 88.2817 46.2725 88.3438 46.895 cv
cp
0 0 0 0 cmyk
f
78.4746 19.5957 mo
80.3223 18.606 81.6504 16.0015 79.0269 12.4927 cv
76.4033 8.98438 69.7407 8.07813 65.6509 9.29492 cv
61.561 10.5127 57.5854 14.1807 58.0425 18.666 cv
58.4502 22.667 61.5444 24.1235 65.0605 23.9458 cv
65.4058 25.9272 65.896 26.9575 66.3252 26.8677 cv
67.0532 26.7168 69.8271 25.7329 70.3662 25.542 cv
70.29 24.7949 70.04 23.0835 70.04 23.0835 cv
71.2368 25.0459 li
72.0903 24.9736 75.2778 23.7212 75.605 23.521 cv
75.4053 23.1938 74.5225 21.3511 74.5225 21.3511 cv
76.5059 23.1675 li
77.3638 22.9888 80.0308 21.8906 80.0308 21.8906 cv
80.3789 21.1602 78.4746 19.5957 78.4746 19.5957 cv
cp
f
68.6846 16.6104 mo
69.1821 17.897 68.6084 19.3174 67.4043 19.7822 cv
66.2002 20.248 64.8213 19.583 64.3237 18.2964 cv
63.8267 17.0098 64.4004 15.5894 65.604 15.1245 cv
66.8086 14.6592 68.1875 15.3247 68.6846 16.6104 cv
cp
0 .970642 .96051 0 cmyk
f
74.9556 14.1104 mo
75.729 15.251 75.5508 16.7207 74.5586 17.3931 cv
73.5664 18.0664 72.1348 17.6865 71.3613 16.5439 cv
70.5879 15.4038 70.7656 13.9316 71.7583 13.2593 cv
72.7505 12.5869 74.1821 12.9673 74.9556 14.1104 cv
cp
f
90.7124 60.645 mo
91.1953 63.9746 90.0063 66.9033 88.0566 67.1855 cv
86.1064 67.4688 84.1353 64.998 83.6528 61.6685 cv
83.1699 58.3384 84.3589 55.4106 86.3096 55.1284 cv
88.2583 54.8457 90.23 57.3154 90.7124 60.645 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
86.8857 61.876 mo
87.9897 61.7139 89.0625 61.8354 90.0005 62.1992 cv
89.9531 64.2866 89.125 65.9204 87.8955 66.1064 cv
86.5864 66.2925 85.2705 64.8042 84.6865 62.6362 cv
85.3413 62.2642 86.0825 61.9971 86.8857 61.876 cv
cp
0 .970642 .96051 0 cmyk
f
86.9102 58.1147 mo
86.1299 58.2847 85.3726 58.3247 84.6709 58.2441 cv
85.0176 57.1118 85.6646 56.335 86.4922 56.2139 cv
87.2803 56.0928 88.0688 56.5859 88.6997 57.4673 cv
88.1636 57.751 87.564 57.9692 86.9102 58.1147 cv
cp
0 0 0 0 cmyk
f
309.371 118.604 mo
306.982 120.462 303.928 121.153 300.997 120.501 cv
295.334 119.239 287.374 113.292 282.506 104.218 cv
281.989 104.202 281.507 104.14 281.059 104.03 cv
279.809 103.724 li
279.313 102.533 li
277.804 98.9141 273.276 80.0713 280.399 74.5269 cv
280.882 74.1523 281.41 73.8438 281.971 73.6133 cv
287.177 71.4619 292.212 79.0557 297.539 87.0957 cv
298.392 88.3809 299.211 89.6172 299.975 90.7148 cv
300.834 91.9512 li
300.834 91.9512 300.127 93.3799 300.107 93.4199 cv
301.986 95.665 303.66 97.2891 305.288 98.8682 cv
307.386 100.902 309.366 102.823 311.184 105.596 cv
314.644 110.873 312.669 116.037 309.373 118.602 cv
309.371 118.604 309.371 118.604 309.371 118.604 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
282.498 76.3184 mo
280.113 77.6357 278.646 86.1338 282.296 97.2803 cv
286.319 109.552 296.04 116.782 301.551 118.011 cv
307.313 119.294 313.236 113.381 309.052 106.994 cv
304.864 100.607 299.732 99.167 292.023 86.3262 cv
287.784 79.2666 285.285 74.7788 282.498 76.3184 cv
cp
.0250248 .567285 .998169 0 cmyk
f
281.473 75.4722 mo
278.538 77.7559 277.555 86.8955 281.085 97.6758 cv
285.25 110.386 295.397 117.946 301.274 119.256 cv
303.833 119.827 306.5 119.221 308.59 117.596 cv
311.535 115.305 313.15 110.922 310.118 106.295 cv
308.377 103.641 306.535 101.854 304.4 99.7852 cv
301.25 96.7305 297.677 93.2676 293.115 85.6709 cv
292.512 84.6631 li
288.356 77.7256 285.611 73.1431 281.881 75.2017 cv
281.741 75.2788 281.604 75.3711 281.473 75.4722 cv
281.473 75.4722 li
cp
282.257 76.4785 mo
282.336 76.4165 282.416 76.3623 282.498 76.3184 cv
285.285 74.7788 287.784 79.2666 292.023 86.3262 cv
299.732 99.167 304.864 100.607 309.052 106.994 cv
311.589 110.865 310.412 114.563 307.807 116.59 cv
306.114 117.905 303.82 118.517 301.551 118.011 cv
296.04 116.782 286.319 109.552 282.296 97.2803 cv
278.771 86.5146 280.018 78.2192 282.257 76.4785 cv
282.257 76.4785 li
cp
.75021 .679683 .670222 .90164 cmyk
f
282.301 97.2783 mo
278.648 86.1309 280.115 77.6338 282.497 76.3213 cv
282.756 76.1714 283.024 76.084 283.288 76.0498 cv
281.547 78.6313 280.583 86.835 288.911 100.945 cv
298.919 117.896 310.703 114.329 309.55 107.862 cv
312.701 113.907 307.05 119.239 301.551 118.014 cv
296.042 116.785 286.322 109.551 282.301 97.2783 cv
cp
.101595 .727993 1 .0109865 cmyk
f
290.336 81.208 mo
291.643 82.9033 292.965 84.8379 294.241 86.7412 cv
290.235 91.6006 283.715 94.584 279.942 94.9658 cv
279.527 92.7178 279.212 90.1943 279.108 87.7334 cv
282.479 86.876 286.974 84.5977 290.336 81.208 cv
cp
0 0 0 0 cmyk
f
294.241 86.7412 mo
295.533 88.666 296.763 90.5635 297.882 92.1689 cv
295.585 96.8301 285.878 102.585 281.663 101.556 cv
281.127 100.271 280.468 97.8428 279.942 94.9658 cv
283.715 94.584 290.235 91.6006 294.241 86.7412 cv
cp
0 .970642 .96051 0 cmyk
f
282.946 75.9712 mo
284.952 75.1431 287.611 77.6641 290.336 81.208 cv
286.974 84.5977 282.479 86.876 279.108 87.7334 cv
278.893 82.377 279.721 77.3071 282.946 75.9712 cv
cp
f
282.946 75.9712 mo
283.107 75.9009 283.27 75.8604 283.439 75.8462 cv
282.348 77.2246 281.448 80.7334 282.742 86.4258 cv
281.464 87.0098 280.222 87.4492 279.108 87.7334 cv
278.893 82.377 279.721 77.3071 282.946 75.9712 cv
cp
.132235 1 1 .0386358 cmyk
f
282.742 86.4258 mo
283.206 88.4883 283.955 90.8359 285.078 93.4707 cv
283.168 94.3105 281.36 94.8232 279.942 94.9658 cv
279.527 92.7178 279.212 90.1943 279.108 87.7334 cv
280.222 87.4492 281.464 87.0098 282.742 86.4258 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
285.078 93.4707 mo
285.952 95.5068 287.05 97.709 288.411 100.096 cv
285.837 101.313 283.327 101.963 281.663 101.556 cv
281.127 100.271 280.468 97.8428 279.942 94.9658 cv
281.36 94.8232 283.168 94.3105 285.078 93.4707 cv
cp
.132235 1 1 .0386358 cmyk
f
281.184 75.5322 mo
281.184 75.5327 281.184 75.5332 281.184 75.5332 cv
275.066 80.293 278.813 98.0225 280.489 102.044 cv
280.645 102.418 280.969 102.695 281.362 102.791 cv
284.883 103.652 290.575 100.864 294.374 97.9111 cv
295.927 96.7021 297.994 94.8252 299.024 92.7354 cv
299.23 92.3193 299.191 91.8242 298.928 91.4443 cv
298.163 90.3428 297.343 89.1074 296.476 87.7988 cv
291.667 80.543 286.695 73.041 282.458 74.79 cv
282.004 74.9795 281.576 75.2285 281.184 75.5322 cv
281.184 75.5322 li
cp
281.965 76.54 mo
282.265 76.3057 282.59 76.1157 282.944 75.9692 cv
286.884 74.3413 293.345 85.6475 297.881 92.1719 cv
297.115 93.7236 295.525 95.3994 293.591 96.9033 cv
289.723 99.9131 284.475 102.241 281.666 101.554 cv
279.902 97.3213 276.707 80.6318 281.965 76.54 cv
281.965 76.54 li
cp
.75021 .679683 .670222 .90164 cmyk
f
314.041 118.415 mo
314.001 114.922 li
343.404 117.318 li
343.764 117.349 344.125 117.262 344.433 117.071 cv
355.642 110.169 li
356.15 109.854 356.457 109.298 356.45 108.701 cv
356.441 108.104 356.123 107.555 355.607 107.254 cv
344.242 100.612 li
343.929 100.43 343.566 100.352 343.206 100.39 cv
313.867 103.471 li
313.826 99.9785 li
313.815 99.04 313.045 98.2881 312.106 98.2979 cv
307.028 98.3574 li
306.089 98.3682 305.336 99.1387 305.347 100.078 cv
305.397 104.361 li
291.717 105.797 li
290.843 105.889 290.184 106.63 290.195 107.507 cv
290.217 109.473 li
290.24 111.438 li
290.251 112.315 290.927 113.041 291.802 113.111 cv
305.512 114.23 li
305.563 118.514 li
305.574 119.452 306.343 120.204 307.282 120.193 cv
312.361 120.135 li
313.299 120.123 314.052 119.354 314.041 118.415 cv
cp
f
291.917 109.452 mo
291.94 111.418 li
343.541 115.625 li
354.75 108.721 li
343.383 102.081 li
291.894 107.488 li
291.917 109.452 li
cp
.280522 .914061 1 .298253 cmyk
f
352.493 108.747 mo
341.585 115.466 li
343.541 115.625 li
354.75 108.721 li
343.383 102.081 li
341.433 102.285 li
352.493 108.747 li
cp
.215396 .82446 1 .119539 cmyk
f
307.261 118.494 mo
307.047 100.058 li
312.127 99.999 li
312.342 118.434 li
307.261 118.494 li
cp
f
311.588 118.443 mo
311.374 100.008 li
312.127 99.999 li
312.342 118.434 li
311.588 118.443 li
cp
.144869 .807401 1 .0376593 cmyk
f
306.635 113.213 mo
306.634 113.128 306.658 113.042 306.709 112.968 cv
312.143 105.042 li
312.275 104.849 312.54 104.799 312.732 104.932 cv
312.926 105.064 312.976 105.328 312.844 105.521 cv
307.412 113.448 li
307.278 113.642 307.013 113.691 306.819 113.56 cv
306.702 113.478 306.637 113.347 306.635 113.213 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
306.544 105.352 mo
306.542 105.218 306.604 105.085 306.72 105.001 cv
306.911 104.864 307.176 104.908 307.313 105.098 cv
312.93 112.896 li
313.067 113.087 313.023 113.352 312.832 113.488 cv
312.642 113.626 312.377 113.582 312.239 113.393 cv
306.623 105.595 li
306.57 105.521 306.545 105.435 306.544 105.352 cv
cp
f
302.101 110.119 mo
300.125 110.457 298.185 108.755 297.766 106.316 cv
297.349 103.878 298.611 101.627 300.586 101.288 cv
302.563 100.949 304.502 102.651 304.921 105.09 cv
305.339 107.529 304.077 109.78 302.101 110.119 cv
cp
f
301.874 108.794 mo
300.254 109.07 298.624 107.443 298.232 105.159 cv
297.84 102.875 298.836 100.798 300.455 100.52 cv
302.074 100.242 303.705 101.869 304.097 104.153 cv
304.487 106.438 303.492 108.516 301.874 108.794 cv
cp
.0250248 .567285 .998169 0 cmyk
f
236.56 135.27 mo
234.833 135.727 233.03 136.053 231.2 136.238 cv
225.752 136.791 220.997 135.051 217.446 131.205 cv
211.384 124.639 210.351 113.806 211.145 109.464 cv
211.744 106.192 213.325 103.989 215.483 103.416 cv
218.061 102.734 220.505 104.316 222.75 108.118 cv
225.917 113.485 231.732 113.249 236.052 112.104 cv
237.682 111.673 239.349 111.031 240.875 110.249 cv
244.489 108.394 246.832 107.39 248.709 106.893 cv
251.642 106.115 253.88 106.57 255.358 108.249 cv
257.259 110.405 257.682 113.841 256.519 117.674 cv
254.644 123.849 248.292 132.163 236.562 135.27 cv
236.561 135.27 236.561 135.27 236.56 135.27 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
253.446 109.936 mo
251.801 108.069 248.231 109.338 242.039 112.518 cv
235.701 115.771 225.451 117.715 220.553 109.414 cv
216.963 103.33 214.372 105.995 213.653 109.923 cv
212.591 115.73 215.508 135.268 230.942 133.701 cv
249.781 131.79 257.845 114.926 253.446 109.936 cv
cp
.101595 .727993 1 .0109865 cmyk
f
218.277 123.795 mo
217.208 123.577 217.732 126.586 218.743 128.807 cv
213.928 122.978 212.978 113.646 213.653 109.923 cv
214.372 105.995 216.963 103.33 220.553 109.414 cv
222.517 112.745 225.336 114.425 228.427 115.039 cv
228.288 116.37 224.761 115.572 224.184 116.217 cv
223.191 117.35 226.644 119.961 225.521 120.698 cv
224.396 121.438 221.587 119.691 221.16 120.835 cv
220.517 122.524 223.147 125.584 221.915 125.91 cv
220.682 126.236 219.673 124.085 218.277 123.795 cv
cp
.00985733 .0806592 .600977 0 cmyk
f
264.987 147.846 mo
261.625 144.737 258.924 141.286 257.76 138.612 cv
256.105 134.809 260.446 128.527 274.346 114.612 cv
275.023 113.934 li
280.522 108.408 286.241 108.586 289.468 111.216 cv
289.621 111.34 289.767 111.466 289.906 111.595 cv
293.034 114.484 293.287 118.59 290.658 123.795 cv
289.681 125.73 288.283 127.9 286.804 130.196 cv
284.62 133.59 281.319 138.716 281.556 140.589 cv
282.133 145.134 281.145 151.119 276.466 153.033 cv
273.105 154.408 268.369 150.97 264.987 147.846 cv
264.987 147.846 li
cp
.75021 .679683 .670222 .90164 cmyk
f
287.858 113.193 mo
285.201 111.028 280.88 111.663 276.831 115.733 cv
272.781 119.802 258.468 133.848 260.099 137.596 cv
262.414 142.918 272.246 152.004 275.502 150.673 cv
278.757 149.341 279.499 144.64 279.026 140.909 cv
278.499 136.749 285.59 128.173 288.381 122.646 cv
290.474 118.503 290.5 115.345 287.858 113.193 cv
cp
.101595 .727993 1 .0109865 cmyk
f
279.026 140.909 mo
279.261 142.747 279.199 144.83 278.68 146.619 cv
272.33 148.355 266.242 136.733 269.817 136.159 cv
272.811 135.675 277.185 138.144 279.005 140.682 cv
279.015 140.76 279.017 140.832 279.026 140.909 cv
cp
.0250248 .567285 .998169 0 cmyk
f
288.381 122.646 mo
286.752 125.873 283.649 130.146 281.46 133.968 cv
275.718 133.443 270.066 127.687 268.503 124.355 cv
271.795 120.731 275.176 117.398 276.831 115.733 cv
280.88 111.663 285.204 111.029 287.858 113.193 cv
290.5 115.345 290.474 118.503 288.381 122.646 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
271.982 129.791 mo
270.016 127.975 268.497 125.945 267.73 124.271 cv
267.582 123.944 267.725 123.559 268.052 123.409 cv
268.377 123.261 268.764 123.404 268.913 123.729 cv
270.391 126.962 275.987 132.927 281.876 133.308 cv
282.236 133.331 282.507 133.641 282.483 133.998 cv
282.46 134.356 282.151 134.629 281.793 134.605 cv
278.211 134.374 274.677 132.282 271.982 129.791 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
237.667 148.893 mo
234.836 145.294 232.715 141.457 231.988 138.635 cv
230.953 134.617 236.23 129.101 252.15 117.552 cv
252.927 116.988 li
259.228 112.397 264.848 113.477 267.62 116.581 cv
267.751 116.729 267.875 116.875 267.992 117.025 cv
270.625 120.372 270.227 124.466 266.81 129.191 cv
265.54 130.948 263.817 132.871 261.995 134.905 cv
259.303 137.911 255.234 142.453 255.174 144.339 cv
255.026 148.918 253.107 154.674 248.186 155.826 cv
244.65 156.652 240.516 152.512 237.667 148.893 cv
237.667 148.893 li
cp
f
265.718 118.279 mo
263.435 115.725 259.069 115.669 254.428 119.048 cv
249.786 122.429 233.438 134.041 234.457 137.999 cv
235.903 143.621 244.18 154.144 247.605 153.342 cv
251.03 152.54 252.504 148.015 252.626 144.256 cv
252.759 140.067 261.115 132.715 264.744 127.697 cv
267.462 123.937 267.986 120.821 265.718 118.279 cv
cp
.101595 .727993 1 .0109865 cmyk
f
252.626 144.256 mo
252.568 146.108 252.177 148.156 251.382 149.841 cv
244.839 150.554 240.659 138.117 244.28 138.113 cv
247.313 138.108 251.243 141.235 252.64 144.028 cv
252.637 144.106 252.628 144.179 252.626 144.256 cv
cp
.0250248 .567285 .998169 0 cmyk
f
264.744 127.697 mo
262.626 130.628 258.887 134.357 256.123 137.786 cv
250.536 136.362 245.862 129.786 244.844 126.25 cv
248.667 123.19 252.532 120.433 254.428 119.048 cv
259.069 115.669 263.439 115.725 265.718 118.279 cv
267.986 120.821 267.462 123.937 264.744 127.697 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
247.422 132.169 mo
245.767 130.063 244.588 127.82 244.095 126.045 cv
243.999 125.7 244.201 125.341 244.548 125.245 cv
244.893 125.15 245.251 125.354 245.349 125.698 cv
246.297 129.123 250.883 135.896 256.639 137.2 cv
256.989 137.28 257.208 137.629 257.128 137.979 cv
257.049 138.328 256.702 138.547 256.352 138.468 cv
252.851 137.675 249.691 135.053 247.422 132.169 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
263.374 129.439 mo
246.699 127.002 243.319 116.986 243.419 109.014 cv
243.75 82.8281 260.16 66.3228 268.985 66.062 cv
269.826 66.0376 270.677 66.0864 271.516 66.209 cv
286.547 68.4063 297.562 94.6318 296.515 109.937 cv
295.502 124.709 283.145 129.982 271.917 129.992 cv
268.73 129.995 265.936 129.814 263.375 129.439 cv
263.374 129.439 li
cp
f
293.967 109.766 mo
293.06 123.077 281.651 127.432 271.917 127.442 cv
263.343 127.452 245.753 126.195 245.966 109.046 cv
245.974 108.171 246.004 107.316 246.05 106.473 cv
252.66 110.917 279.031 117.736 293.848 104.294 cv
294.036 106.237 294.084 108.082 293.967 109.766 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
291.678 93.8652 mo
292.78 97.4365 293.521 101.008 293.848 104.294 cv
279.031 117.736 252.66 110.917 246.05 106.473 cv
246.252 102.739 246.787 99.2607 247.575 96.043 cv
257.504 99.4014 277.847 102.101 291.678 93.8652 cv
cp
.132235 1 1 .0386358 cmyk
f
287.179 83.0977 mo
289.013 86.4756 290.535 90.168 291.678 93.8652 cv
277.847 102.101 257.504 99.4014 247.575 96.043 cv
248.669 91.5557 250.246 87.585 252.087 84.1602 cv
261.759 86.5713 275.87 87.7656 287.179 83.0977 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
279.758 73.2153 mo
282.571 75.7744 285.081 79.2334 287.179 83.0977 cv
275.87 87.7656 261.759 86.5713 252.087 84.1602 cv
254.206 80.1836 256.682 76.9375 259.14 74.4624 cv
265.224 75.7388 272.858 75.9351 279.758 73.2153 cv
cp
.132235 1 1 .0386358 cmyk
f
269.058 68.6104 mo
272.915 68.4951 276.538 70.271 279.758 73.2153 cv
272.858 75.9351 265.224 75.7388 259.14 74.4624 cv
262.896 70.6816 266.624 68.6841 269.058 68.6104 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
293.848 104.294 mo
294.036 106.237 294.084 108.082 293.967 109.766 cv
293.153 121.682 283.929 126.424 275.015 127.286 cv
265.232 126.749 261.057 119.757 260.133 111.271 cv
270.78 113.18 284.577 112.706 293.848 104.294 cv
cp
.574731 .695186 .633936 .604669 cmyk
f
293.848 104.294 mo
284.577 112.706 270.78 113.18 260.133 111.271 cv
259.684 107.288 259.964 102.965 260.722 98.8408 cv
270.633 99.9727 282.57 99.2861 291.678 93.8652 cv
292.78 97.4365 293.521 101.008 293.848 104.294 cv
cp
0 .970642 .96051 0 cmyk
f
291.678 93.8652 mo
282.57 99.2861 270.633 99.9727 260.722 98.8408 cv
261.578 94.0957 263.06 89.6045 264.786 86.1377 cv
272.188 86.627 280.213 85.9697 287.179 83.0977 cv
289.013 86.4756 290.535 90.168 291.678 93.8652 cv
cp
0 0 0 0 cmyk
f
287.179 83.0977 mo
280.213 85.9697 272.188 86.627 264.786 86.1377 cv
265.952 83.8076 267.221 81.9404 268.5 80.7705 cv
274.601 75.1763 280.134 75.6411 283.738 77.6631 cv
284.979 79.3394 286.13 81.165 287.179 83.0977 cv
cp
0 .970642 .96051 0 cmyk
f
262.015 112.241 mo
254.315 111.107 247.919 108.658 245.202 106.793 cv
244.907 106.588 244.835 106.18 245.042 105.877 cv
245.248 105.574 245.656 105.495 245.951 105.697 cv
252.003 109.854 278.94 117.306 293.875 103.474 cv
294.139 103.23 294.547 103.25 294.789 103.519 cv
295.032 103.786 295.016 104.2 294.753 104.444 cv
285.682 112.854 272.638 113.806 262.015 112.241 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
235.861 123.524 mo
232.988 122.566 230.721 120.408 229.639 117.606 cv
227.551 112.193 228.086 102.272 232.942 93.1904 cv
232.669 92.751 232.453 92.3164 232.296 91.8828 cv
231.858 90.6709 li
232.574 89.5986 li
234.75 86.3369 247.922 72.124 256.486 74.98 cv
257.065 75.1729 257.615 75.4419 258.118 75.7803 cv
262.795 78.9214 259.264 87.3213 255.526 96.2119 cv
254.928 97.6338 254.354 99 253.862 100.245 cv
253.31 101.646 li
253.31 101.646 251.73 101.849 251.686 101.854 cv
250.858 104.663 250.435 106.957 250.022 109.187 cv
249.492 112.061 248.991 114.773 247.691 117.823 cv
245.215 123.628 239.825 124.848 235.862 123.525 cv
235.861 123.524 235.861 123.524 235.861 123.524 cv
cp
f
256.159 77.7192 mo
253.739 76.4634 245.854 79.9541 238.601 89.1709 cv
230.615 99.3203 229.985 111.42 232.019 116.688 cv
234.144 122.194 242.35 123.848 245.345 116.823 cv
248.341 109.799 246.694 104.729 253.108 91.1943 cv
256.635 83.7529 258.984 79.186 256.159 77.7192 cv
cp
.0250248 .567285 .998169 0 cmyk
f
256.295 76.397 mo
252.767 75.2188 244.615 79.4673 237.599 88.3818 cv
229.329 98.8936 228.662 111.53 230.829 117.147 cv
231.773 119.594 233.754 121.478 236.265 122.315 cv
239.805 123.497 244.348 122.413 246.519 117.323 cv
247.763 114.405 248.229 111.88 248.768 108.957 cv
249.563 104.642 250.465 99.749 254.261 91.7402 cv
254.764 90.6797 li
258.234 83.375 260.526 78.5498 256.746 76.5874 cv
256.605 76.5132 256.453 76.4502 256.295 76.397 cv
256.295 76.397 li
cp
255.891 77.6069 mo
255.986 77.6387 256.076 77.6753 256.159 77.7192 cv
258.984 79.186 256.635 83.7529 253.108 91.1943 cv
246.694 104.729 248.341 109.799 245.345 116.823 cv
243.53 121.082 239.799 122.151 236.669 121.106 cv
234.636 120.428 232.854 118.855 232.019 116.688 cv
229.985 111.42 230.615 99.3203 238.601 89.1709 cv
245.605 80.2695 253.201 76.7095 255.891 77.6069 cv
255.891 77.6069 li
cp
.75021 .679683 .670222 .90164 cmyk
f
238.603 89.1738 mo
245.856 79.9541 253.742 76.4658 256.155 77.7197 cv
256.425 77.8535 256.644 78.0269 256.818 78.2275 cv
253.706 78.2095 246.345 81.9541 239.216 96.708 cv
230.655 114.434 240.156 122.264 244.9 117.72 cv
241.615 123.693 234.044 121.945 232.017 116.689 cv
229.984 111.423 230.619 99.3223 238.603 89.1738 cv
cp
.101595 .727993 1 .0109865 cmyk
f
256.434 86.9541 mo
255.747 88.9814 254.87 91.1533 253.992 93.2715 cv
247.727 92.6318 241.63 88.8564 239.221 85.9277 cv
240.863 84.3359 242.788 82.6758 244.778 81.2246 cv
247.361 83.5566 251.749 86.0342 256.434 86.9541 cv
cp
0 0 0 0 cmyk
f
253.992 93.2715 mo
253.107 95.4131 252.208 97.4883 251.493 99.3096 cv
246.34 99.9814 236.171 95.0918 234.691 91.0137 cv
235.464 89.8545 237.117 87.9609 239.221 85.9277 cv
241.63 88.8564 247.727 92.6318 253.992 93.2715 cv
cp
0 .970642 .96051 0 cmyk
f
256.696 77.8994 mo
258.496 79.1099 257.873 82.7197 256.434 86.9541 cv
251.749 86.0342 247.361 83.5566 244.778 81.2246 cv
249.118 78.0767 253.796 75.9551 256.696 77.8994 cv
cp
f
256.696 77.8994 mo
256.843 77.9941 256.967 78.1069 257.074 78.2412 cv
255.321 78.0962 251.902 79.293 247.881 83.5244 cv
246.687 82.7842 245.632 81.9941 244.778 81.2246 cv
249.118 78.0767 253.796 75.9551 256.696 77.8994 cv
cp
.132235 1 1 .0386358 cmyk
f
247.881 83.5244 mo
246.422 85.0537 244.884 86.9785 243.313 89.375 cv
241.556 88.25 240.125 87.0293 239.221 85.9277 cv
240.863 84.3359 242.788 82.6758 244.778 81.2246 cv
245.632 81.9941 246.687 82.7842 247.881 83.5244 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
243.313 89.375 mo
242.103 91.2295 240.878 93.3643 239.646 95.8213 cv
237.206 94.3535 235.274 92.624 234.691 91.0137 cv
235.464 89.8545 237.117 87.9609 239.221 85.9277 cv
240.125 87.0293 241.556 88.25 243.313 89.375 cv
cp
.132235 1 1 .0386358 cmyk
f
256.084 76.1895 mo
256.083 76.1899 li
248.73 73.7368 236.052 86.6826 233.633 90.3076 cv
233.409 90.6445 233.357 91.0684 233.496 91.4482 cv
234.729 94.8545 240.205 98.0469 244.771 99.5732 cv
246.636 100.194 249.345 100.875 251.654 100.574 cv
252.115 100.515 252.507 100.209 252.677 99.7783 cv
253.168 98.5303 253.743 97.1621 254.351 95.7178 cv
257.725 87.6924 261.213 79.3955 257.407 76.8389 cv
257 76.5659 256.555 76.3472 256.084 76.1895 cv
256.084 76.1895 li
cp
255.679 77.3984 mo
256.038 77.5181 256.377 77.6836 256.696 77.897 cv
260.234 80.2734 254.405 91.9189 251.49 99.3096 cv
249.773 99.5332 247.499 99.1387 245.174 98.3623 cv
240.525 96.8115 235.678 93.7324 234.694 91.0146 cv
237.239 87.2012 249.358 75.291 255.679 77.3984 cv
255.679 77.3984 li
cp
.75021 .679683 .670222 .90164 cmyk
f
287.733 5.22559 mo
287.73 5.22461 li
282.131 3.06201 273.435 .725586 263.799 1.87354 cv
254.009 3.03906 245.644 7.49414 238.937 15.1138 cv
236.113 18.3218 233.865 22.2065 232.228 26.6997 cv
232.174 26.6572 232.12 26.6152 232.066 26.5747 cv
229.729 24.7939 226.978 23.2856 223.89 22.0933 cv
220.063 20.6152 215.792 19.6396 211.196 19.1963 cv
210.967 19.1738 li
210.284 19.1035 209.601 19.312 209.073 19.7524 cv
208.546 20.1924 208.218 20.8267 208.165 21.5117 cv
207.526 29.6787 210.862 36.3965 215.058 40.9224 cv
214.924 40.9688 214.789 41.0151 214.656 41.0635 cv
204.523 44.7021 200.494 56.4917 199.796 60.7275 cv
199.599 61.9263 200.274 63.0884 201.392 63.52 cv
201.45 63.5425 201.51 63.563 201.57 63.5815 cv
209.404 65.9658 217.804 66.2729 224.471 64.6362 cv
223.848 66.0938 223.354 67.6079 223.077 69.2544 cv
222.228 74.3164 224.366 78.3594 228.797 80.0713 cv
234.028 82.0918 242.018 80.1987 246.103 74.4258 cv
248.554 76.2593 251.36 77.7915 254.482 78.998 cv
256.875 79.9219 259.505 80.6729 262.296 81.2305 cv
273.668 83.5 283.422 83.5977 291.327 81.5234 cv
292.213 82.4619 293.303 83.1914 294.55 83.6738 cv
297.602 84.8525 301.382 84.5059 304.921 82.7236 cv
308.887 80.7275 311.792 77.2944 312.893 73.3066 cv
314.872 66.1353 312.308 54.7397 309.776 47.6528 cv
309.974 47.3882 310.122 47.0845 310.206 46.7559 cv
313.379 34.3657 309.879 21.1772 301.291 13.1553 cv
298.167 10.2373 293.225 7.34766 287.733 5.22559 cv
287.733 5.22559 li
cp
f
233.56 45.1152 mo
236.949 43.8228 237.795 34.146 230.521 28.603 cv
222.717 22.6558 212.313 21.875 210.707 21.7104 cv
209.475 37.4839 224.655 48.5103 233.56 45.1152 cv
cp
0 .970642 .96051 0 cmyk
f
230.518 28.604 mo
237.797 34.1494 236.948 43.8271 233.562 45.1152 cv
224.77 48.4629 209.89 37.7778 210.671 22.3521 cv
211.792 28.416 216.375 38.5869 226.175 35.8838 cv
229.97 34.835 230.071 31.0107 229.187 27.6621 cv
229.638 27.9546 230.081 28.272 230.518 28.604 cv
cp
.132235 1 1 .0386358 cmyk
f
223.431 23.2822 mo
219.711 21.8457 215.555 20.8979 211.073 20.4658 cv
210.837 20.4419 li
210.495 20.4072 210.154 20.5107 209.89 20.731 cv
209.626 20.9512 209.462 21.269 209.436 21.6113 cv
208.515 33.3979 216.261 42.7422 224.388 45.8809 cv
227.829 47.2104 231.248 47.3608 234.013 46.3066 cv
235.685 45.6694 236.86 43.8105 237.236 41.207 cv
237.782 37.4297 236.553 31.5962 231.294 27.5884 cv
229.052 25.8804 226.406 24.4316 223.431 23.2822 cv
223.431 23.2822 li
cp
222.971 24.4717 mo
225.514 25.4536 228.139 26.7876 230.521 28.603 cv
237.795 34.146 236.949 43.8228 233.56 45.1152 cv
230.995 46.0933 227.911 45.875 224.847 44.6914 cv
217.273 41.7661 209.83 32.9424 210.707 21.7104 cv
211.823 21.8247 217.185 22.2368 222.971 24.4717 cv
222.971 24.4717 li
cp
.75021 .679683 .670222 .90164 cmyk
f
235.689 49.4307 mo
235.586 43.0122 224.977 40.0659 215.518 43.4624 cv
206.35 46.7554 202.877 57.7153 202.313 61.1421 cv
217.125 65.6479 235.904 62.7944 235.689 49.4307 cv
cp
0 .970642 .96051 0 cmyk
f
235.688 49.4263 mo
235.901 62.7944 217.123 65.6465 202.315 61.1401 cv
202.449 60.2983 202.766 59.0078 203.289 57.4878 cv
212.061 58.626 221.841 59.6328 226.1 53.3501 cv
229.386 48.4966 227.475 43.6758 225.002 42.0825 cv
230.924 42.438 235.621 45.1636 235.688 49.4263 cv
cp
.132235 1 1 .0386358 cmyk
f
230.796 41.9883 mo
226.354 40.2729 220.335 40.3779 215.087 42.2622 cv
205.533 45.6934 201.718 56.9048 201.054 60.9351 cv
200.956 61.5347 201.293 62.1152 201.852 62.3311 cv
201.881 62.3423 201.911 62.353 201.941 62.3623 cv
211.413 65.2437 224.314 65.6299 231.788 59.9995 cv
235.244 57.395 237.034 53.7334 236.964 49.4102 cv
236.913 46.187 234.665 43.4824 230.796 41.9883 cv
230.796 41.9883 li
cp
230.337 43.1777 mo
233.516 44.4058 235.644 46.5752 235.689 49.4307 cv
235.904 62.7944 217.125 65.6479 202.313 61.1421 cv
202.877 57.7153 206.35 46.7554 215.518 43.4624 cv
220.768 41.5776 226.371 41.646 230.337 43.1777 cv
230.337 43.1777 li
cp
.75021 .679683 .670222 .90164 cmyk
f
304.935 43.0293 mo
308.013 48.125 312.751 64.2354 310.434 72.6284 cv
307.687 82.583 291.904 86.0684 291.28 74.8062 cv
290.881 67.6069 295.785 61.4971 295.398 50.8555 cv
295.002 39.9844 301.656 37.603 304.935 43.0293 cv
cp
.280522 .914061 1 .298253 cmyk
f
304.931 43.0288 mo
308.009 48.127 312.75 64.2358 310.438 72.6284 cv
308.828 78.4482 302.758 82.0635 297.875 81.7998 cv
310.72 80.0635 309.762 66.9458 307.979 55.2134 cv
306.926 48.291 305.18 43.3979 303.271 41.1216 cv
303.876 41.583 304.441 42.2202 304.931 43.0288 cv
cp
.215396 .82446 1 .119539 cmyk
f
302.611 39.2979 mo
302.611 39.2979 li
300.988 38.6709 299.293 38.897 297.838 39.9341 cv
295.29 41.7505 293.937 45.748 294.124 50.9014 cv
294.326 56.4565 293.001 60.8301 291.831 64.689 cv
290.793 68.1162 289.812 71.354 290.007 74.8765 cv
290.214 78.624 291.988 81.3281 294.999 82.4902 cv
297.675 83.5244 301.168 83.1875 304.341 81.5898 cv
307.99 79.7529 310.658 76.6104 311.664 72.9683 cv
314.17 63.8853 308.978 47.2578 306.025 42.3706 cv
305.122 40.8745 303.941 39.811 302.611 39.2979 cv
302.611 39.2979 li
cp
302.151 40.4868 mo
303.177 40.8833 304.152 41.7339 304.935 43.0293 cv
308.013 48.125 312.751 64.2354 310.434 72.6284 cv
308.547 79.4658 300.508 83.252 295.458 81.3018 cv
293.156 80.4121 291.476 78.3315 291.28 74.8062 cv
290.881 67.6069 295.785 61.4971 295.398 50.8555 cv
295.097 42.5796 298.881 39.2246 302.151 40.4868 cv
302.151 40.4868 li
cp
.75021 .679683 .670222 .90164 cmyk
f
236.207 43.1753 mo
236.097 51.936 235.936 73.3677 262.795 78.73 cv
289.655 84.0918 302.344 76.0083 306.033 67.6372 cv
309.478 59.8203 306.036 57.8862 306.452 40.0083 cv
307.053 14.2715 282.959 5.87695 265.426 8.21729 cv
246.177 10.7866 236.429 25.4937 236.207 43.1753 cv
cp
.0250248 .567285 .998169 0 cmyk
f
295.442 15.4541 mo
283.046 9.35547 267.745 10.7529 259.333 30.3657 cv
253.664 43.6035 251.515 71.439 272.378 80.1528 cv
269.404 79.8789 266.213 79.4121 262.795 78.73 cv
235.936 73.3677 236.095 51.9346 236.207 43.1753 cv
236.429 25.4937 246.173 10.7871 265.426 8.21729 cv
275.196 6.91504 287.013 8.94629 295.442 15.4541 cv
cp
.101595 .727993 1 .0109865 cmyk
f
287.32 9.49463 mo
280.512 6.86572 272.677 5.9624 265.257 6.95361 cv
246.802 9.4165 235.183 23.29 234.932 43.1597 cv
234.831 51.1768 234.595 69.9531 254.915 77.7998 cv
257.247 78.7017 259.815 79.4351 262.546 79.98 cv
274.995 82.4648 285.415 82.3174 293.517 79.5396 cv
300.099 77.2827 304.958 73.2383 307.2 68.1514 cv
309.31 63.3638 308.99 60.5034 308.462 55.7637 cv
308.077 52.3184 307.551 47.5981 307.728 40.0376 cv
308.184 20.4961 295.137 12.5137 287.32 9.49463 cv
287.32 9.49463 li
cp
286.86 10.6841 mo
297.877 14.9385 306.821 24.2056 306.452 40.0083 cv
306.036 57.8862 309.478 59.8203 306.033 67.6372 cv
302.344 76.0083 289.655 84.0918 262.795 78.73 cv
260.047 78.1816 257.584 77.4653 255.374 76.6108 cv
235.969 69.1167 236.108 51.04 236.207 43.1753 cv
236.429 25.4937 246.177 10.7866 265.426 8.21729 cv
272.193 7.31445 279.935 8.00928 286.86 10.6841 cv
286.86 10.6841 li
cp
.75021 .679683 .670222 .90164 cmyk
f
245.897 41.6787 mo
247.78 47.3271 248.861 64.0845 244.757 71.7627 cv
239.888 80.8701 223.726 80.8008 225.592 69.6763 cv
226.785 62.5669 232.912 57.6836 234.874 47.2168 cv
236.877 36.5249 243.891 35.665 245.897 41.6787 cv
cp
.280522 .914061 1 .298253 cmyk
f
245.897 41.6787 mo
247.779 47.3267 248.862 64.082 244.757 71.7627 cv
242.391 76.1895 237.375 78.4434 233.037 78.3257 cv
243.707 77.335 245.094 65.2505 245.547 54.1909 cv
245.908 45.519 244.635 39.7061 242.496 38.0503 cv
243.947 38.3745 245.212 39.6284 245.897 41.6787 cv
cp
.215396 .82446 1 .119539 cmyk
f
243.444 37.0024 mo
243.443 37.0024 li
242.037 36.4595 240.475 36.6001 239.044 37.3975 cv
236.432 38.853 234.506 42.2578 233.62 46.9819 cv
232.597 52.4448 230.342 56.4214 228.354 59.9287 cv
226.587 63.0439 224.918 65.9873 224.334 69.4658 cv
223.593 73.8848 225.433 77.4043 229.257 78.8818 cv
234.409 80.8711 242.502 78.6836 245.881 72.3638 cv
250.323 64.0537 248.913 46.6919 247.106 41.2754 cv
246.401 39.1592 245.1 37.6426 243.444 37.0024 cv
243.444 37.0024 li
cp
242.983 38.1919 mo
244.228 38.6714 245.291 39.8613 245.897 41.6787 cv
247.78 47.3271 248.861 64.0845 244.757 71.7627 cv
241.75 77.3887 234.431 79.5127 229.716 77.6919 cv
226.799 76.5654 224.879 73.9292 225.592 69.6763 cv
226.785 62.5669 232.912 57.6836 234.874 47.2168 cv
236.271 39.7563 240.111 37.082 242.983 38.1919 cv
242.983 38.1919 li
cp
.75021 .679683 .670222 .90164 cmyk
f
232.185 53.3921 mo
236.86 49.5884 279.878 30.96 307.736 46.123 cv
310.425 35.6201 308.145 23.0454 299.55 15.019 cv
290.882 6.92334 260.604 -5.64209 240.851 16.7988 cv
230.454 28.6108 231.166 47.3804 232.185 53.3921 cv
cp
0 .970642 .96051 0 cmyk
f
308.795 36.9858 mo
308.852 40.0962 308.486 43.1895 307.735 46.1255 cv
304.424 44.3179 300.898 42.9932 297.248 42.0659 cv
302.58 41.7559 306.402 40.1621 308.795 36.9858 cv
cp
.132235 1 1 .0386358 cmyk
f
260 22.7148 mo
260.191 33.9229 269.301 38.1973 279.598 40.2969 cv
257.242 40.9214 235.436 50.7407 232.187 53.3955 cv
231.166 47.3794 230.452 28.6069 240.854 16.7969 cv
250.601 5.71729 262.909 3.17285 273.925 4.40186 cv
266.782 6.49951 259.833 12.791 260 22.7148 cv
cp
f
287.274 6.41504 mo
281.809 4.30469 273.327 2.02344 263.951 3.13916 cv
254.482 4.2666 246.388 8.57861 239.894 15.9565 cv
227.172 30.4097 230.889 53.3745 230.928 53.605 cv
231.003 54.0488 231.306 54.4194 231.726 54.5815 cv
231.729 54.5825 231.733 54.5845 231.736 54.5854 cv
232.16 54.7446 232.638 54.668 232.989 54.3809 cv
237.115 51.0234 274.88 34.4204 302.24 44.9873 cv
303.937 45.6426 305.581 46.4019 307.126 47.2432 cv
307.175 47.2695 307.226 47.2925 307.276 47.3125 cv
307.587 47.4326 307.935 47.4272 308.245 47.292 cv
308.605 47.1348 308.874 46.8203 308.971 46.439 cv
312.03 34.4946 308.673 21.7949 300.421 14.0874 cv
297.455 11.3169 292.54 8.44873 287.274 6.41504 cv
287.274 6.41504 li
cp
286.814 7.604 mo
292.42 9.76953 296.955 12.5957 299.55 15.019 cv
308.145 23.0454 310.425 35.6201 307.736 46.123 cv
306.103 45.2344 304.424 44.4644 302.699 43.7979 cv
274.975 33.0903 236.586 49.811 232.185 53.3921 cv
231.166 47.3804 230.454 28.6108 240.851 16.7988 cv
254.69 1.07666 273.693 2.53662 286.814 7.604 cv
286.814 7.604 li
cp
.75021 .679683 .670222 .90164 cmyk
f
300.103 65.9854 mo
300.745 72.9287 293.479 79.2754 283.873 80.1641 cv
274.267 81.0527 265.958 76.144 265.317 69.2012 cv
264.675 62.2573 271.942 55.9102 281.548 55.021 cv
291.154 54.1323 299.461 59.042 300.103 65.9854 cv
cp
.00985733 .0806592 .600977 0 cmyk
f
291.352 57.1724 mo
291.225 59.2007 288.684 60.6943 285.677 60.5039 cv
282.67 60.314 280.338 58.5146 280.466 56.4844 cv
280.594 54.4556 283.135 52.9619 286.141 53.1523 cv
289.148 53.3413 291.48 55.1416 291.352 57.1724 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
290.611 57.1255 mo
290.624 56.9282 290.601 56.7354 290.562 56.5444 cv
289.789 57.6611 288.053 58.374 286.083 58.25 cv
283.776 58.1035 281.938 56.8618 281.63 55.3579 cv
281.384 55.7124 281.234 56.1084 281.207 56.5313 cv
281.097 58.2852 283.112 59.8394 285.709 60.0034 cv
288.306 60.167 290.501 58.8774 290.611 57.1255 cv
cp
.636561 .700954 .654597 .746487 cmyk
f
273.764 49.8589 mo
273.893 53.1807 271.715 55.9634 268.901 56.0723 cv
266.087 56.1802 263.7 53.5752 263.572 50.251 cv
263.444 46.9287 265.622 44.1484 268.436 44.0386 cv
271.25 43.9307 273.636 46.5352 273.764 49.8589 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
271.902 49.1587 mo
272.158 51.1572 270.967 52.9546 269.24 53.1753 cv
267.515 53.3984 265.907 51.9595 265.65 49.9604 cv
265.395 47.9619 266.586 46.1646 268.312 45.9419 cv
270.039 45.7212 271.646 47.1597 271.902 49.1587 cv
cp
0 0 0 0 cmyk
f
262.549 46.0215 mo
265.082 44.8096 267.969 43.3608 270.679 40.2256 cv
272.491 38.1294 274.079 39.7744 272.738 42.0679 cv
271.663 43.9077 267.387 46.4038 263.152 46.9404 cv
261.346 47.1694 261.504 46.52 262.549 46.0215 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
302.887 50.2104 mo
302.976 53.4873 300.848 56.2568 298.135 56.3936 cv
295.422 56.5303 293.15 53.9839 293.062 50.7051 cv
292.973 47.4272 295.101 44.6602 297.813 44.5229 cv
300.527 44.3862 302.799 46.9312 302.887 50.2104 cv
cp
f
301.17 49.5176 mo
301.399 51.5229 300.21 53.3433 298.513 53.583 cv
296.817 53.8276 295.253 52.3975 295.023 50.3911 cv
294.794 48.3843 295.982 46.564 297.679 46.3228 cv
299.376 46.0825 300.939 47.5103 301.17 49.5176 cv
cp
0 0 0 0 cmyk
f
303.222 45.9028 mo
300.824 44.9536 298.093 43.8071 295.561 41.0474 cv
293.869 39.2026 292.321 40.8862 293.559 42.9541 cv
294.554 44.6147 298.592 46.645 302.629 46.8223 cv
304.351 46.8975 304.212 46.2935 303.222 45.9028 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
289.382 56.1338 mo
289.216 56.7358 288.358 57.0254 287.466 56.7793 cv
286.574 56.5332 285.985 55.8467 286.15 55.2441 cv
286.316 54.6421 287.174 54.3521 288.066 54.5977 cv
288.959 54.8428 289.548 55.5308 289.382 56.1338 cv
cp
0 0 0 0 cmyk
f
290.011 27.1118 mo
292.091 26.8545 294.269 24.9028 293.085 20.6846 cv
291.902 16.4673 286.013 13.2212 281.759 12.8828 cv
277.505 12.5449 272.475 14.5347 271.286 18.8833 cv
270.225 22.7627 272.586 25.2363 275.931 26.3374 cv
275.539 28.3101 275.625 29.4478 276.057 29.5186 cv
276.791 29.6396 279.733 29.7217 280.304 29.7378 cv
280.503 29.0137 280.886 27.3267 280.886 27.3267 cv
281.295 29.5884 li
282.118 29.8286 285.543 29.8086 285.92 29.7397 cv
285.852 29.3628 285.692 27.3257 285.692 27.3257 cv
286.888 29.7344 li
287.752 29.877 290.636 29.8135 290.636 29.8135 cv
291.224 29.2573 290.011 27.1118 290.011 27.1118 cv
cp
f
281.954 20.8003 mo
281.954 22.1792 280.907 23.2979 279.617 23.2974 cv
278.326 23.2983 277.279 22.1812 277.279 20.8018 cv
277.278 19.4229 278.325 18.3042 279.615 18.3042 cv
280.907 18.3037 281.953 19.4214 281.954 20.8003 cv
cp
0 .970642 .96051 0 cmyk
f
288.704 20.7271 mo
289.015 22.0693 288.319 23.377 287.151 23.647 cv
285.983 23.917 284.785 23.0464 284.475 21.7026 cv
284.164 20.3599 284.86 19.0508 286.028 18.7813 cv
287.196 18.5117 288.395 19.3818 288.704 20.7271 cv
cp
f
291.336 69.9824 mo
289.575 73.9609 284.486 76.7544 279.971 76.2222 cv
275.454 75.6899 273.224 72.0337 274.986 68.0552 cv
276.748 64.0776 281.834 61.2842 286.353 61.8179 cv
290.865 62.3491 293.098 66.0049 291.336 69.9824 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
287.939 73.0493 mo
285.851 74.7393 282.985 75.6763 280.347 75.3301 cv
276.902 74.8618 274.997 72.3853 275.558 69.4814 cv
281.026 68.3638 286.551 70.3823 287.939 73.0493 cv
cp
0 .970642 .96051 0 cmyk
f
285.332 65.2402 mo
283.223 65.0308 281.292 64.6792 279.612 64.2119 cv
281.535 63.04 283.877 62.4502 286.058 62.7427 cv
288.142 63.0132 289.654 64.02 290.41 65.4087 cv
288.805 65.4648 287.103 65.4097 285.332 65.2402 cv
cp
0 0 0 0 cmyk
f
500.32 137.309 mo
497.931 139.168 494.876 139.859 491.945 139.206 cv
486.283 137.944 478.323 131.997 473.454 122.924 cv
472.938 122.908 472.456 122.845 472.008 122.736 cv
470.757 122.429 li
470.261 121.238 li
468.752 117.619 464.224 98.7764 471.348 93.2324 cv
471.83 92.8584 472.358 92.5498 472.919 92.3184 cv
478.125 90.167 483.16 97.7607 488.487 105.801 cv
489.34 107.087 490.16 108.322 490.924 109.421 cv
491.783 110.657 li
491.783 110.657 491.076 112.085 491.057 112.125 cv
492.934 114.37 494.609 115.994 496.236 117.574 cv
498.334 119.608 500.314 121.529 502.133 124.302 cv
505.592 129.578 503.618 134.742 500.321 137.308 cv
500.32 137.309 500.32 137.309 500.32 137.309 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
473.445 95.0244 mo
471.062 96.3408 469.595 104.84 473.244 115.986 cv
477.267 128.258 486.988 135.487 492.499 136.716 cv
498.262 138 504.185 132.086 500 125.699 cv
495.813 119.313 490.681 117.873 482.972 105.032 cv
478.733 97.9717 476.232 93.4844 473.445 95.0244 cv
cp
.0250248 .567285 .998169 0 cmyk
f
472.421 94.1777 mo
469.486 96.4609 468.503 105.601 472.033 116.381 cv
476.198 129.091 486.345 136.651 492.223 137.961 cv
494.781 138.532 497.449 137.927 499.538 136.301 cv
502.483 134.01 504.099 129.627 501.066 125.001 cv
499.325 122.346 497.482 120.56 495.348 118.491 cv
492.197 115.437 488.626 111.974 484.063 104.376 cv
483.46 103.369 li
479.304 96.4307 476.56 91.8486 472.829 93.9072 cv
472.69 93.9834 472.553 94.0771 472.421 94.1777 cv
472.421 94.1777 li
cp
473.205 95.1846 mo
473.284 95.123 473.364 95.0684 473.445 95.0244 cv
476.232 93.4844 478.733 97.9717 482.972 105.032 cv
490.681 117.873 495.813 119.313 500 125.699 cv
502.538 129.571 501.361 133.269 498.755 135.295 cv
497.063 136.611 494.769 137.223 492.499 136.716 cv
486.988 135.487 477.267 128.258 473.244 115.986 cv
469.72 105.221 470.967 96.9248 473.205 95.1846 cv
473.205 95.1846 li
cp
.75021 .679683 .670222 .90164 cmyk
f
473.249 115.984 mo
469.597 104.836 471.063 96.3398 473.445 95.0264 cv
473.704 94.877 473.972 94.7891 474.236 94.7559 cv
472.496 97.3369 471.531 105.54 479.858 119.65 cv
489.867 136.602 501.651 133.035 500.498 126.567 cv
503.649 132.612 497.999 137.944 492.5 136.72 cv
486.99 135.491 477.271 128.256 473.249 115.984 cv
cp
.101595 .727993 1 .0109865 cmyk
f
481.284 99.9141 mo
482.591 101.609 483.914 103.544 485.189 105.447 cv
481.184 110.307 474.664 113.29 470.891 113.672 cv
470.476 111.424 470.161 108.9 470.057 106.439 cv
473.428 105.582 477.923 103.303 481.284 99.9141 cv
cp
0 0 0 0 cmyk
f
485.189 105.447 mo
486.481 107.371 487.711 109.269 488.831 110.874 cv
486.534 115.536 476.827 121.29 472.612 120.261 cv
472.076 118.976 471.417 116.549 470.891 113.672 cv
474.664 113.29 481.184 110.307 485.189 105.447 cv
cp
0 .970642 .96051 0 cmyk
f
473.895 94.6758 mo
475.9 93.8486 478.559 96.3691 481.284 99.9141 cv
477.923 103.303 473.428 105.582 470.057 106.439 cv
469.841 101.083 470.67 96.0127 473.895 94.6758 cv
cp
f
473.895 94.6758 mo
474.055 94.6064 474.218 94.5654 474.389 94.5518 cv
473.296 95.9297 472.396 99.4395 473.691 105.131 cv
472.413 105.716 471.17 106.154 470.057 106.439 cv
469.841 101.083 470.67 96.0127 473.895 94.6758 cv
cp
.132235 1 1 .0386358 cmyk
f
473.691 105.131 mo
474.154 107.193 474.903 109.541 476.027 112.176 cv
474.117 113.016 472.309 113.529 470.891 113.672 cv
470.476 111.424 470.161 108.9 470.057 106.439 cv
471.17 106.154 472.413 105.716 473.691 105.131 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
476.027 112.176 mo
476.9 114.212 477.998 116.414 479.359 118.802 cv
476.785 120.019 474.275 120.668 472.612 120.261 cv
472.076 118.976 471.417 116.549 470.891 113.672 cv
472.309 113.529 474.117 113.016 476.027 112.176 cv
cp
.132235 1 1 .0386358 cmyk
f
472.132 94.2383 mo
472.132 94.2383 li
466.015 98.999 469.762 116.728 471.438 120.75 cv
471.594 121.123 471.917 121.401 472.311 121.497 cv
475.831 122.357 481.522 119.57 485.322 116.617 cv
486.875 115.408 488.943 113.53 489.973 111.441 cv
490.178 111.025 490.14 110.53 489.877 110.149 cv
489.11 109.048 488.291 107.813 487.424 106.505 cv
482.614 99.248 477.644 91.7471 473.406 93.4961 cv
472.952 93.6846 472.524 93.9336 472.132 94.2383 cv
472.132 94.2383 li
cp
472.914 95.2451 mo
473.213 95.0117 473.538 94.8213 473.892 94.6748 cv
477.831 93.0479 484.293 104.354 488.83 110.878 cv
488.063 112.429 486.474 114.104 484.54 115.609 cv
480.672 118.619 475.423 120.946 472.613 120.259 cv
470.851 116.026 467.655 99.3379 472.914 95.2451 cv
472.914 95.2451 li
cp
.75021 .679683 .670222 .90164 cmyk
f
495.563 141.408 mo
497.147 138.293 li
522.09 154.047 li
522.396 154.24 522.755 154.33 523.115 154.304 cv
536.247 153.384 li
536.844 153.341 537.373 152.99 537.644 152.458 cv
537.913 151.925 537.886 151.291 537.569 150.784 cv
530.575 139.632 li
530.384 139.325 530.099 139.088 529.761 138.954 cv
502.337 128.085 li
503.919 124.972 li
504.344 124.136 504.011 123.111 503.174 122.687 cv
498.646 120.385 li
497.809 119.959 496.785 120.292 496.36 121.129 cv
494.419 124.947 li
481.632 119.879 li
480.814 119.556 479.887 119.906 479.49 120.689 cv
478.599 122.44 li
477.708 124.192 li
477.311 124.976 477.573 125.932 478.316 126.4 cv
489.945 133.746 li
488.005 137.564 li
487.58 138.401 487.913 139.424 488.75 139.851 cv
493.277 142.153 li
494.114 142.577 495.139 142.244 495.563 141.408 cv
cp
f
480.113 123.211 mo
479.225 124.963 li
522.996 152.609 li
536.128 151.688 li
529.134 140.534 li
481.004 121.459 li
480.113 123.211 li
cp
.280522 .914061 1 .298253 cmyk
f
534.116 150.664 mo
521.338 151.562 li
522.996 152.609 li
536.128 151.688 li
529.134 140.534 li
527.312 139.812 li
534.116 150.664 li
cp
.215396 .82446 1 .119539 cmyk
f
489.519 138.335 mo
497.875 121.899 li
502.403 124.202 li
494.05 140.638 li
489.519 138.335 li
cp
f
493.377 140.296 mo
501.732 123.861 li
502.403 124.202 li
494.05 140.638 li
493.377 140.296 li
cp
.144869 .807401 1 .0376593 cmyk
f
491.412 133.364 mo
491.45 133.29 491.512 133.225 491.592 133.183 cv
500.081 128.678 li
500.287 128.567 500.546 128.646 500.653 128.853 cv
500.764 129.061 500.687 129.317 500.479 129.428 cv
491.991 133.934 li
491.783 134.043 491.526 133.966 491.415 133.758 cv
491.349 133.63 491.352 133.484 491.412 133.364 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
494.976 126.356 mo
495.036 126.237 495.152 126.149 495.295 126.128 cv
495.527 126.096 495.741 126.257 495.774 126.488 cv
497.138 136.002 li
497.171 136.234 497.01 136.449 496.775 136.482 cv
496.544 136.516 496.329 136.354 496.295 136.122 cv
494.933 126.609 li
494.92 126.52 494.938 126.432 494.976 126.356 cv
cp
f
488.829 128.521 mo
486.921 127.906 485.991 125.499 486.751 123.145 cv
487.511 120.79 489.674 119.38 491.581 119.995 cv
493.488 120.611 494.418 123.019 493.659 125.373 cv
492.898 127.729 490.736 129.138 488.829 128.521 cv
cp
f
489.242 127.242 mo
487.68 126.737 486.987 124.541 487.699 122.334 cv
488.412 120.128 490.256 118.749 491.82 119.253 cv
493.384 119.758 494.074 121.955 493.362 124.16 cv
492.65 126.367 490.806 127.746 489.242 127.242 cv
cp
.0250248 .567285 .998169 0 cmyk
f
420.097 146.735 mo
418.328 146.484 416.54 146.084 414.782 145.543 cv
409.549 143.935 405.844 140.481 404.067 135.558 cv
401.037 127.151 404.298 116.768 406.717 113.077 cv
408.541 110.296 410.854 108.881 413.065 109.192 cv
415.706 109.566 417.343 111.975 417.932 116.35 cv
418.762 122.527 424.212 124.57 428.637 125.195 cv
430.307 125.433 432.092 125.488 433.801 125.36 cv
437.854 125.057 440.401 125.044 442.324 125.315 cv
445.329 125.74 447.213 127.029 447.923 129.151 cv
448.836 131.877 447.889 135.205 445.327 138.285 cv
441.199 143.246 432.114 148.435 420.098 146.735 cv
420.098 146.735 420.098 146.735 420.097 146.735 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
445.506 129.961 mo
444.716 127.602 440.934 127.383 433.992 127.903 cv
426.888 128.437 416.688 126.241 415.404 116.689 cv
414.463 109.688 411.038 111.137 408.85 114.476 cv
405.613 119.413 400.702 138.548 415.531 143.106 cv
433.631 148.67 447.617 136.269 445.506 129.961 cv
cp
.101595 .727993 1 .0109865 cmyk
f
407.715 129.055 mo
406.815 128.438 406.128 131.414 406.195 133.853 cv
404.026 126.609 406.779 117.643 408.85 114.476 cv
411.038 111.137 414.463 109.688 415.404 116.689 cv
415.918 120.522 417.862 123.167 420.471 124.935 cv
419.825 126.106 416.886 123.999 416.104 124.37 cv
414.749 125.027 416.914 128.775 415.592 129.019 cv
414.27 129.261 412.36 126.562 411.523 127.447 cv
410.273 128.756 411.507 132.596 410.244 132.416 cv
408.981 132.239 408.889 129.865 407.715 129.055 cv
cp
.00985733 .0806592 .600977 0 cmyk
f
442.983 132.026 mo
446.244 128.067 449.866 124.774 452.672 123.214 cv
456.664 120.993 463.264 124.87 477.89 138.026 cv
478.604 138.667 li
484.412 143.869 484.229 149.989 481.473 153.744 cv
481.343 153.922 481.21 154.093 481.074 154.258 cv
478.042 157.938 473.731 158.7 468.263 156.52 cv
466.23 155.71 463.951 154.479 461.537 153.177 cv
457.973 151.254 452.586 148.349 450.618 148.825 cv
445.847 149.984 439.56 149.648 437.546 144.888 cv
436.101 141.47 439.705 136.007 442.983 132.026 cv
442.983 132.026 li
cp
.75021 .679683 .670222 .90164 cmyk
f
479.394 152.266 mo
481.665 149.173 480.994 144.641 476.717 140.81 cv
472.439 136.979 457.676 123.397 453.742 125.586 cv
448.155 128.692 438.624 140.264 440.024 143.577 cv
441.426 146.889 446.363 147.117 450.281 146.166 cv
454.647 145.105 463.662 151.641 469.468 153.954 cv
473.82 155.69 477.138 155.338 479.394 152.266 cv
cp
.101595 .727993 1 .0109865 cmyk
f
450.281 146.166 mo
448.351 146.636 446.163 146.82 444.283 146.479 cv
442.454 139.917 454.653 132.034 455.259 135.776 cv
455.771 138.911 453.184 143.871 450.52 146.116 cv
450.438 146.136 450.361 146.146 450.281 146.166 cv
cp
.0250248 .567285 .998169 0 cmyk
f
469.468 153.954 mo
466.077 152.604 461.587 149.807 457.572 147.93 cv
458.117 141.744 464.157 135.028 467.654 132.962 cv
471.463 136.038 474.966 139.245 476.717 140.81 cv
480.994 144.641 481.663 149.176 479.394 152.266 cv
477.138 155.338 473.82 155.69 469.468 153.954 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
461.949 137.322 mo
463.854 135.009 465.984 133.146 467.741 132.128 cv
468.085 131.93 468.49 132.036 468.646 132.367 cv
468.803 132.697 468.651 133.126 468.311 133.324 cv
464.917 135.287 458.66 141.969 458.265 148.296 cv
458.241 148.681 457.916 149.007 457.541 149.024 cv
457.164 149.043 456.879 148.746 456.902 148.361 cv
457.143 144.514 459.336 140.495 461.949 137.322 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
423.302 140.059 mo
425.752 135.575 428.686 131.677 431.142 129.627 cv
434.64 126.711 441.848 129.284 458.684 139.457 cv
459.505 139.953 li
466.188 143.971 467.166 150.001 465.171 154.192 cv
465.076 154.392 464.979 154.582 464.877 154.768 cv
462.599 158.938 458.514 160.483 452.736 159.362 cv
450.588 158.945 448.118 158.164 445.505 157.336 cv
441.646 156.113 435.81 154.266 433.97 155.1 cv
429.509 157.119 423.277 157.958 420.401 153.67 cv
418.336 150.587 420.84 144.567 423.302 140.059 cv
423.302 140.059 li
cp
f
462.852 153.128 mo
464.494 149.677 462.979 145.362 458.059 142.402 cv
453.139 139.442 436.086 128.879 432.641 131.752 cv
427.746 135.832 420.584 148.938 422.585 151.923 cv
424.585 154.908 429.473 154.215 433.137 152.558 cv
437.219 150.706 447.299 155.437 453.434 156.626 cv
458.031 157.518 461.219 156.559 462.852 153.128 cv
cp
.101595 .727993 1 .0109865 cmyk
f
433.137 152.558 mo
431.332 153.376 429.22 153.961 427.313 153.977 cv
424.276 147.889 434.754 137.899 436.057 141.454 cv
437.151 144.431 435.549 149.771 433.361 152.464 cv
433.284 152.498 433.212 152.522 433.137 152.558 cv
cp
.0250248 .567285 .998169 0 cmyk
f
453.434 156.626 mo
449.852 155.933 444.917 154.023 440.622 152.931 cv
439.988 146.771 444.644 139.069 447.684 136.396 cv
452.003 138.703 456.046 141.195 458.059 142.402 cv
462.979 145.362 464.495 149.681 462.852 153.128 cv
461.219 156.559 458.031 157.518 453.434 156.626 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
442.91 141.728 mo
444.343 139.106 446.079 136.888 447.613 135.563 cv
447.91 135.305 448.329 135.335 448.546 135.63 cv
448.761 135.924 448.694 136.372 448.396 136.631 cv
445.438 139.183 440.563 146.89 441.373 153.16 cv
441.421 153.543 441.164 153.923 440.799 154.01 cv
440.434 154.098 440.098 153.859 440.048 153.479 cv
439.555 149.664 440.946 145.321 442.91 141.728 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
454.322 148.145 mo
437.647 145.708 434.268 135.692 434.368 127.719 cv
434.697 101.533 451.108 85.0293 459.934 84.7676 cv
460.774 84.7432 461.625 84.792 462.464 84.9141 cv
477.496 87.1113 488.511 113.337 487.463 128.643 cv
486.451 143.414 474.093 148.688 462.865 148.697 cv
459.68 148.701 456.885 148.52 454.323 148.145 cv
454.322 148.145 li
cp
f
484.915 128.471 mo
484.009 141.783 472.601 146.137 462.865 146.147 cv
454.29 146.157 436.701 144.9 436.914 127.751 cv
436.922 126.877 436.953 126.021 436.998 125.178 cv
443.607 129.622 469.979 136.442 484.796 122.999 cv
484.984 124.942 485.032 126.788 484.915 128.471 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
482.626 112.571 mo
483.729 116.142 484.469 119.713 484.796 122.999 cv
469.979 136.442 443.607 129.622 436.998 125.178 cv
437.201 121.444 437.735 117.967 438.524 114.748 cv
448.452 118.106 468.795 120.807 482.626 112.571 cv
cp
.132235 1 1 .0386358 cmyk
f
478.127 101.803 mo
479.962 105.181 481.483 108.874 482.626 112.571 cv
468.795 120.807 448.452 118.106 438.524 114.748 cv
439.617 110.261 441.194 106.291 443.034 102.865 cv
452.708 105.277 466.818 106.472 478.127 101.803 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
470.706 91.9209 mo
473.52 94.4805 476.028 97.9395 478.127 101.803 cv
466.818 106.472 452.708 105.277 443.034 102.865 cv
445.154 98.8896 447.63 95.6436 450.088 93.168 cv
456.172 94.4434 463.807 94.6406 470.706 91.9209 cv
cp
.132235 1 1 .0386358 cmyk
f
460.007 87.3154 mo
463.863 87.2002 467.486 88.9766 470.706 91.9209 cv
463.807 94.6406 456.172 94.4434 450.088 93.168 cv
453.845 89.3867 457.572 87.3896 460.007 87.3154 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
484.796 122.999 mo
484.984 124.942 485.032 126.788 484.915 128.471 cv
484.102 140.387 474.878 145.129 465.963 145.991 cv
456.181 145.454 452.006 138.462 451.081 129.976 cv
461.729 131.885 475.525 131.411 484.796 122.999 cv
cp
.574731 .695186 .633936 .604669 cmyk
f
484.796 122.999 mo
475.525 131.411 461.729 131.885 451.081 129.976 cv
450.633 125.993 450.912 121.67 451.67 117.547 cv
461.581 118.678 473.519 117.991 482.626 112.571 cv
483.729 116.142 484.469 119.713 484.796 122.999 cv
cp
0 .970642 .96051 0 cmyk
f
482.626 112.571 mo
473.519 117.991 461.581 118.678 451.67 117.547 cv
452.526 112.802 454.008 108.311 455.734 104.843 cv
463.137 105.333 471.161 104.675 478.127 101.803 cv
479.962 105.181 481.483 108.874 482.626 112.571 cv
cp
0 0 0 0 cmyk
f
478.127 101.803 mo
471.161 104.675 463.137 105.333 455.734 104.843 cv
456.9 102.513 458.169 100.646 459.448 99.4756 cv
465.55 93.8818 471.082 94.3467 474.688 96.3691 cv
475.928 98.0449 477.078 99.8711 478.127 101.803 cv
cp
0 .970642 .96051 0 cmyk
f
452.962 130.947 mo
445.265 129.813 438.867 127.364 436.15 125.499 cv
435.856 125.294 435.783 124.885 435.99 124.582 cv
436.196 124.28 436.604 124.2 436.898 124.403 cv
442.951 128.56 469.889 136.012 484.822 122.179 cv
485.086 121.936 485.495 121.956 485.737 122.224 cv
485.98 122.491 485.964 122.905 485.7 123.149 cv
476.631 131.56 463.586 132.511 452.962 130.947 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
426.81 142.229 mo
423.937 141.271 421.669 139.113 420.588 136.313 cv
418.499 130.899 419.035 120.978 423.89 111.896 cv
423.617 111.457 423.401 111.022 423.245 110.589 cv
422.807 109.377 li
423.522 108.305 li
425.698 105.042 438.871 90.8291 447.434 93.6846 cv
448.014 93.8789 448.563 94.1475 449.066 94.4863 cv
453.742 97.627 450.212 106.026 446.475 114.918 cv
445.877 116.34 445.303 117.706 444.811 118.951 cv
444.258 120.353 li
444.258 120.353 442.679 120.555 442.635 120.56 cv
441.807 123.368 441.383 125.662 440.971 127.893 cv
440.44 130.767 439.94 133.479 438.64 136.528 cv
436.163 142.333 430.772 143.554 426.811 142.23 cv
426.81 142.229 426.81 142.229 426.81 142.229 cv
cp
f
447.107 96.4238 mo
444.688 95.1689 436.803 98.6602 429.549 107.876 cv
421.563 118.026 420.934 130.125 422.967 135.394 cv
425.092 140.899 433.299 142.554 436.294 135.529 cv
439.289 128.504 437.643 123.435 444.057 109.899 cv
447.583 102.459 449.933 97.8916 447.107 96.4238 cv
cp
.0250248 .567285 .998169 0 cmyk
f
447.243 95.1025 mo
443.715 93.9238 435.563 98.1729 428.548 107.088 cv
420.277 117.599 419.609 130.236 421.776 135.853 cv
422.721 138.299 424.703 140.184 427.213 141.021 cv
430.753 142.203 435.297 141.118 437.467 136.029 cv
438.712 133.11 439.178 130.585 439.716 127.663 cv
440.511 123.347 441.413 118.454 445.209 110.446 cv
445.713 109.385 li
449.183 102.08 451.475 97.2549 447.694 95.293 cv
447.554 95.2188 447.4 95.1563 447.243 95.1025 cv
447.243 95.1025 li
cp
446.84 96.3135 mo
446.935 96.3447 447.024 96.3809 447.107 96.4238 cv
449.933 97.8916 447.583 102.459 444.057 109.899 cv
437.643 123.435 439.289 128.504 436.294 135.529 cv
434.479 139.787 430.748 140.856 427.617 139.812 cv
425.584 139.134 423.804 137.562 422.967 135.394 cv
420.934 130.125 421.563 118.026 429.549 107.876 cv
436.554 98.9756 444.149 95.415 446.84 96.3135 cv
446.84 96.3135 li
cp
.75021 .679683 .670222 .90164 cmyk
f
429.551 107.879 mo
436.805 98.6602 444.69 95.1709 447.104 96.4248 cv
447.373 96.5586 447.593 96.7324 447.767 96.9336 cv
444.655 96.916 437.294 100.659 430.164 115.413 cv
421.604 133.14 431.104 140.97 435.848 136.426 cv
432.564 142.399 424.992 140.65 422.965 135.395 cv
420.933 130.129 421.567 118.028 429.551 107.879 cv
cp
.101595 .727993 1 .0109865 cmyk
f
447.382 105.66 mo
446.695 107.687 445.818 109.859 444.94 111.977 cv
438.675 111.338 432.579 107.563 430.169 104.634 cv
431.812 103.042 433.736 101.382 435.727 99.9307 cv
438.309 102.263 442.697 104.74 447.382 105.66 cv
cp
0 0 0 0 cmyk
f
444.94 111.977 mo
444.056 114.118 443.157 116.193 442.442 118.016 cv
437.288 118.687 427.119 113.797 425.64 109.719 cv
426.412 108.56 428.065 106.667 430.169 104.634 cv
432.579 107.563 438.675 111.338 444.94 111.977 cv
cp
0 .970642 .96051 0 cmyk
f
447.645 96.6055 mo
449.444 97.8154 448.821 101.426 447.382 105.66 cv
442.697 104.74 438.309 102.263 435.727 99.9307 cv
440.066 96.7822 444.744 94.6611 447.645 96.6055 cv
cp
f
447.645 96.6055 mo
447.792 96.7002 447.915 96.8125 448.021 96.9473 cv
446.271 96.8018 442.851 97.998 438.829 102.229 cv
437.635 101.489 436.581 100.7 435.727 99.9307 cv
440.066 96.7822 444.744 94.6611 447.645 96.6055 cv
cp
.132235 1 1 .0386358 cmyk
f
438.829 102.229 mo
437.37 103.76 435.832 105.684 434.261 108.08 cv
432.504 106.955 431.074 105.734 430.169 104.634 cv
431.812 103.042 433.736 101.382 435.727 99.9307 cv
436.581 100.7 437.635 101.489 438.829 102.229 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
434.261 108.08 mo
433.051 109.935 431.827 112.069 430.595 114.526 cv
428.154 113.059 426.223 111.329 425.64 109.719 cv
426.412 108.56 428.065 106.667 430.169 104.634 cv
431.074 105.734 432.504 106.955 434.261 108.08 cv
cp
.132235 1 1 .0386358 cmyk
f
447.032 94.8955 mo
447.031 94.8955 li
439.68 92.4424 427.001 105.389 424.582 109.014 cv
424.357 109.351 424.306 109.773 424.444 110.153 cv
425.678 113.561 431.153 116.753 435.719 118.278 cv
437.584 118.9 440.294 119.58 442.603 119.279 cv
443.063 119.22 443.455 118.914 443.626 118.483 cv
444.116 117.236 444.691 115.868 445.299 114.424 cv
448.673 106.397 452.161 98.1006 448.355 95.5439 cv
447.948 95.2715 447.504 95.0527 447.032 94.8955 cv
447.032 94.8955 li
cp
446.627 96.1035 mo
446.986 96.2236 447.326 96.3896 447.645 96.6025 cv
451.183 98.9795 445.354 110.624 442.438 118.016 cv
440.722 118.238 438.447 117.845 436.123 117.068 cv
431.474 115.517 426.627 112.438 425.643 109.721 cv
428.188 105.907 440.307 93.9971 446.627 96.1035 cv
446.627 96.1035 li
cp
.75021 .679683 .670222 .90164 cmyk
f
498.357 33.9131 mo
498.356 33.9116 li
493.692 30.1323 486.136 25.2354 476.614 23.3652 cv
466.939 21.4644 457.61 23.1318 448.885 28.3203 cv
445.212 30.5049 441.879 33.5103 438.939 37.2822 cv
438.9 37.2256 438.862 37.1689 438.823 37.1138 cv
437.146 34.7007 434.993 32.4194 432.421 30.3354 cv
429.233 27.7529 425.47 25.5117 421.233 23.6763 cv
421.021 23.5845 li
420.394 23.3076 419.68 23.2954 419.042 23.5532 cv
418.404 23.8091 417.898 24.3125 417.637 24.9473 cv
414.519 32.5229 415.627 39.9409 418.229 45.5371 cv
418.086 45.54 417.944 45.543 417.802 45.5483 cv
407.042 45.8955 399.583 55.875 397.616 59.6909 cv
397.06 60.7715 397.346 62.085 398.276 62.8394 cv
398.325 62.8784 398.375 62.916 398.426 62.9521 cv
405.149 67.6299 413.047 70.5044 419.895 70.9971 cv
418.853 72.1924 417.918 73.481 417.147 74.9624 cv
414.784 79.5186 415.575 84.0225 419.267 87.0146 cv
423.622 90.5449 431.807 91.2002 437.469 86.9629 cv
439.238 89.4619 441.437 91.7822 444.036 93.8896 cv
446.029 95.5049 448.301 97.0273 450.786 98.416 cv
460.909 104.072 470.161 107.164 478.321 107.62 cv
478.875 108.786 479.688 109.815 480.727 110.657 cv
483.269 112.717 486.971 113.551 490.887 112.942 cv
495.274 112.262 499.095 109.888 501.367 106.433 cv
505.456 100.217 506.52 88.585 506.289 81.0625 cv
506.559 80.8711 506.793 80.6279 506.974 80.3413 cv
513.802 69.5269 514.527 55.9009 508.821 45.6274 cv
506.745 41.8901 502.932 37.6206 498.357 33.9131 cv
498.357 33.9131 li
cp
f
434.545 55.2153 mo
438.167 55.0278 441.947 46.0801 436.729 38.5688 cv
431.132 30.5103 421.473 26.5688 419.994 25.9185 cv
413.973 40.5493 425.027 55.7085 434.545 55.2153 cv
cp
0 .970642 .96051 0 cmyk
f
436.726 38.5688 mo
441.949 46.084 438.165 55.0317 434.547 55.2163 cv
425.151 55.6987 414.277 40.9565 419.765 26.5181 cv
418.966 32.6333 420.199 43.7202 430.356 44.1606 cv
434.289 44.3296 435.562 40.7217 435.749 37.2632 cv
436.089 37.6807 436.412 38.1182 436.726 38.5688 cv
cp
.132235 1 1 .0386358 cmyk
f
431.619 31.3257 mo
428.521 28.8154 424.857 26.6353 420.726 24.8467 cv
420.508 24.7515 li
420.194 24.6128 419.837 24.6069 419.519 24.7349 cv
419.2 24.8638 418.945 25.1157 418.816 25.4331 cv
414.315 36.3657 418.813 47.6387 425.581 53.1245 cv
428.447 55.4473 431.654 56.6416 434.61 56.4888 cv
436.397 56.396 438.086 54.9883 439.244 52.627 cv
440.925 49.2002 441.549 43.2715 437.777 37.8413 cv
436.168 35.5264 434.097 33.334 431.619 31.3257 cv
431.619 31.3257 li
cp
430.815 32.3164 mo
432.934 34.0327 435.021 36.1089 436.729 38.5688 cv
441.947 46.0801 438.167 55.0278 434.545 55.2153 cv
431.804 55.3579 428.936 54.2017 426.385 52.1338 cv
420.076 47.022 415.707 36.3359 419.994 25.9185 cv
421.021 26.3701 425.996 28.4106 430.815 32.3164 cv
430.815 32.3164 li
cp
.75021 .679683 .670222 .90164 cmyk
f
435.244 59.9766 mo
437.119 53.8374 427.929 47.7715 417.885 48.0962 cv
408.148 48.4106 401.475 57.772 399.884 60.8594 cv
412.593 69.7012 431.341 72.7593 435.244 59.9766 cv
cp
0 .970642 .96051 0 cmyk
f
435.244 59.9722 mo
431.337 72.7583 412.592 69.6987 399.887 60.8584 cv
400.273 60.0981 400.972 58.9678 401.936 57.6826 cv
409.934 61.4624 418.931 65.4272 424.914 60.7578 cv
429.534 57.1499 429.197 51.9751 427.334 49.6987 cv
432.859 51.8579 436.492 55.8955 435.244 59.9722 cv
cp
.132235 1 1 .0386358 cmyk
f
432.876 51.3906 mo
429.178 48.3926 423.417 46.6421 417.845 46.8218 cv
407.698 47.1489 400.621 56.6445 398.75 60.2754 cv
398.471 60.8154 398.614 61.4717 399.08 61.8491 cv
399.104 61.8687 399.129 61.8887 399.155 61.9063 cv
407.282 67.5601 419.44 71.894 428.282 68.834 cv
432.371 67.4185 435.2 64.4844 436.464 60.3491 cv
437.406 57.2661 436.099 54.0015 432.876 51.3906 cv
432.876 51.3906 li
cp
432.074 52.3813 mo
434.722 54.5269 436.078 57.2456 435.244 59.9766 cv
431.341 72.7593 412.593 69.7012 399.884 60.8594 cv
401.475 57.772 408.148 48.4106 417.885 48.0962 cv
423.46 47.9165 428.771 49.7041 432.074 52.3813 cv
432.074 52.3813 li
cp
.75021 .679683 .670222 .90164 cmyk
f
503.104 75.1748 mo
504.466 80.9697 504.022 97.7568 499.236 105.031 cv
493.563 113.658 477.473 112.123 480.342 101.214 cv
482.175 94.2412 488.72 89.9346 491.623 79.6895 cv
494.589 69.2236 501.653 69.0034 503.104 75.1748 cv
cp
.280522 .914061 1 .298253 cmyk
f
503.101 75.1729 mo
504.462 80.9707 504.021 97.7578 499.241 105.032 cv
495.919 110.076 489.032 111.647 484.467 109.896 cv
497.223 112.193 500.345 99.418 502.256 87.7051 cv
503.381 80.7939 503.224 75.6006 502.107 72.8481 cv
502.541 73.4731 502.883 74.2534 503.101 75.1729 cv
cp
.215396 .82446 1 .119539 cmyk
f
502.04 70.9092 mo
502.04 70.9092 li
500.688 69.814 499.005 69.5083 497.302 70.0474 cv
494.319 70.9927 491.803 74.3804 490.396 79.3418 cv
488.882 84.6904 486.275 88.4443 483.976 91.7568 cv
481.934 94.6992 480.006 97.4785 479.108 100.89 cv
478.153 104.52 479.01 107.637 481.517 109.67 cv
483.747 111.477 487.173 112.23 490.685 111.685 cv
494.721 111.059 498.227 108.889 500.302 105.732 cv
505.479 97.8604 505.651 80.4414 504.344 74.8833 cv
503.945 73.1816 503.147 71.8066 502.04 70.9092 cv
502.04 70.9092 li
cp
501.236 71.8994 mo
502.092 72.5918 502.757 73.7012 503.104 75.1748 cv
504.466 80.9697 504.022 97.7568 499.236 105.031 cv
495.34 110.957 486.525 112.088 482.319 108.68 cv
480.403 107.126 479.443 104.629 480.342 101.214 cv
482.175 94.2412 488.72 89.9346 491.623 79.6895 cv
493.88 71.7222 498.513 69.6929 501.236 71.8994 cv
501.236 71.8994 li
cp
.75021 .679683 .670222 .90164 cmyk
f
437.66 54.1836 mo
434.861 62.4863 428.12 82.8311 452.029 96.1904 cv
475.939 109.551 490.5 105.76 496.583 98.9287 cv
502.264 92.5498 499.585 89.6504 505.477 72.7666 cv
513.962 48.4604 493.615 33.0654 476.211 29.9023 cv
457.104 26.4287 443.309 37.4263 437.66 54.1836 cv
cp
.0250248 .567285 .998169 0 cmyk
f
502.55 46.0166 mo
492.629 36.4023 477.639 33.0278 463.604 49.104 cv
454.14 59.9575 443.537 85.7842 460.711 100.491 cv
457.965 99.3164 455.072 97.8906 452.029 96.1904 cv
428.12 82.8311 434.861 62.4844 437.66 54.1836 cv
443.309 37.4263 457.102 26.4277 476.211 29.9023 cv
485.908 31.6665 496.529 37.2324 502.55 46.0166 cv
cp
.101595 .727993 1 .0109865 cmyk
f
496.652 37.8486 mo
490.983 33.2539 483.805 29.9858 476.439 28.6475 cv
458.12 25.3174 442.799 34.9468 436.452 53.7764 cv
433.891 61.3745 427.894 79.1685 444.816 92.8828 cv
446.759 94.458 448.977 95.9453 451.407 97.3037 cv
462.49 103.496 472.451 106.559 481.014 106.406 cv
487.972 106.282 493.839 103.928 497.536 99.7764 cv
501.016 95.8701 501.59 93.0488 502.545 88.377 cv
503.238 84.9805 504.189 80.3267 506.682 73.1865 cv
513.123 54.7314 503.163 43.1245 496.652 37.8486 cv
496.652 37.8486 li
cp
495.85 38.8394 mo
505.024 46.2749 510.686 57.8428 505.477 72.7666 cv
499.585 89.6504 502.264 92.5498 496.583 98.9287 cv
490.5 105.76 475.939 109.551 452.029 96.1904 cv
449.584 94.8242 447.46 93.3848 445.619 91.8916 cv
429.458 78.7949 435.147 61.6367 437.66 54.1836 cv
443.309 37.4263 457.104 26.4287 476.211 29.9023 cv
482.928 31.123 490.082 34.1646 495.85 38.8394 cv
495.85 38.8394 li
cp
.75021 .679683 .670222 .90164 cmyk
f
447.341 55.7383 mo
447.396 61.6919 443.272 77.9697 437.007 84.0146 cv
429.574 91.1836 414.215 86.1494 419.411 76.1377 cv
422.732 69.7388 430.063 66.9761 435.148 57.6191 cv
440.344 48.0615 447.281 49.3994 447.341 55.7383 cv
cp
.280522 .914061 1 .298253 cmyk
f
447.341 55.7383 mo
447.396 61.6919 443.274 77.9683 437.007 84.0146 cv
433.395 87.499 427.928 88.1016 423.837 86.6572 cv
434.295 88.9941 439.33 77.9219 443.161 67.5371 cv
446.171 59.396 446.747 53.4736 445.22 51.2402 cv
446.501 51.9951 447.319 53.5771 447.341 55.7383 cv
cp
.215396 .82446 1 .119539 cmyk
f
446.444 50.5347 mo
446.444 50.5347 li
445.272 49.5854 443.743 49.2388 442.137 49.5581 cv
439.203 50.1401 436.323 52.7876 434.028 57.0103 cv
431.375 61.894 428.007 64.9849 425.036 67.7109 cv
422.397 70.1323 419.905 72.4199 418.28 75.5508 cv
416.216 79.5278 416.885 83.4424 420.069 86.0234 cv
424.359 89.501 432.733 89.9082 437.892 84.9326 cv
444.673 78.3906 448.669 61.4365 448.615 55.7266 cv
448.596 53.4961 447.824 51.6528 446.444 50.5347 cv
446.444 50.5347 li
cp
445.641 51.5249 mo
446.677 52.3638 447.323 53.8228 447.341 55.7383 cv
447.396 61.6919 443.272 77.9697 437.007 84.0146 cv
432.416 88.4443 424.799 88.2148 420.871 85.0332 cv
418.442 83.0635 417.425 79.9648 419.411 76.1377 cv
422.732 69.7388 430.063 66.9761 435.148 57.6191 cv
438.773 50.9502 443.248 49.5859 445.641 51.5249 cv
445.641 51.5249 li
cp
.75021 .679683 .670222 .90164 cmyk
f
430.692 62.6689 mo
436.31 60.4863 482.972 55.9863 504.819 78.98 cv
510.606 69.8125 512.302 57.146 506.592 46.8657 cv
500.833 36.4971 475.884 15.2314 450.188 30.5122 cv
436.664 38.5557 431.57 56.6348 430.692 62.6689 cv
cp
0 .970642 .96051 0 cmyk
f
508.636 70.6108 mo
507.732 73.5879 506.435 76.4189 504.816 78.9819 cv
502.222 76.2437 499.274 73.8994 496.085 71.8945 cv
501.255 73.2388 505.382 72.8975 508.636 70.6108 cv
cp
.132235 1 1 .0386358 cmyk
f
466.592 42.0293 mo
463.327 52.7529 470.682 59.6216 479.834 64.7852 cv
458.369 58.5059 434.6 61.145 430.692 62.6724 cv
431.571 56.6343 436.663 38.5513 450.192 30.5117 cv
462.873 22.9648 475.368 24.3276 485.472 28.8843 cv
478.029 28.6841 469.482 32.5342 466.592 42.0293 cv
cp
f
497.556 34.9038 mo
493.004 31.2153 485.634 26.4375 476.369 24.6162 cv
467.013 22.7778 457.984 24.3926 449.537 29.4165 cv
432.987 39.2583 429.465 62.2539 429.431 62.4849 cv
429.365 62.9302 429.539 63.3765 429.89 63.6592 cv
429.892 63.6616 429.895 63.6646 429.897 63.6665 cv
430.253 63.9482 430.73 64.022 431.153 63.8569 cv
436.111 61.9307 477.151 57.7427 499.938 76.2095 cv
501.351 77.3545 502.682 78.5825 503.895 79.8584 cv
503.933 79.8984 503.974 79.9355 504.016 79.9702 cv
504.274 80.1802 504.606 80.2817 504.943 80.2485 cv
505.335 80.21 505.687 79.9927 505.896 79.6602 cv
512.479 69.2349 513.189 56.1187 507.707 46.2471 cv
505.736 42.6987 501.941 38.458 497.556 34.9038 cv
497.556 34.9038 li
cp
496.752 35.894 mo
501.422 39.6782 504.867 43.7622 506.592 46.8657 cv
512.302 57.146 510.606 69.8125 504.819 78.98 cv
503.537 77.6323 502.178 76.3833 500.74 75.2188 cv
477.651 56.5063 435.98 60.6143 430.692 62.6689 cv
431.57 56.6348 436.664 38.5557 450.188 30.5122 cv
468.191 19.8062 485.824 27.0381 496.752 35.894 cv
496.752 35.894 li
cp
.75021 .679683 .670222 .90164 cmyk
f
491.448 95.5332 mo
489.924 102.338 481.059 106.143 471.645 104.035 cv
462.231 101.928 455.834 94.7031 457.358 87.8994 cv
458.883 81.0938 467.749 77.2881 477.163 79.3955 cv
486.577 81.5029 492.972 88.7285 491.448 95.5332 cv
cp
.00985733 .0806592 .600977 0 cmyk
f
485.832 84.4561 mo
485.086 86.3477 482.209 86.9883 479.407 85.8818 cv
476.604 84.7764 474.938 82.3477 475.684 80.4551 cv
476.429 78.564 479.306 77.9238 482.108 79.0293 cv
484.912 80.1338 486.577 82.5635 485.832 84.4561 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
485.142 84.1846 mo
485.213 84.001 485.251 83.8096 485.272 83.6162 cv
484.193 84.4414 482.322 84.5859 480.486 83.8623 cv
478.336 83.0137 476.968 81.2666 477.138 79.7412 cv
476.795 80.0034 476.53 80.3335 476.374 80.7275 cv
475.729 82.3623 477.17 84.4609 479.591 85.416 cv
482.012 86.3701 484.497 85.8174 485.142 84.1846 cv
cp
.636561 .700954 .654597 .746487 cmyk
f
461.851 64.9902 mo
464.633 64.6157 467.826 64.125 471.369 61.9751 cv
473.737 60.5371 474.743 62.5913 472.763 64.3608 cv
471.173 65.7813 466.338 66.8418 462.143 66.0508 cv
460.354 65.7129 460.704 65.144 461.851 64.9902 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
500.591 77.3828 mo
498.601 75.7427 496.354 73.811 494.793 70.4067 cv
493.751 68.1309 491.76 69.2573 492.303 71.606 cv
492.738 73.4917 495.957 76.665 499.744 78.0752 cv
501.359 78.6758 501.412 78.0586 500.591 77.3828 cv
cp
f
484.276 82.8623 mo
483.933 83.3857 483.027 83.3965 482.254 82.8877 cv
481.48 82.3799 481.132 81.5449 481.474 81.0234 cv
481.817 80.501 482.723 80.4883 483.496 80.9971 cv
484.27 81.5049 484.619 82.3398 484.276 82.8623 cv
cp
0 0 0 0 cmyk
f
480.226 96.6318 mo
482.492 88.416 472.39 86.1045 465.775 92.0986 cv
461.243 96.207 469.351 98.7227 471.301 99.1816 cv
473.709 99.749 478.9 101.435 480.226 96.6318 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
468.309 91.6816 mo
470.793 92.0146 475.706 95.124 475.608 98.8594 cv
474.204 98.916 472.718 98.4863 471.761 98.2578 cv
470.168 97.8848 463.543 95.8467 467.245 92.5264 cv
467.587 92.2178 467.943 91.9414 468.309 91.6816 cv
cp
0 .970642 .96051 0 cmyk
f
479.182 93.2158 mo
477.013 93.5322 472.637 91.4219 470.997 90.3096 cv
474.699 89.042 478.435 90.1641 479.182 93.2158 cv
cp
0 0 0 0 cmyk
f
466.932 77.8877 mo
466.02 77.8877 465.106 77.7266 464.211 77.3999 cv
461.495 76.4116 459.717 74.2104 459.423 72.6416 cv
459.293 71.9497 459.749 71.2832 460.441 71.1538 cv
461.136 71.0225 461.8 71.4805 461.929 72.1719 cv
462.05 72.8208 463.209 74.3218 465.083 75.0039 cv
466.465 75.5063 468.623 75.687 471.058 73.688 cv
471.604 73.2407 472.406 73.3208 472.853 73.8647 cv
473.299 74.4092 473.221 75.2129 472.677 75.6597 cv
470.881 77.1328 468.906 77.8877 466.932 77.8877 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
494.801 86.7236 mo
493.747 86.7236 492.691 86.4404 491.675 85.8721 cv
489.319 84.5576 487.626 81.9082 487.736 79.7104 cv
487.771 79.0068 488.38 78.46 489.072 78.5005 cv
489.776 78.5352 490.317 79.1343 490.282 79.8374 cv
490.229 80.9131 491.298 82.7412 492.917 83.6465 cv
494.307 84.4209 495.703 84.3369 497.07 83.3984 cv
497.65 82.999 498.444 83.1465 498.843 83.7266 cv
499.242 84.3066 499.095 85.1006 498.515 85.499 cv
497.33 86.3135 496.067 86.7236 494.801 86.7236 cv
cp
f
493.797 55.4395 mo
495.855 55.8345 498.527 54.647 498.698 50.269 cv
498.869 45.8921 494.263 40.9927 490.319 39.3628 cv
486.376 37.7339 480.978 38.0806 478.509 41.853 cv
476.307 45.2178 477.793 48.2979 480.637 50.374 cv
479.657 52.1304 479.389 53.2393 479.779 53.4399 cv
480.439 53.7813 483.214 54.7632 483.753 54.9546 cv
484.165 54.3262 485.048 52.8389 485.048 52.8389 cv
484.742 55.1167 li
485.451 55.5986 488.717 56.6323 489.097 56.6831 cv
489.147 56.3032 489.622 54.3154 489.622 54.3154 cv
490.019 56.9751 li
490.797 57.3765 493.561 58.2031 493.561 58.2031 cv
494.291 57.8545 493.797 55.4395 493.797 55.4395 cv
cp
0 0 0 0 cmyk
f
488.07 46.957 mo
487.646 48.2695 486.307 49.0117 485.078 48.6147 cv
483.85 48.2188 483.197 46.8335 483.621 45.521 cv
484.046 44.2085 485.385 43.4663 486.612 43.8628 cv
487.842 44.2593 488.494 45.6445 488.07 46.957 cv
cp
0 .970642 .96051 0 cmyk
f
494.516 48.9629 mo
494.399 50.3354 493.336 51.3657 492.141 51.2637 cv
490.946 51.1616 490.073 49.9648 490.191 48.5908 cv
490.31 47.2173 491.373 46.186 492.568 46.2886 cv
493.763 46.3911 494.635 47.5874 494.516 48.9629 cv
cp
f
696.369 136.608 mo
693.98 138.468 690.926 139.159 687.995 138.507 cv
682.332 137.245 674.372 131.297 669.505 122.224 cv
668.986 122.208 668.506 122.145 668.057 122.036 cv
666.807 121.729 li
666.312 120.538 li
664.802 116.919 660.274 98.0762 667.397 92.5322 cv
667.88 92.1582 668.409 91.8496 668.969 91.6182 cv
674.176 89.4668 679.211 97.0605 684.537 105.101 cv
685.391 106.387 686.209 107.622 686.973 108.721 cv
687.833 109.957 li
687.833 109.957 687.125 111.386 687.105 111.425 cv
688.984 113.671 690.658 115.294 692.286 116.874 cv
694.384 118.908 696.364 120.829 698.182 123.602 cv
701.642 128.878 699.668 134.042 696.371 136.607 cv
696.369 136.608 696.369 136.608 696.369 136.608 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
669.496 94.3242 mo
667.11 95.6416 665.645 104.14 669.295 115.286 cv
673.317 127.558 683.038 134.788 688.55 136.017 cv
694.313 137.3 700.234 131.386 696.051 124.999 cv
691.862 118.612 686.73 117.173 679.022 104.332 cv
674.782 97.2715 672.283 92.7842 669.496 94.3242 cv
cp
.0250248 .567285 .998169 0 cmyk
f
668.472 93.4775 mo
665.536 95.7607 664.553 104.9 668.083 115.681 cv
672.248 128.391 682.396 135.951 688.272 137.262 cv
690.832 137.832 693.499 137.227 695.588 135.602 cv
698.533 133.311 700.149 128.928 697.116 124.301 cv
695.376 121.646 693.533 119.859 691.398 117.791 cv
688.248 114.736 684.676 111.273 680.113 103.677 cv
679.51 102.669 li
675.354 95.7305 672.609 91.1484 668.879 93.207 cv
668.739 93.2842 668.603 93.377 668.472 93.4775 cv
668.472 93.4775 li
cp
669.256 94.4844 mo
669.334 94.4229 669.415 94.3682 669.496 94.3242 cv
672.283 92.7842 674.782 97.2715 679.022 104.332 cv
686.73 117.173 691.862 118.612 696.051 124.999 cv
698.587 128.871 697.41 132.568 694.806 134.595 cv
693.112 135.911 690.819 136.522 688.55 136.017 cv
683.038 134.788 673.317 127.558 669.295 115.286 cv
665.77 104.521 667.016 96.2246 669.256 94.4844 cv
669.256 94.4844 li
cp
.75021 .679683 .670222 .90164 cmyk
f
669.299 115.284 mo
665.646 104.136 667.114 95.6396 669.494 94.3262 cv
669.755 94.1768 670.022 94.0889 670.286 94.0557 cv
668.545 96.6377 667.581 104.84 675.909 118.95 cv
685.917 135.901 697.701 132.335 696.549 125.867 cv
699.699 131.912 694.048 137.245 688.55 136.02 cv
683.041 134.791 673.32 127.556 669.299 115.284 cv
cp
.101595 .727993 1 .0109865 cmyk
f
677.334 99.2139 mo
678.642 100.909 679.964 102.844 681.24 104.747 cv
677.234 109.606 670.714 112.59 666.94 112.972 cv
666.525 110.724 666.211 108.2 666.107 105.739 cv
669.478 104.882 673.972 102.604 677.334 99.2139 cv
cp
0 0 0 0 cmyk
f
681.24 104.747 mo
682.531 106.671 683.761 108.568 684.881 110.174 cv
682.583 114.836 672.876 120.59 668.661 119.561 cv
668.126 118.275 667.467 115.849 666.94 112.972 cv
670.714 112.59 677.234 109.606 681.24 104.747 cv
cp
0 .970642 .96051 0 cmyk
f
669.944 93.9756 mo
671.95 93.1484 674.609 95.6689 677.334 99.2139 cv
673.972 102.604 669.478 104.882 666.107 105.739 cv
665.891 100.383 666.719 95.3125 669.944 93.9756 cv
cp
f
669.944 93.9756 mo
670.105 93.9063 670.269 93.8652 670.438 93.8516 cv
669.347 95.2295 668.446 98.7393 669.74 104.431 cv
668.462 105.016 667.22 105.454 666.107 105.739 cv
665.891 100.383 666.719 95.3125 669.944 93.9756 cv
cp
.132235 1 1 .0386358 cmyk
f
669.74 104.431 mo
670.204 106.493 670.953 108.841 672.076 111.476 cv
670.167 112.315 668.358 112.829 666.94 112.972 cv
666.525 110.724 666.211 108.2 666.107 105.739 cv
667.22 105.454 668.462 105.016 669.74 104.431 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
672.076 111.476 mo
672.95 113.512 674.048 115.714 675.409 118.102 cv
672.836 119.318 670.324 119.969 668.661 119.561 cv
668.126 118.275 667.467 115.849 666.94 112.972 cv
668.358 112.829 670.167 112.315 672.076 111.476 cv
cp
.132235 1 1 .0386358 cmyk
f
668.183 93.5381 mo
668.183 93.5391 li
662.064 98.2988 665.812 116.028 667.487 120.05 cv
667.644 120.423 667.967 120.701 668.36 120.797 cv
671.881 121.657 677.573 118.87 681.373 115.917 cv
682.925 114.708 684.992 112.83 686.022 110.741 cv
686.229 110.325 686.189 109.83 685.927 109.449 cv
685.161 108.348 684.341 107.113 683.475 105.805 cv
678.665 98.5479 673.693 91.0469 669.456 92.7959 cv
669.002 92.9854 668.575 93.2344 668.183 93.5381 cv
668.183 93.5381 li
cp
668.963 94.5459 mo
669.264 94.3115 669.588 94.1211 669.942 93.9746 cv
673.882 92.3477 680.344 103.653 684.879 110.178 cv
684.114 111.729 682.523 113.405 680.589 114.909 cv
676.721 117.919 671.474 120.246 668.664 119.559 cv
666.899 115.326 663.705 98.6377 668.963 94.5459 cv
668.963 94.5459 li
cp
.75021 .679683 .670222 .90164 cmyk
f
691.612 140.708 mo
693.196 137.594 li
718.14 153.347 li
718.445 153.54 718.805 153.631 719.166 153.604 cv
732.297 152.684 li
732.895 152.641 733.423 152.29 733.693 151.758 cv
733.963 151.225 733.936 150.591 733.618 150.084 cv
726.625 138.932 li
726.433 138.625 726.148 138.388 725.812 138.254 cv
698.386 127.385 li
699.969 124.271 li
700.395 123.436 700.062 122.411 699.224 121.986 cv
694.696 119.685 li
693.859 119.259 692.836 119.592 692.409 120.429 cv
690.469 124.247 li
677.681 119.179 li
676.864 118.855 675.936 119.206 675.539 119.989 cv
674.648 121.74 li
673.758 123.492 li
673.361 124.275 673.623 125.231 674.365 125.7 cv
685.996 133.046 li
684.055 136.864 li
683.63 137.701 683.963 138.724 684.8 139.15 cv
689.328 141.453 li
690.165 141.877 691.188 141.545 691.612 140.708 cv
cp
f
676.163 122.511 mo
675.273 124.263 li
719.046 151.909 li
732.179 150.987 li
725.185 139.835 li
677.054 120.76 li
676.163 122.511 li
cp
.280522 .914061 1 .298253 cmyk
f
730.167 149.964 mo
717.388 150.861 li
719.046 151.909 li
732.179 150.987 li
725.185 139.835 li
723.361 139.111 li
730.167 149.964 li
cp
.215396 .82446 1 .119539 cmyk
f
685.569 137.635 mo
693.926 121.199 li
698.454 123.502 li
690.099 139.938 li
685.569 137.635 li
cp
f
689.427 139.596 mo
697.782 123.161 li
698.454 123.502 li
690.099 139.938 li
689.427 139.596 li
cp
.144869 .807401 1 .0376593 cmyk
f
687.462 132.664 mo
687.501 132.59 687.562 132.524 687.642 132.482 cv
696.13 127.978 li
696.338 127.867 696.595 127.946 696.704 128.153 cv
696.814 128.36 696.736 128.618 696.528 128.729 cv
688.042 133.233 li
687.833 133.344 687.575 133.266 687.466 133.058 cv
687.399 132.93 687.402 132.784 687.462 132.664 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
691.026 125.657 mo
691.086 125.537 691.203 125.449 691.345 125.428 cv
691.576 125.396 691.791 125.558 691.825 125.788 cv
693.188 135.302 li
693.22 135.535 693.059 135.749 692.826 135.782 cv
692.594 135.815 692.38 135.654 692.345 135.422 cv
690.982 125.909 li
690.971 125.819 690.987 125.731 691.026 125.657 cv
cp
f
684.879 127.821 mo
682.971 127.206 682.041 124.799 682.801 122.444 cv
683.561 120.09 685.724 118.68 687.63 119.295 cv
689.539 119.911 690.469 122.318 689.709 124.673 cv
688.948 127.028 686.787 128.438 684.879 127.821 cv
cp
f
685.293 126.542 mo
683.729 126.037 683.038 123.841 683.75 121.634 cv
684.462 119.428 686.307 118.049 687.869 118.553 cv
689.434 119.058 690.125 121.255 689.413 123.46 cv
688.7 125.667 686.854 127.046 685.293 126.542 cv
cp
.0250248 .567285 .998169 0 cmyk
f
617.319 148.528 mo
615.536 148.414 613.724 148.152 611.929 147.748 cv
606.587 146.548 602.628 143.39 600.479 138.616 cv
596.81 130.468 599.263 119.865 601.391 116 cv
602.995 113.085 605.193 111.497 607.421 111.638 cv
610.082 111.808 611.9 114.082 612.823 118.399 cv
614.127 124.494 619.718 126.113 624.177 126.396 cv
625.859 126.503 627.646 126.422 629.34 126.163 cv
633.356 125.549 635.896 125.34 637.834 125.463 cv
640.861 125.655 642.84 126.796 643.711 128.855 cv
644.831 131.504 644.144 134.896 641.825 138.163 cv
638.091 143.426 629.432 149.298 617.32 148.528 cv
617.32 148.528 617.32 148.528 617.319 148.528 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
641.363 129.851 mo
640.394 127.559 636.606 127.631 629.726 128.684 cv
622.683 129.761 612.346 128.357 610.33 118.934 cv
608.854 112.025 605.55 113.731 603.624 117.229 cv
600.777 122.401 597.354 141.856 612.488 145.261 cv
630.962 149.417 643.954 135.977 641.363 129.851 cv
cp
.101595 .727993 1 .0109865 cmyk
f
603.614 131.853 mo
602.67 131.307 602.213 134.327 602.468 136.753 cv
599.748 129.698 601.804 120.547 603.624 117.229 cv
605.55 113.731 608.854 112.025 610.33 118.934 cv
611.137 122.714 613.279 125.202 616.016 126.763 cv
615.462 127.981 612.369 126.105 611.618 126.536 cv
610.317 127.296 612.766 130.866 611.466 131.21 cv
610.165 131.554 608.054 129.009 607.287 129.957 cv
606.142 131.357 607.668 135.092 606.395 135.01 cv
605.123 134.931 604.847 132.569 603.614 131.853 cv
cp
.00985733 .0806592 .600977 0 cmyk
f
639.034 132.176 mo
642.294 128.218 645.916 124.925 648.723 123.364 cv
652.714 121.143 659.314 125.021 673.94 138.176 cv
674.654 138.816 li
680.462 144.019 680.28 150.139 677.522 153.895 cv
677.392 154.072 677.259 154.243 677.124 154.407 cv
674.093 158.088 669.781 158.85 664.313 156.669 cv
662.28 155.86 660 154.629 657.588 153.326 cv
654.022 151.404 648.637 148.498 646.669 148.976 cv
641.896 150.134 635.61 149.798 633.596 145.037 cv
632.149 141.619 635.755 136.156 639.034 132.176 cv
639.034 132.176 li
cp
.75021 .679683 .670222 .90164 cmyk
f
675.444 152.415 mo
677.714 149.322 677.045 144.79 672.767 140.959 cv
668.49 137.129 653.727 123.548 649.792 125.735 cv
644.205 128.842 634.673 140.414 636.075 143.727 cv
637.476 147.039 642.414 147.267 646.33 146.315 cv
650.698 145.255 659.711 151.79 665.519 154.104 cv
669.87 155.84 673.188 155.488 675.444 152.415 cv
cp
.101595 .727993 1 .0109865 cmyk
f
646.33 146.315 mo
644.401 146.785 642.213 146.97 640.334 146.63 cv
638.504 140.067 650.703 132.184 651.31 135.927 cv
651.82 139.061 649.234 144.021 646.569 146.266 cv
646.487 146.286 646.412 146.297 646.33 146.315 cv
cp
.0250248 .567285 .998169 0 cmyk
f
665.519 154.104 mo
662.127 152.754 657.637 149.956 653.622 148.08 cv
654.168 141.894 660.207 135.178 663.704 133.111 cv
667.513 136.188 671.017 139.395 672.767 140.959 cv
677.045 144.79 677.714 149.325 675.444 152.415 cv
673.188 155.488 669.87 155.84 665.519 154.104 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
657.998 137.472 mo
659.904 135.159 662.034 133.295 663.792 132.277 cv
664.135 132.08 664.54 132.187 664.696 132.518 cv
664.853 132.847 664.701 133.276 664.361 133.475 cv
660.968 135.437 654.71 142.119 654.315 148.445 cv
654.291 148.831 653.966 149.156 653.59 149.175 cv
653.214 149.192 652.929 148.896 652.953 148.512 cv
653.191 144.664 655.386 140.645 657.998 137.472 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
619.353 140.208 mo
621.803 135.725 624.735 131.827 627.192 129.777 cv
630.69 126.86 637.897 129.434 654.734 139.607 cv
655.556 140.104 li
662.238 144.121 663.216 150.15 661.222 154.343 cv
661.126 154.541 661.029 154.732 660.927 154.918 cv
658.648 159.087 654.563 160.633 648.786 159.513 cv
646.638 159.096 644.169 158.313 641.556 157.486 cv
637.694 156.264 631.859 154.416 630.021 155.249 cv
625.559 157.27 619.327 158.107 616.451 153.819 cv
614.386 150.736 616.889 144.717 619.353 140.208 cv
619.352 140.208 619.353 140.208 619.353 140.208 cv
cp
f
658.902 153.277 mo
660.544 149.826 659.029 145.513 654.109 142.552 cv
649.188 139.592 632.136 129.028 628.691 131.902 cv
623.795 135.982 616.634 149.088 618.636 152.073 cv
620.636 155.059 625.523 154.365 629.187 152.707 cv
633.27 150.856 643.349 155.586 649.483 156.775 cv
654.081 157.668 657.27 156.708 658.902 153.277 cv
cp
.101595 .727993 1 .0109865 cmyk
f
629.187 152.707 mo
627.382 153.525 625.27 154.111 623.362 154.127 cv
620.326 148.038 630.803 138.049 632.106 141.604 cv
633.2 144.58 631.6 149.92 629.41 152.613 cv
629.334 152.647 629.263 152.673 629.187 152.707 cv
cp
.0250248 .567285 .998169 0 cmyk
f
649.483 156.775 mo
645.9 156.082 640.967 154.173 636.673 153.081 cv
636.039 146.92 640.694 139.22 643.733 136.546 cv
648.053 138.854 652.096 141.346 654.109 142.552 cv
659.029 145.513 660.545 149.83 658.902 153.277 cv
657.27 156.708 654.081 157.668 649.483 156.775 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
638.96 141.877 mo
640.393 139.256 642.13 137.037 643.662 135.713 cv
643.961 135.455 644.379 135.485 644.596 135.779 cv
644.812 136.073 644.743 136.521 644.446 136.78 cv
641.489 139.332 636.612 147.04 637.423 153.31 cv
637.471 153.692 637.215 154.073 636.849 154.159 cv
636.484 154.248 636.146 154.009 636.099 153.629 cv
635.605 149.813 636.996 145.471 638.96 141.877 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
650.372 147.444 mo
633.697 145.008 630.317 134.992 630.418 127.019 cv
630.748 100.833 647.158 84.3291 655.984 84.0674 cv
656.824 84.043 657.676 84.0918 658.515 84.2139 cv
673.545 86.4111 684.561 112.637 683.513 127.942 cv
682.501 142.714 670.144 147.987 658.915 147.997 cv
655.729 148.001 652.935 147.82 650.373 147.444 cv
650.372 147.444 li
cp
f
680.966 127.771 mo
680.058 141.083 668.649 145.437 658.915 145.447 cv
650.341 145.457 632.751 144.201 632.965 127.052 cv
632.972 126.177 633.003 125.321 633.049 124.479 cv
639.658 128.922 666.029 135.742 680.846 122.299 cv
681.034 124.242 681.082 126.088 680.966 127.771 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
678.677 111.871 mo
679.778 115.441 680.519 119.013 680.846 122.299 cv
666.029 135.742 639.658 128.922 633.049 124.479 cv
633.25 120.744 633.784 117.267 634.573 114.048 cv
644.503 117.406 664.845 120.106 678.677 111.871 cv
cp
.132235 1 1 .0386358 cmyk
f
674.178 101.104 mo
676.012 104.48 677.533 108.174 678.677 111.871 cv
664.845 120.106 644.503 117.406 634.573 114.048 cv
635.667 109.561 637.244 105.591 639.085 102.166 cv
648.758 104.577 662.869 105.771 674.178 101.104 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
666.757 91.2207 mo
669.569 93.7803 672.079 97.2393 674.178 101.104 cv
662.869 105.771 648.758 104.577 639.085 102.166 cv
641.204 98.1895 643.68 94.9434 646.138 92.4678 cv
652.223 93.7432 659.855 93.9404 666.757 91.2207 cv
cp
.132235 1 1 .0386358 cmyk
f
656.057 86.6162 mo
659.913 86.5 663.536 88.2764 666.757 91.2207 cv
659.855 93.9404 652.223 93.7432 646.138 92.4678 cv
649.895 88.6865 653.623 86.6895 656.057 86.6162 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
680.846 122.299 mo
681.034 124.242 681.082 126.088 680.966 127.771 cv
680.151 139.687 670.927 144.429 662.014 145.291 cv
652.23 144.755 648.056 137.762 647.132 129.276 cv
657.778 131.186 671.575 130.711 680.846 122.299 cv
cp
.574731 .695186 .633936 .604669 cmyk
f
680.846 122.299 mo
671.575 130.711 657.778 131.186 647.132 129.276 cv
646.683 125.293 646.962 120.97 647.72 116.847 cv
657.631 117.978 669.568 117.291 678.677 111.871 cv
679.778 115.441 680.519 119.013 680.846 122.299 cv
cp
0 .970642 .96051 0 cmyk
f
678.677 111.871 mo
669.568 117.291 657.631 117.978 647.72 116.847 cv
648.576 112.102 650.058 107.61 651.784 104.143 cv
659.187 104.633 667.212 103.976 674.178 101.104 cv
676.012 104.48 677.533 108.174 678.677 111.871 cv
cp
0 0 0 0 cmyk
f
674.178 101.104 mo
667.212 103.976 659.187 104.633 651.784 104.143 cv
652.949 101.813 654.22 99.9463 655.499 98.7754 cv
661.599 93.1816 667.132 93.6465 670.736 95.6689 cv
671.979 97.3447 673.129 99.1709 674.178 101.104 cv
cp
0 .970642 .96051 0 cmyk
f
649.013 130.247 mo
641.313 129.113 634.917 126.664 632.2 124.799 cv
631.905 124.594 631.834 124.186 632.04 123.882 cv
632.246 123.58 632.654 123.5 632.949 123.703 cv
639.002 127.859 665.938 135.312 680.873 121.479 cv
681.137 121.235 681.546 121.256 681.788 121.523 cv
682.03 121.791 682.014 122.205 681.751 122.449 cv
672.681 130.859 659.637 131.811 649.013 130.247 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
622.859 141.529 mo
619.987 140.571 617.719 138.413 616.637 135.612 cv
614.549 130.199 615.085 120.278 619.94 111.196 cv
619.667 110.757 619.451 110.322 619.295 109.889 cv
618.856 108.677 li
619.572 107.604 li
621.748 104.342 634.921 90.1299 643.484 92.9854 cv
644.064 93.1787 644.613 93.4473 645.116 93.7861 cv
649.793 96.9268 646.263 105.326 642.524 114.218 cv
641.927 115.64 641.353 117.006 640.86 118.251 cv
640.309 119.652 li
640.309 119.652 638.729 119.854 638.684 119.859 cv
637.856 122.669 637.433 124.962 637.021 127.192 cv
636.49 130.066 635.989 132.779 634.689 135.828 cv
632.214 141.634 626.823 142.854 622.86 141.53 cv
622.86 141.529 622.86 141.529 622.859 141.529 cv
cp
f
643.157 95.7246 mo
640.737 94.4688 632.852 97.96 625.6 107.176 cv
617.613 117.326 616.983 129.426 619.018 134.693 cv
621.143 140.2 629.349 141.854 632.344 134.829 cv
635.339 127.805 633.693 122.734 640.106 109.199 cv
643.633 101.759 645.982 97.1914 643.157 95.7246 cv
cp
.0250248 .567285 .998169 0 cmyk
f
643.294 94.4023 mo
639.765 93.2236 631.613 97.4727 624.598 106.388 cv
616.327 116.898 615.66 129.536 617.827 135.153 cv
618.771 137.6 620.752 139.483 623.264 140.321 cv
626.804 141.503 631.347 140.418 633.518 135.329 cv
634.762 132.41 635.228 129.885 635.766 126.963 cv
636.562 122.646 637.464 117.755 641.259 109.746 cv
641.763 108.685 li
645.233 101.38 647.524 96.5547 643.744 94.5928 cv
643.604 94.5186 643.451 94.4561 643.294 94.4023 cv
643.294 94.4023 li
cp
642.89 95.6133 mo
642.985 95.6445 643.075 95.6807 643.157 95.7246 cv
645.982 97.1914 643.633 101.759 640.106 109.199 cv
633.693 122.734 635.339 127.805 632.344 134.829 cv
630.528 139.088 626.797 140.156 623.668 139.111 cv
621.634 138.434 619.853 136.861 619.018 134.693 cv
616.983 129.426 617.613 117.326 625.6 107.176 cv
632.604 98.2754 640.199 94.7148 642.89 95.6133 cv
642.89 95.6133 li
cp
.75021 .679683 .670222 .90164 cmyk
f
625.602 107.18 mo
632.854 97.96 640.74 94.4707 643.153 95.7246 cv
643.424 95.8584 643.643 96.0322 643.816 96.2334 cv
640.704 96.2158 633.343 99.959 626.214 114.713 cv
617.653 132.439 627.154 140.27 631.898 135.726 cv
628.613 141.699 621.043 139.951 619.016 134.694 cv
616.983 129.429 617.617 117.328 625.602 107.18 cv
cp
.101595 .727993 1 .0109865 cmyk
f
643.432 104.96 mo
642.745 106.986 641.868 109.159 640.99 111.276 cv
634.726 110.638 628.629 106.862 626.219 103.934 cv
627.861 102.342 629.787 100.682 631.776 99.2305 cv
634.359 101.563 638.747 104.04 643.432 104.96 cv
cp
0 0 0 0 cmyk
f
640.99 111.276 mo
640.105 113.418 639.207 115.493 638.491 117.315 cv
633.338 117.987 623.17 113.097 621.69 109.019 cv
622.462 107.86 624.116 105.967 626.219 103.934 cv
628.629 106.862 634.726 110.638 640.99 111.276 cv
cp
0 .970642 .96051 0 cmyk
f
643.694 95.9053 mo
645.493 97.1152 644.871 100.726 643.432 104.96 cv
638.747 104.04 634.359 101.563 631.776 99.2305 cv
636.116 96.082 640.795 93.9609 643.694 95.9053 cv
cp
f
643.694 95.9053 mo
643.842 96 643.965 96.1123 644.072 96.2471 cv
642.319 96.1016 638.901 97.2979 634.88 101.529 cv
633.685 100.789 632.631 100 631.776 99.2305 cv
636.116 96.082 640.795 93.9609 643.694 95.9053 cv
cp
.132235 1 1 .0386358 cmyk
f
634.88 101.529 mo
633.42 103.06 631.882 104.983 630.311 107.38 cv
628.554 106.256 627.124 105.034 626.219 103.934 cv
627.861 102.342 629.787 100.682 631.776 99.2305 cv
632.631 100 633.685 100.789 634.88 101.529 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
630.311 107.38 mo
629.102 109.234 627.876 111.369 626.645 113.826 cv
624.204 112.359 622.273 110.629 621.69 109.019 cv
622.462 107.86 624.116 105.967 626.219 103.934 cv
627.124 105.034 628.554 106.256 630.311 107.38 cv
cp
.132235 1 1 .0386358 cmyk
f
643.083 94.1953 mo
643.082 94.1953 643.081 94.1953 643.081 94.1953 cv
635.729 91.7422 623.051 104.688 620.631 108.313 cv
620.407 108.65 620.355 109.073 620.493 109.454 cv
621.728 112.86 627.204 116.053 631.77 117.578 cv
633.635 118.2 636.344 118.88 638.652 118.579 cv
639.113 118.52 639.506 118.214 639.675 117.783 cv
640.166 116.536 640.741 115.168 641.35 113.724 cv
644.724 105.697 648.211 97.4014 644.405 94.8447 cv
643.998 94.5713 643.553 94.3525 643.083 94.1953 cv
643.083 94.1953 li
cp
642.678 95.4033 mo
643.036 95.5234 643.375 95.6895 643.695 95.9023 cv
647.232 98.2793 641.404 109.925 638.488 117.315 cv
636.771 117.539 634.497 117.145 632.173 116.368 cv
627.524 114.816 622.677 111.738 621.692 109.021 cv
624.237 105.207 636.356 93.2969 642.678 95.4033 cv
642.678 95.4033 li
cp
.75021 .679683 .670222 .90164 cmyk
f
694.408 35.7632 mo
694.407 35.7632 694.405 35.7612 694.405 35.7612 cv
689.743 31.9819 682.186 27.0854 672.664 25.2153 cv
662.99 23.3145 653.66 24.9814 644.935 30.1704 cv
641.262 32.355 637.929 35.3599 634.988 39.1323 cv
634.951 39.0757 634.912 39.019 634.874 38.9639 cv
633.197 36.5503 631.044 34.2695 628.472 32.1855 cv
625.284 29.6025 621.521 27.3613 617.282 25.5259 cv
617.071 25.4346 li
616.442 25.1577 615.729 25.1455 615.092 25.4033 cv
614.455 25.6587 613.947 26.1626 613.687 26.7974 cv
610.568 34.3726 611.677 41.7905 614.277 47.3872 cv
614.137 47.3901 613.994 47.3931 613.853 47.3984 cv
603.092 47.7451 595.633 57.7246 593.667 61.5405 cv
593.11 62.6216 593.396 63.9346 594.326 64.689 cv
594.374 64.728 594.426 64.7661 594.477 64.8022 cv
601.199 69.4795 609.098 72.354 615.944 72.8467 cv
614.903 74.042 613.967 75.3306 613.198 76.8125 cv
610.835 81.3682 611.626 85.873 615.316 88.8643 cv
619.673 92.3945 627.856 93.0498 633.519 88.8125 cv
635.287 91.3115 637.486 93.6328 640.087 95.7393 cv
642.08 97.3545 644.352 98.8779 646.836 100.267 cv
656.959 105.923 666.212 109.014 674.37 109.471 cv
674.925 110.636 675.737 111.665 676.776 112.508 cv
679.317 114.567 683.021 115.4 686.937 114.793 cv
691.325 114.112 695.145 111.738 697.418 108.282 cv
701.506 102.066 702.569 90.4346 702.339 82.9131 cv
702.609 82.7217 702.844 82.4785 703.023 82.1914 cv
709.853 71.377 710.577 57.751 704.872 47.4771 cv
702.796 43.7402 698.98 39.4707 694.408 35.7632 cv
694.408 35.7632 li
cp
f
630.594 57.0654 mo
634.218 56.8779 637.998 47.9297 632.78 40.4185 cv
627.182 32.3604 617.521 28.4189 616.044 27.7681 cv
610.022 42.3989 621.078 57.5586 630.594 57.0654 cv
cp
0 .970642 .96051 0 cmyk
f
632.776 40.4189 mo
637.998 47.9336 634.215 56.8813 630.597 57.0664 cv
621.201 57.5488 610.326 42.8062 615.813 28.3677 cv
615.016 34.4829 616.249 45.5698 626.405 46.0107 cv
630.34 46.1792 631.611 42.5713 631.799 39.1133 cv
632.14 39.5303 632.462 39.9683 632.776 40.4189 cv
cp
.132235 1 1 .0386358 cmyk
f
627.669 33.1758 mo
624.571 30.6655 620.906 28.4854 616.776 26.6963 cv
616.559 26.6016 li
616.243 26.4629 615.887 26.4565 615.567 26.585 cv
615.249 26.7134 614.996 26.9653 614.865 27.2832 cv
610.364 38.2153 614.863 49.4888 621.632 54.9746 cv
624.498 57.2974 627.704 58.4912 630.66 58.3389 cv
632.446 58.2461 634.137 56.8384 635.295 54.4766 cv
636.976 51.0503 637.599 45.1216 633.828 39.6909 cv
632.219 37.3765 630.147 35.1841 627.669 33.1758 cv
627.669 33.1758 li
cp
626.866 34.1665 mo
628.983 35.8828 631.071 37.959 632.78 40.4185 cv
637.998 47.9297 634.218 56.8779 630.594 57.0654 cv
627.854 57.2075 624.985 56.0513 622.434 53.9839 cv
616.127 48.8716 611.756 38.186 616.044 27.7681 cv
617.071 28.2202 622.047 30.2603 626.866 34.1665 cv
626.866 34.1665 li
cp
.75021 .679683 .670222 .90164 cmyk
f
631.294 61.8267 mo
633.17 55.6875 623.979 49.6216 613.935 49.9463 cv
604.198 50.2607 597.523 59.6221 595.933 62.709 cv
608.644 71.5513 627.39 74.6089 631.294 61.8267 cv
cp
0 .970642 .96051 0 cmyk
f
631.294 61.8223 mo
627.388 74.6084 608.642 71.5483 595.938 62.708 cv
596.323 61.9482 597.021 60.8179 597.986 59.5322 cv
605.983 63.312 614.98 67.2773 620.964 62.6079 cv
625.583 59 625.248 53.8252 623.384 51.5488 cv
628.91 53.7075 632.541 57.7451 631.294 61.8223 cv
cp
.132235 1 1 .0386358 cmyk
f
628.927 53.2402 mo
625.228 50.2427 619.468 48.4917 613.895 48.6714 cv
603.748 48.999 596.67 58.4941 594.8 62.125 cv
594.521 62.6655 594.665 63.3218 595.13 63.6987 cv
595.153 63.7183 595.18 63.7383 595.204 63.7563 cv
603.332 69.4097 615.489 73.7441 624.332 70.6841 cv
628.422 69.2686 631.251 66.3345 632.515 62.1987 cv
633.456 59.1162 632.147 55.8516 628.927 53.2402 cv
628.927 53.2402 li
cp
628.123 54.231 mo
630.771 56.377 632.129 59.0952 631.294 61.8267 cv
627.39 74.6089 608.644 71.5513 595.933 62.709 cv
597.523 59.6221 604.198 50.2607 613.935 49.9463 cv
619.511 49.7666 624.821 51.5542 628.123 54.231 cv
628.123 54.231 li
cp
.75021 .679683 .670222 .90164 cmyk
f
699.153 77.0244 mo
700.517 82.8193 700.071 99.6064 695.287 106.881 cv
689.612 115.508 673.522 113.973 676.391 103.063 cv
678.226 96.0908 684.77 91.7842 687.673 81.5391 cv
690.639 71.0737 697.702 70.8535 699.153 77.0244 cv
cp
.280522 .914061 1 .298253 cmyk
f
699.149 77.0229 mo
700.513 82.8203 700.071 99.6074 695.291 106.882 cv
691.97 111.926 685.082 113.498 680.517 111.746 cv
693.272 114.043 696.394 101.268 698.305 89.5547 cv
699.431 82.6436 699.274 77.4502 698.157 74.6978 cv
698.591 75.3228 698.934 76.103 699.149 77.0229 cv
cp
.215396 .82446 1 .119539 cmyk
f
698.09 72.7593 mo
698.09 72.7593 li
696.737 71.6641 695.056 71.3579 693.353 71.897 cv
690.369 72.8428 687.853 76.23 686.446 81.1914 cv
684.931 86.54 682.326 90.2939 680.026 93.6064 cv
677.984 96.5488 676.056 99.3281 675.158 102.74 cv
674.203 106.369 675.06 109.487 677.567 111.52 cv
679.796 113.327 683.224 114.08 686.733 113.534 cv
690.771 112.908 694.275 110.738 696.353 107.583 cv
701.529 99.71 701.701 82.291 700.395 76.7334 cv
699.995 75.0317 699.198 73.6567 698.09 72.7593 cv
698.09 72.7593 li
cp
697.286 73.749 mo
698.141 74.4419 698.807 75.5513 699.153 77.0244 cv
700.517 82.8193 700.071 99.6064 695.287 106.881 cv
691.39 112.808 682.576 113.938 678.37 110.529 cv
676.452 108.976 675.492 106.479 676.391 103.063 cv
678.226 96.0908 684.77 91.7842 687.673 81.5391 cv
689.931 73.5723 694.563 71.543 697.286 73.749 cv
697.286 73.749 li
cp
.75021 .679683 .670222 .90164 cmyk
f
633.71 56.0337 mo
630.912 64.3359 624.17 84.6807 648.08 98.04 cv
671.989 111.4 686.549 107.609 692.633 100.778 cv
698.314 94.3994 695.634 91.501 701.527 74.6167 cv
710.011 50.3105 689.665 34.9155 672.261 31.752 cv
653.154 28.2788 639.357 39.2764 633.71 56.0337 cv
cp
.0250248 .567285 .998169 0 cmyk
f
698.6 47.8662 mo
688.679 38.252 673.688 34.8779 659.654 50.9541 cv
650.19 61.8076 639.587 87.6338 656.761 102.341 cv
654.016 101.166 651.122 99.7402 648.08 98.04 cv
624.17 84.6807 630.911 64.3345 633.71 56.0337 cv
639.357 39.2764 653.152 28.2778 672.261 31.752 cv
681.959 33.5166 692.579 39.0825 698.6 47.8662 cv
cp
.101595 .727993 1 .0109865 cmyk
f
692.702 39.6982 mo
687.032 35.104 679.854 31.8354 672.489 30.4976 cv
654.171 27.167 638.849 36.7964 632.502 55.6265 cv
629.941 63.2246 623.943 81.0186 640.867 94.7334 cv
642.81 96.3076 645.027 97.7949 647.458 99.1533 cv
658.54 105.347 668.501 108.408 677.064 108.256 cv
684.021 108.132 689.889 105.778 693.585 101.626 cv
697.064 97.7197 697.641 94.8994 698.596 90.2266 cv
699.288 86.8301 700.239 82.1768 702.73 75.0366 cv
709.173 56.5815 699.213 44.9746 692.702 39.6982 cv
692.702 39.6982 li
cp
691.9 40.689 mo
701.074 48.1245 706.736 59.6924 701.527 74.6167 cv
695.634 91.501 698.314 94.3994 692.633 100.778 cv
686.549 107.609 671.989 111.4 648.08 98.04 cv
645.633 96.6738 643.51 95.2344 641.669 93.7422 cv
625.509 80.6445 631.198 63.4863 633.71 56.0337 cv
639.357 39.2764 653.154 28.2788 672.261 31.752 cv
678.979 32.9731 686.132 36.0146 691.9 40.689 cv
691.9 40.689 li
cp
.75021 .679683 .670222 .90164 cmyk
f
643.391 57.5884 mo
643.446 63.542 639.323 79.8198 633.057 85.8643 cv
625.624 93.0342 610.265 87.999 615.461 77.9873 cv
618.782 71.5889 626.114 68.8257 631.199 59.4692 cv
636.393 49.9111 643.331 51.2495 643.391 57.5884 cv
cp
.280522 .914061 1 .298253 cmyk
f
643.391 57.5884 mo
643.446 63.5415 639.324 79.8184 633.057 85.8643 cv
629.444 89.3496 623.978 89.9521 619.887 88.5068 cv
630.345 90.8438 635.38 79.7715 639.212 69.3872 cv
642.221 61.2461 642.798 55.3232 641.271 53.0903 cv
642.552 53.8452 643.37 55.4272 643.391 57.5884 cv
cp
.215396 .82446 1 .119539 cmyk
f
642.494 52.3848 mo
642.494 52.3848 li
641.323 51.4355 639.793 51.0889 638.186 51.4077 cv
635.254 51.9897 632.373 54.6372 630.079 58.8604 cv
627.425 63.7441 624.057 66.8345 621.086 69.561 cv
618.448 71.9824 615.955 74.27 614.33 77.4004 cv
612.266 81.3779 612.935 85.293 616.119 87.873 cv
620.409 91.3506 628.784 91.7578 633.942 86.7822 cv
640.724 80.2407 644.72 63.2861 644.665 57.5762 cv
644.646 55.3457 643.873 53.5024 642.494 52.3848 cv
642.494 52.3848 li
cp
641.69 53.375 mo
642.728 54.2134 643.372 55.6724 643.391 57.5884 cv
643.446 63.542 639.323 79.8198 633.057 85.8643 cv
628.466 90.2939 620.849 90.0645 616.922 86.8828 cv
614.492 84.9131 613.476 81.8154 615.461 77.9873 cv
618.782 71.5889 626.114 68.8257 631.199 59.4692 cv
634.823 52.7998 639.298 51.4355 641.69 53.375 cv
641.69 53.375 li
cp
.75021 .679683 .670222 .90164 cmyk
f
626.742 64.5186 mo
632.36 62.3364 679.021 57.8359 700.868 80.8301 cv
706.657 71.6621 708.353 58.9956 702.642 48.7158 cv
696.882 38.3472 671.934 17.0815 646.239 32.3623 cv
632.714 40.4058 627.62 58.4849 626.742 64.5186 cv
cp
0 .970642 .96051 0 cmyk
f
704.686 72.4609 mo
703.783 75.438 702.483 78.269 700.866 80.832 cv
698.271 78.0938 695.325 75.749 692.136 73.7446 cv
697.304 75.0889 701.432 74.7471 704.686 72.4609 cv
cp
.132235 1 1 .0386358 cmyk
f
662.642 43.8789 mo
659.377 54.603 666.732 61.4712 675.885 66.6348 cv
654.419 60.356 630.65 62.9951 626.742 64.5225 cv
627.62 58.4839 632.714 40.4009 646.242 32.3613 cv
658.923 24.8149 671.418 26.1777 681.522 30.7339 cv
674.08 30.5342 665.533 34.3843 662.642 43.8789 cv
cp
f
693.604 36.7539 mo
689.055 33.0654 681.685 28.2876 672.42 26.4663 cv
663.063 24.6279 654.034 26.2427 645.587 31.2666 cv
629.037 41.1084 625.514 64.1035 625.48 64.335 cv
625.416 64.7803 625.59 65.2261 625.938 65.5093 cv
625.942 65.5112 625.945 65.5142 625.948 65.5166 cv
626.302 65.7983 626.78 65.8721 627.204 65.707 cv
632.162 63.7808 673.201 59.5923 695.987 78.0591 cv
697.401 79.2046 698.731 80.4326 699.943 81.708 cv
699.981 81.748 700.023 81.7852 700.065 81.8203 cv
700.324 82.0303 700.657 82.1318 700.992 82.0986 cv
701.385 82.0596 701.736 81.8428 701.946 81.5098 cv
708.529 71.0845 709.24 57.9683 703.757 48.0967 cv
701.786 44.5488 697.991 40.3081 693.604 36.7539 cv
693.604 36.7539 li
cp
692.803 37.7441 mo
697.472 41.5278 700.918 45.6118 702.642 48.7158 cv
708.353 58.9956 706.657 71.6621 700.868 80.8301 cv
699.588 79.4819 698.227 78.2334 696.791 77.0684 cv
673.701 58.356 632.031 62.4644 626.742 64.5186 cv
627.62 58.4849 632.714 40.4058 646.239 32.3623 cv
664.241 21.6563 681.874 28.8877 692.803 37.7441 cv
692.803 37.7441 li
cp
.75021 .679683 .670222 .90164 cmyk
f
687.499 97.3828 mo
685.975 104.188 677.109 107.993 667.695 105.885 cv
658.281 103.777 651.885 96.5527 653.409 89.749 cv
654.934 82.9434 663.8 79.1382 673.213 81.2451 cv
682.627 83.3525 689.022 90.5781 687.499 97.3828 cv
cp
.00985733 .0806592 .600977 0 cmyk
f
681.881 86.3057 mo
681.137 88.1982 678.26 88.8379 675.457 87.7324 cv
672.653 86.627 670.987 84.1973 671.734 82.3047 cv
672.479 80.4141 675.356 79.7739 678.159 80.8789 cv
680.961 81.9834 682.628 84.4131 681.881 86.3057 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
681.19 86.0352 mo
681.264 85.8506 681.3 85.6592 681.321 85.4658 cv
680.243 86.291 678.371 86.4355 676.535 85.7119 cv
674.386 84.8633 673.019 83.1172 673.188 81.5908 cv
672.845 81.8535 672.58 82.1836 672.425 82.5781 cv
671.78 84.2129 673.22 86.3115 675.642 87.2656 cv
678.062 88.2207 680.547 87.667 681.19 86.0352 cv
cp
.636561 .700954 .654597 .746487 cmyk
f
657.901 66.8403 mo
660.684 66.4653 663.877 65.9751 667.419 63.8252 cv
669.788 62.3872 670.793 64.4409 668.813 66.2109 cv
667.224 67.6309 662.388 68.6919 658.193 67.9009 cv
656.404 67.563 656.754 66.9941 657.901 66.8403 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
696.64 79.2324 mo
694.65 77.5923 692.404 75.6611 690.844 72.2568 cv
689.801 69.981 687.81 71.1074 688.353 73.4556 cv
688.788 75.3418 692.006 78.5151 695.793 79.9248 cv
697.409 80.5254 697.462 79.9087 696.64 79.2324 cv
cp
f
680.325 84.7119 mo
679.982 85.2354 679.077 85.2461 678.304 84.7373 cv
677.53 84.2295 677.181 83.3955 677.524 82.873 cv
677.867 82.3506 678.772 82.3379 679.546 82.8467 cv
680.319 83.3545 680.669 84.1895 680.325 84.7119 cv
cp
0 0 0 0 cmyk
f
676.276 98.4814 mo
678.542 90.2656 668.44 87.9551 661.826 93.9482 cv
657.292 98.0566 665.4 100.572 667.352 101.031 cv
669.76 101.599 674.951 103.284 676.276 98.4814 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
664.358 93.5313 mo
666.843 93.8652 671.756 96.9746 671.657 100.71 cv
670.253 100.766 668.768 100.336 667.81 100.107 cv
666.218 99.7354 659.593 97.6963 663.296 94.376 cv
663.636 94.0674 663.993 93.792 664.358 93.5313 cv
cp
0 .970642 .96051 0 cmyk
f
675.23 95.0664 mo
673.063 95.3818 668.686 93.2715 667.046 92.1592 cv
670.749 90.8926 674.483 92.0137 675.23 95.0664 cv
cp
0 0 0 0 cmyk
f
662.981 79.7378 mo
662.068 79.7378 661.156 79.5762 660.261 79.25 cv
657.545 78.2612 655.767 76.0605 655.473 74.4917 cv
655.344 73.7998 655.798 73.1333 656.49 73.0039 cv
657.187 72.8726 657.851 73.3301 657.979 74.022 cv
658.101 74.6704 659.258 76.1719 661.132 76.854 cv
662.515 77.356 664.673 77.5366 667.108 75.5381 cv
667.653 75.0903 668.456 75.1704 668.903 75.7148 cv
669.35 76.2593 669.271 77.063 668.726 77.5093 cv
666.931 78.9829 664.956 79.7378 662.981 79.7378 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
690.851 88.5732 mo
689.798 88.5742 688.742 88.29 687.725 87.7227 cv
685.369 86.4072 683.676 83.7578 683.786 81.5605 cv
683.821 80.8564 684.43 80.3101 685.123 80.3501 cv
685.826 80.3848 686.368 80.9844 686.333 81.6875 cv
686.278 82.7627 687.348 84.5908 688.968 85.4961 cv
690.356 86.2715 691.753 86.1865 693.12 85.249 cv
693.7 84.8486 694.495 84.9961 694.894 85.5762 cv
695.292 86.1563 695.145 86.9502 694.564 87.3486 cv
693.38 88.1641 692.117 88.5732 690.851 88.5732 cv
cp
f
689.847 57.2896 mo
691.905 57.6841 694.577 56.4966 694.748 52.1191 cv
694.918 47.7417 690.313 42.8428 686.369 41.2129 cv
682.426 39.584 677.026 39.9307 674.559 43.7026 cv
672.356 47.0679 673.843 50.1479 676.687 52.2241 cv
675.707 53.9805 675.439 55.0894 675.829 55.29 cv
676.49 55.6309 679.265 56.6128 679.803 56.8042 cv
680.214 56.1758 681.098 54.689 681.098 54.689 cv
680.792 56.9668 li
681.501 57.4482 684.767 58.4824 685.146 58.5327 cv
685.197 58.1533 685.671 56.165 685.671 56.165 cv
686.068 58.8252 li
686.847 59.2266 689.61 60.0527 689.61 60.0527 cv
690.341 59.7041 689.847 57.2896 689.847 57.2896 cv
cp
0 0 0 0 cmyk
f
684.12 48.8071 mo
683.697 50.1191 682.356 50.8618 681.129 50.4644 cv
679.9 50.0688 679.247 48.6831 679.671 47.3711 cv
680.095 46.0586 681.435 45.3159 682.663 45.7129 cv
683.892 46.1094 684.544 47.4946 684.12 48.8071 cv
cp
0 .970642 .96051 0 cmyk
f
690.566 50.813 mo
690.449 52.1855 689.385 53.2153 688.191 53.1133 cv
686.996 53.0117 686.123 51.8145 686.242 50.4404 cv
686.358 49.0669 687.424 48.0356 688.618 48.1382 cv
689.813 48.2407 690.685 49.4375 690.566 50.813 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 15.0.1
%%For: (WINDOWS) ()
%%Title: (Dogi_Pirate_Lost.eps)
%%CreationDate: 7/26/2014 12:35 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KCQmM]QJcsgq*4(9Wfl2C/jY(3O\BVW6qMU.lT?ZBS]TI4PY:8,j.>n\g[;ed\\EU>!s]@";R7I*U^fi&/3tBa*#tJ-%R0c+
%IW^!_H?T,-r9>A2:?l<Z.PK;I<qYNRQ+_S8fk:>.p;?$&X4"@/<K8rCWNJl'eZ3De983+6NNrn0>[3iT?>M64^;%BCfmN_M>b,5-
%J,F?8r4]n8I'`eUIT]JGn)jQGlF4n5I!tQ9gb\i=I(MF$hlNu`0@i&q1X2l&GY:!qm3CBi%H(l#rq5Bpq<dG/HanQHqXk$irfMZ/
%hU7`LS!tA\2*@.Me9pk;s%hF>0.5G[.^NBrs/*(+7ZSXs4O;u=c'6V>ci<TlbqE]ODm%\NB31H"o`_c[qq?"MhJ>BWq$2-W49Vh5
%iQ'&Lo58u'I`#H^KNdm8k)0O(nNSDYIDD#,FI/D+F>J$W?2P.D+_tAe'`JKj\tAJ54t.hITC`$U$[bFh'hgO5-2a:F)cYu$=RnIp
%&cqpjk2O;SqIW).YKL`c_W0mqpkr++WM>?Nbbmm<!Ja94#\tcPY,93Ln6GhXl3@aNr;CI'gR"+RgT410f+&C)f/IWnrWs6UZYWNM
%R4J9qp3^r[\'))s!$+"/Gr!+E3o-=t9Y9%\kA-Ub(dR`]CAbTUrag-QfR7mkMfSodm@Wt:mD\Dan!iX(d\)$ch1s8:O&u?V*IVMB
%$"=-5;-$nOWfahi`C)-oc(VM#\)Y`]Ck^@04Ws!5f4Vjg?%,qng]C.iqYp0alni*'/@M#)W;k=-qQobU\d=#'\_14[^K(9Aq'NJ5
%A^bSS\7ba7rq>@7bOl_S/[$PkYJrcN!T,OHl^RR6PL:?QPOadVr:_.6=W+l0!oIEEiFOUT2iX%;"o_jCpa[J;`HV<([A)FO2Iit[
%1&0!1XC_lA1M4%X7]jWjem]X-0=otCXCa%b_b^&feX?]C2%AEr2#'_m@%GgTIpK18U"`X!XKYmu:#'IN1A?TsahQi;np=6LmJ%c(
%_f=Ws<l8q!B_aS,'Y\&t*#--9fEE7B1QDk#nJ_rFhm"U7(,q5*_KQn[I_]D4(I"*mb!!OT3&H$'3ia!]aXg<P):Apd"r4lDXZUnN
%!-b&^a3U[/b>_%JIUP)R,JIYd4HVaHrln.WI_]\X7[[rp%H!+S`-;-6"(XO0GLq*k_KW)9A&NS_9L]g&0)#@<.C_X6(JL!kj"<+R
%Yo3^?@)Jc&!DqsiC]%^\>GdC\a:%=l!!Pl4J93l6S:AO5i]C1N>fSQS>khoYa#Z1F\6Z=D<YC%GT>?mIkU]7LGXn<;P[UAL73Zfr
%d-(B_m.na34R0RQN/Wh0O4E=egcRO2^[oWkSeikd2U=MgLmqMoMbuL9I_H&)Qdm&+R/eb="3,Fc!s')"p4,lCo##8OXM\j^T*1[+
%HN8nE=1TqYk(`\4V)!AUs,L&.pW@RV.K%LFXnd>=T3lPa=`RC7T3kU;ho#KlWb_T?fDb$BHd-1#;tutlo/V:2s76V9?S&]8r6MS.
%P.uePq3CcBU[pI#ps/KShrPgWO(6CVUW_13X&l>7@"Ug*X$"S+C9^qjJ9A8MdQ&#fbC$]G[FC\@aFP!^0BZp&BUr4DK9`'G;)e)e
%e^u(lb'[7-XVq,89.k,g[gT]Xpf2*U?:@lVFi1]79E*bsH%euVj_?ZRo?>_W!cH%.gdEr&2;!gLK1>F^9$d)9\kA=SVHuO4%%]JK
%2cq.@K\NKD1TZ8]C/HArXU/:r`j$?T=_h^i#DKVh=A4^>V6^S1X=X<8i*ek>7=Zp$O?'%jT$rMS-6?BgH0ec:J'/Vs>DA]H#@o@M
%'nVmG^8e1"Ki6Pk^#8'GFW*(.C!JkW9J(BE@TU7Y$(KK?4KQ]UrA5;>(QCcrM"=I55'f8uL.F,$X$sFX.H<W4Jlt"3K#(GJ2`Npb
%EC0jiGYW:3^`3<JN]&bCa$,6(KQT7$5gtUa>iqpGMV*C3+CYEE'Zi`PW/^D/j,u,9$b1(jh'cK3X65JjZeTMDo."tFJ83Yq/-+H7
%/eY+M@@P\Nlif9c)J;0N!18_^.n!RB$38P_T.^+qmK.uL<GjQBEN6M\Zf47o,DPA^,s^9gk[:BYAWp>VpkB'-'+1?_UCsa:5q/NX
%f"uM0Tu7<d0$agt<]iBI2*fn>2D:R<6!hn!#(-Ip`X5OPeZ)s&/LC%2_>V4U@HVFE*s=OJ_0g.dWjJg==Z*Mo-@9HmHH+,3RU*e#
%3>@,)iReJ8M&]qmS2=>9cp4Q[;jF1gN6!!$?jsh@eW%I-?5s#\-3OJ;-*B('1]H>B@2WKj,*d,bN8_mB"-Zh2W!I2qmSAK,;--R!
%s2T.dq)J'oN[]q.=9KTS"t(.ZdGVFNiP>K9/7gfJiY]7WLb"jgOsc-6_!?QN/Ic>YfP"?H!Y`l6!hO%M'f0Oc3&4"*187.-#%[K?
%i6=5,>V_;0TtjT.F!_1r0'nA22ONCE\-7M+_pFd=`g3P*!N$_7LnZ3U-]!"A%81@=+(dnp1k3L_&6aUGV\('^+W2KPQ,2k7=B4?B
%4ggRj:I)hV&-`^"&=Nrj/OOeq8k"\q-4#+!_(=EhApK*<=aGa*&:@Ias3jb1c]Haudtl;&O.$k$etN>kF?V5m!#5+E8ZY`'qQrSN
%iD^,(0e%+\$E4IW",rU%NB.>e%Jm>='(-gH,kb3tPoJj@1['pseHOc!fFleE)DkqZ`fl,*<gBnZTH6:UDWe#V=YN.IlJQ<=)^Lh6
%V2g?Cbd"p=%E)fhVMMa_RTU5c6BWr$R@qA2O\TKs^ohN?Mb,^>'8&bjUCJ*i2M'1X";n;F`e'QZ4[CWlVK/7jHn7E$VhA\%.P24o
%aGupoJAMR7!#.!L^ji=<6nUj9e!#V#^g`ZSChJW9%7`&8GGMgS?tUqo=VN!A2t[SF#HP?XW9_ej4m,+uV9QP`e\#Wh==?#.fWtd;
%J63&pM9pfBMA\$HQl_5s2=O$%=fHZE'AAfg$#[su.`]:8hj99S#Vod+b`5?q*P/o#h^_XfLup[j,Smt6?-_@WZm_p>3/Kt%F2J:E
%fek;s6l\Ns-YP7/=q]i?=]?eX!E=f?1sW^9iVGstCFh(lUc&3AS-8+j_<\0XF-Lp2Vu[>M!f;S?(??#.-S641V'qjj6id]2&/%#d
%-U?XJT?gpAR)2.aKh*<(-4iV>R-6T7DGRoJ*!45(B,sHEfGX6&Qj6laF'A$k'ZfGWFt$\lZOALg6o<8RgmR-Tj@//G/?^1$gEaVH
%V$]0cj9cLQd`Q1,`7N8<bcD*@!,]t$-EOBF3<8XSXi/5A$I(!c7*+.<WL754N$=%uXZ1/kD5ffOYXVSXEltF<YA!8*B3J))3,n9<
%'iPj7^5@DaImaGO0AmF5.]WcckqJ/6%q+1_6&&9$K!V.n_5oAC%C1gN&790pL>udc*ENt53C@>sq$+fZM9dKPd3&)*iB2<&-H\#.
%6i]e9U:5eim`?b--tj#3JJ2[XAd:=3q'SoE03#*Uk=dX6q@iQroBt2;LTkk9B!u0a62t\+dVcp\X23MCN.`\fd3Ql,,B't8*i$Nd
%N15Q4E"Nb9VC+#[gh4RCk!:872pdundcNfP;oefa_/'@+63nebi#][P,r04[rbP"7^b3e[+n<A-0N\0>QkkE8EP!M'"cTr#h?8K?
%I^(mN)._fME@70\Bd?1`OV-q2E#;dI-pH*XZ8?Q$_d1*=".4TE!C<s23^c79&iE/\72.ul'W*/Ys-5ntYS)/b.M2_-W4M(62jHB7
%UCs.!GE=rUQR^*SLn"a-),W>G2A/[%bI+)4)q(L3Pqdn<SXFuEnY04NnA**X-G>QZGia/Y;FBG`L`$*qq@!-LcFXn2XXg)/U"G%Z
%U)'jOkdiN"GoDt!p_3jEJ,mkZPP'kq:XTUQcH1<adtf[i*q05CM&QFg,^f#ta.J58If_#8Hk'S[e*KZH!A%U*-NQ#Grj1_J.GEG1
%a6)Xg*?cN<rVcWZX7NB!gooZErUsiEF8Ne!'r^'X[o[Odfd5AI?bZ<$J#hIUIsqbirq6-Qp;>LKn#g!2pj@72p%)edj7W6OC/2M?
%q7ej92d]6BG6QsSS(k9=c#eC-iJTdd>+Mk#2\Z0*DPs]-s#^..aSh%A];t7UciBCb0E8aH^\SL!lq>orVj%-_?[ip@q"Nt;bOtO]
%Idh3h55RG>Z3F]jejJ,`AiJ<`560X*-E>O@`/Y2P:P0^r^3Mr2T5Q>X5Pit,CTI&332FYT^L-ndFaj&S_D`<ups0%hGI+ior9f`[
%H%#S[rT)#"X7H;sY2Fa9PC.erpDhCEI-&'I^lO9*GdBRu5PsPgrSd_.8RM?X^\\7Q\T\T#SIj<JSs]N<+4e-c0V3oIIWos\$F^Ss
%$]r!3pjc3PP;hs^+0ZStY+hAYh=<-/l'MakHF95)kLjBp)-?Y"p%n:h(r2J'6eA5$U9>oedpG!Q(]b03/"L47@PU/rq;OVG^<!1k
%K)Sm"V[>F>I4B!YWUWnefWqmZ8JP63;OP[-Bt,]I213c7cecsNT=D/)Et`8*,-=S8Z&,hFOesJ.V+Ej"Z\cg[C_&\\DkEu=q8XlI
%=o"j6/"`nM:YIDgeU.t5>nD/e&q@O(\t&\K+U=3\5PsP_"%s93\??a%,cZC8<E9i'c611Z>%6ER7b\#oWXGRYTikE1']7l%Xtn#:
%%/QIT!VQF,\u\1.1\5p1kHjtn^2-'B#%^OgAQ+/[0l,prU-\#s?PEm]-l4;1eVi)^.\jUkZ!(b_Hs&#nZ:"`ejbm]XXHt`QTJ<sL
%MK=?N5S2/t;KV$g.cA0f9qSf)9(rhq^O5!5F]>D\=&+88KrsB6:g\f=n\A!t(>("u,PGqKI@S\rU!Is`FJ1*hd\UA_Gi`ln\?[F%
%_/q9Nh$:_]8A'<N&?u5%Rc%]6.KN]k?rd9gnq@,NAglBnKCL:/!RK.u7<T]uXW%?r0*1V^D)3hP1c^sRZhXq\kU8OtD?,ZC#+(#]
%X5GaD\^U.ZT#1`\rP*SX1Un-)npeqBTI/:PHSk\.:`Gj,e+Bc<DoV_d"AD#TGO9294kdRcmO@Ydfuh"G*rpQemgBsdIKG>MB(1((
%Zh.>F.f([CAd!Ser@(S9iQj.D$N:faDB&AWoN,0t['m?qU1H*hTOqD>1RQ)ar&(/CcJbt0/%A9Tl`r/.]Zt7gLL?#%!:X+p%9->=
%ctlbuPlg%Mc'(,8NL:[2]T"e6.H/^JUgs\:bn;?=VJ0'tKCAuW$IBZs1=JmdE)OO1EOm>AJC_83)AI$R,+-rJ0*'Y5Qkaa@'kLe\
%?0"FOW$2<H>61HTq$\Ujju*(1ri\U.eM=0*R1c10<t:<h!#L=4&oHP:2Q33J"<BkV629r7!H_@uU1>>IE5-cdY#TogG@BYH;L,AM
%<\&b<+fL$\-$QpDF/K5PjT%<f/m2\=V:3cpnA?jq1aa2n+:QjM\2'8adUG0[&htpf#>Iq^<$gbX!)[E,UPg[XC)a<K=Cd6+1C%!7
%XJV@1K^/sf]5Wk&+]Lb;+Nk,-[\+IiN!Ri5:&T$6*4DROVufLQ]RX\C_T,*1bn,gO&E/Qp*A1HpA;@bZ94jG;7DUg4kei!#"&jo:
%W'O0X!8%70epWD@McS;serE&f1ggBf&0UVP/d`F$cM"mTNLd:\!GURSX;Kh$fB;5Z15t0G0/t<pB#ERbbQ2*'^u#4c%D]XWaCbMI
%"lM2SgCU`5#O;T`GNQ+GE#7H5#f94>@6e!"Er_"-_`76ADEO-qc3S,N(^Fi$[(C@..D0$u<,t.u"YDq%/tQ&[=1IfQf="c3]qE?'
%T[\HC[p4jJX2,1`f6"1kQ><qjZLJ)ML2ZaNX4hT^^'e*q[p47&<G]2c[^``6\+-BZlBtY&&Ai>liWW@[1lDNF1#fJ>\q*8u.O<8[
%^iii.JG1JYA5EkF"fr!*l!t+DCS4+^kgCI%9`n@08Kq#$BS2fUQ5f?#"7*$@/Fe`\EY;K(8GQ:?A9^3nMH.%g:(=8R!1cMmC"]fp
%'Qeo5'EflgSUttnN<19BQ[uQ)o[b:._2o_4bfb#q';,b!$n+IDN?TH$7*j7ZNV%WoP^YpdQPE2g+sV"lI%c4N'Qunb@n%HI!DW^U
%e]ScZ$99hG3RB'Hg_kB5"agU.(\-oRH21;c>7j1Niq!?CZ]]Q;Kb]0nc%+r-1]cAB">H&S#Vd%qQ)"[*Q6GLe-<Xg_1p[5*\X4uI
%XR^`g5F4Krf$E@(cX>^EYGR_WbH0*]nVk:(q"`q&>54N.H'[4onbhnCXSg:U5:]cHjQ-b.,Ke>dnaeH$3H-cNGj*a#nd'Go3C=e_
%ki"\rY[2T71R'C#iPrc9H+5V/X[!T]P9n@t,\n/jYGdt'0aHP=g;SG.qF0g/$q!(1,qYkm^:,@^6]%rH][;hL@7f?i]Y:(KN<<"q
%3c+sVN>9]QXPpAt*(\c*>u(#>>i:OYE>5T^r1>;'MK1.PL+e_-aSI"#@QDVA,cuqt[Npf:OBa]aVFWVG]kk^:)9At2]fEl63=0Oo
%1+^R]F-9u%VOAc5>U*f(Tcl^-_;)>L2CIo&'k)fQKN:&=/ZUiF!bGRMm9)KN,O$aLfaK.]+IgWKP:W-<W$BtHA(_:[[NWc:P%7So
%<gQQJ:a@9e82b6oSIt7Q(Qr+DZr&F2`N^;%-\ki.JJG:U&fd0[(K4Vtq=I8"2=eAEkA`K3%IpC-j%(s+<o?XW&H(EF=cT9dcYnK'
%KQlQ0)S-sa8WdtRh"-Np*orL.o9AbEVij\PcTCfMAg4""s%;Z,)MP'Y<s5-5_/8]RRKt^^K.9'<-3DccTSa8RM6JaY:rS4:7%acH
%W8_]`kVYGt6]NcZ3YcGt3U,b/A$b#t;G2aJX/JJ$Lt'X7ZQguO]Ge?smTS%m<eZeTr-7Ig&4.PP"]8r-<#RDls/aeV,1pjjJQ"Xu
%Cc:]90"d`K,@p2WCPA*ZRYibkm\H54NMI\4M'`TD?DN7</VWRd2/rZ2Qrrrfgg`>;)HpYr%pN^J:'bIkP.QY>3CLTON<d"MOdSHb
%<IAWs\G`7I?S>cnXAeMe\Du$)X(;fO/(sX>gi3AlJ/51+=2"42I2B7-^<Q)Uk3:FYha/i>W(!1^FJYoo`;l>-1o6gZ0\qO6LX;&`
%U8hGG/C4ohV3m!ZV:eh>D+h6nlnSad!G*h6Jja!<@[K5<_m8Zm/7C)`.4=0<?4(,/U_Gi.8M)Lf>-bWBoK.8;:69fj&kXU7VaFcc
%::XL(rDRaBKSq-;>$RA?DOX/o=noCDn1J>iSWYQ6XGo7Y!Es#ZJL(QKGZc8'I9@g*d_^Fa=MJM)?fVuc@R+\-8ZJ1=)2CdHP@,P7
%A<T@'8aa()T_+K>DeBMk>HmX@@--dX%8!jA>rBp1RQDC0kp4`GZP\9^$<Tgh.+qI!:'tP=Pbl^S8Y.Dp3^r0>ng6qt/8Kk*fJm#T
%S"uIpR;EftPqW[3\$:TXng2ugXKt?\c5IF6Iq"P?]hPM_X\php@[FrW0cd;/gSDdUB1P'78D<ZYJ]M=t3o1MI#3%^@c6Tae*e^B]
%+tPhuA$.^7J&9EN]\7]J`4KCsT+nG2GY^[Zr7--6n,fWQ3:Xk4*u`J1B?h%((\@@Cq'>_b]l-5qHpAa1gj(?52^#68^LHFRNlH>s
%pbd+6$qlu2(J-?3dDgGP9'9Iks$Yfl+VjX[=Her:BQKA!\PFmY8iYLArjRf,imm"tcsg1aRt#YWJ*V\T!%mW%+EkpMgSC/)m1'H$
%/MZq^hmo)&9..!M"?^b2ks?Xn-]-tlr[aV*5jSUrAHL_FI(=>7K?RI-E\C"M?@JuhrF#%>`FU;:_RbEn)bYol-?S*0p'b-F,j4$j
%.Gi='pFrc&k=G*c&hg0(H?g^dFlb]QnM6\CHm^p0SkVF."SL^3'[PpcGr(HO@cg((OPUP&=b)Gsn.G*k;MkY*K&Ci<mj"uEjtXe_
%,$c6=.9aU@>D4mL[6C7oV"Gl?ejPQrlU1NmG"^?]fOCgONak`DN-l$nF\?2_.)E02&oEgg-bHM%H^$TrAEBnS%1u!mf9#S<`._=B
%A'6+fW!17VBIuLV%CqiL^L6HAKFN8;8LDWN57o1sp+]b6Es-=hhA>O<ABuP!(!^%*T$,9%19L.a2C*:9K[i'^kE>e;-s=eqjJc^/
%C$rX3i^^tQU-06UDoSt)m5.*-mdG*9IF/h@<RDphMhZO]l6X+?^2djN?l>u%C^;F*/Y-`Y7<X@4fb*AlNkj4cZ&K]8)/$!p6OZ]U
%#l'#A&OnKMc%n65,s90sO&sX+c+8I`F9?IW#(9lKm)J8pcL.gU?`C``gNm\RC[#Zlb$,[6`S3kLa'&PF;(Bs*`8Bj'+M3PSKS@kd
%`,htN1)'V:/J*StFGX%kS/$W/(t=1Noo@Y^(Ak`o_=&S>)3*%`%YK_H6e0Ik2ttn%[QTL";LS6eZ:9tC=):`m6#;<3%X1aM7#dB&
%8OJpl@>^sH'hG0W'hbDa+Nk\O'B_c#R*nrOSsM.?86IF(Q00uR$E-M[W5esO-O9KULb^)9^rV=`U+26@cA2]LpWK>a)nX?EhD;4e
%Hrt5m<u^k\"YBrWW-`CQ_tElnfV\s+G5ZgCr.9+8Q1u;l`UI`6YHmKEjK$lK8ee<*g1Kj-#&O#8IA6\ok5UEg`/u?biAJ*4pHKMc
%@qk+A:ulq.3=gc;(K0^R-?!&4;)*o7+ndCmI1"-_G,\8g2*B=WJ@\>-LM2"n=(#<0Zp!"77,uHrj@AKB+O(EFE#Sc81r,EL61dFn
%"NB!.\tE_hX:K?Ac&DRsX;/$I.%2=FL8#]oIOH,/k_Kil_KmDFC5QD\(^AP,7:-ag0k]CWdi'$*'3Q':,b*%aXB@*@.5.)H,ahf`
%our`3&;h8+)49I'3')_f`&L*MJJJ:%P?s`o_^tqH%k=jk4PV+\11IF]i8GFP(CS`t$1,)+,T=rU#fsq56hQ`Hjd[9qU*(OPb<Mb`
%3*H.g)%(@HMd$e`?;^LD$MQO3%8Bn0mOEIL_iu`%\4\/ck(C9<(Ylu&>b$R"&pr!(,E%!<_n9a!jCQ_S&taF-k<ABN7?]8JTHOM$
%,8&/JPiJR'_pK'K2E>Fa"@N@XS<"7R!0A\9n1d8J.'X^?C);%p\A5>F6No^i63Tg]?K,c:8rZ/?0FE*7NsOo+Z20^<QX7ckhQ^OH
%p!7?g,P+F:;ij'\-d+u1\!_Gp(IUs(;dAW:"F%\U\'CDX8uY`6S`(\l5+P?^]iWLt08BJ/d2oD_r(\:SBQ:k\3`k'2^fO^;k>#bH
%r]ON@$pB#nSB+YsmZ+aG-!%J_;6YBL0.H6#fl,s:kEWPr6(%$*B8=5UAI6Mtcog@,H$93DUFpp:CJJaJ70/m<Fh>C7Ol5`<E5A^H
%8#q#':'UN(eX$4dOmEr7)RU)'i'67U!<2"T=eK6"W8p>u-ud`@)i/I;+Ou2KC$-`Gf0hc:;M.R`<pKg&0io]QHpJpM$_e]@;UlJ1
%BS^-Y50T;pD<DUl3$XlBZlo+:[S'm*Yf[Q6L&r$r$OC%cHKS\_RTR<WF;/O?Cm>I+Bh7sQ)aZ&1Jtrej/LPUX$piFU+S-@)f>\&*
%QGcab8hVS<F%.shM(3RsZ@jQk"CX_QD$Y`,[O@"'.\aD3&'uka9kFNrL?Kr38YhDV/8op'-3n906Nl[E0!r0%LQ:eJW[EB/!k6DW
%&_Uq9I\?iW"P0tQ9]Hbg.=llC&")PgZ?qO&)$a8-6)[fi8g'8d#su$d:]fSPPD!\)TEJA\:D0ZBJeA'5T-RAd"DYak)]5Ri"]b7F
%BKObLIaorH^pY^rKK&-q-C7:V&q>`3="Y19]kh`6P&&pcRW+D<BouZDes0@u>P`\-4F2Q,)dYsRl/X<uQV">0>U1<@Xii&Xo0>fs
%PY45&UA,)6"h'[,PI2H(N=V=\qU*0^DG5`pRk9%1V(WfN/)dfBo!WNDXT[&6CcJ6@cCpZG)%\*eQHb4*<9oL"6j"^A<e>,?Y\8FJ
%!E'*Va>`^&`eI4?80`MdXWfH?^o\Fp%<437]9U1d3Q]/H([S[X@8'@W3<^oI`$78N<s!AWDj['lE86.+:N?^C^sN>JMP1YsNeHRf
%J1a`l:@Q4fUYZQG'=m./piR0/htrC+>>.YO)6"Qs*XAO^#,9qNU(4kn9gX9j*Tq*8]Z&*op>U=bqorZWND)E(Y]?mRff5:tqC(0<
%<VLj*I8T[lME\*:1CEp`dYRHuW+Kr=<1c9^S3!:)KK!P#KHrQWiE:b:3X*6pX\mfOmRtK&L5am:,[6_'[%Rd`.mm2=/kHCd+Nh-g
%PqOI!%e[d-2[)bl83of#T^^5AaVudP1i?W41tNq"e<0[F=N$ik!7$2?bs`<fOuoaFd3f5N$!;\4<-"n\_D*"QmV?g_ea0mF?H0U[
%fc?EE$X0oAY56GElFU_*BGKp:9J5d2I)<Bj,eQB3T.k-saWutq-]B!5!=b@Y%M;DX'CVJ7SNQ80i2;puT?2MKV9rnX07F-0W1RX6
%(WFVoP8:8KZeWNcPqKAD]p"'-a>inN$'hdCUNA5jFiWOWf]quS;om,uc4i$T,,]\`.?:d[VRejeG4(+=^!g\Ul"g4"V`&%AYP)k2
%0%9A"/_\;\mo@eB74NI7c<`u0m!.9b-97-aEaEh*F2mdIo9^?\/I1p9Oe7$c]]@f*oSi]Nll0Tm@A!<gI,PQ*9'>$!1%od"Sjg'N
%-l-@:hPFD?SR!?jJg3"!8]1fU4Ai=#;8'19h4)0N^akkZKb/TuZB1Hi'RmJXbb91g8j4-5^r5t]akJ[s&c$LgqC'W#%?M96W#VQ`
%aZ*EbO!k@c$]68>_DJRSdb26J;YoQe!8r)2MUmU:</40APP44oaV^[>%\gN"\r0:.L'B5I@s'jNAe_]&\tI%3Xn2+l^^#QoDKhk+
%:B.!6b3a'\$ugYdB]XCr$HR<ND!'T_`kdCXkm_AD9'F_C[#u@Z3lqhG*tB\*%LO#^P.?Z=fs'"MPQk3ggE[m-Zp;:B7bbZuX)PD`
%o9=.3RQ7jDU_H)&b?!'DELOC4HaThp_[S9eV-D4K"UUq<bkA-7$]ZZ@W)]Aq8MDf70e!m&6rXe-8]2q+?S.+.XUV#g@V]fnh6+(B
%6"fT4=BTFic3j7f]p5s*d9%j)"uXq%%)^G\-,gBC$GZq@2(/ah]WERr6da,8d"AZboA@Wd;8A)9EVQ'@1c1%Led5j1bVEdBM=qao
%DmZu_7%5\>5>(Zj4pu&/]b)I]F`dR2gO1EEPX:;?I4b!&_4qY?<DnlM9qeer-cPi\f<to1KKBAiH'LA*B9"JF*BDQ3?'mGR.p<ad
%=HN7tkt=BpMK9l@>^>T9%$$!u1hFO_k_Vmp8/>p?RVY<u$Rru9ZZ>#8PQMjW9>No8g,$\+M)h[H7*HO&$-bIqZ%NkQJeW:CH:'tc
%2,WX!Kaot.]`lS>A5Rpo9;;):@<tYtInoda+cMBM5mbV;8>@@9U^?oE]MZ=%m+i!)T%`]Sp'%^.BHHu,R`L8kOMFE]Q[59i_)!CZ
%=!HOe"At%p9/a=oU:$6sA.o-bHCl'nH"e8#?Gm2-qbn2Pq6XRJ4Vk+I+KG&LW&h4:\S[L$?lEtSW/6,Pg)^P3^F6jqo10--=%R(o
%'fD?AG2Y.%LSm0$"&`a(aM@,D$]eR*eeLSa3D>EdHpom!F<Z0$WiI=k.<c'm/D`$"<=ImcS.bUu>hCMR#nk"h_YLTlE0#QdW63da
%Oc'=NPn2X#C]jQA@O-69?lA7GP6T4gVU).LQ6F$#P6T2A07VDX)=e%A%$la/3\qRW'jkg]6BtfT7j@J(cjEDD)6'g7rCT4!WE-]Q
%JR.8HBmX5cs%JV]D;S+LpOO)m/\b-:CK)T]l>]G0;8e3^`SdjjI9F/qb+rq,aF?Z#gtg(])G(V&NDLcfW:o2#`lAE$4s[?I0@V'q
%"FRKo0-l+#gL>j^A?\!j#\YC%$;pYu<kQe2]JFQO;!jG^(nXcb_[0U6Tgnj(jhhESYg=bdZ9FRF_@%[*YTQ?0+@@5_-n2(pRcLT6
%'iFji6cO2`B>NA2-!ts<S9o$3iKa"/$K_VK#WBc:00am;ReAhOAClG"k,R4UHbO#,Qu"u#ohY4(P!,L-AgNl&A!TX^e&+BB4PHp/
%rm/@%s0?!+0aeO^&FEU67?eZW'CAc"SH*Bd+kn#KgN1!R6l?_.e9JGq:<Fr>#Ittj-p12onWb^:*2,`=TTtjBmkos126kJ^!l>_%
%0>4+Y:<<9j%hG^hG"1?Ue.ArkZ9'-,PhQeB]>)2jhr.?E].HT:GFt)6pfe<c7=[$rb:L^bHL?sj4$k$#\"i:WRe[ta@<Z4M3AD#]
%P&)W]!nd^d3qfU:qrKAQ4.*2rC:7\aM=[Pp4:CRg_W:Jq3oW!6`Nd>518>h40b]j8C3-"=Xn:9H3Koo.S/R.;B#npO.*"@b=\a/.
%L#8GYejKj3m*.*u$UsDY,]Ume'5],'>X]2of-*L!"4okG\XM<-\]^nl=lh>iif^VI`B!$H7QJ]X[r>bJ#R)It)<F>X;6UgqhrTua
%/96n@DWr-pS=_GE`*BfG0,1)a"A5bqETXG?05SCdYTaB)P0fpKS!UIZb)W=H#8p+#OVhb`M+7:`K^H=_<_4nsh8sXZhQ6s<FhpVt
%g!AaW>iP"*13l;MRZa0GZqEL*j42u9<;Rd=VhQPW45rMdK0T4M5PbIIU(@lnZk"<5b/:fH_H6TN5dglK^`;tNKD=+jK0ah$6.18p
%QidX$km[tk9PZg?ABZuUs4fZ7!L9TGAU>^A`:Q2&>?F=&$V\g1UZ6>:V%6`Ps&]Q(/1JN%Bm/NWNXEJF-(H_fQpb6&>kZ`/Ab6@u
%"pXECn?cAX>9W_gWiRB=1_'5!k&;Dg3cgbnb%O;cd[RjO7J.WU;GV.?d+/otgK%'"&b:K[(+r*p^M55B]N7lRO4'f)1Hhp/B[Q-8
%:D=9]_#PVCCl?qn@'h6d^K]\T[mb)TfENVOl&poE`.GFY8c77I;6P12Z1?"W[R\&L%BOMW%MItJTal(HK280#6QUX%K;?`]l+/R;
%2GVd;_B18"S4h:N2,P3D"@?X*c1/U]0Q1NeGY<488@koK&HXHd4eWI3Z^I3&0T-5VB$6FH!4,fhee/f-ZPC:i@45TQMusWCD0"TS
%680U:+KU_;"A;d0h@cBC(WXJ1%2&#bT;`q0KMaJ)lJ`iQH&1uC?laTU3$giW[pC^m)?@%'<Z]GM[)#i'X4%')?m?BoWGM7(]fpoY
%P5/4DDVLflJDOndI:,5aMNYQ;6$GhT^tm>k@6b%(Ciek.JHC$7Ob$Sd`4t&ggsKM^PMa"J@n2%$3"nC7OqS;;*@Hck1r)I7UAR9>
%)+\cLK`HW_&!4t<iNp%K:]Q#*ANI.hma_p`TY1Lpq-DKu;C9#3g&89uNo@i0"c7[A-6N^>O"tnr\)"5_Z8"7t!;Pb:+oIoWABmBX
%9L'F\*a,iUR_T\jV5oDg@DOu?>KnoFC(YJB/NrtSkYjAoaV`-C3jID\G[ejfZh4LT[?Z4hA8d^VNKUVf&S9oEX,se_"hR`")0q+X
%ZD=s5T]FF@Cf8Y&Zl!Ucb1ian/dL"Vfub5TNoTJ'-!@!8)OL$)NsrLk4@D!JQ\1[.BqB@69nofnFJs<W=:djZ9Igqc;GsAPc?-=a
%E:_jRF'3Z.]%F-JU:./HAg&%88tX@;md_WXN#$t%cN\'1%Ac20@PNo6?)5$F--o=n?:7H3lCH>-jE>F^W@SX\,07lPUMM8@'S@C<
%45@Gr)\43l8EiKXC6tu>ObDDPA2pbuXPD536H8*rBq/t)U!+BAQ3:KH/\>L/PZ,Tb$:1fIjX2hEno)a8":rck_P0b"@SIkS#r->a
%.roEl,Y#9`+\mE`aD0#*PKI_]7Y*6+nG=tophcJZ\FDR!ifcHM1-!pR<s5W80L@NS#fdLJd6>;icJPkq:<7UUBMEZ7OM=($P"flg
%L*FarYk644EDMbKm9K!Tp'.^MVn!`rYD#L7b,rs`IWnZ0@H<SuH&%O:H9$1mV*:eSYM6#A3"i\4\Q&H28%m3C/afBN%]"Oi;W:(W
%f3kC@NEIM"S2DKO(2P2>9r,1R1cB>j9r+bFZo#lP<B2q).OS4N"]Cp^8#&4a]6neVj4Z&j8R5&A!Z+Y`c)=2o>n2+X_)'qiQ<!T'
%j(iDp*&%IY=?[1SDloq;e9Q)+g]MHW-US&i2,HK`V7WpoZfc/%XMHXD=p#T4%D]!EU?=b8Ob\nQ:@fsa%j&KtrMabR_B!q#Uq#BP
%I%hZcW+Z2o:Y8$KP'VrReNb$m!c\,>X/V&f$r..#L)KuhGriG=2$ItOR`%_(_N;oj;Wl]q_NZl@DF)V[BR*?c/CphSc`VtLR]@nB
%c=:%'"?c6h"Z64`n8PKl($63/"X<2p@ZG6pWHtM@79N\fg-aI;pTU_bXIu$t*hc>MJ>tkpNr\UN</mi>Q$#e3Kt5:,D[</"(q#s.
%Yt&1_n4&KR*fK9cQ,c849Mm-`,3ZPVScYs5BF?(DCpR0qduhmu]2,g9lkDkF-X?`-i]U))rVl0Sf?"QmFa]8tbJmm:$6#34AV5$Z
%4Uf?L34In:]lCoic*BRQ7lH!U/@!HW&co<O/_Lmb%5?sG&6";$3%pf46Ff(&<3J;R?oZ/7jnG/WDJ)O#_LWB-Y.W<"nGXapMJUQ=
%$n`;Vh+AW)UJ3\pEa64g++uFR=AjP%:(m"mMLA'558'Fq;\,$2p!W@Nd2j\BSXUoHUj3Y:(E_ef50-1e*op5l*9>O3cm9[r,)<a_
%K3b53?$pD_p6LuXI%+mJeM6\!ZVF%iWjBE-Z#NIOUl4o^-pA`3Eks.DMGh#FI7l%/8*`)d$tW!;STr1A+@\?S84$*_8(QH!SWN$Y
%LM&=/(G6:X)s\aip5B^2L/cJFKgCF+>.G.oiLl@V#F*I1qH0Co9.%?2']$VRbshjRf1SQtY[eQ,GA6a3'P[$ZP5Qj<(WD:o>?3Af
%=8$2?IV4t?R,FCeZSM9sO-aaNf#f;scK&YA1]btk\^IUk.S>I9-Ua7V!o,41DHG\XFtA<i"^9A=']nnaKhM/Hjn;?[E/JjdX_@H.
%6[POYm=-muj,%t>AU\:@mQCs7`V&eUGB1+I>cFJKG'/(C=1!In]=WSg"IGHMp.?sN1MYe"-eYt%d\W2)AET,l:>AdM4d&ZGfoT=E
%B9slVSV5[V&$:c]a>JUFbEM^AQ]EE1R"m*]OHl"#;R/#5`1"#0Zgc]Xf`%.]'BdM.T6'q@`1TaC]#:>hHpkR=ETqL@k@kr/Uj@F]
%^%D$Aml]B[Md:-mF4$f9kT-hJdH)^sNgE2HH/&*2S?H?cNH;jt].6(<]T&'5*o3FK\:p-R(Mq1<h:uLOpDCjP0.@km_G*gkL>lg&
%SXQ8i=r81FJS8P,N2(f'8pC]QR,Vj">?-o#,/r1OCEq%,>`A3^MoW/1SF0X=.J#bq_kp)SPtq`E"W=;,BT'a2M08$QogE!hVT^Ln
%b`C"+h#WB;cuFc971bGYQ6dIGrU.=r7/aU<bOrj:FRk>?ROAlOHV37jKuhmG8t2\]nXEDJ->iYOU//iH+lZ6I<L0iAs*O#1as`@I
%-^:>?8E%HA65HVi:\c5LHcYU>ktl]=9huh\c9Z?uc61[:0\'_K<MUk;jc%u3C%PQ"7%^a516+M]^#WBBc\Os-0$?*JC`+6]bgJl?
%;ka!HL]%@`VShSl@`_VnP?'m37nk0)0(k"G?e1<K\=o-D$Qj%6_:EVAFi[M$M*X,r=oto9E^puH?I;&L+V_O8.<loqj(hm,OX).n
%3BX$@I"&FBE,VJ5RcorlA9QWt)eX=es#8'I!TDDpo\e<q=>h_<afgs[o=qkhga`?5r?1ZmbU8Xc_r1HUHHOL..!3iCep$r:mWB/3
%@n;[OTR!i9rU(`AZcA\H[YQ+T\iY6!XKm(H:[TDrG/Y):UP\hVM0q,l`IGj`7+,23rb/$,/<M;sm;oU[cGGJ0.eMnE$d!#?<&Hi7
%ep=[#KsWpmUMG?f1eZf2gg=LYC=puQZ9<ld\^OG\9RNjjW+@h(q.rKCDP/7XabIPKNI,?OZ9X;p6=n7YailSN_N/HN\\M0A<Fc52
%Q-&e':h%CM/A?]5*Gg85fVILR:ngdCq=t=8F"T3*f8=u[QA5Xe0<;%B_MomEBSd,ia=**bk0X7R(5W2_Q7RhC9];.rkAX%,*:Or,
%<oI:mj+Gg_gHXpr<>=]L(\$2eH1%KG:X)f/B'u'^mF*bjP/o(DSYNi+dZT/nl%5Ac9JVWqi_X5IK5;F'=.n%aEG>Y@F0'AY787BT
%)5$F5T)b+E%u)MEl1XA5%Fe^p"iVT4%e1n2mPa?P,B[WL[?"F<Z?0-;e=6q/:R''QNgcWd\tf?qFN&"(E=puh&@$(L'"b;OYai@C
%Bp"p%**\c<=d+G8</$6R,_Xc3\e`[>*'eZjaH]8^M]@<t$:k#/^ILSm._7/QpZkpa^L_r_!i@m^S&6<u$@E7C_h*I\CS+0C'n'Us
%P4mX#)n.!4jhdoid(Bh0cq+H[D:"hN/fNcVi%P#ZXb--$05/fMk*_LYpUHL<co/"b[Z\oahn>o2s.&2bU*JYWs6P>XcW7Cb/#-@U
%ZXiAQS_oP^<gU'<T'nY(6_+*04pNo>G.38[5(?#(H$%%#BVR),<W4c4U0S,bda8f5M)`=@S9uLnSg?B3O=7AZaL-i,-G&>'9D$!i
%7a6^"g[F$s#V5kig%P<P.0?JrE45`E>t6M3cJWO94gkt3[&GR];S\r&lsM=IM]VA]![t!r"33QC'oRr($6YDX7ZdcVG.2/la"cY(
%Uq;SSih!pGU%c<+SdU](bT"ZLaqWF_=`Q/]##b5q,=C>^`^bqUL$b4bTY0A:p&C9SgL1<hfs*50'&g9e^nN:gB$&A)%-[TadGrhI
%s7i9M*e/.S"]o\_(>D4qgU?K#hKW)ZM<9h7FGWIZ1/`^$F>f`tWQ6Lt9Y:OG*c41nHktN2p95P_,2(m'kB@+sOcToG/:s!4cE\E;
%2iCi=IC:5p)\AQ.cFHJn5,,^O:6)/lj7[WFIT)u#Uil-4VB$ggS"`IAbHQ&aa'gLDg,NeMSKpmm./Z'#+N9JR3ufKj[4mQQCh5<)
%9&$s%;YF#\Ya:TjZrdaYi%lHm&EcfEZ)F3P@HfKq%QY_p("diJVR\bnG3K1X/l#EKjEYg]/^`MmL*QK\XXXr2Fb42E$''-9f4GW7
%\Vi:uoNJ'B]l50cmOAnqVAT]j!1X=:,K:#2s0,/SkS6*kmm.m;g>YS'i+S#giIp.F30A)CXZ_+&6:c\E9OT2^6>VONf4eQ8EII#5
%h*&pJ??NJ^iEU)6`C'-iM]lYb-NR9mN1j`."E.2nR0hI2q&JClBX.#^PQ%5>K]8-I^.n-D[UM`GYsXu;O;q08VrlA2C^uu8>tE&Z
%>:npKoG*p*br1LRRDfW3c#r^e;GkfO+X\$aZj2Lb/<8"+p,eBPPbBS)gf3*88B!oZbGd/25UX7\i6[@4aWN#?eiia;n$_,7.DN?g
%K=p(_(mf8>Nf:<HK/6N[)a<9"L_D".N&\'U-[)HEU_QZ+^:X&MWo8QDbDbHK%@UANUk*7S3V_HEGIPNF@r-<.hgPNo+0Dc6>826/
%O$,Lu_EKI9UV]2Em%_E].dWqI4t>oo_EJ=dUN/9P`/#'O:@(V^a.j1!WTZ`W&cH;/"*io5#.[&SDrhL?!3+/>V$firF0AeZ8[?,g
%?(gOLC8D<6_Zng$"1)s0T\k_SQm&s_fHL%K0nb^^fd))PqgCtYi^k5h\G\]+`4_u1W&U&biM*+LI`0m$iWc5BU.""")-sl\=:sT3
%Y*;EaP,@Bhq:m,JIkF=fI0a:T0Bq[PM-^ieXC:O3-fpfJ$u..79A7G[9ZD-&4!&18Y=3L>P'FRQ/Dg%:AldK4Hn+24Rb]A(gWLBb
%>*,Uil_=`"\:.5h4s%#6A(GiM]]u="0&]of.O9,0N<:40quI6n*G01:7Q@;Oqa2;"Ym_[$g2fE8[$D7e(Mburmg6Re`rV'lbiA>f
%&KWK/<+['_W\+)V.2ib:,2I)af[.)02E`@.iHH&0:b[S*;`8.m"l>7QEQ[s!'1\Bf5`7430bc.H-:4J+N$Jj<N"t(q6VJGH68XH2
%oD@K7,UN)Z%;,F/n$j$*B0mfG8WGhTb(GJ?(r29(Ng4<dhCCX#J>6'q"Z7+C_'R<nm>Xmn@"9ak9Rnlu(kOaiGLEuLe^@<#KJHJ2
%54Bil8"Li&EM\Aa!sk2G?YlLC#pa/Tq[+SN/Ajb%H0ath:ToV)Z5+ZH75oG4XCJ:LI+SWD](=i.f"Mu%^kkQLZ1c/@!hFR('Pm_W
%)r%,iUD!pm6f%2jKAbjLSHldaGm4;?.aCPp2ggECkS4u+]N``s]7s)3[<-S06RUco7[t<8@`4*8-O/NtRR-TfIb\b>1AalqYe,0R
%]XQ"[]!0qQ-:Cl%mC^^cf&J-60K4-h_]$[%&a&L,YJpI16X(AWU2tu^]WgC;@bV]"_["X<8(b3)c?"1hG?A1"a4PLic@n?%\Vq;.
%P#<EC2f#n\ABENc5aj!ke]r&D3f58&V\=t.aj,>$8Y[KhQoT@^E1G"Yh#G?[jIf&M:_]:pU7Jh=8dc2KXd;cX+oO]q"@4"`1GU9#
%.?hB>q2,h0\7>k9`8OLT+N.p>a[pS,r;e30W*KH-8U`?<[=qEQ6OK%)0%.u*eBZ1p;n-YunJQF+@kB-!Er$cJ5:>X>jo3c?.a%LZ
%4Npq>D`b)TZ_/Kc^2TK,Jn$=/$mJ!eO)*rmVW'V`:.Z">To:U`=[`1#PPeIil>-F7bV`lsr5iM(8U=3$GNk\HPc`h3U#GGC$,X)4
%_UB?fRJSQ#67)q<4PG6(>E<L1oM]Rtp"&/i0:p%0**\KgXS><?O(4XZ*H!mQIdD4OL!Po?O4#/(e-A1\N(Z*l,b/PES,g5Ek-=GJ
%-i+=9N>#+_j(.!9eoB[UT6^PaO`'`HDYf4N0UqhsRna"lb_FY3ct:=\2Q]>`U18&Qoo&eC_:B@UWKX)o]I/GnmBc#^rX)k3X6;=0
%]KT21+)"N`'H(VRN8?r?>>f#`i`$dJmuUqsY[eV5dq(e&Xcs\j'4u&PR3>':07:?p-;&Rs;P20ZdV>/^VJH`F"tN=9LSCBMHrYoa
%AQVN$($B+'dV:n='dk@E8f:<GOXj]ejg#6rHRoUPS]G(Hg:H(&?gGN[4B?dPqkG0Q$?hA>8$BF9+&Wcq;a*e%clbM59<'Y$DroEU
%p':!(@=*"@hTR:d$gCmEE4n5A0+$DATmKX%>4.ZcDRui[9.3sk^_'u*'8XZt@1'7s+Kau>8@)1UO>n)ZmEXr!U\PMEBgQgD<?-Z.
%-gM5iFc`dQ&C6=X:%V;u<CkhopgJT4B7N5]Ct0Cd6,4dV#jE2;@96%9Pm$Bo#^mQF/BS/E7kJajfVQne@OV%&Si*mN7'C<2&is'U
%:25[4)q&c`&Aa=O)k+>/L32m06Oi8))4b/ikEa@@P]T3h%ImRgZ$MGQ3NM9_`SAeuUJG_u`=eiB]*+;uB=>1$&s3%sSCu>5C<HmT
%G'k3qqMt(T4I7B8,N.7JF(s?<oQ0d1BCEd6KFpDaffS^@@>"a/hFYc?C\fJ82MT_KnVL-b'U37(Y$c*e(+[F91X:'&+%"t>(8H8?
%p0:4>"2#=(+_[@3Q;[1HEPbT\.1NU?+_snL8YrfTf)bri"1r$\;mc7#G2CQi43ZK\DWB#rETb3KF(*k70^`0_G:nh9(WN!Rj3E?5
%,'f,F+)tc.M%M-7kYqZY$(L/2"R^?kQKXF$\H&6e2;b-tGOb_Df`])p!/>@k(_f;#Ml,aa:uQs+a?s0RT&Utk8/-\51b.nN>>2_5
%(stV2U+A)8IjiF%'HB?n%ik@t#?TV7G%s1SZ2J7Ye@eLDpR8?dY8JjX.am6B9bAjZJe);Wh//fm?c'8@_cEiQb])Hj.tntV8FDXY
%#i^je7.^Hf4)uVR6qfr[j'Y:1I&".S,UR+T#t^AS7#@#rSi^SrasfXa5]`jGW&ig8kK4H<NS[ql:AZT7/Z89KU1r<d`DgZ_mQE&>
%7n>Wb7mhC#krUMPkoN8aOcfu,1-I084u,UJLW,>nBmdRXF[meLet9sM>Cd`t?c=*''?<e#La`uXSi@tl@7)NCMjtu18_b".GbgRi
%46@t[q+/_*hO9ojDQWDXRcZ&tf&9Og;^(i_6n-+&8eN.uml4,5OZ31u*-i2<F45tt$cgo@*7J^kMs2rTnYc!j*:(erj)DlO2sr(5
%Igh>Dq7p3YV-!M/HpeH1J4?*$4#KXYLFl(f)UF9BF;?];NK4k_0gZKf<;I73,kf8IqaBs;$]=TA4%ZOANUk6P.'Lq$653os1/7LN
%U$g;pC?NE"o+9YF1$<Om=8-YWM<kSS?1"D@P.3-uKtJ_7CWl-U+4Ctn4Ur'0Z<o>SVc=##$@tgsZ+D/kjN`"Rc7*YEnQoFo]m:2X
%JskL2ldbXGH/3Hc'!sXf:o'ZP>u?7ki6p1DOg[`'"h-iY^r%8b5]d=8*c3V^.e9n-+:mT#p8rC"$OM]*9o>UR=mO/Rg/8t6e]rVc
%8_kKZ&&g+,RH0";`E;`_i[(_e`c!K$Oi1+\*)_+]Y])>RRF`*LX'<01nmlfUcp#oqOkT&nIT'dW4VGSqQio-+Yh<IL2f#i2&,=:N
%VM@1tTHG*i3dd_DR5")s+3LNpm9XpE,SD=mgC+^5bDkI0)DSGrk`:@jK3tVn\$qMiO@o1T9<2PtRV,"RBSe6uef;ZWP8;;eBM#87
%,&NS;d2C>`LA()/B"CB&_X[Q"U#nak1smUiFcih1F,UkVIni&jJr#K>KThrr[+D6hVc!J#UL"tp`Kg/`381B*pZUePG=)hr$g%6i
%^"T_-lJ=T$K=,EP+i/CZ,YCMELVFu6C?60+bi3Q+S5rP8H"T8fa?@%qa3q&pQXl@uMDZGd3Z_iNks+3*VW1ONj&)\/FHl$`*7jqa
%o1.i44K=giE^eI#'i!F11igQt.umkSjGG0`4A`2*.(nb_q"&"*@b&X:X)T)r\;aqP`\;:?(q25YgDIqI%-'7#E>uff/#Znc=W_Wm
%`/,'R%Lslc7,&RT,>U@O-XKKW?YHn4KP!=9g8jB1%Er.9J3>"h=oQ"+aP@tLpW4`&CBl&=jF;#&G0?+5..gP(G=-;6%qS=d^c:sE
%((AY7gihUm'S?326;:`0H(]>AU32)T.mr$uG%bGKY];&08!b^-*EX1QMXA4%Q8*S:TnELL$%%VrV4l*^=fs@)'f%N_[P:CoZ+A*#
%RV[qO_ErS4eYASd&,!6AeB?^$H?HPtG87*h2jVZKoW(3[F^J`r1(d@*T@@i0b&2V<7CPq]Z4>tp4VTQD2phhg1pfKELLh1B+$$\V
%]Y3^`Md:WbTgjN6m/&$6Q\,!TL[_^8LttM>3eT'&Le!juLW#!mLtNf:5]*-CW^Z\\in$[)]B$2W0[>%:CNbPGQY?)*h@rk&H7hui
%]>P=mc'gdM79u\CK*\!0bYki:#$Z_r_L6OsTe60c,k=1N2k+TYMYmJn-mM&L@?H9k]69AkiL=XRO[)m4eCfPLlD6uX8!:gj&UQcp
%s!+gI3X_deHj^XZMBn:?@-ObgBIBo2Iif:hb"%IBK?,/K_Qa%k(666a,I*?`818=Q$X"_Z[62OBe=`*OjNh)bXbQ4>_E+U-=m$W9
%S1A.3@U0^oG70:QQ+1(ZH`bC;bf6oB4N8#-Rk6ln+Q%3*Sn9!D2"<BYN$`.&Eg1iJpY7&tbfN;nL-]g@/Q"fTmP1:eh@A66M=OPi
%@YEerMFA4CO]/bI#>QrXAV29"cetDdr"G0(()tr!h!"(6@s$94n](o@>jt)(#3+m.&Km`3XGb,T5f[;YNLY*2^EL/%TC(RNQ@h*\
%735%Tj%6gDF6YOO+T\H.]2)/E8'nbOW(XT5<CJuHqu)]MU<KpJB/7U\bDDl*T4D;P=n,*F^Eh$8igjo5Pun(Qs'PHuT.4fC@m4Fk
%D_#^BV6.G72;J^EARR6$M"a3/9(m,GIF`n^>hjtupJCF$gJ(7.f<hTPFB><OR-EY0Ejt3tG)t_3Ks/?`<Y`>K<r[I&M;*[BSg/ip
%4HiPYkkhNXDe87ddd>*5:WDe5Q!Z$@Sc>m!?A$DhcJ;A_Bp#"FQiBurQUfLA0[fh:a6lLt#s-2'9OiLm5Pr^%5#t87PsTA5N`uj;
%#j:'2CY`"&Ws\[^?bV>>(33YYa<&[t9d.M*c6L*s>Z;%`OB;<ie2fT-[IPS08;9mb7s-2TdMDWAPZ/_6er<aG7kM,YQeE$Fae$-n
%RON/\Wc_nCeIfg]D!^OpHgSLnh>HX(5/,Tc52*gemHSJnPTAKO2I#.c1Sb5OEC^0gqSHtlLO>/kN?W!7=],m2d0\9@@6PChoC>=/
%eE9uEVRO<>nt$nYP<2>cYr:sUNHX\&.^I:\M-V<"%T-,SYui1/<!"5U3&o6"cTl?a7MAf0/P=BpUl/o6ap>Q?0%!E"6s`CiP$aM=
%7$8C%(9ujmAY6gdHfQ6HNYuCG)&?+KMG6bG60ZuaS*h"3En8rjhd]cV-"3aOV7:Zt$>h%fM9U8[&_a)s#!@eLB%=4:+6EmlXKsd6
%WsuYt$D!Pg[MW'OC=(tR%Pl^POnJgld,NkORIg^fD`PrC+Dff+_-M*lTU@.5M_6SpTH)3k%D(<@'Mss^/`c/Vdj!>k\hZ<%lo`!6
%%b[tBZD;m0"Wf"E%H\R>/M\2TL4"Po]2BBPA*>`\DQ'S4-*2g1;ibk@*GPXlWQ%58F_rP3Gub`Y'_@U//F0Yf^<0'W9=2q%@9"BG
%1`tQ[pB!U\'mC^&U/P6GUUi^$D<n8G)k&5c\fR_6N9e^@cq6/!EY2+"'/]DSN,hbcp=lXkn#t%iDpBtbH1`XFf#>D:I.?S/qQ8]5
%^0fdQCp#G+S:&%1>@1W@Skba/T/Rk>SsL3dbd7Lb2c4;si6Ncn3A!!d:F\FX!G/Or\(l=Sp<;Tqhtd0LL<ol/V8#asjI=8@r`;!<
%I>R&MrIDYlR_=O">gnng=Oqe)=t"U0mV.g+0)M*I\5s>r4*AZ_rm#AJY"DokP=le?T'1\Gd$#s&)lD^rSdJMCM*HSG#6NrHV`!>5
%bGiGtqU/'"?ZCi/$_=S<!^CFYn>Bp]##W*7=QIpL(9G:LF^LV;pb)QBcr2&M<Vj'bT2l+(5C$F1-r6&]?h^rGSn?+oMRU;/H<P$\
%=UEGI!&&17Ks8RJcf]!Yg22#*-LaTu7\-UVH7Xd@Zin&/2T+"tn=ca/$gV/h]+IaP;jA.$+TAN^k*'F(K5f./b1s>k`h`f*#i09[
%@Yh"]ao[,hg.2PS6fdsmI;O/jN7o\%3bNZs[*2\$Km&sEBsNte[8ti,8nUNR]ujc[=06qZg[%*U=_mT8]5_#GQ7T([S)'tgo-R8f
%%Nd-aV^59kDR57`dRJhN#q-c_-=mZ3n&D5KN[*-ZZ<tC5:m"U;!('l;hPL^gq'(Vhn38#-L1*qMFd^5Zn*P'4]=kt'Y?%($iA>`T
%H6#b9Uh5oVVmfEf"qB`8_eJpic7th>%]AFC\RJ5iAS>4^M%1fjXen/*8-Y<dLsA9Fh7'0m>d/Gc@8Wr4O=]DM[(G/V6TE&(g-(Nr
%jL[CjE8',@#m\Tc1:b;:pNB\K\==g%Zh-8kFh2@53(N8!R&uh.7Ml"\[r\@W\S]cL@(nb*[q<r)G,%fO?XT7odr><<DY#%,[^X:4
%[bdH9\0%[rPnD`41A-37[ae?%`nt+:=MA=B&JRs;1;8.7k#q:ooBY.lmsSD(VN-N];#\GWCk;nM:O`0-jbm@@&1a(FC*bBqYGt3q
%#q4Y`=0JXPJEdSOj.b/-U9$a?b]#T"fMf^I?;aRt1Z+mC+j3.0VdnCR?I6,r>M$=E*8.c`?-Z9'U9GB%"&SL.-9oj`CKp=hCf?TZ
%Ijd".*At[MQ=P*R_s'cEnV=Y)CA=\E*C2X[m3R\r-4M<R@->ckX(jTc$J$F2-'Z/^Qe,0_3(jLCW1@eeTq.f[9be#RZ.qC=LKgRe
%h,FlB6=mUSV/><k4$U36-j\>ZEOFbe1qp(JgYgEh2s:Z$&NfgdMoecpnMn1+<LHOsR]Hd!ToNSL"eofsKc>/6mSI%^F`)8R:H^:G
%X^/I@IVB[;EHt@W16p63'G(AR<jei'b1f`j2=<N(6C/#rGdk?7rq<>XBr'4GV"&<s[KR.FiE#1l]%diC/1e3=IWnUQ5BaVh.nk)_
%CjW`DQmReaoNTdM_>5s!?+%:M_7)P1b>*>lrO\@k!o")s]I7mTL3Wr\-;uC4_eNt"[WObr2jq:Lr]CM2ULn!uO'n72q=`eAFg&9&
%:G'3-HEeIlDdm>M-sk:J/IAD:b<[8L$R%)EG*KPBm:kg!k:*:)V]5$kV3GoQMBC440[-/uJH(X0kfXWq<N6+V>J1-$gCS`0[.ZVh
%h>+FA;0gU3hTiTt>O+)eF!(R^dbJdjDk_AYcr6.]LLK26&ok)TZ=8W#Mp)u1D=Xg-OQ=Jj_`cbsA!nukSWX4]5isV1ZmZ8+"9b/K
%ke@MeY?U*B':Hs2S-\Lu/!&Dp%'Y!iJe5^6H3[F)g:T51!`thi-B>HGV2;e'Klp7W;;m@j6Q;k+Q,B8iB&c5C_atY2AHb+kd]@sN
%l%9\AG[A</N[r-`ig]>N!EsaB$#mWD.Q@+BGn<n0U[O!0rgmug.F-,3lD`=%mUCNF.Ohf]V3PMtDeE;M++imRG:Bu@jW6!(o\^H9
%"KnUu.IU_m4k58/4%hpFSLgL3(h7n$+chr'fbB!C+'R=b3uh=^-c@suJ\rkPpA3b#hQP:-757e'U<uP0O\\V_D=Xa#>Eg?.P@.KI
%X\DZlaYtkUPZ24b7h<?GH=gn<jg?]]4TjBj'k5<).>3Ib@0$X1Q%:.AV(K44@d\*bCf-@'%;LdCW"Aj!MV8f>mW'L\DJ?GoPnu,.
%0!mJD8'n?",&="[FY7pA'hJ:KcK/20C0+PaO<ZWF7U&\s*;f*i?Y7nKMmJV:Z`D:Bp$\(tZ0_'`$Eu=eXSH>rQT$kTB:$A,5+g/6
%-RZA>5@!$GZ18]pJ&/-liL:6F\`Z:,8Ru'hh#lZUE9j.:Q6QB9X_JkNCrJbqnuO`u@MM2?":7d!6Gp*:M;^6?SlfSh#0$d_ai"st
%&4<r*`%ma26=&3j`7C3<)cc`ke^cVDqERt`.II:'Ul;0/Z`_2ki?pOM!>i>;oKqNc9Pi\!6>hZFA8:^ffjgn=NMj4Lnj;MgH.K,p
%X3;@uitu]?=&hAjKlq\pO;1!f6L64tr7#>D'NSDX;l^oFYNeaUW>.EaqERtPFpdGc/TMM#Xf5T]b>RiFjOUo9Q*mM/.3(OnjSJ%C
%m.h_X\XK/S#\u9-\RWT=mPU?Q/R9OfHgm5g=3TNPYSQciEbSZ\&TKNVNXIGC"[BEKENNnT'c/#fX^hL6>'*O6E10dh/Vp8nZ^SL7
%!G;_F>03/s_IHURJ57u%12MY-s4"B4MJZKUY!q>D:gGR2R%u0h_T>JsAKBY1T_UpaOUFfe+C:.m-*(G]F"8.qO]ePQ"e%&K+0o(^
%6E;?MK5<bOXtrNKPjmtn(&C*ZU".SH169M2/6V1U`P`iJ$eZqIO<PpXi:,fkMiVi'Khc+'s+nd>(gBaNS#LXQF"+;-lR1:DhFB>h
%9J/u[#)"rh_9h6mVu5^MVUhl;b0)Fp[ABp:PZ@8'k#,N13Sd_:)O2B%e>g[aTOM(S;d25a>\'80+FPZ92Tu'KVGR%5;k&^#:gq]M
%OK#A#1o5eK%,`tn0hS1+1:=YCe90m]1%LV;8S/H2X)"WakX('H/Od-!]YORbNtc>77?^qYjiYchX)Sl<$"t*BXt8_Hk!C90dGue)
%[rSYXRTqg3JD2;N$AVD5\aj!0Et#m_SQp7Kk)R_f.eb--M)p/#O^XPY'aDM,Z:gj$c_;qk=dt%jb/3Jb:gPlEK4bm9eR4Zd($`H7
%S9CC`Q'7]F<ds._@%<JleTL-'_dJ3M[hs\A8dhG#E?D8>T`khfk[aP&&.KSENMG!'DPYr$*1hV"i=TY`K]LSWI6[Pg)XF&U8N,VN
%c)!OH+qm_S8BsZ$Hsp;?+h=Vcp-Ornno.o9;Rt:$&"?H5IWDh@#fbA*4Lr"%Y,oiWD65>\IDEs)`X1pURE(Lq8;FV%ic&pt6P!D,
%T\bC?-^e3k/?-X\J+C\b0r$-:DM'j:#D3DU2snbI1Jec.F'-IfM2Ju=lnF0.mYSF!'EVC%Z(-]rW_@L_>>#>h<*`q3PUFWme9f$.
%13YPpZqmHe;WIWSKp@rf7-F[5[?1sRbdtr]=GhlG[1p(-nFVnPO)SSf5#U>Q:$sVihEsVS<5q/:q=hY,cH`,_QS8?t5@]KKo$]P$
%^V)\ad-#L%4+@$@o(bL&c7e.s=4"eLZ_)/SE9@Od$:&XFDV$moIs-9e^#<toPJ;KnGnYYF\!u8>D!8pcZd0i"`DuoO5/25_rir:,
%g,#]45+6h>W'g?.^^ttPh[iaFA.ZMHS_h"$0G%=SYQscKF8!fSRfT:HMYe=;m-D-eo+1<ADq3Zr3]e?9+KVrR_-Hs:hj]h!q:4lo
%.J.V/[;BVJ@sUYPlYi,&2]i85/uee&_hN2F2"B`%qWHW)c/m(0DWpRqGCmdm^:+.!4d>9Wa4p2/.oIkbNSoG"J+mo2?@Ub3XuHCL
%(++&-q/=g@fAQ537s90)n_M=3qX9ms$SnltY;'<h]t$/83SDEaU7m"2H9\!l%iSYMHQ]TH2?L:%"EtO$c&[&\NMtmLkM^q_`7a61
%oLp)Af%LqC]t(_f52#l,HMuh$fu]<f%3!Um`j<(*d3,SUCp)AK=4[P/&utAF]eie,+0If!h$dL?T;WPOXPDW_^FV;3-=;b4gd)?W
%<94U,0ZU*6ku!`CF/X-JY1FfoSpu*0p2O'oH3^d+AT!$(j[aO)!G#flj[NNneE'/*DUdc;>qX!Y=8=Z!k(X?)d.KEtSFj?XK/k9,
%DSGrDk5<L$p$("F:[Of:7X^%P-7QLOJ7&;'I_1T6+/>hl5TTWEF1U$%rQI^4$kSlfl?efurjoiBq!i0K3T!#9LFkFqR%MhN/GF7I
%4Enj`L2bqs4gNjObPpG!f@@KW+#c,?<l6.rfKRp`G;Qb'>ik,sZX>WIajp4;op<G,hlaF6K_bB6+gs[<Dd5>a)TKf.S!3;Y\)Gpn
%o)8Xj.j&]5hlT[4Dbem$0J09<2iT"#0JJm=g[k+2nfJsV/iT+aVQ5'eh?GreI*L4'a.)b8`YWMQ;MF.2R:QIsi6X%jFEYsWgF?Ok
%_hR^-!Q4]qhIVZ7YKeb=?4Sh\r6)#(`Z)Bd?TYgW.#"7>g'%uC1GDor(e'u[Hpj`rit*ZT!4MC_2H_E!%]jcfZIl?J8Ct%lUg-:,
%:^e4/Z+i"%_52"'W+6>5#jC[gE5Ul$-U0i-q0mb#<KT=3VRX?(]6Sn2\J[.eIqn+jN(WSf/A:d\I/BG\D`64^C_2b".I@PA+O>*m
%5%u[i.%_kCSpbe[VR&Q3,mS<I;eca3ff#9$#kD]4Y0Q4^S'=/&39nM3)p_sML7/V)#E:,0h@>*m<8=[+p0=>tL5b*<(ZBm!*0"]Y
%H?R"D'#JUHC?7BUf,rjVSR;=N5_(gZ2<9%FZ0+BbL2;f/FQ2t`[f;?*lX5S$X(N#;qAa2"F3$I%A.W5bm'neL'/,Q%?g@ds`ku0L
%6_rRKO\i>,1Am7]-l<M\4=2Iq@iH'q4P:EcMf4I8AnVnVI`(%JOmBmq+F,$0Er]Aa53j1BLneCLZN6*&k5G/IEc_4lF1sXPVVcT9
%g"6"J(uW*@s7j17m$ZTZc9?\:?_;-e2O?A[X?R[NbIL_BEs#Za8"o1g$2)t^deTi)O*;,%4q<^)UuEOr`l$t:cQVo<O?jkU.At#,
%^u+K&&r03="sMR6YDrY[ki&_*!J<?M$#[iPf0:Bhae>iFG6<J[hOU40%u](#5Nk+VGC=TgA/nQcDc4t@.42LPiSdHtluQEM?UH7I
%%-;S%Q6!-9Y@4NYIp;q:?mn;%DV!DAkon[6gWU(&+g-PJ&6J`J_Z5Q7%EC^2>O)3Y,AYief-%7UUpCOJhs'CYc.UtZ%F%u1f;L=*
%/r'iA&&5a4&Qk/(.]U.b@@a#rDUnnJc^_)_:VO@XZ3MSR\l[-cI<fujBHI07;t]&d,\DC'O-(gqTqIr=LIdXQK/bd\`>FGP8G:_&
%bN.U5qK%H\))@#C0uc?AEt=$OOrIn.gt9VKPUDrp!M\\<`1dYafS:Q,niW<&F,37&15M]6Sms=o(lNDW/E_<!U8U:B/BT++IdfJb
%3Q.X#)8rctF,iC!AIr;kr9AM:Yp_sDEAS<`J]+9&K9t^;@ql3"\9h&3IEpqo-dN_GL,[DrnR^K8Sr*6<^"?s.SlPd,g"1-YPeZ8G
%':ZUoOadfpQ5rVqTBDM:HH\-#d^9>-2)E[g!?`6Dg.9gb\ond0D0ZR:UUW4>CPPU72Me.R<?%pkrM\EuXGt*N8C^20p0=P"lk+R@
%`6S3h,]3]Ln>C:,Nm$YcbGZ>Gd/X`:b@k-Mm:GqgffqCXhk.*%J,:3D!LDE7*"\7RZhVG2TZ!es^.'uO/MmGuf:.]!XkWf8/U>Mq
%8p[4dN+L4ZZBqPYW3>c.U.T[V-LgaEI"q[9Jfc>c.'EI6noXKkluMtX[`S/ifW9!,KCCUq]<@pa`Q?,Y0>0^l1VS7*@=A'(3FD1q
%f^mD`EbM2po/`i>k@"U9+1eI-C`#YU`]on6Ne%Di_sML643@fVJO:et-W_*+Y!.GRqVCOhF7#$C*c-Q-Oo*'8RBE<\!X!7K^M^@[
%`m]L(p855-(rHpEp$3Z5f8q_'$Y;rM;!`*/6Z?b/D_Du\hVT1<.2a3i:V7c*3@`n\M:2:ga-LsuG4Y]BF#-2sqbo;m@rt,o'5>LX
%IcF2<KCJn)LW#:Ls#1hSkl:%(bio'IrP/)nfq+i9Q`)3VJFi-.JWt6Jq2RYrdH<UfI)f/L%c#JoqKrfM4W/[^UX/\md-]a-s684K
%GIKq7&NTXZ5BnGD6NRH/38L6sX%Q95/r'k8F2u!ap\X+Nr9Cc'LNn:AbPN6WnEL-t]FGceqh>3E5/sfc!tS$qC@=m#*Pe"ZYMXnc
%0m$N3omqMTd+H0J+ZiL.fm#.9Tj#O)!IXR`ok&:@'o5eXYKearc[NG$lL/@ekF7sEXuE7c?!XWe\,)mie(I$Tc3?#gd=0Y.[*a=\
%g<YqR5AU.aWX!c9f)IkE\@pR=%U=U!;KH2IAd/ZVEt7(3>&'eCHT'>(c:CTUNMM!+Ypg&]>@0H5F-LA<9M@nt5AX)FXC"2qR!OiP
%T<g-/%oD!kG@1nhQiHg\;U-C8=ne5q%<);cOl"s4%+r7)1q\d%QdP<nB/$tX1CG..S/$eF0;IK;1q\d%QdP:X)I>nNb>B*_c?Ine
%N[]-[1a)T?o;OeA`[O#?D*`Jc>AEV<8fA.KA$UqYgdc^i_*nU$CgoquK0rEm0k:]&ZAA[@r]C7bptSX73'Y%NIXSZT/:EINED/--
%aNSYJ`,lj?EQl@C(sMNAC=^3WaPdQhBR&R)Ja#tO*08M)ILh)PZS.<kQhH-1Z`i9#H+uPVqX%E*]e^ua)QYjs\T['VND)#K!SY&S
%I?0;!^d4*\gSdj[X7_PPiRj5H$oi*h.NS5g5BuI9p$UYVbmgh1lcnZZP5Gkp[a-i2*KBU8Vuo.mG+YZfE+h'!$!deV1F])RFpo;C
%.oh%A2hhg)3VFkA$ld+rTjs-=LXOk+62YnL3[cE'e_AhdMBRUt^DRfKjt#k835LXF*)]=gG)Xh/ESP^G1YOPn=ob^tJK87A(e-U,
%_.pQV*TL6]m:aO"<&-Yk0h+7EOk;Bb6b?J3$?d<[Zfe!R]t7UCgoSi:]fI)FDpJ+5#oMRt?A<Rm`6g^E)8pU#O:3#Fd4!2kF?k#@
%T@Y/DX6\%1]A6_`%+/fnp%L>P+aJ>cD_Jg,;XsKI#r:M_q\muGeXN&7S!.]$hSdKdomT"b+#LF%p5tO:kET^oaNAmSI<@8T,ZJVf
%,8nr=D(#>[9f&#.#Fo4CF#??F]%Z$iSoNV[+e3aM)q6sV0l>:8):k05kS'Cj2F$&)s*T/'X8SEFK$PhAaWQ<1d'`9r4if!UZ-UQh
%3[??@^r*j?%,oQc]s?f8lnrH1`t[kT=S1?b46)CDS2iVE"p!oM0!Xcqg^,s5B4]*.T!'/]5d8XL`cbj=L`(Qhjo,t*gb=mMC3-..
%2emE/2E,AlIl_FaJ-7lIF3d.AH\UKfcVC)OO=B0[e[Y]*)qDJrSK$+i;4SZV\P\oU&fEe6Kl5Nc%UGn]T9Dl+BJ@K&df%5:e`ea=
%lQML8eE<EU553i-@i2^3qp9?WRH9\NTXTo+--#kM@t)YbPZQi^OPqo[`^,fjGNU*Oo"!+Srd;FDq=Ucp(L;GkT:Fa8roG8,kf91M
%c\GW%?+k[FikXTX%t74^*65<9UD5!0;6HXKjbZ!B,NmGHEp1a>,:,lsT#p9tUH%OPOPZHmqU"H\1D-XBT)j9%1gofDNb75\820'.
%h-=76OmtdQdInUX)Vo?##ON$dGA#7:g;S?t!Oco+i7VTCHZQJ6Ua[RspGJrO+^#n*YMZHX2FE7b<ZfDH%ZMF+@K9fes#dp'*TVeB
%2>8uQ["t;@DC@:`jj<-0^(%F\7s4PW4tY'9JA3/f#5jf`fb*3lY8uF>V7Aa(Fn[o'p1WN[k:S4]!Bg$_e%H(-0)tJ#l>e[OK'hE8
%^`o@lp)XimpQeZ)3ZOi,P_hktkjFJDEGP?JKqd`GTR8EWBU&0ZA+s['*\Q[S\ue^i*E[#_Qo0EYrAoUbrOPK+2Im6N;W&g1-k:S4
%gYs`H1$JRq@CXqMn@@P"Mq'sT]D6o([T1d;7]*]05.c)iYo.Xi`lK,1Oe<^UEu`'T&"P]j)8jN8%nn]<!X:ZTTo?X(jGaDf)irBu
%4<?D*W'\h.+c=;r+.onV7u7i(0Se!G3`Z+'F=G8Orh"8#g$uSZ0eq'>VW_Iubmha0E"k-69epqcII\\.O-Vs>_*k8I%!;L,RFYa(
%mZ0H(SrS&6+)SagB%L3JCbkOnUn_S6H#1]eES-35eT49EnS3R_IdgJq5+RsQ0>mU'9JUV/li&'VEs04?H\cGB^Oji'NYD'Fo?-,V
%7bA_*4h)T>*S&j]Y`8-c(69AS#5flGmr9L62\,K/]?U$6m!=`dO$fDqS+Y)pB(m^TPPJa>NLpFQmmG?\8aSZ>PL]'^aU^m57\19V
%9rgiDH1#A>f+H:$NFqJO'=7L@K0r2K_(Ett?EZ"H^)M*U_?&Zo]f-oN][c%kEnXBHSNKK9:@K5t+/A)<oq+S-B'8?PL@`aq3/1Oa
%RLmY<e:W)hK(Ra_CR)S=?Cq#2OJo8!U:9#d?%*<d:`>g)Y'dtZjm4c%jlMD=5=dm.j."pZI_Ij5Vq:e*YFD"7?=oDSb88jmVr(gp
%\:+24J)'$#(Kg5K]M5F^b<`Y-R`_)1TFY1sKC1e.R53L8d/:8j)^MlSVr.%!s+X>L%;!:Ko]2L`J,WM-3JD,EoY\igYH#`Ediq`0
%UkZ@Xb+PF9.9BNPYoKBDWsKQ-e(dn,$8XbD.^,hUQtE5D;.2gDW-W3:,-Lj4bK[CD$Cs)LoX)nZPs,ZbX";Gh^:BPfBp!0^0?S!C
%:$#P:2#sJS]B,S<6MW\Gc%:Djbu@be$,>ZR["_F=(e!I>QHC'2<*i=nr<`oa=2mQ9^N3+NGeu&rW@Eh#<Oq=/[V5Dd`u<)84?*T(
%^M]A?Pk%GXi>r4+V92BeUsSeZ%j\;oqO0;/4u?L%`c-X($:(63jrKOQj^IKZZr<;PKb@(QEA\Dk(4[i&Vm>`+<k%tQ8.2R_"_gpW
%`Z?0;5q2FX"_efE>e0-8[VGQ1f`F)C;@NdjX#hG`b/;l*:`33/:srrZ\=*^p267QnRT="Uf;rlaJ\)rF;ijK1@I2rm&X5W>;NQWa
%`0IC;Aug(sROrLM+>)nnRHNC[+-hVdQe5&uVbhu^bgfBP>+2Dl3o-f@p,-'_qnV"tjXE`qnhBe,\-P^#D^e5p5iTq/?aFme&'Ym"
%0hD>bhZTR1.?Ko5oi.83eIGM0OEQWE8`s#^X$VQ*a`>fpeMMZj68d#fJdO@nU0<6VL;M)p6Fd->?ZHOJfkP7W74h=XEp?"T/]uLO
%0^oQ`Z-Q7a'Qrj?<qR0g^dPK<*"-&9<<:=sJ$8WkIKUB#(A_)=BAt*8P-#&KTkPVP<):(Jhu.jOlFMkq_g3hKc/g&rBXci=9="dt
%b(,pTHKV5h<MAEG3DN[PCLrD6.!.AlTL`689IMRP&b=#5+.3/I0h+3*=t3KM^an4YTi.GtJ[eN\X&Iqe2ME9'[rG>G,ZF4o.LNKs
%RZ=7%JHJ9[$Y>8Og1Cg\Pl_;6+`i`\Shk'1KXh-=#,LGQXL:5M3A0*]<N)cueM_09&]lIPM.<;'"sT."<2ICW5Rj"+OJ9U,R`"-U
%Ub0Bp^mYg0ScO^JpdDp5!i5rGA`1-LEJtW'Gr77K*3/5&C))>2PnT^S(7I.G%*4(0'PLS[-#:E[b4rq)Kn.7#i4X)I''Tk`RMT0!
%*5d.>1(UpW5:L6lAssgA62jQ8asd>Ho0b#ZJ5SH5',o)mehT[OT'cq]":MRp7B:GheN#59\Cj]Gp)oSiSINh5KBb_[`04^+pXrct
%.W84uq6RQQ9QWE`k#_US!F)X[jbm<[?[gY/cT*<j.o&85SYc*&'\1J$V1!E6`]5V:V>9HMg$/OiE4Fh=DbI!i7C@UF4m1kM20m`%
%']&,^\+#4Le^\qCFa8gEk.fcESN9L?ZaY4h5tj4_I1nJlWnH-n0C7ck0.&p^8$&UKmAa7H\ii:8ge;$Kk3J4<Ip69P[WScXdCQc$
%;C_"4;C+%i+Tj#E)T)mrX%=SB!X][dE;@*s'DbbPio"aXJYXlpkk$.(%cnFTF%b(I6L(R3D2Z/q?:j0`]T0^[5)-Lj%.kfFHO5D@
%_7fH4&NkHch]n-Yr,7q#7\<G)\R(o"D."F0(\feZ02O&r=4Pg]\]GkJq0``f12%D6<V,rdnqC*iFq,6qOKdmaNX!_j9U2=,6?CNC
%ZiFZ54,"OJ?fi+s9DfkHBV80Z#U-,qHf,4TJ,tuo;-q..e2$O#@KOO+4n*7h4NkO8#*QEZ%D]:Vn>o/GmL`?`<d<+0J+q#^,filZ
%I10u_(`6D5"Be:d=p86PV-a'Oq3u.A@)q0p$[or+q;S*ag4n4il'l].\Hu:3rhq=7O,E^,W2Q_p$3&pE@22.[^.G5-'2I)$j(a`S
%^5f0;XmXZ)08u!SbSsjYAGPQ52_P=D6/V`'apP$I8Wn3a.;(X]\6[3Mg_`b,@u-+qaCB"R&1S$N8`-2+dTS#LdmrVG*[W[="scME
%Z=$DD,M12HZn;:FJWWB,GqJm*a]K;d>qQKZBZbF9#nS"]s*\[sq?!!+)QIa2>?^ZQdG77k$3eN[NBOI1\?hTSB59:0V2dMQ'J)P%
%rTPN]"''D*"gOrk^SfX]M[O!CErY=Hn*qB"YM+Lp5<k!<;p%FgD'0IRW_rn@<Ih[t6%rad7#=4H.@[b(79h)s^>9@p]HG97+EknY
%5+C7GLi6%-a2/H7%+:)Akuto&jtm_Y"_At+IaJ'-i('*"g.?&+)5_o=5F`<kK.L*&_VLaVhH]4I#TFn@7Q2R5*r=gjcj(ff@"j\6
%14HI"X+!A!o2e1SWXQ86aBUj"cV@5Q07LFB#pFq?H[P;C0Ag*lr3/2l\ith9EIuLpaEM0tB(kn)h.6N[mcsX8p8G7G"%(E"e^'_o
%Z`ib#kjfZT^[Q)bGUa]l;j"p?Y2o>qQ1d7M5^?P487M.;5o>CbKN>gdKJB:[\E;mR8Mq+sbO<dVYrVi5F8]utEl.t7^TB.bcWftu
%G,]\0>:bL-l=F.a:B4\YT?@1EU@I7.\'%W"rWC)Jo``dDU=Q.mn5EYFSm.D+XAiWnc4VB[<)kIkb81p/N)c>B6^_TK-mXj?o)=>R
%*=KtY8*(p?=5/GiqCWpo5G=1?G7)H7/0q^dH4lCa1*'U$K\\sM8h5Uq6$O(u=]_W%[Yi2rcpFKZf5)%+F#ImD`FOV@DnAG3L>h?^
%Qot"$D)$=fF)mpP,uD)p@PV*$Epl(8g*R"le+om&>?OYkba*72#*Ho_dl$\Z^pg=U,JR3CVqs"3=1*WOcR(1t.<8hT87(7_'OVVK
%ILSYmV/f[_"Xk=#i'7AnMHU(b#]T",AlEQ'=D*I@BpqPGJul(hWG[%NX/ejY'UhTg*qZu<i5[#=XJI6**d=M=m@).g7%2sBkl[$G
%qp=BL/l8ST/2*f8l;&a'YHG#u;tF[;*i8'tMB5L:UT+&"1Gr*Q7VZ[-PB'D.HuEbs>,eJ]\a^9/AeEDj4VUAU,hD*Z*NO+^h%jrW
%04VUG9aY*QnM+MGmC>7/--3?&5"UaJ%t3qpn:P__f&_@?c!+V+!7LCND]\;j5s0V0H.N@R+(aK[hE4EQUSL$+Rn%hs+(K5dY[G6E
%a*i:T^A.clUAKp$a]8Q011q87*6pilWgMouZZ-RAiW5q==#+((j;?R.FNKA6?6"+-?Z34Z5]`;rA7uIVC$OnP%$$&HF"#YJhKC8q
%J^n!UQpt;3\:WXe^glR%HRqOG@a9a"dn_;apOi;BV!-4Ggabem3Glu)d$`X`'Ko(9UD,j`dA%C=9%!NtU3VNl?ZALc7FS`M9sFLH
%Q(i?CYo9mD]')]43]uC&;Y9\9&h17b'P4Y.AEW0bE`sC^g=G"6c/+D$c3?LMI_Ve/&p`0P.F2=br6pBNr9_BM7uhWN-qB;<j<#^=
%(?S0I(<T[E7lg.haH;]:_FM=ZI[W5c2uQdu2\[EP>_%1sZeWsJ+tQ!B,4i1An_YB%qtl70Gib<6!G,;C10Yr2X`t%AaK))lBosMS
%Jndm*ZYheP/1RF#$s>pUm\hnsF"^3%OuA>-F#I3jd0DdXIZNYI0]?)'KSRX;\.f[^]dF)-fE(Zm6p&QA#9d1+gg",oapCa-fTiN[
%,[Aqn!<FO@0A"[q@7cFjn=8Qn9<kFYMM:'BYG>!)W%4bdM+]F6K6]1CROjG61-D%aLh3"^6s)f<0=[7Nd2:eTRV7?/%Qm!+L<%5d
%Tgqsok^:mU$o3,e(H&l[g-OD-(<3I/Q1:rc!/bE4"VL#$`!6aB;H5U)#,G2l>>7K-V,KXI.48$;Q1=Q_C+qm#m^n_cVJ9u$N\%j3
%_rhPUGa;jFXd#cj6D7$SdLQr#U/\L$UenF""P&@QeeDKs/@j8r1K@VRS6gd<"iRY==E,Lo;V&e$@pGueaGt59ZGs<[5sc7_$`+"4
%-Q.ZO;3RYf<'66PY*?W0;L7[ujNjm<Li17%P.UDJ*toAY4c2m\kG'Bm>Yjlf$L10pd&O>BUIM7o!2.Wf^(cK?kuA$,Dfh*W-3L3A
%Z)XP$-:sDm`j?OcRiqLfa"sG^PH8)P+"FbBrF;S=A<M@Tk^:mU%'fu1%Z(f8m8.qC@r4`CGsrOEE=DG(K]AuKj3BCF<[br'J.bi.
%`[fQ$EbcY8",I=3KR'P+oL>T6Q'\#`N=%i![#/\SEM;A-4>Es#h/u<AU'9Q.>apha(J$sNqlmVboqW5.(J#=HSD5nE&<MiMG3^*&
%WhiiuB9g7Yf7KcjQ5S!"<g.NU&CO=Uc?'3Uc<N4`pO2Z4[tqplr#$X[LrLoPDPtXCL!2Mc;m)m9.',_W23b`^1b"XYKS;b4C7^il
%[$oRs9nR?uOM8dmXbtI-.HD6Q-;(A_ZuTlYYY=>hfr-Ui5q%^R)]F]jeV-:FHtNr[#[<K";HDB9RDe01H'ck>MK;eg%NY:tdBb5X
%)co:]Zh]fQ]41!d;hUSn-GUJDZ6nZAZI2+lj@ZfeA#eW`0rJhfgI]gA\N5&0CE.F6)0BF`>.MoZo``7/fh`O[+=[hk%?3iplGB2c
%\PJ08&WE_.^e7feV48-%*a?PQV<&^6`]YlI_%_cc[8E^+FghIJ3ee4H<&m$MW/UOE4m8`q:mfI)-k2^VNCLhN_P#Q`Rl`W(_ITkW
%Q_G%UC)sNSRl^38Ff8Dm<2(['CjPR+ArM:<pobA;CK5p?B>q4dR<C>$Y]AV]K?bg7#e;nuR.=>9Fgj]TUgd-Mr?"%La<M:AFTDPZ
%O)S;*REEmMAr9bjVKINeN]pio:m.,!Rh<*2KU;a_<R@<K'/pj6EcX1'8?fPHUg`uJT#nG-k>FICg3@VT+Ta>V05H*&[,j;gDh$/?
%R3V_rHZ.Wh7ZK>7^Rsu\lMof/,_.=8-)lbJ_$ai]8I1E+29(0!Z&*>/VrtthgY]>.[FiKdK^Qr5pY:r5U!dt'FEX3rNAi>DTk'D"
%hUL3J30)8W':0k!+ql%(HdY8SX/'/cD#dF4-6c/HXs*W%=1"t))C>r>j#.Ch=qfR(;ZhgGh@>kN,$,:?J^g\o^+g=.c:j]OB"PUi
%1lI13I,5BA5^@OIW6SR'J2-l':l6&oH6=4hgF0^jPr,=1bmYrP[ZSes]fC?d9VCZ*HP<37<GKC$2,4L"Qj7=lP9Ud-`mM7U1P#$h
%L;a8-jKMuW$#[KBo>nd*TcSA3>^,o4O3J/i%s"Bb8*I&`/@m<AUn_$P0i>0W,!\FRG',^aT&D)E%Oi%>Kaj<l,)&UMJqW?8U[U$/
%dKE+76`CI(_59[/Vi#1/B<R%^Y(dlVe**-[D+^+_)/R1?88^kN6"OG6]O`;cemuu;XQ4-"nbG%m+sOpDW)9?+'u),!N'Y!*j9Cep
%^K,&<Y-Bf$4+q1#LY'0:8L-Z9)Uf?mS!'U[#'8BW$\]0b@]g7M?a2\8UclWLS>.Wu;$PH<LD_6+D__?=2"DU[r"U)Q./BA::^I%d
%(I\$SrdoVWMlbHYn+NtRfI1fgP]4[XWmVDaEN]$;)@D`YE<.*DKr<`#^)\.Yh,'oc@&$=%f5TSABN4C_4uo?p6>7>UM((O*0r9>p
%3=;Z$7k/V?5d[)"7#a;qVB*$d.D<>6#Eb8B<1t1$\Msi"-o4SY!`p"&p^oc.!5[Ris']rIJt^IlB#.Z?+-uj=DL2<7Wm"(\7JNjT
%iYe/$_2j_P`XDiDPDlUaJX/b`BYurG[:+\\mLYI5`)OOh2t@5BU:&'d%RVRF&Z58'3n/GRJ2Uf^Md(02F.^T=e!W/u.1B?I(r;Y5
%4tJ&V4)1]C<iH(0)PW>-I@g#53q?q1ohJ4"eLMi4=:Imu3%ArWCWXrq^A4KY8gRcl6j7P6Up;ACC4XJ?7"4hDSA*Ak#`K^"7>Pbm
%^hILMf,2(Y+^9mo`,TCnQ7.SJ!p1_\CC_VL0f)QDK1<ZhR+Q'hUJ)q]m0.AojYBHA[m^luc;4kJBBW11L32\fNUP7Kg&k$c1lb(Q
%ekM^WWf5IM+t^2EQAZ"+CSp1Xd2Lf:2OUU\,2l;ug-KdT\&DGNXH0.&1'!F2UQ.j;,t"gQP63BffLS#E@\_"E\HM0"jJA2^,`Q+f
%.Y@a$WsU#kR$+Hm!5Gf=*NnXdApYfSo24B3nQ2t@!Q<$)H=66RSTtVeo-F,`,HJ3s*g%R;DI"\%ritF=!7fBaItar'/;G[O6guXH
%Aj64H)S#-M9bs,KK<AtCLf_[9,!Q.2?0S_nP+)pa:Eb"pFA5&iasQU8MphRn?dh_^L.EJPT.eRj%V6EB2J0BP$KHjooE2Q\%O0&S
%idPq+a2fFP8!.6`OUlK=&Qe0hj4f6B+L!+?a?n%!"T^VQXXQ13ONAX--nmTP"+T6E0*+a3m%DV!N>NdG6Cj&X?.Ku6bCMmG%S::a
%I/Xki-5.[U2Z=BDNtocDdnOJ080O4i:C,9%15edE1YWb#E?e[;$aj'R.\h]9PV8:*X,FMjON'&5Jcb/#5m+4s>rI.uJ`kb$d@CR2
%K",*pF+g((n?@Yt3inM[#KjUG6BaY?,J$3jZj]nli1`d3UJnl,a,K+^>]chLl[>-M.4^'?VN`aK"A3i8r!->6;I53q3q$h&)9[se
%'[4Xl0i3<[.XC)u#C='q1EHm6N;j_)m5dnI+t<g>(D5REh>,*q<uL0_/!/Ec#,^HZQRj[V]NX*rM3:JaYU<#qj=tkni?oF\7T!tA
%4/M/X>U,C7*V`oNg7oiWhbRl1OV4a_`8N>Y=smc(Mo'uH#7&$dJg8?S-K6g^$#ZKHfm)aX^f=pr:W7q@pE9p`jA6;^k*(>U#t$']
%CD$G!7BRIT!X\f[%53tIm^fE)>"?;qT+&9:.7ubQ"GACm<-%@K7&=$g6"Zd9#c$e(G]U?9k@T/@2jdCOb[Kuc>V4,L,BB/:h,VS8
%iabs^Eg%Wh\=-Wp5'WMdY&j;&j#(b"iAQj`;@5Z/>*fO1FaN*4<!BEeR06CCV:n6n/+RWaC1Bs(%[fusgaFE/N%fh0AuIHHK2"gS
%m3j8"iMQd\j4p@YB&-p\`ZuN(jhQ\qO.j>+-Gd,6HNV]>-\&b$ouK;EcS]/<WE?$2iS+Bh@H;2r\m_kJQqg%O[g(aRJ;c.tN6$3D
%L'tWUL<VR;erXTA(Rtu)h:`,S)Eooa@eD8`(&ppAAo2Y97a)Wt;i0MLppU?)#YfOh'eW#c7&*.1E@'tMb+Xk#+5^Tor/0JZ4ga]I
%N1k#<&l*"hlC$#o\WqY?$IXd3J-k:'L.PN0_muPq".X'l"%Tp&TuT+>LWNalO=.DG-Y71U;0Zp?b8CO1L@OJ&S<0/9mBfHaCm,@K
%2s!7\ULP0CO]+^r;:YmY9sI8`-iBJYf1QS_mfXlDEVakZ`*E3HSiI@@*,8kN?tq?/b'`t7g-#U[51"!upEI0k6Atqsm@gg89`3d6
%DdN&G0(C3E6L!9f*-!PcK#SbkoIGde<mHHRK8;sYH$YlJ7;sKoEoU0/7,*@ka;.>GX%b,cR3C!J5G-DJdWQ1MPd;ne,DqkHC*tKs
%qqZ8jA6kUPR@U0!Nc)<\?&4eE&(<4&'SRao&X+,%>^VinQ<dM;<,b!ReY#-hk_<Vc3,]B9JT^NB"YRE0`$uk.2?(U#p#KW*Fo>U,
%5I)CPpCJSTd`F.,]Ut^6I-e0f3`E*qAn:b><cBs&hi;rYpm!j27K1,-g5$J7;9<iLRC$I[WY>3W@BGIRF@I(1"Qq!r7PQ>X8Y<dE
%)pOA-2WcA^gG>m(#L2T_\*kc`%>Ec.rW)!Y-k[*$WoB9$Tnr'6>F^oepF9b2s5F07Qul!2Gbk?"d.edk)@Ade`^"du@'/Pb5A2bY
%>YMg%.U17]J<mep[N;MAl7muYP1DQIS3js87KAm`D's2m5co:(\on^B6WM3eM1uA*#:f]?bi'-fD79G>r;]'(jH7QFQo=*):YR[@
%9o&CG8iN;b.<)mnEEcV(OEB$W;l_ZE99D"G-&k8B8_VS+*!W:%)c<7LQN`'>]opfIP5R07;R2`/0l7mkLSR)>eoY$NOPaq%\+qN`
%g1),?9Jb+p\KHE8kXY2'[jX8f)n"ZNGTkf_YY0_Y\Bp>V8Z)>0a<e+N.XJ6PiJKnm_gH*Lb!&su1;d]Bh&73g=m+MdSmauha:4%6
%Q%aSOT<,jf->KG_E2I]f[EPkME0ueQMJrVS(M&RMik[kU[ALPn6R;p*S>+4fnJ@<7CCT!_POR:B]B6WmGr!)?6&$"/e"ILuSpan7
%9&2EQG%unda`ibIPfOB)2VLidH+#l"b9n1Yi+p`]k1AN1'4\.KE40i![EPj"E4C`\6G'j-g;T;g?i556%;VFt-=0GT6YEDC,MLgi
%]ANrNhIRg>12FgE5Fa)C?Dr6*4Z+QO,q!!$1O9c<17)X.bqt/X6XHYG^a3HJF?1u,lsfYiVJG[\ag&>ZB03"qb7$H6LRU7=oF^*;
%I*QQeIS&,V-Q=\Z0i.MF:p]=hJn?PIV)N*Y'&m_s+JqWpQ.9P(FQPq%?/2Q$NJWYIYS0"F)$i_PM(h/1g?@.MfOoWE:.4\q=CVB[
%.a"s22^Wt\\);)cFN^(\8)S>"`rb9?iGXYS`N<2G2OSELW+AELH*Ye3afd&p5M\:<D@\^r^c^<6!d)Vi&R@J>/p](%aYY?",[qk.
%O`ZW2$>#!I9cMn,dUQ&+ZPIaDX9<6pFh5d8>[q6DoF&rdc>GW[Fp&:6_KGo@0psRK*qtS"Y7uFD20*n-M`r3FR0_7m0:DNiUY=kP
%HfQ5W:p`3;\\ND'a-nnIEWRG(*"I,BBP40.@[UX\NG]2CKVTV5'9nF_\REl',<>Kk\d%&ZGU<<0PYC7NCRJU$iG^TC#"/m%4K%.F
%nh>-k>pU'cYp\6Ji<[du]^[1[8&TFC#@WLSAAG#Mj#JjZ67\U@9^%BiZ,h./f6&Dqq-h`A^BOr)U`I>sV=MGjDHM;5/!Hne[g(aB
%n1c5,_3rU5ehY.'_VmteO+p<n8=]Q;[p#:0.nShtM08H1KT6\tOk#aC-)]0[49k\&F:u_CR>A^$Fhj>E8:JP"QPS+!(Qh&lSDn]!
%DrO7dlkN@PW>Nu1?*LGp*#tJ#qb0Q-UVqJk0`U&l8;9RM+gpohd9+MM1.F<@nK(=4;Dn@E"oK6DFc>?5YY0X<)^Z1G@QYH9'Og!Q
%7ZakC=(":SoVK8f3-7:u`n+5'\E2-CiH,*YMBP/n$TKXFe*+&LdC;;\?>+d"'uZF/CX"*!_[r`5ZKfEKjZl+(`rC[N+HpQeG@Ls"
%V"%S"ISB;)'OtdcqG0A1`<9fL!^P]D`p@q:)h6qi%]E((Y)SGi+]*`=1)T[=k$*[Ma6-!U#(8]iYt@s.OC8]Y"9k1EBSq'qfaDUE
%6?u$s<1+a',t0./N[j2ZjltAj;2QMc-(m+WRPHJR4Q[3*XbK'4/*:$upod@41D(Y20Hq\C$&?S7L8\k]hNIN3,Yg/B_WM-]oE8,9
%MKM%'PmA01!>LDS4Z6iKG/]ND,.d!jmP:f9jiiF]L)d\@NFWO[7Zkc!5_3/WKZ/mJI/>@NPB(sr4\MAj5s*6V6A+QcnJ/B%7q*a*
%&^GV5]-KE#lZ;WLoJ&m-BemLW^n*+]b<n@Nb`-$J8PcC?=,@>U!+R7nG?);s'O!Cu3ic1S[$9XbnSf=+M]X6<R'+BGKZLB5qHm.q
%:p9uc%OVM1L'S;%^m+UoPgnNp;$^MG,5Q9[G_X&UP^-41V=bE7YmB,6C8G/j.K`ibX75]n.!363b3/glTa_-C^5QP/.^@P>hgu4V
%U,[l[H;*6Uh<[OD5R4Prq[BqFA*26[hr4`N*BEF\N%#Lbf3,X?g:.QE5cEb.KM'U$C+FeJi4tDDm(Y?iZ?^bMJMf'p&&tsZM5pa.
%:/1tmi#ZX12P:qg.!2&$J('DInWapuLR6B.>6D:l:ajS6iOCW)BX#j[hV_fE_:>3rXBK$V%f0VS]R)gBjHBZ3a]d^,j'W\S5KA@?
%$SQTpQ\p@2=L9;j85@shooMTt-d$Fh3i^o3P6aS#(*T1j7P>BZ,DV:FUN04ufGIF=\I)HYFQ+QNaM9bk0&s^1;MhoWo]p<gUM'*1
%oLbl/H_-sJM";fejtZQ\<!BBKFIW?o&KHmhabe(E!URatCl=2e9%$^>Pkbuc-MXrU(Ne[lehFP8BQf=L76p^$/ilDR,snGLphOU'
%aRGC49M$Le&jo%V`aaH>L!Yh,[NNV<4(`*)T5BHbdffNb`*kdr6[WD[&pHSC6HD'L.@89;r#BbdSOfWL0#b.(YV,?<:oJ0%jhEI"
%&gQHdiqt$7G`>F$1C3J+E"?hW<+31-8Q+@-;(!==&X.(I:B?$r$^J8gOjApHj&/Gt-!!S/02<G])3@<Z4:*\A]W`B3LbVYV_qnd0
%!D@>JhCP3r;dk?9Zf,I>,k:C4a'PMKfK3qd@e`HgB'AJ+7HLh8N6*"WT#_7f,ncreOKAlBaMIHb9H(LR!>n&d,?o;(ifm+uKao>W
%SQQIhV<P*#$AF(a*_4Q9a0iQNOZoG[$0(s9[/r[Ie>hGQcRTT3hB0j;W2=@PMH5N^(ZmH]V)@n,6jjeONmXm)iY!pI+.J?C"b[(1
%L;HrOJ.j%7)#ZFQJBr1`:SV179bO4Odf`Vpef`ebG`/OJAn@#3`s+a/JJ_HQk$*.P'tF/Q3cL.`VcbeqT^^?q^c_^Fc*S)tbc&bq
%e3CY?@K*l:-g'/IrO:e)>qST%.V^UP7G^!P!p`g^:g*h(PAV%G&7sBFFb'q\/3?0g4usqLB*e:@6joV%SXuHN@jY.n\.p>8E'fO?
%(^]54n&$9I`dp7(rD,Ib4&ci)%p,?Y<5c=a=Zk<0E2mHeO8[H2k,9QtUdlehDp1WKBr$csFe,LL)*`[//3j6]b/!MA&134YjFm:K
%o'7LDRH#NKUPKR,)bb#5X_C--nIr3+-imWUMgM4!+6J?mW4YZ8,0fVK=*VOjk#(bOV\mBSH7f5n@I,g7]Fa;[Ac!Yu9B.=m%0g/U
%Ef/h3*a8WDQ=2=HnK%EDPVj/e5n(`e";Em2M:Dp^lF<M6R"AgA1G9Ccb"jDKd2a@g\1c6q)#.ci^gj",Ga]ARCXb'8Q!Ck:.RF8?
%*lE!TLnJk'KD[[*6eWdlq>_\u`;5J^S,(#\`W9f@?g1&6#@3P_0Mh.2,hm_u?6Eh.[mXD^d0/36OZZ6m.-lL[1>^E:'Zjd!.VlXc
%Q!VN1&kC6ZN:CQ/M)o(HXOlS/]&PDbo%Jg>"\5(^,'!55iu_@@^a0q.4/XmX6_fM@:PpPaLe*b,*7hudoW3ifSYIl<roFDD,'0r4
%^KM0eIVB$[G<,.i"&Z5P3'":aT#FLH7=c4*l(]aGreE8mfbd`50Z'aWA58G`7FC.=G"PA'J/"E=6HlM@(DapJ6I)kE\(#2[A/JeA
%?S%c)L@9jnOcL7(=]/5>INF]2';M=R'FB54_kebI*5SG#A7?`GA\-R*+Jlpt\qk2s8D(t4Mn,iI]E000$*V*<\TA0E$7&[ci?ABQ
%&15Pl-j+l2!n&r%p"u#gNNk,casBW6fmk:qc9.L<r_?.E&gM^K5S"8gEm[YL5cK?@ACB.$.ULi%I+He"K/b=K_66N%)5qm:LA+$?
%_+,bo'rFPT^'8kW?qh"F`p`6s\g`e%&B+Z6!i)WU5WXH(-6&:>R9q3_UhnK?=DcV!d+"^oL(0>-FbP0Cbd+!Q-Q>+&N,e)p8YMb(
%=&NG.9@QS>?H'OR.9qS(F%I$B*d+/0A>j]pfLF0G-Y0(ko?*f7+&_O@ONPoW'Q69!ObV_rJm'ed#XnphD30;Tm:D[\&<pEr646oT
%<JF0IP\#`2q0bTqJk87N@V[rb?rZfA!CS.hAco,)5F*I<PO\UD'_DIOjjV4+)5sTGdLprd1Yo]3AjUkR/.6.GN*tF\?Rdn=PDN(t
%pV@`EVH>OON=i4N*;Vd';$V[$..Qmt*Id2ts'=kfk#KU7Lk"Z\m'8o)%0oV^3AD\L38JD"'cK,'R)o2s`7C#/.bDuLrioZ_?J=J<
%:/i_#*jJ9`2^n1DaJ_e$#5<K8I+Bl)dkA&LFMuRt:S8,^"$BiBI`X5S0kCB@hCB"`#KCT5<X*(Sa>R&$cKFecL4]#r\sA;0.d@<_
%L,oYt92Cc1$1aHV9IYY__b34LX,J_.3NcsBTDpbr040(saP6!A4\TjjY8/=Z!V*qq@ZI2%'t<_`Ye>6cpjIO$DODSmp9qTB2uMMa
%8Dh&XAP[+k`tbLD`:uCRdnlk-(o$-_6t(=^(ciZa#WT7*F'-H)Af;\`d%93/4%Ee89cO$L&oX7X-SLucY2n]#BZqBBA"pEB"_Tl/
%[[[gh$4"9gQe[S0caI1t<oIB/1g7Qsi2HSEYcpO!+Tk,;pgY@Hg#qB^j[n,uP-/2u"qJQAmG#>q#_HEH@>?4U/sZ#Y#!.UNMHs+i
%X:(E\]c\aPlXC!L+SN%f>S@M,]7:n:BHH3(:XBC$99Q#!Bub&hTNCrs@CTD&,<+Z8kNN9tneP[C@*$Z+7X&.K"<-#Y2Z_or:nrQX
%a'kJT+qH*'mA="BN;.D$e"SjS"(U:7laKG?B'eC$Bc=1N*H<],MCG6?:)M%<J@d?#R#O'[V;_c5Z"pLIZBsr/ndE7#R#_T>"d$SM
%N8.=,!^N/`6iZ2=!:Mf2]uJ1h7)FG![R>EdcInRMQa2a?\Lb;@SFJ[_$4N@51n2VWI^%76iQOWk#D($)'!JIsmOGAALS]@VI^K&2
%V*YCae07H@3JG1EHc(m)lGoFk>pbVbOfc4q!j(GoqN6>4KSo*Y@4dhe-[DET&WYoCFN&M!-)SkN.1K>"2+>1i<"L,(,jBS.=Z[7,
%VTgS])C)-[)g$%_NQYnNCKpr(p/En0`r5kmQ]'oH_@@8UVT03D3\EF:s-K?<GoC2Zg%/R"mdt4PZ00G_q)JkV0ui2Qs5iFJi"EQK
%keqgTnU^7FhtrQsmiO`)Ur&9&cXIlR8PY\*CAkJ(?XoU7LfM%h='8B&8Pf>;76EOe'&#GnVhi)uSh'e\`;(U?%8ns?R8Ts;.7?'b
%[)KdD>H@o%+Jd()^h/H68cg!F-VU=56\]Y[;5;VnTj$[?M_$kRHtH0ubcFBZ5o7:F,C3aFdOQl;+k[8Wd)'Cb).)#^VqfeAap#Kb
%i>cdaa&?ApB]m^:?'$kY2cfjO#C==Ymu2NW3F.`cN(X)gO,H!:3;GO1W>T%4K6\c,?nKNn`eB@*qcXn+l4T(b##C^68&Nt6auBQ+
%,nAS#LY9h'cbX?_[dK3J7K1,FqKEX3nY7ln[tMW`9KT#Sk!W;7m#70QRJ:1EOH!0R0AoDc=F<RaKTE5<lK8OZW$G8kE\qc./8^TL
%==g!UHDrITpX15)BlIfUc$?N1r"2H@i'T_m5T73nLUD/O&jAR,iPn4HaD(N@kJ^0tlS>$Y:$iRB@DtV.oE#+DZjQu#8g^f`E;(5-
%0Yq%f]nO[ABuQ0ApVI68Q[bf^7e7l?*_ba5,A?cCDKj4AP:0Ujg^nk$giFC0.lt4"e/iD_DNg7%2Y4j`C"Dt9RQA0I3VlT8WEb$>
%gXB+&_&K&#N,QE;#Wcm6&<[(C'NuP4L'W2S'[!0M91js,%I1XMMeQ^[dTrW<#+OWQPr+6^q-)prJ6Wh4ej6dY^XNiJ$<U)]BH+pA
%W*FWR?]QJd?k@&H:g\o#b,']A.hWe^ZUfS"eg"Hhiq^Y+NAVn>T6#H1R+#9MU@?j4kB=C!jU3duhh'DqU"N*G.g9!$"&[@&-41mu
%60R5"\R1__Oi,/;k)m3Zb%)!DE*9I4_O5n$&TZH@"JjB?O3KGemdXkAiIhNmJR8+pfPH^0%7utGbVO5MVJnIKWR!h`6^O-KSh7H1
%FE21/#!2,n1CE&U&LhipUV`Bb'kP08fC#0unNk7h(YCL34[7/VO:6[hqHTS_>ZZ527s$jX1d:OC>g>F?'RG[1j5cP%V85SWZ;j7P
%#fI!^O>U2ZO+<D!FX?E(kV7T_"sYL\44ETE4=E[=lB*keWT32EAd0bO\ja23MY%J#mDj3E$G"j`(S*\%*6i%pmXjHq'Ut=V#8dhY
%8%X(fO;X>#`q"1\-M^2l/i0u3nP.UbP_N(<U]]f<U+hK]J&m2"*!@ZX/NN`j*LN3.1H#QRBjX)fP*iPY&q+BC\od2Z\Nj_hBc%e/
%`_,6KEKrPh7j(`,7+ORHV-r*>LAI,hpe3,-5c9#SBb[m-g+>U?T8l(s8=+1so=M["6iAV!@?3pua*6,f"uj"4PGH=FY9.,:"tXFr
%oPQ!1i%X6$-[KB$>*-#N>'$)'LT2iAS=!`0R'm(H0c$CUTgq,[lFJ/75VWU16A:1i6>**';EE/>'9dBh@BH\GaLG$2/):14-e9%J
%*5hK&Z^.M['g8SJ5K&BJWE@IGEiCl0U_6-nBQVSG],.$U6N<j1hCP1>%u5gsX'HN#1!A,8O+4S4ZsUR!J`-3t-DlGoqI4fsD^r-?
%+6o;R:Blb8/%&/P?Js8$END-^\>'m\luPW]'9*'LJXf7,Y;gbW*S(,V-EchcQ<1Mc>N^[OW9GpD!S1'oDD;`m@+7i?/JO4`%5>S&
%:e3H$;ir:[oODJG)68nJk%KN?Z8q=tXD#o=;<%mn)QmR6BdSeV!BFoY\m5^bK(_&ql)9ETl_G.<MFR\/`bACR`Il[ujS+1_b#J-L
%j,_>0LZ9"+`CfXRn8/=6k/W2R`:4+nkh+pOA-(>2'a=D1h=#5jLEkL6D.f<#*RLbO)eRna#FESuPT=h'ldX%Vj7mY2U0NZpO,0\K
%k"dL<@E;mdcqoufI$RDsTZ;Ll%3&6#C<K=/;>E6dT`[st8*XCI0cj,6kTJLfRZ\J)nk&$o>Q"26]B8Hm*Z^sX*V(%G8J,.J$kb;[
%W>,$,::_]<B,fYf*,8tF$hIllcEBn`o?a'o,X[S0i9H/0gV019.XW[A(a;)4J:FLuU+Ch>2Q!7gC=mee3-imA'SCFL2&XFZW%*PM
%bD[RE0/5DEWgqrub67dcj:Pc:kVh]$/#HNOWW59c^%&!U/,o\1c=NhRs#,-m%GbZ`"$Cq&fuf\ocURl`nd[jlLb[3uh.W%dWBB<r
%.rFgenR^=ULg';p]acIArK>?`#4ZC%JmUZ0H.j]<-]C=g)&7+Xd:ZR>"/lN::(g*\\hZXX6O\[,JE@[U#8QA<8k,,Oq,((1#Udng
%83b3^rcX5ni;#V"E=)5U\S&7uL,7-o/q`0,TS(/u-]-WW5hG^K]CpO1&A:c53>kNiY]VdCfK)VnAQOGD^4QAV\g0XU)fZlVoZ++[
%[;Ju&q/*DcN)BSZPCtCRH8$7UR&s\R$#)-<=^]Gh^+@>uS-_r+XN`\%H<F-eGie*C`mL5g=?O=cm,]=Y*WLutloA=n+'DA7ie,K(
%?gdTa;ncMJ1aQt*rf.TK@7"/Q/PaR,Y"=hWEg%?*)qFm>=iehF&M;=1]l6]f%X?JGfjPpS="7S/`&N3VaCh)/0;"RAO(qem;ODt^
%^>pM8#d?ABYjOC!7)R1!`/2hO.#.,$j.o[^)>QKrA4>dDOk/[P8nQWKqj6L%c;(Rn)8L"Lk?U0+ZJ!"jp4(E7l#.16D5Vd_s1UJf
%"s<qTQ_MA*jk`H+V!tJBW?4'GKbqG?B(+\YIk:(r/+n(t"o%6YUt'EipAkm7"^*f,'FQRCYJ\\]?/`NV(tfGl`"0k0jY:N;qV]L,
%'Rd3DL=gl\*b3D1p9H>@qmsHH4o,I-k_fq@oLWreEkTq9p3[rK"LjE:R,4ZGYPX)jWDIPU+/UU#6Nom!+6d-_*g^[_YopYmqOL6:
%_uBrBs-J1U%cb[3rkT>FGfK>Jr/W9,5O``P^MIdF]Qj\\nQX?;k:`6n+ckj5F6eGOdW580baa8)B,3>i4=FZr@4qPRamCe+/c=ec
%0Ycj&1@Cmso(]6V65Ku8mbg8j8@\SIM"q_j=%+<Pr6:^M/8=H?`_`@%G?"pdkusM?:&#nNgM.N163Jq&W@p)^Ihg=>rgSC&ec5%:
%(7o]\Irsm5PWLX?V$kUX\]Do08g'Q"hG!bs<1GJCenP;Sl*JN(^""QN(N*iEGJWsg@ES7lX-*44c\a>?U!i</H@^;anfQ+m[bDT4
%M:Lu.S,WK^ZG;!@/ks*rR@u>Np03/-07DhY2>7BY0S@gF"j8es"o>(rdL/`KmgWrt0g"52e/P=;h!s6of0*tGr^bHjm2%q;q8uto
%E(>+7Kkjf`]V<,:D&sFX$F&QYbZGOo0ta\^[rZfA)I0_IaWKP\YCPZOr?ifTX+#-WpL`U-i?9eD^j%Y38Og92-Bn1+DDqS^Iq"TL
%1r9di-F8VPLl'l:Dq=p8Cg>n-pl@8M(fJcIec.1:FF1->Fuof97iu@p$8EVErWU7#IlHkH2t1Ht+>]Mc?G4h.a2L9aBJSI@b@D7D
%%/dS03amK$r4*@'G]ULIEB8:02!iN,=f$K%Eih6.=_HRJRi>^X#",0$*/E@Vej#Y<3UQc+gY;6]%*EI:f`h(N+'qaHH.3$qiuPN7
%rroNFj%HN2!'&Au6FY<_ON"dRDN(-[g-"d\S)\.+b;0:;cl>-l?DHc))uf0hr*P6YQ<E$c\*#u=4E$t0?<D,u[#97Us(M!'B_!fJ
%P>aRa--FbEpUm_S;EsOI;677P`tRS$!7Oj-+Y^Q"hZ=)[cfE,dA"Y'$Tl]"&pH3RB!dQp'o:-+pdFY'Db]M1sNJA"[WRjGJ_ZuHK
%3G;dtf@.#A^t4U9KlZeZB)B>/1Y$u_ApU5&H?"&VD[t-iEUn`ib)L?Lopr80\'BLWQ;)8I;1IMX'.3df>A)Qt7"5mCA[57a=F*0,
%RPVfWaYn7?CMWFQ%]/a:=u8H>P,9ASIl05(NetDGE\_&Bs-#0TmaD-+QfHf`ITaf@cGV'/)SNq!?30o@Z,"[sWRu[ji\5)J?2X;d
%IhnX+qklYL)/Ds>M$W*TWM2p?V;3YHa'XE<s5OC"(t'3%H9acY?)(s@Ig"=%g[1T6O8MeGrZA>U@6sBPp!4`C=W+(5#;u)-#ZDE*
%U+i/us5*)gVEK[kH+h1#n9h\%8[nFies6uPG?F=)?3]D`e00Y"72Zt:M\CdOjm)nr48i<,pP8G?7_dQb>i-@8qS"ET2#gXVr;WP,
%c/&KB#,PYd"BN(\3^.8qIt(l7kJ)Uh9o_FU\_!0i]_meNIZV8.fB+`+Ee-lS@tuK@lRra^m/dnO(:$4mKrapUOH#O@jI:%4j4G2)
%-nJ2HOgUQ"/&55LXF^hRXMcsj,1K^gnSRMG.Y4B!YJJR;&6JJ;<*[I2mkjq?fC`H#c'@<2@4-Q-2UC>Goj;h3T3#6912r]B^\3/j
%jPse?gdcH!q(MC0FJBrE2W9bUo'LYmF3l$#X37&KOtiohlCYQOJ+BfC9$8S/!r*;7<ZpZD%2NUe0T@/$iM4Y,Sf!DDa#ZoB;Ipbo
%$Qb"O$3!_;f)59o7d!3;hO$Y+5Pfg<qOWtRs6FC/r9p?<<:rBQ>A3fHTu-UmFs_^.0PB+lU),;.a:a[JVSFW8,8@*G"Y1AHqb+#m
%2iK]c^Q/'gnd$rCd)Em2OhG0:j*uhbqZ5F:([]&:X;\_&3]h8XC@%dOU>=_(:]#Jfru8R[i@Q'35g'AB*Delo>3@RQ9n%4eqG+`[
%*"8:KNLb^df0/^KS!<Nn6\<,.Ij3tEJ,&F2FrKD62"Tk*2/)hN?R&,t*&X\ml+!+H"S94$cPrh7mWuFJgH8.V#`N0.8(sdFUZ?SD
%h;:*E(q&A<!,:2@EAD:3l[#bflm+a%YZTEW`thRR3)919Hr0XFT(\3hAM>'!d@+/SJ+u=<5Gs?WrM?38Dt"p#,#HC%1B!iqO5]6Q
%P>AE;P__>b6>R7,Z*]\[=rJ@.&"%j4/8rC<ZP;cek##2JX:"8D.P?re6Ce05J?Pr>GUu1]f*gV3s$AjYkta8[/m*Xq*e_I^cu8>B
%`q7[E.l)^=Q,t#BNN(8.*`6Ii2MdDh)%B^2&#bRG0/c$?[&pN^>alasr/-5$$jV?WI%G>R%5+8#0iW^:S8Y$S`)U903#FHmN[Y..
%"q@=]_SIHI<1nM1Zsr#:%H))^J!<PRX-,1p/sD0]Xlq_b'DSnSWra"i$Jf*PUq2&\_Z(kQ,/>OX8Hbe433)W;UBn<J^f)tU;.(A1
%)b^Q/:rGJ?A8WD+;:*-ejk&jT3Y7ZC'1\kCi8Fnj@[,If,H(32F:,(hU+jA'a1+[(%Z)L63)MAgAHSRG.E7LGUh\_QnBdkiA8&Ot
%24Y+e<EQM7HE3!^85C"%UO#W"<Nu(^QYF.D)-."7_Mq!B$h62MH5s.4\i`T=R+3#SBF0$]$&n#1%QX,2.dM>?EoR</5FpXK$[5J>
%1'"Fn`+L7kW@$AAFtFb,Kuks$aG^jBV&W0^)aq%kbiPt_bC4/NEJ^[1N%WE6KbiC>KJ']T<rnjt%7\PCJfl<oN5.cKAT2TI:rlat
%CQgNeDNWJ,i2!1UF[F`<@>L6MGD[.uSQh+N\==s>JKG770G2YT/L"#]a;5rS#6@s-YlG7c3X5*.oQ^?2$k+0)7ROpQU@rPX'!m?;
%Q>0!D$JZdjeDCSOKDIYq<rr\d#_EKa;R0CK.)OfKR'Bb&Sp]148l/rA9PaQs#k6ij!TEn'UCC_8BdE`\!!3W7?jh5B!p_@LBpGTK
%g0'(+FgIZQM_Mh^5c\ilg)UIuKGu+k"As2lf`as]0#I/3+MejFCUCg->E:T$"fj[?0Z0:EYsAq(8P#QqGt:6CX%^TmoWX:,/.8qO
%>Q>6[#lR1`GmG'p.T*68SqSRR(+E-^.5>H<??3(0N+X#`bkA0Z)1u1K$u.5hM[?"#\euBa!BC\T@`#@,&K<VraC;)s3=\BX6s;pq
%V"?&lnkVqWLH!jtW2\dO"DEo7!5RbJ#]q^HJtF_YcN."*f`=6$Aqu-]A]D-ZgVJ,:Goa#D(.]VZLSYJo]S$L#o8u_[h7+%LQu9=Z
%)3@a6IU!<CHH1"7$Y``-;.N85_,\pB14*+or;dPbcm;<KX:cGXlQ[U1Lag%>r^Sp_7r^eLj?O;4!Q%"85Uh%7Ggut;X@T35)l`UU
%@+eR#-OKr,APN%f)ON94ja";p4#t;LHn.Q8<D4^0""`=J&2XBo+_=\OE-k$2"j"(kU5>Sm6e!Co+=!o%OX^,HL1`3XX^Hu;`)Q(K
%E?m*dh,mAASUrjk:b[u0(l-Ztn[-*U%,Xr5kh[5frrc6a="O9G$^bD8JI0>R#dqE^:A:j?&"A:ODIMoD"+j*"^I%T5pIRF,O?MWL
%'D/Y;:g<dMf<+(.P>W<(1&e\$Ebg,&:NY(m_f2eP=16TCS/1=f:A`2-Z@.!`1A5iF(AZqi+6$fqkPoqNN:j/h54Zf+-r/!*O^_qT
%R+-LlNA3hP5rXZ)h.]\D"S5-77>OE_n<=cP6R()m,QSR69T%Jr@GoGZ[FV#I&;$bYog0[V'H1\H:<C&oaq@(hR%uiV7V[dC_1HBH
%b-,RT#</f^bD%dbc&bPj[j5-jba=CUcr_K[`4:EhUbVo3s5pgLrej`,V)?'g6R(DY7Uhqe+gB\jJ%rMP+8jcS-mYc[n8EW"V,;>K
%iUTH3rd\j!k.2[]=N>tdNh%obd;#&>Ja,b4<+<fL;GM`fBN@$m?eFiYISe3MOsCF)dMH:CL/o^!2RE%.<_aZqP5fi=#ssdTOBf]<
%W<*cfRa`Y1dhUg`#hiD94((bE'b12)a8uD,6&=5MX/U[>`*/tdbcLaR3/"(+q>X/g58$p^4DOXM`Q)cik8a"kM:=+5_OfniajaU3
%iKO\qQ`XouOp=_.KEWc5d5E489cp`;HD;OVfG:@X]4XXM1l*Y3]+hcA=H3Bt00q:2K7p`VVGC>DN`RD2;f)kS$27a>;G#'U=pSVt
%'BGOM3m>aGf-6)NoFcVcST8HQ9.XE$bK[9Il47oI_)1_%pd*,BUQ>A&S+o*m;@q*O?&r(XK,H'-=\3V3rsr`!kairUSCqSacT/U.
%s0P@up(\X2C]=l[-W\AIE1u#T)dlg9#A2.P9j=XR5<??0mH.9[a/egeY@S7Iri#Q$F,dSFcaUUOV9.`%a'\m@I^h[U>-ciCLQ\hN
%<UL`"L#ns_!Q#=*Wnk\6=gKo_ed#0_DS\8j.Eq^ZX%*!!He?!lcV&t[J"3o.csaXP)"^u:(P=!Nf)h_nh`/ghc'%>C3,,c2HVIjg
%b5:5tTCJO>R]gPiI]*5-pNj$XPjr6qqu0pBdrV)M&,f-^U3"7#5qD`%F8nh)l?#,4BqWuD2GT`s;h<&7Sbj]kGgP^q_Lf``Rfo87
%CCZrbDPl'"[eicC`QnWT9ErX]TP.c>^o;4k1ai5T7tg1AKuMrI-O\T$f0FT9BB,^Nkaq_SjR4`jdD^PTSZ9aui>taTWIMt%JHc!e
%lhSl<b5J)"IKBBG2k]5[9G..DF7p1\GtmkJ>^l%g*Vh?T[-+8P2-7sOp\!]Kqtfn#fb[`2ZhDOYrR![%JD@37k'I">gCm\X_3h:.
%nYGE@[9UC0ht>URTFX?#FCthad%8Q[7=W^#JRU^k*_/HkAV:DbQ@%GG?DCZC+OFI_WW6Z*9<@0T3N+$O\9.n3M19h+G7L1gA1F+m
%oVSK2'"Zk92@gB9?Y9WDn>pof\i;5,2Z)>(KaUjQVC??h;+OA=+Br-A;r%#<M8m/u?5)35A/)pT1A84s?9a3?rRTXj4'P81T+6%D
%pBClYHLJ)bkdFdrZSC'=-*J]Bl\C85;k6dcJp^f&]K6sJX1)=4P$(Qj%aS?JfB0EV_+K#&1eX<ld`%k`fWFlQc(<6Z#FdDL5L",b
%6`<oOr*Jj\V;7*]8mf0eJg_V78"jKBUW`PWCu6b`m57Dl6tbbHUX4VQXq-sTBTqce$)LEBk@*.Yc2L;?G<3YNU.h0:[*rl^FtX&R
%j'MK>h"=Z5DYP"aK6-6r`<96D-JbcIFJJ2VkB4:kNB^h`X[>@mIngI>@u=T_'&)$a+pSUh,/)m'L&L-u#)0J&et@K=C:=C=&VMhU
%GP%bLf/q"hp#BXmVgG"cct80M#DJr61A2!0o=m4=P@3@BhQD&@j/Tn-^ObEZ[lVdN!#@M*q;]'[koknu82ERKK4<EoFB[D"?*r@8
%-a0#Q5+Enronr8YmFF9tCi)-2!=*oZ+8(D,-A((d+.VWX73)D3f]ElP'1Y:]a3aduffM\s[3&XD#tF?u>0i]1$l;Q1HpLrHp5_L3
%8gj6Wo7!k6W()p4m!I"N7XY8Ug?plaD5<kRl7cNS89t@`R_?s\Y&F%&qksYXe76UMR08[("%]"RY.)#n1qV$(Mfq=/\MKl,0!epJ
%s1I5Pci.njs-SPF%tS7:`')9]i%D+ulkNh8T2tZ5AH@VY$\t$p3OB2IlaEEQF?^Xe)4p/oeb\H!$`OQDn?%%6"JUF2F_I6&?8PZq
%m1D:j5U.;Sp'81SXr+Bmg,_HK9:t0sA,GrW](GjD/eo%fDN17EorhW%n!RJN;F1^F*.P#9Yh;&%(@ilBTpTri@ui.*/3;VZ+r=E'
%Y4ULf%7\9]J%-5h/epl^G&u0pC'f\cQmD?88MYF#L:6T?BlQ.'MfTl(]<D*%.J:u[A%BK>0ZQ0K/'PYa`=M/_@P8s5M%Rg(!5rR6
%nWtc<>OFFa]@.%Q36!6=k!@#cY73;eC^Qj6aLsf&mhOLk4lK"AVaL0;Hf?"1U.T5F_gSj,J1),NpsP`o?$`C%4G$i[((U<p<-uER
%H4S&'=T#IgPMJ`!D[\;[nm8jqMus^c,,sp$3g*k$kXb)I0iQAGr0hqe`GY.S3-jJcPBUbPZ8N5;UJ/qSBNKBTIF@\cf6P!uk6,V[
%:5r"u,"SEVT[cg!pT_ebI!/][-h"brF?2Z>IT<:8YBrHAh++#%nZ\QKS["a^(C/(=e@<Ws`HGRp)qX2EKbnm[Ret'!o9eA=:[Zcs
%Fp@"QT%'_kOOqteUEjHMA,i>7%(;QIY%,);Lmku,cHt-Y[ssnaoA][-:d?BBTdQo_H?@IPh5bko-UE9/**u</gP7u*i_G-Q!8tBN
%1aWh?l;d:p'(p]?[jqc*j"*hlAmQ5HMM4"6"5o4_^E"(RcKr5iZ1IKoiHKRhY$ceO?MCC`gakI7((aE5Xj3`#N(!--2)qY3VD=lQ
%O!T=,YF'D=9ca0_\gG;B!Cn5-UaOt>o%!S:.tF3]J8e(D.oI\5FsGCNN(Pf[0s%Zd5G*O:]8i(g/<QqZeH%e&Lal*I#ZWVb3MA)G
%eGte*prP5q_mmmLI=^4L"?"+_a"J23r>(4/=7tljhMto6X3j1P;"+')JM\\Oh4l3f\ORmUj5mrZh=Kkmp[SC&<Sc>SmVOYEp-5VP
%:A[C/T;$P@ngQV4=$B(IgrdYmY1uK"qG#>l8VNaXPF8bKpPuhUM)V#NfbkEcrY6g_CoTK4@R7r\`Y&4,#\>3jHsG:`WJDCs/>cj.
%;71e!8%(Te`C9@LIOserDW>i!IXf5q7,usHe2[>H,4S?RFu]Z-j,u#;(4"*?ldfLN]C;nK!4:lDAr.:V-KuXU-"tM]rB]1R'L^fA
%3QI2=h-Ic(1S2tfr"/[6]/0C8c6j90m)l[nm5^aNJ?$sW",_=\4\C$t2gVc9`P&TZHEq_5rH!1/K!*V"`(O0I9>g_JM?J^ZId=M-
%-2$:DN5Sb<i&l8ua/#;0Tk.]RHCr0>Z,W;ss55YRN_W=&fn.!\RBCK+`[]@R>K^(AT^^q\_:(&Jgb)[-n1u/=i%g_'eN%L@5s&fQ
%NdBS15fiV6!6>C4^tJ(E(,/'9$^JZA12Ju-lQj9ZEnMNiWP8e.ll/k:Omu]hPWRFL(O!i,l:7#h2@nb'>">]OG!c5r%a2\XSHc/,
%52PP4>D[ejc*V0:mL7l)=3s,1AHg&B$F,>J3@B6!ac+\rJ$i'_M@V'o42u#cf5UCf1:t>=YP7=3<`7&T3D_hHOdF:^I#8FM3"g3E
%.:VP7qth3<?2j0S>_qDDM=GYJ1NHguWC)b?[X<r*5.tUW>\!&sXj5m)TV`7'K(ZKXO"<;]q":t2V`S>Pn;:!\-b\qNF8VoUMTu-1
%c;n&"Y=lRF+5Pf<G09Ku$`'QH:>#43k2*dDfY@(%rJ?gps-`TfQQ!R*6%,tCs0J+AB\/`WS<Z[K@?'dZVVY91\mJ0T084]6Uo2mm
%L680.**,n8T<i=GeXUFtp-d]t;#2uSkaDA_(qri82%(OW(S"<*J=R/5Xn*V^btas>ruK.]G7(j9L\./#WQ5AQofiB&eRbo7P)tE-
%iDlKSL4B*u?#JRb],-0BTZ%'W'i!O!/V=9k`lrb2%Y%R$m!l/<'.3m(5RAtM\i<N]=_NqEX'TJkq7AjGTV?ma%Xa.*;ZEJ2Jd^H%
%<(U%_#NM6.I"5(eA/;aHl%3+;_F<W%1O9ch`tAG1N83X)cEGUWI.."TXKQmQ0)0De7^S3rkEU?+>t&Y8%i`TGHe4Eq-?%l.k_Mm@
%ZT"h,%e2")1lKNCrV:!9W;cp<O+cs"XLWg9W/)5u_<NMsN[N[b8JTjS"%-lSo@5*q?NYH[9(_FMo8dT$L8S,q2"scuc42o.<dUPU
%b^Yn2a\?_KUq8m!5V!YuF7nH?Qak7_ke$<X>%c1H^!eoCf@m#PoAWtG&A[?Oi0,ed->KTlTm*D>7hSKM`M*-&:4G;b[O3DZ#C@6l
%a>1Au_(K'&.@('PAS<rfUEbt[rCim;'OMI;QZG(<$1*hV27T=X1hLjh(Eg##VH2bN%OiYAjD9jUp'RoQ#ZMGuEE&ppX8h%(#&L[N
%pU2mm)7!(VH0r#H=4uAfF;6Xb6V7f507<?MreK1g2_,E)l>PjoeGU3Tjji5afu`5nkLN]$f%eK%8ul:bh_hSqf$'](eQ;'tT7p&V
%[m*'$[bA?,f\2dA(>TX4GUEdneSj!u\_uo@dc]Vbe`F@5rbDJ4>_$NhQaUi*I'9Y<q0:r]p?H\NgoIe_*]L+<ie-9R\[E%+_1]7#
%]=2J2Y7IYj5*a%[o5gb7mWK[q4?/aWD!kQXWo;bmj_sMkDd]%!;6Y0sG-nk>5-hA!Ie[%!Y7t>N5&7Uaiht>ge(U_M`I@>n[Q8X$
%U,K?,GQcJ,]P:f)McGg%]s6\mCA[DX;>Fa!3O/$A%O,9K<uYWGqs*a9#B+i0=EM=Kq=o"II_,Qm\p:f2X#qJP]3F!Y^XM.1]WE8^
%^bkSjRG#S`6bf.jS:k78Q:pu%rRpc5\Z`??Pm=L-Q0-&\a02u?S1HN9oi(df27n%=IDSp@@%hIbXh.pV>G&A7bO'XP*mF@j5@0S_
%p[3OO%6Rm$g,`(bNELT+BslH)4?/g9H+((fcT\M=XBk$3WD]q).:u?l75ADK]%)9>OL#Idp5KCh(L*/Y3ZPGM[PBX'f.=Duc5H*0
%h=eP4b3&8c2f!K>`giXNbn&s^@pA2HSm?enpgI#@h"a@u5473Y/Nl"Qmbk?t0Q51Y%YEtcq=LAKG6n'AE'"W'mQ@O&e<fXUDU#oa
%iA:c=n<lb>/hg"=E-jC:?Y1D3QJG?[Dq:M#s2s-N<ut)MPFI*=DhH``O4WN)ouZ`])sGPho$ZL+kF^uqP81u[0?W!E"22i]aV$e6
%9+Wm0]@a/%;ObC#Y'qO5K66W/2"/\u7VTX6D74btnFZT]^&Hr-fc7YN\\(f<o!l&VdMS3lmP^Z%p8((i.+qDbm_D>Jn(6EFI<(H8
%M30`PXe/D<d@tfh\)@kb?+5-e[rt:bKlQDhB-6#6HGcY6,Ju?R?c;<sEqjgY[bC&<]F#II]m2rB'^8ZE^^32nRk8jEcbn,RD`nJS
%%k9bJ*"&QGRU*IkWE%]I*,Ok.ph)a'nN`/[6$IHcIrN$,^GWM<L$$`rAjGf\s)%3?[d>;6qd+*(L-]se)`MOgpWjp^:<`/'[=_l_
%;75*Cblu@_Q)/";%$:Z4gZt[h>Cpg3H2_RgYO'_IFn;*)4"A%D)XVr;HWkac\brO03SK>lnatbD<]N9h8!J,>3NSS%B&u`J\/B+d
%]J"3ihcUh#"AAp`BYLFJTAFA#>VDG+fVm_AnP+4L]u0denC-0#rVZ@T*7$6kc\Go6[+Xmh<Ef?e+jrCN@7NMoZal4dCT4jhrs\>f
%mR'CJB<s*mn$i4r`ufl0.JW5Bm76Jp08F2:]rtYjKiWGFN<_FhY[L0$caq/tYP1!A[C,5[>F9$mfrWDVJ`i[hX4aW*^-'&Ni][me
%#&B3E]1#\?H1'LPoof9$X'Z2T?eDaCg;1X]];;(/-QdSi8>]f6U=@j+oBg26F*Cf+9DeV\k;(g`":#`Y%lucoP-[0<?$lNn__[ZM
%pT$e1e]]_!jKF@@Y/AsbFfY9#lfdMQT?Nea;d2E=n!WIl_mb!YpXZgjT_<A*iEs44b`4>kV8e98\ESe+U!&@<J4!*fJ&U4pQ?I1F
%95Q"6&(ft,Nl#Q,g&7=l@*L;Vo[[p5h+re\i:?._r)6b9J+/WO9)^2rJ#tiQ[aeVe%5Z8i52r`eQ^(26-2k2<+!mO,rG'G=PoBY.
%MuQb)(E;s&[C+dpe13<d9iE&Q,@,cp`CeZ6LY#M!;;="iA>bKPAaT:O*j(T!ZSMeXV9<IV-KmF^iK0<P\^+?^_[<iSUgoXPcDq6o
%?flmS+FTi?;Te>QHWlWYGP]2o3XI`>H5PrS]IHM-iri>,M"&.,?d$QGCI=#!dj,/Z[$rM)KtcZ@CAD!g^[a5AdGnusfZrk7`Kq1\
%j_6?$(W3nUK1KV+H^DQ+Im#<i$pp$Ae:5D$-"@?8V`'4^O7T^+GcU7K;M`glO-[U`8QNA;N5%+VHMhS*\JpKs[1!E3\5S$,8u*W/
%5BbNB,Te>1TD<0HJ,'2f8>oh:U-L#mrC-;+?Et/Hrc=B$St,F+Qk9h:2d`Z[#5<:6HPcEokP7Ua`;KUnH%38GL>j=H7p??Kh0UL$
%>5MVlb5\EoW)V&-+toPi05g$5p*!nl5+\(b!taB3^<B+tqcalC=WWstpBnmUH<lS5UU!eIb52Ur9@P3G7\h0"[Q"M>r;CYR9>R1L
%f+2JTfMiC9gRi4\rE]t.A!c%jf1L@3iDk#1VK8[-o\Eh$pXf73dsJX1\%4\?DcaD[n*$9>#RW!&>slI\W/b$5PRieTbsuR(\\2T#
%OBKq3p:lr;2BRCL*e9tGAcUDE8XbBJG\sC!l$d9SbYmW^]_HO@am8eI0BPasT+Q-9l?&1ANj]0Jac";LmJZ"WA,19C8X1S0'XsFD
%0%[*f.(Re`M=@)Z.W*JQ\mj]0[GG&9K*(LUD,#Pd\7]7gM!k5WT%n#]=H%NiLeYdE#7Ujc\C%`Z\[K0EZ'`Tg`Q8J>[+Z<+ARQMS
%l;R:gp#ot:DkXT1U$OBBDHt<<+"$<<;^mrL^7cn@0]U]s;eN8SCCmi894)Hj7o,&>@!VdcI!GDWZBk^#TW0'Z5CC=Mnkso)QCbg9
%HP`j4/E+qomNuubPBDo08jG>6Q)`*iT's6(+csE@R8<9;I+isO+_('0E45K5bN$*9hL9Z0AuV`K*.OnMghAFh2,:7SMd(4NAn]t!
%h+2YtVa`8JM+b[?[DSs53S6BpDof+TO*:#r_;aEV3rm\X[YT`6\mP>XFm8/&gS"/.ge(BC+7,[)j@*d$rU:b6g.G/D^:G'N7@Cd"
%n6onj68h+1]77bK88t.WBe_PFM=[1pYbJcE4B_MQdr\ntJtoi]l)Y:0n*ZHIS<l1WiC,a<F0GG^jo&-],5U8>.:.<]TDW-T/$G#K
%>.ag5)/O0F?35WnB9s)D:Fo5"p9ZQ\ht5F:ep)@nRDT4Hq>U"]jlGI(`S&;t?bYS*00Ut[5+B5Iqfq9P]o%_m#bT;<Eog?u#FHhm
%P/qD0f$!7<G-`_LX]lkg!.c`:X9NlE8o'F8n+Z'7ibuN?<r79Op7PH4\I%nWr?^bqJMa5#N`NpN.YF%/&2-0#rE-q!<R*WbMDlj?
%]7*[g7[rreDd]0UKI^AKPN-hgHSiu)cE>*bpc(uW%1qijVsWFdG;e0YZSucqgo?llW5+BOcb>F"44m-.na,:[T-!g7$0:.8B0Zfa
%DlnJ<dV/K`HuMr?%aL,n@cR,$,/ZUEoC&\L`EScs]!BlP#FcgdQP5+][^]=%-o*f2Cn:kcfDb-Vb/[?@%E*;Ij+Gd/ji(Q6\9g3M
%](l31Q*RV.qq)1$Iq/4)Wm2^;k.8kk9(>7F;*'pt)kr3So:iQe`g$5h?\*2;]Rms=1?I]%CUjgTZDYE;T0DWp<PG&j6]a%HMs=na
%p*I*5$R[%+q<'6J-ae42gLb=nHV<Pjf+&RJ@h^p5(>cM9T-#_oedhEBJ'X$3L+R3<p[@P#^>-96>Pk^))PE5i@/TSVn"%<5`ja?)
%\cLinl#POmS4*dU8j1CjbjrtmDa(l`]mNdB.aKb+c\H+<'[a&G[>43o"s?m%_rM?_ZR\hD+'&ouijj/Gf\t$_@TomUrs`5rjY6G<
%#:Bm,c-Kbq(sU93i=+=V_=]qg]_];mQ@L`i4)=GsMIq*S8O#TDkk]PoW:]`HV7j+VVYRs1,Y,GQp[6SGSAM,Xq69O3XmtJdY!1[S
%[28;eqc6qgDf(!qQ<Qjq7WGEU\p`2?qma-?M^Y4D%3p[ME@dW]^-6jC`a_3YMN)L%4Ic">p>J>0Dg^9_Mm)R@UK4q>p:2MWQ!Q)V
%\X*nih*K%:eZJf\"q[0]qRuQ_?V6m^=7t;<\sQ'EEcTk=LO7"XebJ38W=@IiqQ.'9^\U)DQFjOVJ6]_bW+8+F<E9pnHuI[s8i99=
%V="WK8U^HKX</@FThCr98)J+*[73B5165LqEoUVY07)'M+*4COA90l!Qohcc&^B?9e%L[j_=Gcr>r1B+gJ>bh'iit;rT&'Cq=4:P
%d]8)"bA.=noVGi""(-<*8*3oG-kepgj%c^SqK*/Gb^Vp*>'9"r*$(e=\([D1hginVF>A5,0&:=&:rn[fU&#A!=^KS'!Si`3dXqc3
%rH,epU'Ed1Ks0[#b23D9XmFta<^L12]D].j8*23M\\gZ'k?lB(='si*%+9hQ$EQAgH4fU^^&O>M1Ql9kYAn/PE$qOXD'H`k]toJ)
%p#uBE44:g=2rr7eC4>#")1sc%Bun[[Jc%XA?`TFO7ju8<#D').>H<8P0U"ZM`p-"cps-p(TUX.^ef*]0E[c7GFZ+=FQC>!fUUp-b
%eQX/t)tSU6+4_$;\XTrsk$&V7)K25i_91@7+EbEs>2<@ZEp`IVK2:$mrD#'f(Hj3C8-&n.YdifmB:qekeC*YA0\Y-goV1)"O.Y_k
%>Au-a>nB?Sp.I=#4jIEWD_)pF:FD"SK`g*j/ZHR]C2(0KXL`RooOVV#1sdbCM-g7$$!sblhQ02aQS%FI]f5D(+4WZiH15ts__AQ8
%cgKg:<2s03Ne5HOdI/_p>X$0f=5d=S5<7H#brf9m1TJuY/*jE(R:akN8F6'=S!DRIPDC2*=f9mLXja*;,7lC%o@;)[P_p7!m:p_<
%o5,a24"oJU#@XV0/B\7XdMYRaDsfY\_`9U3QhCp7O4^?U=.86p?8K"s^%1#B?@8GF4b!U`19;H"T0"[mn)&JU3GIKEr.eA2:c!NA
%JI3^]bNcS(g6]XHUJucd3@%OP6dl%DIf'PFDk$p`IkQjR+T$M`!35N@:n`rJ[Em[ln_1g,l#Nc=4?bttdKs.4]JEF3f\<pBq`"X#
%nF6FqIf"@3"WA.;lQBaSe#>J;UpJ)phPdo>d'Z8,*uaN6H3&fqM@?BQHnG>$lCPY52#Ff_5#,c0&lT@TM@Wd#?9Wa<I^uf]I%b[q
%EB.%TWCuVOHbk4\BA0E[mI=@/>43!KRm(2Kfp[Cr&[0LVW=pdD2$gUkio]?+-eSn7\(aZpI9GHXoBc`T7i0FAF/12%\bi>:OSL*2
%(2c(NHl);oW7-+$g?S3C)_c./d)!`7Gb$&.ir%2E0;Z=WB+lQC_=cHnO`8mpcUrP*WutF_5O.=,6''`P[Dp2Q0;W?rGe:OEo?[o:
%c161mdk$9PLPP$bX&#oDqkUNKBQ;eS_sNEm5j2#8[F4KF*X)c/4m_HB8&;LJH:bm;f!"alTH:pq/mdt[KgU2Ea7Le?d=X&n?a>Eh
%[Dg&$`]eTH"8.+gmbQLHjn?@>?[qh3r+hmeGp8R$YCsA?a`?M^5)sb`$6O'ej_q&f]/\'alIO_'eXSL:kIo^O\i-lWGO_qL*e/[H
%[+9KtE$]/FUb3So[H^0eh4!5-K#%7k^09BBr&RiQG4*\ZP[6KIZo2hRnD3$MD5%cmmR?4Tr:K&&#[n`$[cE3s]Cb5ap$(&*mmJ<t
%b30%HIBK6cN)ku3_=tj"OUf(BQT=Ou/XN3Bc'@S!WbeJg21ZXR=Zp#ZIK&e$W1p-+`2$&qH40)S6ub-*g>"$t[q]iR]if_@X$31h
%p!sl):CbIdI([,*ep,gEYZ-,$rDm3+qf]0O(@C[]]L`iT!0,EbV]0bV1#_!%Os$hW8(GM8e^pX8l,[E/5b3,eR+IosXPSm/mrlq%
%i4eg:+\[M,rO:LIa/';[BNcKjpi_n:g4'6`3-U,7/.0#mdI16*_>:h`Lo5KuQKq%29sh:Jq;!:ug$!!kDhs\A#+C%V])8@O;1$sM
%>gFr^)#u;G$IGRAr?<B*r4<QmG=i3GMp7MKB*ehZZc`!bO*BLdQ(tG;ZupIq>H;LC2KNmfSU0P!]m^B9=QLQdcDPSE/\:)&SSu:Y
%.j'L*=s,I&GH+H^CNnAoT8Ji_hF6ft[FY0E[ef7`;in*K!KFBiM;OkTSinmI])ar_]'$rbr<45O8I(jP[q`7HB(@!uG>#@?rF]iG
%<:0\]pA&OhcE.a_h,M^2p$RUSTQt<c7Gk+-&g4#hoP9L/c@nN,hkIQf\ib2h=W?/R>X=\U.I;iG\$bMZrS>n>(R34oR872YWrMhg
%\)]hXrg?uUdSb+qHQ&[)@=.c-^!$A/;]')$(_c%mDdJ/>i18I]8b.k;0sAt[oot63I,)V#+ZRJ[R9D-5b^h9<ArD2m\:><b,ZP9'
%fXcM#g],Mpmt,ddf^;R@@Au1&Q_F6*B!njFi8.h62ZkW+!o;g2&(?5]_7D^-8,DTp^]!%Yk5VtYoegK;?)&+A'V[!qP^-\;&`cPi
%!)YucERA5Q5%rJ8K8#%k@#H3c)OkOt<&$:b71gDTM6Vplf&r!e@YgkVTJ\4=63/L0W#15n^a<!u.XN@k714r(-8%b+<aUDR,H<_:
%Yof6ZJkp5gN-1r,8Jo9<!/Zf,,aRf9DdbCM,AmoY<7o2K>?"_3OCl=TNSGF]eL'(V0h!T=/B=]`$j1=o=:-n)-<mk4'IoJ0'XTk6
%'a(N`$*CLH<2^/V"C'=0,f2O<-J0sQ-58.dqpnBrl+BhH[L!Co5t/.hpbn"`+]p06`Rkl5Oi3'iNFJIg>%<(C!+3ZH"uqWgblEe9
%RKP0J\0d,&&.pZPDGDFX[D2jEMP'sO63Xk;XW1`R8^[o4P73Bu]Z,sM:a&4Ll4AkP9'Brfnh;ud@Mg#666%@OS"biVY$)#0UKGpA
%E"WahU-KO"p*M[@g]00e=BM40cQbtE'sNupclliSC02N8.BI;RVl=,*\O0]hOV_uA1)?_,1r7-j]'S;!#WUqe`*nBgQ-6!.OHA:9
%0(4V2\5\WMWbZ<Y,us8i!?T5q61q(WFA`Q*/L?5ZX8!gT&B4_NS2$n/0IBIL=Hj9Ab$ooU!Yh2YJs-29%q9#d9H$Q%'"/XY?E&4Z
%$8[=oXT\8%q$LT1/K(K2<`nK7*_I+9OhjJk&REouDE._8:fEhD^&[!kDA9LQRr9PlKeiQX=/+`]%?/5>6b'kIEg+>&Rj+"th(3)9
%`WCd?3FGi6OphJ/!k<f#?f38aI#GAO]!nH-C>@l)5.\6FSL'_XFkLIl&l/=_)^X'NUIILX_s7eaa>F,h`C@:6@2^l+k>B<ZJroEr
%#cu(:aI&`t.tal77#s34,]#6)k!a<F2$spUW/`q^#LG?"QEG/)6:NjHBV$FKEm(BbA64`-[L2V`4B@J0h,,/q0U.-C9"k^!6^d;p
%Lo<UqLh[drq#dXU414IF6m>L,iq3IO@B!jJ*sPA8d\XCfY_Y6T$6uX%M]Lcj.Aiqr-p+XbJL+f7_dQCk\*=7_E25&B9T9=1i!Ych
%%+ns9=G1a3q1oFf(\7+UTkis20JNYI!3foOo5M]=Q;1Zj3cRR*84B,=`g0@&Q7@tA@8eH8>?G8M"Y:Zb_t7+H'kT(qH"#ou0G;G6
%/Pe\lm1<0*Tm,Q;3hXq%-4sG)ll<N1W!l$>$K:7]^LLjcgkcl&L_S;_ig%M,,i0#hoc'P=:t#D#hf],,:rVsGga;GE+:M/Q'3('u
%!<)%Tdd^+H"C*_;Lt*"B&=-EBZr"T\1$;g[MZl%sC6)[q(b/KNAE.BZ+u-DrPs>F&kDTQ_V2\t;2ND@lWUaZ^9+3>NNg\H:Ao`\d
%Q/j!tWBdI'4j:,^'=5nn[.)9k[.,h5<&2#GJ2]1bcsfjl](e>W0GT,7fL/%FT1:/jCJG"c-@lO<d>;Z!BLWit9&N_^c!jW^ZkH\0
%>d-o(&8c5SQQoBZ91E$bST,_%l*^u\h;&mhPKi-)%hYq*DCRq&6)GP<c[B;!%om#Nln%/CcO3g*kb/;l:CdP+(^&k=AV-9.<(<@.
%T/N`WUt&g);/"B/kJ1%hSO'=+DUnV<q6T5AUjG)&p&I0;r9aMX@HM"Wm@0'[P:=U)*/_]8&&*A$W3O2tU0&\>#WX!7'/SPJ1D<5%
%JDq4^[BLpN!nW[1j!.[F-3tUiV7Ppt?kkIR`*0<3P-lML"pnDiO:rng+EIDpYq![F`RN/[(guCH#Y2ri2b\p*&>bVTZm2XS:D=f&
%S2cT+c'Z1FDH(<2ioJ0KWS"<g^/F<b$IN@V7tA(!MqTUT<%f('(_B%[WuE<D,3ajD;\R68;/DW<A#]0(45kk2=ZDA%,T+$P!Ds2S
%!U(fa@Y<=6H@kenYJ26a'.b>\bRuNgZ-eaUF8fY]jTYkkMe2(:@jiU]S[%A`YUbeb(r/AC"VZu\N/T-Kl4T<uM`YE&Cb.%[bJQQn
%E<Un9iXA(.4@^BH/4L)Npg6L2_AaXYEL,+)+tTumZX@)EgJbg=EM-TCBb;KN9;MQ,kD',<G-+1,M(]$`j'KY)n.:,lGR6_TQ*<9d
%X9sW*M)#9XA-)u5L@G:)'U'>eMK8'_:rr2d0Jt/NON:8^A1)q+iQWGBbn;2$),<'E6!>ug;$<QQaF(traHrH@5O^CdJ:ij_/ra8,
%'.ABi'[+t1VN(i`]nihR<$Zqnl%p-*6.jM?i^b)oQ.Rc@DBRMFrq;(L_8oc=3R;[MJ!4Mah$Yn<^,*4S7DLVtpfP+j+Qp]R=98k`
%_g[+b8B'"M'JM^Za!`:J(\H$55]B/K]T7)tNc(@'N&fTH#VZ`er\]p9h(7["[^!`C.5nD(UdCoc-[VLNR=[533+I`#S2;8j<]D9I
%KI7tppe(_3(6M*$o9oX!P!;AY)ti7(lk%?.FpP3hP.VA])OY*dYiqBW)e]jQ?rk+!(WE*AMKE[9_a&d[%HYViZ4>J3i28q#eo;;V
%*6u@=NP2Wj2,[,`2G%LA@(i3MZUR.^Voi-*r=r?<1cu`CeKl/];e!0MKT+k:\?#)&@u*TZ[i(0++P\\jLR9`l#1+.<dN/bHKLgB/
%(JtFBi`8)f[f;-.aR;YSZCI"<`CTE\b9+>s+FSJW5dH)ek$O#pMW_#DP>Cr[\7pO#0jD/hQSo"p_762l@Z4$D1IOddU1/<K[PH6]
%<\;Ck/c[2cdXi1Q`bs-,,;PXK4:AgVbmR0c7eHbCQ3CVaNW;HN<)IWS"t2E'Orj#<b7SK%IL7Z9&K7JJZ3r)mn:21X>ps6'66_;`
%/3>c8f`:n-cLMN-M1RA:(c81M7?1a*)"B(/TR#:F'R8:>P@pR'g!nA#@$GW#QE4Z%/YLc>:_<@tkjAJu]2n#e5%s`oCr3&G&Fq9(
%<Zj3J6q5f9IiAa#K1Y76g!6u433\c6(2QeY0cU"oTW!lB4;WMl1+%\q><u^0ghM?aJhlC!"'\#FK-n5tj:)`8KT.7H(p)VL"O7c3
%U*U'c^uh"g6&('3#\8f)[qMFLfDn77iYE*<"InY?kM1U\["N9Sk=9>Cdn%3JfXD':ka9@?@)rZm)rn;d:g-Fb@Djo0g`@b/DpsV\
%huk/C0`kf75Z9Go-A+-5R?0)!AL@W%JO"1>]B?G0mZ39G*\5/7QtDiTi.CDOb$`YNhVSJfcC(Y7XFcIO!mW>A%?`edicRTrW.7S7
%@;_eLA?3!!E85&0N=8@""%g@a!+"1pC[8X/,">Q@?"5@'-J:A=a=JEfZ"oJ>.mQ=/(.[<TOFD&Q0hJ[9)hjs#SID/RBue^1=Fmnb
%fX+J8K,Mc_3qdH\83/:+e7#g:MOcffiQugC%TSUDN$2OI_O\r^E:s:Q_W^*N-j\'B7h:gkY&WVX[fZX7%Q$g)+=e:p;e6q?;@4$K
%'oiiKNqY$R&n9$T`J89gE02H`R08g=dK&Y?LjC!?+joUMk<]tlAm.b^cX)"/O!5^39`fV@3jkN^2"9?0M2Q)/?,B"HHdeViV'.1*
%?A?O)&Q#D9`G"9($C:;k<lX3Q`5d-4Ub"";4q)<T<C^ak"@gL1ctuPh3erB!I=Xl[J4lbRUJ(Ad5R1cjq$d<8S_/g*BHVANQ9Dj"
%@Q)eNgm*m.`onam_MAJVK8N,_IRZi\*]r`GM,,8%7-N5ld67uOb%O)eF"3r:<Ds-EEJ)WWTE$H[."D>@0]bS4qbR^R1^,F8(DJ+3
%r[jccBOjqMH7]Kg4A.1QfV6*!`f2_^S;S&5B<VOB74/'S]IhXOQ5I"+99+?b(RkhudtFfT!(H%'UqNGI70:TiNbiGq.O7!&-e,:4
%S<]!45^/lAnK+Wc@gfMraS3$,_DhU%!?3JX<e`+-ef6`q$9_qS*)[=RmFJDdqF_i3_SY-&KM;A9Au>nO1lO:3=1$*N`hMPsRp;$d
%2PI]G$IcbR2-oD3KpTM=Ke^U<fn0F,3U-fd6VQDMW%>G*Ef!\XdE\#W<9W.;MW:^YbW[2=6ADaHGn#7<2%a85ZE-Wj%p+J-[=SPI
%A4Tt!%i>:q)O%MZ4/`2(+iXOj'Dmg3M]2p3fg2f\1,W5sZ,nER$Fi?c(9o:s(n%$'#X)Z-W`F\'%(Yf8\^gO775uj20bTsD@2,Gc
%rQ/];P9E@`r$Y9)*s<gmB'78R7o*j$S2UT3F%q6rJAdeFO>]oLMoC8Vb'fpWZ6)qr<_OZD5%FmE>8Q:R[L7^W!"9]a<Y&"]6&G6k
%>,<GZoITi+8CEb5c!iNrOT`jB[rIOX0&DNS.+.6L0nk1rNd0+TjkDMZS`i_68&53o#5rba@c7e^d'UGFP0s4C<TKVRE5iZqN521g
%#Ym)*kR,@o#XXj"%ED.#=;sg`Rl6uc".H,$'.Cjmd-6qE8*-CeikMnP7E4#Jc2nG"ed:J:e%?Ni^p[n&4_<Wh%U!d.B\SD(p;.Yi
%FXng&A%$`jB//AJ3<"1D"/L$6_0PUCZY^(Mh$EPC,%&]u"qY_VQ((TsPX%/Q.PL^2`%bntdBF(8E"^&%"VJA&3hjA2"1=4lZ)J=X
%:kU9HM[\/B4>71]7EJRQ:XgY`TSG_L:Q9SVJN?%sD>FsA5O%U/b6ZARBs]I\`<%l[A(1r,P;'".Yg#Fp:<+N>BPmot8W\h5gh7[c
%!qN`U_F4eLkuK@WUlC9u!u+oq;>c0lN?'6?dg^VA'h3V6aT1_sYsUo*]f.YQ>R[&fiIH.Q7IB)45Td5sF2t4beC!Mb+O#GA*Pc.3
%qF;T%h?KG;2-LD:k^u7B5eiBUe'Oih_/^b<atW\BqVYhBZ)),U:l5ta#Qme'MIB^0!L\Q$J1+ii@Bg]&.Kfq^^i5F/$PjmsZ\kXa
%I5rKu%F[XG0l-p%f0#6V$me2M[&C/iA?7$^R^Tb%.c6=ViJH0G$q05=Pj]u/G="Cuj)?0)E2Ci"-k$t*i(.9(GQ`o<@sFd+#bV:h
%[)rDRBu`bTbf5<]o_F.`qR4`r7L&kuNH46'&XoJA8J0QFLC);SK1^;cj.mNC&W.1r):103_52B43U@"?4@3Bb>qb5l:g>)L@0;)h
%MN#J=/UAZf$7goi'^MO%6TDm\fL1,4#(;5Z2$'u;aJ&\R=Qq64DY+df0,)-pBsqRUXBHKTJj"(/7RXCVjC4Mg%3bYW!c40'Z@bW.
%4[_A(A^FG/9nr'g7Z>gP'h!;G$!7cZ#pD.B;S0VHA9USW5X3YD!=>]k*5e08)L&4ANus?\,l+,M-:D3m^d(sVl63,ne<\B2:.Rkr
%;n@RD\`,^V#9r[cUFWTC`(lOPM*csX90hA:#)Tm)SQRObap&L'+Q24?o:p:<^9s9.L56Blqr4MW&a]fG;`$.FNDOI5*DV9'8A<2]
%7&*19B0EP98Noi=='>B!>G?K*U-PUpHj\r^28puu\PFYR%U(//!('4pO9Qtdn<5SOEMN;T*?V/k=Wce19Q;(e_RgKE5qmh!#p$iL
%X<t5*2;pa02$H<B8l2a%jAhjpODb/U+&Eg?p`/iV:#cNiEi!t$+W_O`.F8`^'SbG$A>XMcjq,'QM/`5l_crKq_7,(OaH7MG>VC,R
%bL&rSe3bVXJ/)^Ca.fCTam?#19#e#SCa&cg/P>i)QmHaXbo>]_,P`>P3S6XAGY?fp2$"hs*^rpVUi0b-\O53Yq:SkoUPk%BFR?f%
%"UUnO\t\_[T%4$XnZYb,6ZiX'8@tCi#g+!<4&daToT<NH-E4EF/W*kJ7ma8#J1Db58VR@p(Gj$bFhE0JDAHq+IB/`n&K^E\*"#*2
%V+;k^8G>TYV(rgAXti3B[8atb+u=\<USHFqQ#GThEU48WBe'ipoQ=8kiKD,YTP3D(U>Vj"i?R#$Lc\4A/tujn[g=/md1[f-15UYU
%ONGS"Y5rpqSKp^uV+VMq:BjUX0aM]$B\bHq&:S,*6MH/mDaAH'67^k`C:*u8^5AkJp-5kZ+fYYZ.*V4jJgn:>c=DY86lId<=[c?u
%:hs'aJY<u,jW+qued6n2ZR"s`+,]Z'%jPR1"pjK:/;sW"<Vk2;cMulOT,*DQL#N-kg=(Zq,YJ^fi";WN"^L+O*2?6ShP^aQdCCWN
%A8!aL*>-^._Pda..CgBLqRoJ'ehQ&P?u+K>j:jmIX!)6i#@sNs6hVo@$"/LD@Pk>+3<J!KEQIkqjpdC\@h\,hgr).!AA;4!K<BPC
%60CW*+"dLY8.q9j[94D_d@_97#uHjiJ_Xf"+%^q>CH7>jB8icA$8qPG*O&*knIp:7.E'%6n,kN:R"Paa+c:/J)N?%Y;u?uUhIWA[
%Q!PXIZ);Lb(O-4p<Q`*K`^ZV[Ne%A&oL)dg$]!cA_&02'[)HAW[/Z*"+QG*&R+jO]<o2b3?:S`BImM<C2'eI6]#[c39oJq4#W][Q
%#e?'h)[;1%\g&?,PDK<9SRcY"Fa>@qe/TDsXqf?MjUu\#;NhGaOphGQhO5esJ3UXWhcdNZ6]]tgZrUCK+mtCC->&3)T1#bC_F+DL
%,r/-:9\#iHjhOR.n:9mZk^`EM4GHZ>jee+b<a\b*P&;:R]>Q%.g:1Arqf8='Wl4c9WXp!!3ZYdY`d&WM?*#Gn(ljY]=dqqIK8E-,
%$3g$bLo$@kLNBdIk:./;O#S?Q1/`og;"9(TZSN*WUqj@EQ,::f.-@BlL&>[8A9*;G.4,?!_e?L&,I\5(^_.Ia/S+!Z<5:0ZP`ed%
%M>^X3Cc+UfU6m#EDS$Lgou8FkHoSN\MM=pRD<0QrETk#'ioB)cI/'fldKEc'?iYZ&r%?:#jd'^TmZ"ho_G;m#OO,ECLnlPccCtl'
%r(9iX1N7_+U`BjtBIsW470FbYU]<([GtB+gJ;U&UK*n>bC5S<+LZ6\GhFE0b9\rRnhZVhBV""$!=ubnMZMdXF1NA;(TV7/=gm;:4
%a9]m$8(8M'5+#'>lJTAc.6*"k(r\RA$:Rp+csRPp.V#`>V;Inl6O$AJ#t<5#KJpq.(LM#NSZrZEd&\@[ri[`YNl(2Z,sHhhkQR.j
%bFFtXY)$C\)<YKRnK]:r&>QCfFjQhTT`t`ZP0)S>]##ZlGT)lMOs[R!ZYZ@u!_;+.6Db,+:XB0(h\+Nfnt?e=C5c=29Kc+]Ai*<g
%`p#g[0L:';$4I!s_t'M>db,u2Bir7V;`^,>i7K0j=r6(KW=sBhOj6<jB(#N%!pAcjc8a16Z8iJJOr8m;&MUCTVkbcGjr6>*%NgU0
%GW`$0TJNZDd+u]<?4n,]aEQuE6%1M3OnJb#gmdZOZ#!L9?h"&G@f\]r^)9EM3L'T($#"DoW6$VVJ,amRgG>8VA29=i_]u+Q;oXV%
%GAFYSB'm!Rf5U:88Sd&".keC4\=6JcC_H>XWZdXUbaGfPNHsIo3]/PHo]FEulRq2qb!$-@m,B*<!tt"V'o>#$,MSIURYUds'VuB\
%@>JbQaU.=Qj3pcL!8A1,$7P9o*rm1RH+%*%L;oO9F[-?eRIQgc&q9<5h&fLaj5/f9'2Eq_'sI>te]tli!rqkZF-lm-F#Sm?K.JU=
%D,bpFY.Ql(N3_QZ/2(*K^)\aR7Fd'mT%'s\#`lZV7U%Sm]sle1Z;$n8KD6'=rfIN'KsR)b.N2:-AWYn]V,UUN?;l5$mf+.9;AJSE
%IiUK4i.4YBh+tO>]Cll[2rg^7=Hsb(K]GCSincL7##J3[a@m`m3AeMii&fQf"NX5J[0XA#E<7JV5nBHY2"NFiaSJsYZbEGPAYJR^
%-)C(UC0W=:/b[i;4(\J:o^8\d!prQV>#2Q>(hIG:-WdJI5_!-(:4A6<3N3sbQE4`j;g/]nAMkcSl;0+$s/,Up*=^&Xg`lsfK@Tj/
%oN9SFe<n\-'r`!'jWHWE7Xd)Q%FP$"q73n$+(1a7QX-_)7-O[X,2SjSG_Bm#2`dG&Nq_C(VJe<dZK'fg=&'*lU7<clFJCuK(;L*S
%5%fr*4C1eHm;hdtomA3;J5mZlUd73XYRp5qA\c.K^YmH-Bfjr?n5u%YTeB\^k#m(NZ;n@`OU"-]+n050N_M*#d@!N1:!sl!;)Y\\
%LZ0nl_\FS;Xu1+GKXIt!jId=&A=7?c#ppB7OFg5F?c[>>(spk\Iq;@*a(^Pr_m%RS>6)oe$Pis@'e^Tq(j1;`:"7ea.j+(U_ZT%0
%XO09OMDJSh`hBhh?08X[MkM(;0u1a9>eK=?HsBHP?"*Z`O2d4uCk^R#!^;*T/5[@+b)pKnY46-/]6%Hbd,%OXhS3oP,k#ZV`/W*'
%OY&>N-TT0%*<:j\*2`>e*DK(?hP5P_Bs&NSioR=UJ][$q+A(_&db2FIjh<PD^ha.C/90q0P^,*E(qj@ZhiAfp#BETLlZ)[-\+a`$
%5kQWP%OOisfdM&l,R?q[#@TQ6D*-*PN.1^2=-%[t6J$.9hs.S3h,$*YNngnKd.Z4b\DmaFJ)$(QH4=)>AojWh?qXEjDH%Ze/'NM9
%[_KKBY_cns:fNqH)Beg6^KoeREY3(DP?%leo/i"Sp"U@%pRQ"h,/_f86jG3UCG)3i,&Mc&bR_=[A,ca7'SYU?mpi]!O*SIa%=D:R
%6(mo`n*t-;?9:CO7h@nt15&H<B$'/@D$+d.ojO2h+K?A,TWVZjc4&]GdmX^V,eKaPM>.[E-E/R#Td!,q*VK'+$a7f76g`)[\VlM6
%UE$NE=gtPnrr9W`.cY!X/q36JTe7E.m>9Q1aC;.J>,!Y`SL0")FsI:'D(D+5pu2Pp]!5gfEb_WdJ\:C:DdQ]6?aqQbkE<O?qEho@
%Sr9M\IQ]NhM/@8i7n)X((CaJ*o^&CNOThk4KMa];o$SqKc+K\(BA]!A]J@RCE!&;:R4b]$]>qR/Q0WXSQ<8U&?1m8o$l0+(Z\bf(
%RFNT$",NBrE=h2:)R+L>kWKH]Ue"7_4PUF\n4Rqog'Z]CZB2bO__6BK#^V"jrSIMML]q(62ONrLZSZiWfM\'k*F*"emN_$Q]"aBk
%J>'kT_?;=T6NP\s:=&H91Jr#NT'J52g,)/B7TPZo\HHmB2\gcL;2Ims/uuf_H42A0(<6ue3!-3opUMBt?STPLs/!+hLN5ZSAjPD\
%aep#8==9^E&0`Pu/rPF8>8H85R&3]G.N-<f]@UCQc:+7Bp1&_^-s(J=[T\FSPjPXEkk<s$(dE=Kf7k;h(_`&qB\Fh,5BlGb<jCfV
%O&E!-Zrhqa:Wg*d$OQ_52AOr7-UTktYr:AD'l=i2UDTs=%-CS=NFpf-6k@'_AK)33"Ia4*]3lBa[JAi]V0\`R1@YG#L//H5b24<r
%JA(W8e36a_XVdruZ?u7;'BbN4o,rGWU/@f8Ac8*%r:&aG/GCK5j<F-6lp@Rn<Z:;Z@$!p&fU)h^U%,W)K-Z:rBG_s[H5fs%#JK&-
%%aF%!:h_h(lM1:C<ROnOQ9d\].afFcJDWJYgB#U:;*1O5&4W>BNhP,#gL[=lc>4l6gcB:&HurIdct.Z'S3;S13_"m>NUX/q$mE[c
%?i$Ee<ks,^KG$*0&;cfhE)7p?LnF(RL?44sDcIU6@&lm1e07UT6SXS`*4anhCV[-RcQ17WkPudE?nQ*U']F$"[MN0B()sj!(q^sd
%+Zh?;ANd-X:Ufll;FuL#LM]B?Z5efWe'`VlbsC[<D@PF'6j3Wchb,h&-;0_5FbF?9dSlknd.2M\0ge3g?fGL;2a9n\Wu?f?:h==;
%KF"Zq&:d,D$d"l>QckP+paVb^KE1>e$a;hq"09"eSTn+]MBre)4(?gTf\n&CQUO"5Fk\)[q:!;V]`m)6C`+=,XD)LSWICN.5TDSW
%E\9lJG5&gn8F3mtH^U?5bhZK1bg"rh)JaCKgNRFR[s0j$[)!"&eVr5g7X&iMYVTn.0bWA%c=@Pl"SYTN%orfNp"5paqc9Z9b?\sD
%>3u-7H*M_b\+r`7Pdi(P/8*I7iUdCL%?&hs1OQSs\'&o@$Wd)U7M8i6I`:C66a\?1%e'a?;b<uLM]M3,YMoWl-R2('.<^@t3+ZKX
%WQF@t7DD>U=0jJ2'"n5_=PmM]WWi?K?909lZ#7Zdrunr^q0pLSkFF.(N_KL&4*\AoErlMo_=WheUalVCRK/BhUTMW__TgqZbEtM(
%$2:88Er,@*O]gs8Y&mo1Wk;a.Rcr[3lGC_SKI9@Z/Q:RaULhu]Q:(a=9.K]R.-XCUFkP:G"9`FS_R:InIb,-Z^,R6\3l3lM[dO'h
%r^dNLSGm!>DjMF%A%12'QuO2H>9C`2b6'ic^fK2YhHpm0W$9[;/[s`&1U8^$)-/Ia!ll?4e`X>@UZN(sBDOrp71b]N7';KOi>R&e
%B+Z&ErC6[UCs:nW6aJ"4TUX^afU/+#><o8D/[Ei4g48CMAj$GYZ$O$L((=2agGMSam'nkYR7,k(A5rWfW$DG6=APE"AGn$JLdp+X
%2DNt)*&d>V.K7u3n<'Agrp;8M315X>q\78ic"&mt+$pd.:?:-s;XM,dBTSJ*WPUmUA<i)$J`%qdpG+A+(1$sW51C:C"EYq[9+XXd
%9(]K/ACk4+N="lY0gQ)1Jf\?[Hj8!lICj4g$(5Y)Xdp(>\Tlph_og$tf7u+NpG;$TO1?,l<T*XO@h]N"Xpqn/A@f5/6^k*d;XE]k
%(Z5oJ_+Z&I`Ed]?R&0k>bt,J\J`enmO]_G%$9j&m[*\aM_VMEb`BLfe0H]O1^k/NX%+[!JObW@AF;m2.0o3*##iLU'jDnm<D4ulI
%p>$`\7L68>$*eo!6dRu-)=6dZs.&m&J"Eq>4%n4X'sO*H8=k10C*O<D8jU/FCLs94D\*P7.M,]Re]>YW1,GB?F-2lkfli+K=>&PD
%m@PnO#eL,#BI@G$T0G)%moo]$2G!;?mG1R[PGU`R6P:l"4&_QT2UaqqjFW%`8bCgR_?qg;"MnhF'kKi[a-;t4'ga4*Gs;4F\6-(q
%Q+blQ+1`-sSq[&5[.Dm=1JJ%Br@kF12]pNnbRW0<e>BARS$P^<$ub\'VL3?-V<*pp'gdAeol.1W(L,j5chnqZpb?dqmq;+nq<j3a
%rt-aI1ERg_*K1c399#Racl2l.Unea)b:0HJ_gUu(.j&6>$473DB!7rq=5*qQ`*h^7d:0Qa*q7Nm\3($oMqB#UY#cte]$eLoDH06!
%9L-4dW1be%^#b8[0I!JN7P`R&\MK%o'5%<^bR*dfrES/2BCIik-:[290cg3,K;60uoh^SedDg\%Hllde[8lFW+:0e$^4H\9]=u_8
%&*2f;3hC[l(J7=o_ZpLW7#+SS)"FTU:&eFZl5n5dX'j*X75>B$q*B0D=H]7[V?PS<BPBca=X2"hZ\6*87+"j)J.'ZR&*FN+-(LO+
%(nj;%O>;)ai.I;0]tiZ'?]iGlr3.:k?:</1aVl#/49UpcqJuapK1K@NJCsr5R>*aDRgSoba2):R%us4D_)aM<lQOD.e.pfKZ&263
%]O(TleXlR!jsXP9]O7VXa+=;_BQB;pOJ;uG6k"NA>%nQ])M@Yk-Dkra^/2:sc8G0/fch7N"pfVXTVs#S(P72GIgR%9NEqc,_=+#j
%'P.`fQW?p4PNE0Jj)b?%cjke`!_I`0_i).PF>)m[Q"5+3o:)c,?mp;VYlKQ*i"j\r-LPr:s7#"M\X=kBdI#eO<rn,@[quNnhZQ)4
%B@8"/(Ye13^jO*fBoA6`arW%U[<bYU?kCTOa(u+aXYJhu!2qRMcit$RWdb<iMMBi\LBj3];kFIlPV@\'gL7Mm*Q@h.'2W_;9W*F5
%6:B_P0G]c](Vp8up'\`*U$3@"9JO`@FB\$Z<dZX3O',ud;fH;EDt\bp'*Zs_Caa`DW@,DTon'@n@NsZ1lmMpOBEnhf)8G^"d76l-
%(j&(4*1[:Qj&"Js>O'Ke#4T=cpNc;&Q:D>t%8=rU10;N@J5%?(5I;DJEiSb;bX5.!.*SHo/eN)&LZ[g(-JS[Xb?74VhB-,Z#9=F[
%UK2SJD_tgRkZ&7ZfI>($-@W'TLk%br"#;I2kOT7erHTia+06\ToapAR.AVRKr';&\*W;Y5<-LIB,[%q4]%NhR'!T:UJ9o-^=Ap`j
%a*NSZ!,`1Y![_k@>!m\EbgQRG[[_b_P@bGq\th/(WlYB?6*9.r,9X[*J=nCd2F/:H.6q4&`Dg/M-$0O*hd_K"h82dsp`N"+\PK\"
%qS[J/iTG1u]-%+K\l&,8ebW`47jdoP(-<qu)3u7"0S-i++6:Gq4CE>uZmub%"Ab`?((X"OhP@,;5=tT,K?hFb>I^`&.89C?o9>EJ
%q;&'<>dQ82K=/)4CD"'HR=L0UZ1F-o9W!P/"%-?7]7G?^Pi*6G_8j@;^a9cKs7,@AlF:,)-b9`dj$+bMr_UH?-\2a5X:UaG8=Qu<
%=gg.ILX2Rp7fo?ri(#j-DjB-Oej[I;,%L^6OH-+*$*>]b$a[rETKtlQq&#Jn3t6$;ng_HON\HB'@$uh"_Pt;"f!!CO$4d>mI/"Zl
%DgDuoIE$;P8K]oucU=h+?@7WkiBEi$&]Uik4aqd-g'lT!Ft=ZU29_pb7O,Pcm.;'*NL]f\2VV.a1&aFR9D!O)]EH2Q&b2>'MLb5+
%T,;k_eP;>rSX;S-F@C7r[XbmC`E/DJ4tNE^)BrkO@\W9<l#BDNa!b!EV;M=54^b#5UYu+-'`4XQCbf+R;7Iu+eUi?9+\''#laN3n
%k<'DB3]OBYq+WoW/Z]hh[IE81[m/ig>YN]1@L+>m7l<C5M+lm)Er7?0gXQ=/Xpf?T5q7)FBM"(?^RLnN`MCW00NNQ"[j3,a-b<tk
%Uj4[#[1HX5E5%F6+=A#0BljTL:C&dQ&gW":Q0k>4beZ@W8JlQE%m$U&Aj0O<"gJ.-Z!uUgM/c-@Mea0ThOa]`iTp8ti!5JWOD$)C
%>0@6bA3EAn*GHgeEC$Jljf3Q].uJa3?B4T<9>h-s)VJZS?S*LHGj2fEnh^p]#nk'-6&N*BVZkf\KEJm3QnO!ekjHq_ic^&g"tq%e
%WNB`EPS=1e/1>P^8Q$N\35\H#*bK`G"[=X7rc7+,YOCjfc%#-S5r$T1SqsBo^Qug;NjiYB3NZ9hkmdnWk^*ucXr88XQ+)S*.mc<2
%SSSI!FMmUWkdhNs<fRH7T&EA.dp(Td>+1mD,rYo5OSd(HrrnVrMY#^T\q0XG9WR_C]AbOg-K;l:!c>scaI0hPQLG]<B(uq1b%jm%
%!UKB_mN=$DfLXb+e@#>4e614s:'>&UiQ@;_cWT&-E=V+e2bD"V`Zb[4"0O*#@?tIU3!>W1Oqm%U_Z_\Zac7ZY&Kc?^n]EN&nD=%V
%qYK\%oJ,'.+*.\7N"0a4@Z7'FO/b*i(r_V\*iMco..=Y&/[im4g[oqN?Z,^uZZ1JDmZ&1ZN-5#Z:$c.E("()UTE"=JDjR[-i]_Y`
%Y?fh]-_3t1E5sC*EN+U-p-<OU9a#mdr\iStCl?]33gCc='IpG84@,&7DFJ2)Ytu>"Sc<a)63D'Pm7=UX2+8MmJbt?;a2"OQDa3B3
%!CdVW@q;PHTudQ2PSRsW6Y@O(1:0Uabg4uWU^CYOA8uWb2b+f``KA(9'QbNuCHW^<Dir;nnukS0_"hs/-jp)`!0RMn(s"&PI^o_#
%lZ0UBXk.d501a]f"c+GiBNdn=hMkS_0r+qH,5b\T=Gf4m+nfN@6bV.\3k*->H"kGI!u&13Nj4^CZ8IPN'-O@lDfE]8[0i?,6#a'a
%^qn5a@>2N$>Db"sR"aTh))EoCm]i&<Mnmb1Y=Bho&:A,(7D=9++',JZ7Zb[:,P1s691gg_3/%$R\G9S_Pd%26daUlCj2%"ZeLT$k
%X@,"Rq\667NbUjX!ShGT@&W4[(:?-F'%(<9PNWa(`Ft=r^&m@Snqr]?#oJ=^AO]k-GE\c:RIh/V%ZHrke6T!;MIi^9N!GAt'FM6[
%rl6/M<\f4^Tm1sILZNuJ*l"U:L*-,AmO<\LOc]UeF(<(41n*?A`#'Y[FOcb`@34\+:;6\D\\2^dLg$*'d-MN)N1E8tT,B'9?t.41
%/*BjWcfLh]7T,IFe+Y6hp'W7>h_!7(!5=k;n`&YE>@J`OG&hM&1]HrWe3>Qtn'MI7F>8LW!\eju:@oC2gpC"X!$CE:R]NB&'1)D]
%3MS#B=bO)G0VtH;=^A*h;HGkbQ9*8Lr?)]4>fROqK5QAkJ4F1M&0DL,[S*6`+U"93CQ=0*ns/M1ljfd=?)ZU5-7aYIT#%;^H@de5
%'U+W7c]$^!REijrI1\il9_p4u5D[g2O#s_DLJ)Z4_\WNH4M;cIncd'W>`Dd%$2Ug['cD($4bc+c][OET<Q,%02m7;0F"tG"86"`c
%8[+#"B&L43]W8Q(2]ZH%$od<jcXhR5(N.k%j4i>a(E,Z>Olm8bM(Aia-O'i1'(SO/!*Yo7VuA#sWJ)]i&U=SE%=3MG'3EP6%;Oeg
%_1XYM%Tm+<9[oL;VXl^iQibru(?l=9Y`i-VTPu.[#e"B00fITkGYTRsA7NI-oGQC*N'*&M@RRSE\7^p"r=$jb%+F,n-X/XI[q'nU
%DF7.1.?Lg<kNHK]pjW,rlLlnl3'>A(@mK"8b6p0nPi.AqJ6:@b'iM"G>#dDq9o7Q,Je';qJHUQSZMB`%n(+6S9l_1(^[`d.H_#e@
%SiR0H9Tns^fKb/q^$dNHrO++')KrZ8g:j)kb?;h_^cZQbi58j'(hl3SqnkHlWq^B]5O9;RV!b,RnT<q!PGLGOEhU?g;fS1(!c46A
%VU(/d)XRk.`#5$:icqsSo(j2/*4G`C8RlsoHnQ!*rV!bc/]nEnM=LX`7nAO>+GG8A-Q@3A(h,0%gdgT^5?La4gC=[H<dhZjDElcX
%h]27"]gY0rZA-G)5ga/A^QSPZcSL$Z0Xn+5H?nO8s'rqVkeVU=?Jl[\:K,1;gU[a$hl(<ZJWf1a29j!NC*5K16_u)8mk%E9B:LSM
%QX[?)`$><l\o\iG>j-Hm#'idr5;,G6\Rl_re+#_o3QXFWTZNg;O]f;*90noq"f8_;;o2!Id[k4$:9A/.lr1-_XB8"+C[$r^JjB0i
%N/Q48W8iN"6UN%eV2,n;gU8NRc13"i/D/icR9e=*$X#g*5t*d_(O&mjkuB!,6&Q"@i3Gb1lUi7Q/'ZFZ)$buXLa3'2%llDe;U.>?
%\^5QTiHDV!4tlsA+H!KGl6B*)I8<p'NkHb.f[QUogEAD<OE0$X9Kk.rWaOeO.*9Si/hEIQ+?8W/\JTK4qQb6%+86:;Q@X6W3sBS'
%A->?l:rHdRr=poZ._^"1E2'E`]\o6EF![pWh5e9"WS\dUIs1t;rkT#'rS8>R_46m_:@0219NQ!u94nHC*2T-j,jT0;+OZe9Siac+
%_^_Jq5Ig6_0?(R8$PAZ?XP>=jX^i0HD$O#KA@,5%aq>D'g?@%<Z($03X6gI:.\<EG'b4lMI;OCVmN8r\qZlGe4FHC&7gVA<CLnGm
%O6KR7a\gD@5sn'q'ad(1&9k=-HhSu$l'-#s5]o/*4:NGZWP65^=A'(YjLpaZo#1hi'$gUOX&'/75G5L[+&J<.b*Z&YSk0hf;/>iH
%?Hhp+Eo(0[TDVbjWeTNMVt3"9`TS+./je1.W%704\qmPoB@W373TW?Z+DmC@+>&q6;s4jM78kc7=Yo-p=U!Z&='bWch'ZI7;Z-mQ
%pbkMep$-q+?rN%bpjUNaM4A)pT=93)G/?rb0Hs4+p!M@#qH5b!b?gg\X(L"\'Fb9mom21<8nS3#c+j)9.+(i4$uP9Q"Jg8HWgY3"
%G*@r_GM_I=3=PIi?'^m;N)J+o=96`*$PY#?!D:6gbUdffgARJt/pG19eL]\GYV:\t15MVDr3?bu(qc;2Pf?X[g-dl89G&P-S@/$#
%RaNpCQaq\E5&#S/3+$42TEjGL5g!fePG=`o/t]*u7Z"gQ"9G_mV/p)$H-E@QbG9eIPic^?<Vp)fk@uF"h7r1@h;qCbT`t*&\6\SF
%R6q121$[_6==%0HPL%PHCH'H.b:*gp<XtoEnJanW2=FpDL-W.Agfj\h^mF5)HTeZAD(6n=CP9ca^&RiQWn2t->gN_7:Qi*,br\X6
%ZDjE]Sk$U0&OuiB^h+Jg;@3&7S@:9FNV#X"$q')G4t]0ebR3Pj8kc;D$$`j_=_1VY9Y%*h!%e-Ad[(SUD>J=SGuLHMaRn#iLb=U8
%h;7>R.[ir&+H\Xn-cm(GAmctQiV?AgmV[b#^Wc_&"J*fXN8+sU(KRJ;%C]IKZCcm9a4YPLgn2qa,Cb'%mgo;>N<3*_3Qdd78_kmo
%\%j%3V#cXTl-CRa]CsnK`Q&MiY7a9G@+2:)p6?6"1)6ueMW;WMCaYU\=Sr1rJ0<-YddH8kFuA79"Ms7c64U.e$qrCm(aC7Pn&u)3
%:_lNldk]1DD?!'L#KJYrK";65#1s!O%h`'iC:-3gjbCo[\M<ig<_!]4efbn:?7k/_^p22![Xe*D0hV4mgkk9h<EK'00g'Q9PFD+/
%&'f@mh5O'?g[CS2S>32jp<erV[tPq6;^[%I<F%#>0a#Q,4Hng]>j'=02jD]smQ;$5/9g'Nc4=A+kO.f!P[r4k8H(5->W5[G%$&9)
%kn^U93B=CZ4Y,XiD%UAQ<TN6H%:'*V3>qI_Tof4Q.bqQi7;Ro\n2p8:PbnL<H>5&c.C2`_C"(Pi4\.+7!$4)o4CPrXNA/Lb\5n;/
%@r=G[^Uj/OOW^tupL\m2e#t_0mG]f^HSM5-rdWe*Sr.e.?!Jg6FhF@&))&1Y,V/qKq_jo&gR;4WmKCp?LbE`N%#qC`6i(*:#?Dej
%Q@i_n4-Xu&4'BYEG/?hN([uMD*/:q";-dK'!6'Vi2422uP75OfV6,>A<lGS^E=X5F?bPeFeb406\j)jOp.1SdC?3p]%Z=Ol5d6tt
%-I#n-4`78/'\JF4[a%m]#?[#X`,FpjdsXa]JD<b.,_jW"S/V'Z:U4YC^8eEAKqJGp,a1[$]l:61<#AITTf#N;J<5BC10Z@=Dl2)m
%`ZR^/c`c3uNHq^h'`WF^BT&l4(L3le5*$`2;+EX:).Ys7ZNm!=)6YmM_OZ7_lHfJBMh8<s*crW(D5LA._Ij3ukoGh`_,8=QjoBNG
%+elS_qJL1Eh'&G=/<[A:V2m[L1jHo)T,_=fq5[DeGmdiAKbC0A-abVs5q8=RBSBV)C'F3WN`.-*9ksJ>*?8^SE$:s:jWq"W?`Vc+
%_:nYJL*]/0oH[[Q6u,dh)To-K&@#A$'(p29QkGh:,^gjk=QVW@7>G2DnlK2r>/j'[2@CDm:DIR$ctT8j]Bf.NQQW2d;7'?Z-Ho"6
%-X.E;J$fZlLTu]9kd'fa32EIT7dE[NBjHT`.s*U?<h:F?0oZGOQH]u[5$R\N<"YYSm[9CM?t],K&Zb*^"We\IGi$.!>INj:B\#s(
%KeDS*,kIJtMfe\Q\Q*ZJC-@rcm+/s@_hD43h((X)<Xt*p\<]b_'[&YFX*T%^"aQ=H>&7KAk;g.FUVo/R]M(&'/[[/1;8SpVAPZQJ
%*%RXs.LPGL(r7RKEYeOpi_R==f=,Ad\5:=qe3Z=L[;MNCfM'>U+Ho]?/Q9N*R,V##7+bf8D]7RD81o9*cbeWE=%/jAGr]j(2t^!B
%.jq'd9P@laR@ajGkAZ34&p#If05&``CVXV^YK?[6F[?"C&_3JUlX%$!KX*hpeV!erAUc]:T)eooFSY+sb;&r>`,-";g%'&i$oL31
%Ui`*5UU)2;[OJ_1L/tjI[.C>-4B:1D)G>#kJ$U:p&FF_n6pVU21nkWboN\b6raT7VC=Yb9/G2HCPYkON)QfWf7'Z,)<9;1NS0\$R
%D^IJ*GAm>iN<P6#[.A!(GPt*A5nV'b,g''o%Xh'k>T)K+nd=dlTrN8r?Sk8W&rEkJ,DsKt5g<8fBkQ*/7?!V0@kW/7PFAUfBgd,p
%9FUB`:9TrMc4s'YZ)47(A#"]c89LmT)%BS:<SkLXT/IM<"G.gDQNf$F;YtDU[Ab4a>nq>nXPjNe(p@M^!,*%mpQ?d:a`?/]mOQ(R
%PA?htO!k#Acq[Y)V@.1g"aaP'P/%KhcO`'.M5t.8G$FcPhjP;=pko2`5u2::mumP=ia%%M/s&4^aRbe0\CfjR,Kk'3G=;I,*`Zp8
%V+*9A+Y>dRb?Zo.B(#.+D"UgaKF&(/[C\,gDZ-iW*\@cNK;WMqH^6%c/Om'^+GICOK3TNWb"ClWI2_2jpqNBneKZncg(l\^VK:t;
%hnSOtRlmGks7=X$N&!BjH):nppH8b\)^ZF&>6&c3N\<)"T>@4--t`jXQ/hg/igfTIE@A+"I&<?2Pq56++T\oJkg[U@QniP)f^p0[
%^1c5QbIFj0-5+Q9(C90tOIBl4YS8V#^2/)/?)7eO5:(t(@]1K[K`29I%_'a*]&d4M*e$AT-j_`gBbG,N9\O[Y!U9r+SF3*[flkYl
%mt_)N+Zs:V633fA[ETih-I6Q$WMDUI+";q0DT_"u).WZLHtqdq2Cdnn(9kHh.bQ/!IM)'<s)^1S_NIHIg=tAHlMO)bA*;`>:58"4
%id5iL!oSR9BWP.l+]&H=$uSu3'1>=3-\7Rt(0.g])?*jp`"5ui6-?[OhG%odC,^8%5AV2YW#C5KJ-&hLpC!fb"<S(m*;[Z2ZQr[!
%XOph!XY1E/Wh/0TR&[G28%!%>9"^3i78"_d:aOl,P+'h`q=9GB?s,V3.+TuJe+]7QD0S'+'.PZh't&>%AZ34MOE%=3QiQS@].&UQ
%p[@lXHp8+Ul0$m3^>)s\'o&*m/SF6&Pus,S`#eP<39gS\"!8QV(tV&7(hhi.+o+cU1\;9BZGDJYE!.FI$#S^2#9#TQ&>WdH;K56n
%WujuDSHq%1K7%:>Cn5m(R@:+*.7ZkOX'[0;I/eq>9]0n([o.ZN@L@c2gJ&St`$O":?&+:p!Mda-Lm#8GAQl'm-GPl3*,W\AkKZ?P
%j`m<3!6Hcu2'E5#d?kLsB6_U9U>c4UXJ[lU%pt;`Anb-u6J73u[V,KiUNAF0+T3PHZ$gfH&`S-:[VoGla5pS#6c?s)gC+j;KqU&\
%\[S>BD[m3gW3h('8s0stLmam918]h-?DiAs,uV7#G05\%J5mCn&Jgc`!S,<6d8(iqG:fEn7At-uFu0a9,IN:Mo1jqH\/XW;SJ1a"
%'Y!gE2mdgAnP.iSmapoA.H.%#af-RoW0Mqf55.Xcm_gatGd2(]n;,6U(Q2Dm&Z\<QMAgBs7o]blJ0]4Ea4f&q8-b\(g[qf$dR\%+
%%R>/8SQ-kl9!\BB[%ck1>>CKSJ[A_p',L0ab,Zd&\:<2dULi!K0f6uK9%W0Os8DC&s8.W:WQ3gY.>FDXpD!mpFdiZ#]#tCrHZdTs
%K]^O/R%@doK7EtSS3XD$92qTQRBe\WL_HmuC(l.E.^B>MO5&5VWTh]hA"#,SRDNDbr:"$Q5;/<b%[!k*6c%7'"BaefX09`@KXo$,
%l8X'9VI=ilbu*d.N?eLJ'oFLkAq8,2jI,e$Pc%Ag[K(XKE>A1NPG`qnW=8rMEb((&)KkmTV3\!(U"D=pMs#2R+rbJ_OZfWKZjbQY
%B7O&\7MSqbiI'2[$@a+s_%+.gSe`3&9rM$FpVQck'^?6?aMZaWq6J]<HFtDaTN)\0`eIA,k.gDrDXr?5`.X.&5e\Pmf!0U"(XWU`
%;b7JDYM)0+_[*qQ9G@/gL7g&:bXmM(hSmq+.PAJOFXRRF_-0lQn5ZX0ZLT^LS/@-nD,juVfZY.!5BK[7E6;lZ:k*e@?OtJ5Bn>4c
%WS+V@N:`;K.2oWn$#(k[E-C]S0rcOMf&#+h_d.dl:Z)_dkZpdhJO'_JNu#?:99'XCBA>/+bU8)qDoY_jZn%8l,J;9^8>Vqeh/t8u
%Ysns(i/T\3AkMr"bsHYURK#f)-_j9FcU1aE:*%rbU/p&h.eU9Rf]-G$hJa5O>JEZO/"ClB_h2_:Q/3mJ:,V65.cR[@*)[A99Te`-
%?"ge:?i"5HmcX):Zi#-T0:([Jm<D`:<%eRIC09PsQqjBn5V,u=p.=uk(P#=8'k1K!W[or+_`!mF*!LY!A1fbY^3d+00D=f3#/A9M
%'3@rha:pa3Mc3t.X';%T=%dYI>dtmH>!BN[#bg4"-+0%NV!=03)^e<V/Xa+*d+"K.f%tDWn65.U'X@NT\2dM.=BVFA]O(n066nh^
%3mpC^InRG<>U6D;,eB2nB<Z8HN[c>)%S%T+WtnOu)^B(,2,^k`$a\tL#+`jYi_E\>AoRq,*6RR9X'eJ9^;EOJJ7%tVKE$k."OAu[
%6q/oc4d:=']dtSei.'\E1LUDGpVF+;g!DBq#RDVg;g%=+MFMS#$GPI9bnAGIPj6/6mch.qlAT+XP\0cW<CCDL_(=e-7V.CE`-+/J
%!P5pGmG$_Dps>#o"9)7Z_MIma:5KdXe.i3Gm][>jp:R[pku)ko_CB!ICC'13j<Hif4Q5Kd_PU*G178?3l>SV?+g*"!%AV[f6rI&O
%?EYaT/ka>2d,hu1ZaGK>ZV%sEabk+q3`RRcitS<R$h/C+\3&nV&tWnlR6^1c!:dU(OHhdLg/#4R>7P^&-hpneLa:!l0Sbf>SiR05
%LYLAkjEL?>r1S>m"/4!=9sb5a=*U]01[&R"Msk1]NW\a_4*?JoNQ_tQa3'qo,:CGB=t58NfW:ce$)&b(L/d5"QA2u<2L)DNh5oll
%oDQ#(N=g;k.NRhl_K]ghA#M,_a:)!#4Y4`RR0=NAnMUFMU\eK,5_4"HZF:A;<ZfG>>YO%=_E55KFm%ftZWP%](lV:jk.3^tF"LZ-
%F#h'4nas`0k@PNc!\l1_4iC<R_Q%CO526WPaL@/P!EVSs"^"Z2IqRI&QhOr&>jdo=RsUU/*0uSWcmN,g<K/*YY31dtX@.lr'tB@W
%gYuuJ>jScbCr^/mU`tf,8sK!j([+>AIIYC.bj^!6<;dhS(#N62&]!6m^-UUMFkFm8$n[39Ial`Ko8X)BTI`^\<TQ,0<l'LP@ducY
%45(0K40Q4,qf$BQlXq%_PtgHKJ*>U9X=8J)Yfk"EGTEaTX-Pg9=5r#e&kS5:Go@I*hjD8oVm\\%X2GZVLr(YC7=f/?U3sq8?O7MV
%G-S,Mli3+5nE;=2S&$JK*i^nQFPmA*Qk2clE.B1\*>\tpq7qeD-s59+[m9V2Sffn*6E"=Xhf0rI/FUP)\CrNa`r;f!gT%$=Ao[U9
%T`XVoa5P-pa9:KN%.._(S[E<=Ot_u5[CElf%n:penu]_CU:>*"n01nX&RsgU\)C.m37A8M_GERTBB1rFf;phc>Ud#JQZhp8,[q9R
%_>ks*[.$YsgWGK2jqr/)7!7f+10d*ZJ(U/5CL)8cF>6FtbIRL5W<['7gJIV-l!dVCX@6_]FKF>K+!1V_5`GpAL@QCl/Lsu3O8/r#
%Y<K&62_8a*^W9;+I5lfc0r3q?6.;;:jm$,:"rOJP:2goFpY!uI,s$WNkDn4?#g^`VKAeFB-^)WT?4_;A@DB<rJYsF&'];\I<1-),
%Jf/Z1,ltrfX"11+Qc3_YUn8J;DAa*ePcDKfeJ0]r.%1tsX*!r,B&(aaeqh&\]S\S40h\XHLd4fCO@8PE+Vc7qa"BVS!i6\p8F9!.
%-sPek-r?`S7@Wnt`>5shDN''[52s;L`UlQHVAifFZtE/QV0jGM</Bn%f4q5k8d0Ji_ob7j$TS;+KsQ=R2]70j#9[pn/Q'!\W=mQ4
%HOZP)M&.*H)1g!JNCGfW.A_`l-%$n&:/`C*('ANq,4Cqp&hHBoYP>02BK="ICLbi%Y-uG=fhLq/L1@*(X&cN'HYPP!S(ba6"l=hG
%:&s!%AG6A%_Ah;fLSZc>2LWDidHD1*=N@@%<Q`^ci!k8N>D8K2MoF9r\Q])V'(>lgfl\1nNk39.n4$(qMk:'GGXphtfe'.E2V9<9
%Pae;!BX4,m%aKV,N4MEs_?2-F?';kaB4+ik0gF&-3#-#Z!jZHYCLk?b8F2dT9'R\D\UB=q!S8"g9B^GW;6aT)SJ`OTriE3MMPE>\
%L56#7=R,E+<m`*YlLs9i\KFYF]:=`*`kj$D@qJb6QhqfUUk2\\KcHcn0k:SI/;rFD<%nNOaqlA,`Y^Ga=DJ!U=-'Zg0:SRdNo(A\
%+CIG25)d_ga8YrBU%ac9@(n'0XVI@$`hSWYFEEEnX+/6/\/u+"XO]38&d9`9hum+%&)*DR.r_3lk[4=kO^eV>qY8\('Dts*l[rj<
%]kf_=*/p\.ja0@'i!Jl.,'sDOf'4t-Y9r\\:J]a^rD>mE3P*J*Gjtc`bJXS8nCOOu7o7t[34rD,JP$5-f/s>1qP&Tk.U.qMLj4$=
%mIW+na1bgXh7n"mU&P4+D=eG@D5qPpWp:DYio,N4IK1,N2E_l$&3dgb"hO"`HQ=I;boWL7]0H2%9Z7BUfn19Z=?Q6b0(k)c`E;hf
%!2_0)OKqR37eY1KraoMlaoE3I(!1QGd$$>_2$dXoGWH]$c)dV?;BAh83Pp^DX6p%33TBKn,R#Dm:+Y*Wcu@&:$(h^ub9g!V.`/or
%.u]]\Z!2Jk",;CC@(HAJR0I[;m3`an0)^CV@Eecs=<<F&,t$Qa.IPYJqYG:mUOVI/oYA<W:Q`=;FN0n7Wk&^UQV8Ch_UY?qSo7s4
%7A:a&8g(3Y3\+=g+jq^Ia@f^H<(WecqJ4.^hdVk+Vic[GqZ028&K;=k//MZ<!tm\:q9\0$;H;0dkC$ht<3.lX5C$d>!u:r0DW+.(
%9:rNg6G0QDh]XRZ4,-t"[.frb:tp:%noumi^OQ'/!5?YFZjP+dM?kl8LpI63b#.iPiFgZnQ)<2MhlgjcW.n*Q3TmHK,=`Sf*#o!J
%pn.qfAs"o[,r&#OUg'"n(ER2?j;=RH+c5DR"9BpsT[/5jPI3krdiC]H.HqE=5L!Om^!:)r/V`]Mp8osAj.\ObjPPR/U2FO_!69gN
%0?"Kd7Bg`M5.<_cFSB`sKYtWrbZ+bQ=43%d#Hft^'NE1?FsBd8`DVkfiWZc@R&QAlp.u$bkdsuf"$OL`%5iu/bU-$G<rkOO<%u)j
%hO-nRJYeoA&eu4dqlsr,K>[8)Y?fDnECYZUk5ocMOS`F*d/:9`,o,XCZ0!"\D]#1d<s=^7dD-T&h.A1RK>PVl<_1oB$EdtB'(?i>
%SZ@SbI#MSjo,M*hS'@[dR^t<e$@l&a6O2'Rnt>bW=&NjsE^3t8mtr;b8A60qU`]jTirJ#=-pSj$9o)al.^*T6WaJ2&^D'U]+:,'u
%<[\1,cid;Za9t@foKkDX1[Qt0Ja#Wb%\t-!ZIj_!UgT@F'3j%g`cm?I$605gA1^V@,"<:]s.C72?r'b5+3gZMS]I)oY<G#SKLM0;
%WnVM+dh!7/7e1K57us\O?`cJo'p@qc@Ku+k-I<<%&NGYjKeVq"cTg0IeZ*%@M,%j4mf8I;nO;L'KR;FA-+$9T#'%9.H`C5JNai<e
%Na4J7&fX!CipGNo01YuWE]<X82L_Eo$@Rm3o1d*:!osB-;7:=RYL/Q"6/"Hbj[73)Au(@I@T"QG=F2;CH0(\PYY([q;W<rf`<EP"
%'PGdSS2IYZ;T8pL*'+Q9OP&?j-M?Cohgc#tNBVpTK/<)Wl<l#s=9T3TB<t+^+2<\L$;V=oYbiDS,dcQoc@.hgF2q:\Mi16QbU^+r
%aao*1W4h$5dYBI5^Yd-^"QM0SD*GCGQGt6uZ;9n/Zj;9R'Ha^R^YLM>6,k/ZU:j@=TcuK7/.M5\i.DgM"DrldhoGI,iGPnQQLoN>
%hkP*-OS6NZSln@B5ZQJ/CmK2P"`5AO%7Z*Q,8fk=?.'X2."cQJ67,q4n7@/lrpGU75BFas9KA[+!;[K\CBocH*CT6SmLl01BjGrQ
%Ko8-2WUqCu@Anh@G+n)C()2bcX[0`0]j<P$n51sskAB#sbXu"pYJ=S$]g<YsHeL0bHIn.l.E*=H#i^;CI-?<5Ub-3Y^:'D!X-pbU
%@W*&>Hk1?b=&^C.FdLl0el&!6[gN@"H_j<,T%@Bs[W:lE*GDo4[d.`l4sFVY$E+_+P-_HfUNk8YX#CdMN^,,\;"_nJ&FI'hl=</8
%XLmsnW-n-rc4\ZFnnQ>G6QU(rhp)c;WRO5:^;5rAX*!KliQ%LL^l.(Q5?m[\P(E[$U[+u/_a@lpW<MG'L14Rk]Xcd?(Zg*E&;+=H
%j17]I51l&`(HPUQD$s;,J!smH`b9j!FVSt&X(mE!Zbf$CB.Qm)f4)9>,!<#K\1ERk.f,\*#EBsL@MbT)5"$0/N-8!7a#@smiO_Kh
%h!^B[e].E)g5.j-HTcu#GlIqB]RLHQ/j%U<P,Z9s=hSlk@YtjZdF'FSB7\@Z&44>LAN&V?`$:?A^GqopC'5q")nc\U?!>Qk4@$6p
%FbWL<CVmcSc)cFU[p[eG[./MaZX1Rt_m2(Lq?>a(?laPjjVCKpe,raqdt7PFMrQC2U-f?T5!<\6`-[DYHBS_1-kp(s5T_]8f6-Fe
%Z6Lg+>)FGS94GboM\0Q,bj^['VFR!QhnRlAF>kcU@h7FI=:-D(M,C"-9;-D!ekg)iP<a"_7H_lPgH:tY(!2>62$/q#bJ^?1%0;>a
%%'e+I(V=<Ta'pTS@@QpB41QVq`FickK4h'qR:0)0PL/Mu_GuG,$:CWe\Tm!R-\3='NWT:J-%<HqYA9dYD/c;GY)!3-M?*F4MZ7u$
%O#WE.p=keh0+'qCc*e'L8Y@B&EL`f)`\6.eS@16HgF3Q_1ogHU==&XWfP[XC75K37EogC`Y:#G;EaV-^L-qoh+ZoD\pms4MZ5Ubb
%B9#6==eEk^Ed<s':>FCIr4qEA"E3rf>3bR":r's$[Pn<;'A,0QI:LD1="5>5>\8+U^b\Bq*CC5O\FL>`jCs;;=<8apYs-6f'#F_j
%<=CkkJF81HXSlu#!NQJ3q2Sa#m.,7I&A]?OKTc@?2.mDjR?`.(*1^rMI9WSVJ9%U]m4Oni271OdDg6FJEj,d2ApWdD]*KW,a28I&
%%K+K6P=(KD\dKdWJWCRC[>`8@7S:&_ArFt)X..q]b?[XE%6&XbmMG(s:![&>kBE18ONOP>l=sn1`EBR2A4=+75G>DK`-f\Pc;aYY
%h0s:Oa-[l3CBiIK9JHn*Rl6oGJ5Lpkg1ZnNrk=lm%=sV.&tFa;gORN5Y3I9/]>Ng+>N'<.NE`^3W34'<@[guI0[N&HrENN_p)9f9
%M6%K0@4F2+2Vk*>J=+p-m=NWH9p!KbEgt1o'(<7?eU<]Y\Co83a=3/)4E,bB:ZK_H7KEu28c(JIm$[dOf0,G#ks?Z&%9Y+EG4W:W
%`YUuN-4:)dqheq7EVF%J,onPbj7?=_^D9*ZP;QX;mLYVJBfT,R+/@;`3tU&-!?I1U&,*tS\Qs*H[le%4p&"Si4Q'hn<9i.S.4&#6
%<i-kG).E6ZXG\h8Qj$m/OB\5a2`P]Mi=o<=B>B\`@sCqYM&^)D#jVLW(eNJeKIg=hrP`d`f;tWF*SJdl%h#%ciH2"HS1s?N)sL=!
%4`G^!#dfaCAsOAof_AX^N"^]V)S"E#;C*bPWM^M/Xl-M(g;2FF:-qnWFL8P"9QA:jI(Ks61Fls$aQqXj^NDn.[edc(!8gM.F-tD?
%.F;OTFoj7Y$p)JhTGrJSTBoZ0,d5g3LLoOgJn5Z^?mN<^)*Y9g(9^QW+\']L:o!s2;>hp6qg6LjAVC?SQ'0qgVVo[anaJH+7`bt3
%([Jt+Ce26df=*B*7h=U_qnDedm7F"F*ut36KKUI(Jigs'oh^BLTL_aa9CA3.No[(G*+B7teX(,JFPar0dU:lV4HIG50Q8"c#2sLZ
%`?53*F1%?+9h;1)D$fV>7PdR/9<3)Q2Qk?P`C[[(Orq3$O*JD3c[*;?0O$P<mMs0:.4e\(/b3;-+o%i9!SU1E8/NPY,1ldLDf\mO
%)"f@;Kk<E8@O4H>0^p0BP28OVg%V9]V1<4rr.PkV:OJ;o8FQb]im'dWS8d.jj-CWPBOqXhNtN=:<2rj]>Hp!gTNo6@qGF#hS@?T#
%1W]^][3[^*a`E!In#s/nMj5hlbMOG0#+f&mdA!p-7hW[2h]3?'k"d[95>GGJiA.I&HG;QaCNb/bhhtMLf"/,5'%6\Rg1_2+Puoje
%PJ^$3;$7^B$$BVkf809QFDV+WXstqGDbY;<TV*^Fd(t6_Ls`O38QIJ&C$&_!_#]#5,8^cR"-A%aA%IhM>fn0#Kb:LHEkknU!T;B6
%\K=]Trum,+<Z&6h]V7kA!`Ja5#g%)Q>W$&cj%0PU*%L`RQ1PA7L2qJ8<ub(P'LeDoV7Gk%2Ls%0bOOaTbI>[*s482/-F]TD:D<L%
%qh*<Ro.Pq^!j&\4&XYp0WOssa(s(R,bUimj,(SjJkDVbQ4";'OAhPC:@D\i8LeERV1!k,SHCC==oWT<8M%N_V[lu[UHN@+-00AA$
%!:e]Z0S/,S/P,Q/Oe!Y"Ann$&'].?u'L2cO=2Ch(>CfIUnH2-A0[5e8Y.Ih_l^E-9/K\k""QI1=pOY8$0N[8Rgj2M_j%;4?VF3sP
%357B[(XmL]WRnHeMk>\(!^6_.0VBFc4TUrko-Wu%S%@3j72>c=9+nocgkQ&5U`kWJRK8aUL\fi]^1DX5Sc3j-jHA;7=Sn1n_^C_D
%%/<6Zl377sb.joXdVu@W^[kW1msd&bf@*;e:TYp\(WBBd.@%Wk1B8IbeS%64$JqPI]Mf2"Jn'U1E$.3?e)08q^NeXs?A_8-EiWnN
%d7Qk?.edTDTNGX">V3'e(B?0]l/-cQX-^PfRd2s:3U&)\W'6puXdp%`OK3#R]M[t4e2qA9CD3jihpJT-3t*8.6/=)L.Qs`omU,]1
%EtgY@6J42#pW5VCG>JIX;Xd2q8_0+jKD6@`NpjX3eb`^tdW_Q%]sJ2oR`d4HJh+4oeX-'M1OlK7Ifq)PIRF%\B*6C,3llVZ,&(#J
%#P^H!Y\Tqoiu/fLJXH*-O)PV9>o-;OFD9`(@[;'OYKAiZpjf>XWfGZ,o_d363R:1qGZ<a?`#Mh>/tnn&B2gfjkao\cb[O<N`d9B;
%jDHIG</KmF?]-"OY!,"i5]\[G(QX"7EYhXSaV,=_::D`?h-S@jDYM%Z-F#=Vd5'kPPC"IZ45>+UL(EctDQn>s+Wif'GD&ST51BI'
%IJ_GodfR>/8WQ,'#FLu]L7=r2WCl(2Y+$7+?ZEc$KdOH*"A1$`7P\\F0GrDCdkA3GIr6cD3_1'jHndA-1Y>IFNSZMVa=MJ]\:Eq[
%,I,)]i&!q)@@.JeLiEgR+i+$N.*6ZA"_;StEmeO+<:IR-:L_!Kg`sU<en6IG'FIDHqn)g%7kU&*B+nGsr&>ZT_8MOBUp0us/CFO&
%To4L4!&&9u,Ic1Q#Xsjq]=5jS:%^oLqP>/GFU3YdVYr$dRP)(s2!dSZoa"CMEPj,A`%A(JC5AGf,#//]6)p5>TFG7hU@Fl%VK^$Q
%l0Pll?A^>bFEE$IK5u[`bFX:r@L4,7K<:3uJ=XgBOaBndkA'-S.-g0d-?UVZk6f%30L[doa3O)5(6"HY!PIED8<W$NceO;31nV&L
%(JFDoDB4M/q4gM5<1)Ihh1QbZ0m>$`'qQ+C$RjGlg^-Pi_VJ$ke8bQgDUs(5?M?GfJ8S=1D:Bq4,Z2H$0V+61kVrHV6sNaQl6mJk
%/$hF-A#$*f+BVnWocNtZ*o8J85.,p7&?SEG>U.<^ISlfm?,`AWS(VFD%,,*BL+`pJ^G>6<b1QM`N(SV\(9]D9fdg8bPs'%;#GW`c
%-*o(R2+*HC#_>8?McEsn9(_%nWQ=m:;p^WDa[Ook&..&`e/+"`9UmeE@tU1HP-WEZjpVuodC'3@ckd_>Zt%TK$=/(bT20pds&'HV
%lFkZ2W/-"1$([<md82uGVT[,3LnEKUZr!B,%DO<h5m1!>7J9@,@;I-.-ol"u7CK[pX#h_>Wl5,n^'"o-.,&A+3mbFpdMG8haibZD
%F8gI1O^BUt*ZLjC(]bFVf4isFH6&K3#?@O.ZPBWVn8P%^:+?m]`Y_HjGVQ'R64Y=K%Y3mpLJ5:2Xb0X0].t[m`p]XI-5hIhg+c->
%jCpl>k+0JK@dq:GAi3L[:PPE/YbXZ62ij%7";f!2jkog;;@dZ#;J/iUmr1>3Bb0Wd:D_LP<cn/i)Epi,KcjG`V!r1CD=XK"Qg2Xh
%bG2I6"f.j:/u6+G\Z%jhqQ94ak'dYU;20<Qf<<fdIbAt66T/c'Xt/#?8Ro",[.iq<KGLZu1HkqoE0DTE6ERBnJ.c8+1$P<4pEY^Y
%@\_bd8agi`rP!]n^$U3OA>Z^F)ks!XU-]hV8BXnRlIFnL/skoVgrX&Q80h@RBmAGH7UnV"<?_9&W0SoSnh].4-V98)VY?0m_e*+;
%-`\BOi!aR;$QK^X-2Qj]oIFlJB75ZUfJ1cZZ<dt*$T\N3aK;M':(oP*k8b7QgY=TTC<0go_t,Vt?gu.6Rfo16gh5`Z$Z7GTHBU5-
%2;-K[Iu[61_ZVoXH0h7h;I1?U9:U77p>*+D2_Q26T?ZGE"kCi]OMHA4-?f]-Lb;^(!D@Y9E@2,'7561l\<%Vm88#7E4O.,2G.113
%2S<[UY*!0DO]5_&9)`3:>=5UFr-#Ua5'F^>J2RcJBh*iBJ(hU6&0C;'6Q_m)[RSr@62ZXfMmqG)DmsVB=Sc_DG>+[ZWZf>?,6b/t
%WWkXIQ+uRXMS($.V6e36<)jd39di*i*s,[&T:mQ*p:$FlO-oPfb>&XE68(*:72RsQ94FN#0-1u&2EK9:YKHf4d)G>_,k-QCB!$8N
%RqRm6D.3uQ+U#S;M/i$/,>dLp%"IUqpddsR1$IaiBY6o``]FWe#L`f(OUL?:N!)+$>\;M,7d(92)2M"?*8@P>E'FNP">_80hcR]h
%S8$k)>h(Hp-C#kQc:_Fm],&#(A8mlI1!1S]L@P`)-Fn,?,)HAWO0<>c2OY>8fHZl@_ifR=c,JGO'i7*X[6Bh%\t;4EC8(J[Hli>(
%Vgd$%(+Y%M%#D<PMn>O"*`)VR/fR*TbClnF0VstA7`?qBKO#*eglBH"!-#E7cTj,b)_Jh:DQalOIMZ8WQ4KL4!G^tXYaY'WHYSQ"
%\f-]_BHEHX)IWHH1=t:?ErXp3ZL;VLE^m-'NX"mW@Vca:B!Wl]bldu+_t,t*AIhg6YEpmG9->PoXoqU(iVHLPO?!GT-#bSmSj7F2
%]KQT3$S,BbUYBDC)C?r`gX7+_L@6c!5O-*dV>MmYgl%fc6eD<i%FP(=V"ZZSO$i[tOP142DO7>SEG,>>,"ue;BPfb`@3'I=7pdDl
%s0diLl"X&kp`&1$`@fa7EW^^Q8j%>.mO+.gNslIfWU!4?bIgR_N$I.XW?Fh;qYSWW.4I5G.@.kZB8&)QbVSj3^YrA+=QPISE4'EZ
%O;[s5)3ss&Glp4.nk=,RT=qLq6;-WH?DVPpq$#[T6un5WPOsZt5[`q<%:BD&#H+DsRI.+mZY3h+q:;#Xo0tL<LQ'_B5\fD/AqDUN
%JdE4Gd,%(Kb!%+?&:9Rcj=L5V/a&]E3OW1_gD$/gd)[j+]d_*d8E>W/5ke3"]:?[oP`@^5T#oL()B?pG9d>[9;?,1^BS'*P$?W*8
%$0?\p`%M01#fc1pZ-CS9q`2:]>DO'R:hao?d9XQ=(O7uN_k-8>,].7=of0Dqkb"l/,*+hPAefG#>"^*d5YAfL\73Gjo<1+aoN9ir
%X]1N+bGn[tB/0cU=gQlpA#d0e^au1+;VX\*@6\s;o\,jd=8iBtVJ^lS*M[JBRobPDTW\lW;Xask6iq<3pmY(_NtO))>DKUbosk8`
%a9m`1<?[[Q@J!N="sf'`PWQHYn_<.hpu`tK?IcGkR]'jiU.]GG2H(".BN+##[9tLE5]KGK;L)h&Z`7[>.;!>)@K+>O/32fJB`R3%
%^IQBOPVnkG5[dK,'T//U)X>frFig>.5PfG?.p'0o@o\UD.-)(0*=57H+E"KaZa33C0ifXlJ*<\@:L]E#F+diPgHtC)T<a7B1MS(J
%[Y0YO2WV$h#m?sGn\^WQ_"3(0U6C]*HopZ_(GLbhgh9p!/Ku41D2.=XQ68!gl,YJg*PPneZUD?M"=jZ25/m>$Z7k@W&`2lH#qF(b
%Ik(o'nsSRej=e[jebIA^QG,1@.Hg(6@=Bjuc7X[^q7+<3==sV#AD"JlR[V1iEgEunGF(j&34Sb6ZVCqOT1V#?-&$RQ/TH"O:uR8M
%&pYF0";J/4-#6;_klsM>S>RKTFW.91b+$$Z:rr(7;"2<=S)FUgPBe"0Z<A[J<g9])f8id-^LM@*PK+igG;o#iB9!7<K2PtfK4SKN
%5.bHXk_bU!R_hf"aBW,&;!O3Ii$&$C>pCm4\d4ZV"s&?]:.VE.989,eoG"%Ikop7V;UosF:*r!*3(3g8!_K2jZ^P&a-2FF\;r-:/
%Y<r9;6f8p?5W4M5.Jj9n@d"XL'>@+[a`Yki7_CMD?aQ?a8Luc(;^WG/?sD./U7=J_^K/.*B-7P\lIoB\VT0`[\1(TEq;SKl%eP%N
%&DC?EZ*iU4Q(1185%rpPC%#iY3"OC?EenSK!]Nf"qo,dAZt^$37%mF9ZSYQmZYh'fNmI'\a;Qm^a#j.XLuN+o`9fbdP\eJhlug'@
%6PI-d*ZUf`h+9@`F^>Y`dF#iuFegA&5/gG)FGXUSf2*;o_2,J(&9?i=4-lGE>Ssd$O.G35G,+GW/f-SF&?"N/LJ'@8.OLgK'`<Wh
%rX@<51i/1+H^a15R*$Q`g1SVZbF!Jib3eJ[H1R1=a58P2>`q^c5EpQ=6]MpV&;^gfjEhM@F,W"2IB)0cX5]5f*o'as'A_<<G'++g
%1=AEr3jEnEH)F\A=D[b+L!#Z\-Ff@)_Qp74[g]'G8`XR1QKQLr^o**gI5=sscm6=Q@Dc5u1#XZ#"NoD4kA2`hM`(6M:.[o/U,hMX
%l];g`dM5-JYR:1f9BU)g`SPB*@Dt7F`HW4u9jq*f2P,R+Up.CjSf)2RLa#E[7!Q`XoHq^`fr#L/N#FF3+jo>%U(-[M0X%$M"!$!*
%3E\Xj)@-/8DdEn3#I>S\D=2'#c,fUP7Jlo%[\f,5WOf,]r5ZDl;IG4?4UD1FSV4O!LEEZ=0NTLB$C"J%P)N!L@pU.f>AUig&*Ute
%^-=nB'rJqKORnQ,LL2osG92ce7%i)sY%0&9T]])/E@qm9`dU'%$o\]]9B_.:SpAD%j(>#ALF<InOQ;OY3Tsokr-"*<<tk>5VGtqp
%S.g.!np;rj"TlU+F%:g>G]qNXL1:PD$G<B%e'&/pSQs:X@8,3TbgPLH'DFC'kD^D7:c6:UHTq5!6crgdeY%q0KE<iE-X4$'f#HVR
%q]Bf8>K`l4?Pso:R7Y`9UXi01/VKF/XLdcJ@3N!@ZKO;oL%:S7@trq%)-@!\,t:%=MtqPB'LaDgV<<A'=eoni9h?KiVE4&s+27::
%I[3k?/qUM7bM&AU9I^alcuVHYJ4;!`G0cj1:\H9r4V"MOaXDrc_m[Xujh4s%q*3o"hP0C"r#rEr=jmq@B*(:=91QW:%VV-T-GN$r
%U6h,F4`QeQr[a;qOVNCBe.='2+6E80ZJT,i7nODMT:oHn8$n,1"teLV</XJhEC\3l`P$TYJ&"L4BB#6=1Nf7%4M.&^c\KO[$G")6
%7-KE*&0;`gdH*)mFNM7kd4\9i,P@.Y+5tW,aA=^L4B!.[9V:RTbI0#(3/YZ$:_>Atmb0"!D=XltJah=JLNhP?(M0HD;E.IFF($d'
%HXS<TKq=;"EVRk=hf*RZ0&?q%:>?,U3(<Z19RZ9m4i6s_0sn#(FCXJ`hHE\3KMmLic#/9^?0n>V6,=RmM*dSQE?kTaqX)\@5@<"I
%naaWTTBgh+^dF&sJ4>IbC7<5T4B026J+^C^b=VILf.TC%$B5'a6a<9X0+pTnBQK&I"!34f'*.PcAb;!WlgHI<Wb%aLhuJTYSAiG3
%`.;pg#Xb$QBLV0EXCapL9Fb:eA.*a]0gpU>%agEU?TU@N%rDEi3SOD]_kd0N;OYQ9+CH$I:2KWcWs>Hk(M+Vma2i/YFrlQq%."IA
%20f)r!U:<B8:1qF[ZF5l[8n!C`1L8&R5*YC<gj-Wa[cQ!'MNf*1c!:M=3WfDqQi;7<ss,^>diO4L&Q\r)K8\CRcE[L#"HMNRe/5J
%]%!0ZAk^mtdLZsj,j/$?CDGmj=+*"VX?nd&'fC4NV94=X@#\Wa77ld4`I)=Fi`#*L)ES:d%'$"9^C_QEIa,\akM[6i)8kpkb'W^j
%EZu/3am0!,3Xj]\qn?XfEuVakFFsML^EuK@NIu1:#DgULj^://QXdsSb]>dR25KF4E]%7R<%6V&"[QTCQRIHLTP'hNHen*6'15KY
%1Wgm3K8=+H$WUj[+3YJ]kV=Yopeh$,Z:5S3<*&2518c%MDl2;!o[gXM^_5OfV1tkicSE5i5=c8WM%`@[;P</iUAir]]`(Lsnd=q]
%9PQJ;CnV&?ST@$pQ:-4EX:VE*H?Cu\^L.BG?$"p8HJKm@1R3KnilNG":$L6_AVQTj68W!>jF[5m*^0A?RW)JMpJF/h2^5_<0HrFn
%&aT(""RZ9(K0tuL9%p:oh,!S.C>OGq-NHoul"AZr"arO'@BLpa;!,>Ihn_6.EaF#^CPpX61mblpi<Jh6cI7_h1#2`*@N9e"'Lpb:
%03olCYSUq:-H(/>Ad,\P[o$B*[q;sJ6X+\Ka;;PA/DGjY2':OW_1cf41>oZB7,RXt[,/F0OFPNpE!a'19nCGM7FER?%`>ag@F<A.
%VcI+jI5#dZQcBk9e7:oFI+_uK%V6P&XJ<?raKO?(9kM?Qq>4-T'E*@41B>1-Q)f90>%45@\?s>i_N\qA'j`*%&)+IPlceXhmS8>@
%)%KS?.QlSTM;.\eq*!$E0=5EoRjstPqU=hj9784>.dC<f4sICD!G)]tZodN-Id=G7jUR168#gg-VC]m+iu=c_7`89TaMD=.6M8m>
%,be2#C$X,b,8pkr>Z00tg"%X^UP.2>g4A`0Q\h81[]0KY/"1k5/<225b201ZPDi7kH=]\@i([@+q+S,!2"GCEIRc``(Xrn[\kPCV
%HoCKS5bG;$%4rdt/<L#OJNC0rUEOJN,RgM^<hd;809F\#Jr%+%N3u+JXqc(;U)F!8%)-MSX()#Yd<7p@@T;SB`KeAgja,fhCbT`o
%Jj>4Bs49n`Z"1iPW*36O40B>@i&P=<d.:DrS$,4(3d1dfip4/R;tYd\q>/"M\B3g2k*/O3,_N6f!3TgfIS7/7YQn"s[s<+*Bcc`(
%p9apGALVG!?^m:,]5ta5N5fWn@!bPJ5KCqc6aS,&:A$G8!9.UiOY3V5)7M1h'^j<c5)k6Qms"!_q`FEh_t/20nj"5%3j=[eDb",b
%$F$5>4-VkA?^KNt@f6f*#V?NZjlk`A:YlS<[_l`dE>tt\Ui;!J\HiV]UGok$fs$E\P6O-,YI^B`*C`F7nZ>bUg"K"t_Re#OfY`9O
%%<[(q(`;OG:P.B,HY15HT.sD'CSNdZ8YX6K$:Q:7S5NsK(S5)_.fnk2aqaFVN>,i$_P?.slf]\(WQ';GmM*bMAJd`J&uoFI#>2H+
%,SZKk[:=IQZY@sG#ARd*Dg/kgQ89cC#T\eVOX&!dbe]Sg7L2(QL:@p[i0;OVcHEJ1a[@mpEQ@:YFuQ%ejFd",916>6V5H-BRHera
%jDWrBLtfm$q$/6XO9ZjZ6K%5^!9R2,%^m%Ok!q8g>[0)'",V.$'s5YGYG)AN7";^<DJb:%6UQ,L9tn76.(Kn6QPnu0eO<O@gQ-%c
%QtoF9Na&1kc>*]n+a58$o'p3<QD1Y7XhiAP+oTX`X8W<9k5G+C+0<C?=/%@O`/^*jL\Kn&o[)4rHmkl6^k?<NFA24E(Ib:WXD#SO
%WYq-qbrSbCN,3_V8RpH6TF7Rrg1DLC]Z5t'-5!uA(.`g<^`$?d.6W4!+NPW7P/,51)0KAC0]^"a3@!.qGlP6+j<LhL#8>QLm$b`.
%;<]?)8CKPc)8JB>jiJLmIG1n;gj1]7[s&qmRl6f4NuNXY.SnC8;hurs&oEX:,<?"Tgi;r5+7?2,7Ku^#Jr0S%h,_3C)RoG[%=9Fs
%/l,'0?&BHX_*g:i8*fjGhQA4(GISKD@_d:*W_G^s@-TC7^M)b6inXfC4.#I1X(B$QlQ^p@]5\^br>^IlnBX("aa/XTYF$q60g>YS
%JO_tV*K+O[-Ita%dE\$2hoa*''F3;l@ngqTH&j+#+G*EDY`<I_Me%B)EPoPg24.Qd6TT`4&@2nQ)-'b[iQJes7@HTBJS98q^NsiO
%b\1Y),t.9gdY%Id][c?VhbLtp,6*6B!iY^-K<+FHHE%mWieQ;uAV6.eEbh/V#*!DNq%?";<j`s=7bj8ke[bD@9&He;s.9=LkgjL$
%aX<>0^dWlKn6_#mJi3DBTRSbKVM4UUodt39)bi@Pdpfhb!D0,sQ&-6ZU<?&%;8?>!A?3[KR![Z[Ulec3pU]%.bXSq<hXA=1%1o?1
%>0N43Y<m48b0k&*<S=[%nWFt5qS!2(J`;Q,An7T:Ym,HCA`S]Z9]>nmLC(Qa3ULqR3Ub6W,LO"1#?#<_lFk?^,?k4_EhJDLJ1Zo=
%CT;Oo,'sp$:6f%H)eJH/p1#J3%%ZaSfoiOadT@=W'Qil6#]*#h2i/@P2;K=u'=N>;&.#*I'apG3-&,mK<QBNm]d]><k,.W)^=k_C
%j@kI,#nn<8L+Js<)ig!l;JX5kMQKImMk1N&X,r5J<0'RB:Gt9`mRfr]60oR[B814rA0J*bp$;;+r&NZuK/j_)PIAT7g<]GN&Y=O-
%TIG]8]<&TJ1TGI&fdh&\D^#Jbegt+]Y'V+sc7T@KhfY6CH2P7.kRXA+B&s=AoUJKCTP]'7n('*NSe,Q]Eq#D"ldE)P14HD9,d4g+
%L_>$7e3T,?Ld;G4Uo1eUh/?s"FuA*j/+LJo)mJZRF(q6"4IOKj,k,:*7;Wt7YQ<t95_I^/XF7bX3]Y=46\:3QlLFq8i+4\T9"dke
%ZiL+K%n\#S]:HWQ?Z0Im,07r`Zg-1s\1`S'1]_Jc#OGM9S>H01i]HoMeZBWUQt&].1de^rNBeCnBo/TfI;!A7cqk`(W\Mpsi[?=:
%UV-cpOQ:$gkp8MaIU"WsEYF`[W"eu*,1";t"BU'4D4g=)L]h]mP-0<fn'-(#F#d%!%NF]1Ti*GOUO8bq-b,_b)98;,QcC4E.7Q-;
%fZcE,h`@RKKV<.%Ni\7L8B^Qu.%i"XMBT@j@VFj#r9*WR7M[uur'a$@]OT:?6((m:SCD8,QftS&6:"$TKs#5&5"@8nY[t&-,5FZQ
%*7S_80N+U@V78QP3r[#b8NUl(7j6%8Dg20Il6q%mLNlqas8-&;9,gA(^A.6^Rl'AGes*qZaR"G)dn>co%F[hVh?jAn%9>J]Q.4/J
%ZES=]K.@K31WdtfPle^pQ=)-_ia"VcH-$ROJ(`WaHe8?riK"_B3,IWpG7c!s"q*308c<d2L)C+.huI0&iBCk>FH9odRaW11Kciu-
%LN[k%E^>Lbk\sAM.;O?=^$ZDLhh3e7`+D50kO?R[LM?gIg;TE'P@$]JY%<NK(!P?C5Y%^s>HZ)0gPj1r<_+S_&;bR\]1!5\]_nbO
%5..o)l&c.9Hjs7.P:7Z1Pmh6_->FcXSM2gcP(3]T?<Xe1XJU!sbAm"92u#n3nJTe@TK.tWGkJL`q)rH-3;ktM&l6BLpI8dp1lo?-
%;4&=7X2V?2BMFjf[&-FkPDkNrrqmjAQ`A%s4_Y;kk8O1)<.o@!a)$T'M\5l=Tu*$_0rp40$2MM#1G2,NRu5(N6mO`)j(&EDB#!9@
%9S!d8b-#+,VDWK\8u!_4'?$++c-Qe^4+%U(B*Y(A6VJ#08-4ReOK1]mjITQ=7Rs"t;%/E\6*g%eV1V)sc/Ia"5]34k+Y*i]kZf?3
%f`Tg]2LlM9Zi%(WYV"m&o$&u?O`@?q'oh/4Ws]#V*dUg?8P(Qk`0s=2AYJ5%=0f.mLj-qA@'Yp4WT5_&FuTVT#)bb&#+JNgS)57O
%eE.Jm$f$P/?h-FBBfAi#.b!l`]&i"a-'^L51)2r?Yr2T,h'l=nqJG,qKSS;\nh3NNoTNVg.BOKZ$b*%gJ!oZFmnL</=WVb4Fe`Q^
%$LM!p<*C5_X/C(-c*EAH4>UhFV+\ms<&Z/Q7nIb-]";e88<$t$&78FHW^FQHFT%.<>&Z$N$3et!S?XA\\FQa#?+fSE'7:dQ1&@[=
%mP.K69oS`7f^)=ZdQB?8N+_ij=@'B="5gV8TQJeV5[YK-X&a-2ktWKr^gg0&:-]]OD;oa#6^aZ.^R<7<:8\"3QBGP!p,e1ij?;rk
%!^5*DpIOZ3ak!HBXL$*p?$B7:?bYfdN=0X.,KToLb=9JT&YU/VMq(*&YWQBBmn.Um1O#T@Iq0"d@(*N:TM[,8g7N)d@#@NrK#2W$
%&W?/@J69j88\%1*Qs]M]I,R@)^Gt&uaG`3026Z)[cE1bE",XSE^R,.7)G^$Jk4,MHYPPlU"i5DFZTR$N)4p)49!Z`$hZ/^e=M>CH
%#6Cr?kt;W?V0GeS^WgiQ)I(WemSEhbKZbfLTV2d];iRWq6[NXmPQFBZg\*0=6+VT2EDS26aknDd]u)C5bR)Ec__I7A\F8>L:YUe=
%FV>Y-;U3WsBC?T[,k0@lkGW&<JE8D`AS#fefh\+NRhpCZ+RY`_*t.3Bm_$Y2>j"UK:uJOGDus7S,4%ZJVO=$UOtlF9LWr)"^4b*0
%#t1q=@lV)AWrkb>j4!t-rn(PMK!=C`l_?q:Ft`/[XC"[<!E'##i9MmuFOGKZ*#)K(X_nc%HhQK8-l8)V2G-)@jVhMt06T\gm@Y]m
%.hOY)>3!68QLH;$.T1q^$ea$,:X?G?T0cbIK7I,Ln^2l*_,,f!crA^;HM+jf3IQZeFbC`qD/s';frk`@PV]G_RgIp1,eO1H\XLqO
%.o*u#IE"s=I+?iI,IsZX__IV`_8C$YmN3UV#=F`_@0^$tjO_LOdf`9B0B283Q(ja;JY9E)_maQXn.3WL'Q3G0V%Y"m9Q<^]r2C^'
%Jf6cbO^%5B9C)s);9)q9B("e?XZ;]1Ug!]#R=lWWq<:O<U6AV,8_=_E6]<oP$.<nls,<qo#IfD1&NNZD"#EY6`;_<W0JRcl!@i>h
%<qi433s&e^lk.VVN!O%.0HmM>2ED2?/?KmV9LTL^,CO5)E75="CrURj^0L?K+<?U0-eetGU9l&p:DOuHmteuIIRX'gf6cg8@>eX`
%NhcNVTm36k2b]B&1+,o=4af+g<8m#Ocnbl:%<i@u/ZZI`453;Y30$&?q@nOo7+uQW%j^T;(cZsS7bM!ZOCN>Z0kotB1bj(e&:*g/
%?B."h/<`oJ-0du`3#ih8-#0HoI_W?SO(02'rTR2pZ7FCR^*:I;C7q#7JNU2rC)9W*-:U'DM455ndPAhAodo/)8A-;2]A.>AZ:%dN
%9Vm6%5.Kr>!;,AJ_qK$XcS3HmU*BSR;Do,Zl9H@c&`dAZkBL&^ZG?s$J+N(;hjD32=SAYliuZKk-&,OHimjW;3_MdKO>@SleBRbq
%B2ue%8R99S/OZb.$RSjQ!NdOi%\6aQ"@e/@6Bt#,R>8O9/JJ`%-WMb6#2&9(R'_'uasI3AQn5S4N6>Q[DM;]23H_MX]B(8^]]b%*
%^[%AU>rbsKVg%RD:T*V(ErebE1^rLda7Up/Z)o73FrKTfUJ!n%""Kod2`F0JJcMk=o<OS21-0C\^gAR!n0\iq>&Y>s\Uhe@UD0Xj
%V8#urnY-^jkN=UDY>3rT#QE@bon?TS$I$3>QpadtpFRAocdM$M6Slf;2)S?DB@4@c*s\nS!MDc6/d2YUE,;>r>C^OcC4R(l'j\pC
%Z6Gucpcq=!;Dpq)o'@G9%!b].Riu@8auiZ?o.9$t9?(L,Vnc:M]78XtS`*(0G!DjTEaK-]^&%3`8%Kfn5QCHi;qF;sM"]uWLV'=#
%kR"$;^0:Wr#UR0EC+PiZ94fBN+%'>)q#&VC*qS"h*WA(iZcD9mdI4_[2$=]\j-4X^Dos8U2b1/a(p&Qb&X)D&H@5-_lGAc#f\qqX
%`DE++Tq`YL^Y0)BKE)GoO^BeEK-5qo(A5"X0^d&b6;&q5'0:61AW5[ClJ8b@UAF>aMtl\WbZ9_33BJ>'5nDaJ!:W&RR6r3h+E:.M
%%W7*]N-!$B<AbN>QZ1USbj&#i[N^n'pb"lGM';rEL9Jl@?UYrm33pkB1.sG(n8r&pQn5-L,]Oup!GEKGH3ur&kTDiaWg/4h2>^bU
%i/iOEoaEcefH!9GA53-LclbP9U/Z9=F$`Hnqc.uVlB^.AV9if^M4ol_h2\Y):R"<$p<rdm5dS9'a(4oJi*baIkor1:T3CEl(#/5s
%DS?taTeDp4JkN`S*?&iY"DV`p>rCgnD<7Y[bTKLi)qM\>$kKb^7crsO,!\\a)_=EP'>,K5H*h'YZ*C*u,Th3J@Tt;DUT1JO[2NUn
%SQQ:)G,-3Nk(PV7l5Z\L1rFYG"i7=OdIh6o0:'qhR?EF]B`>rAmpnIcIYZ=9p,J#;DHZCWT"odXJ(C869ng??BmRZSHu'*2"U*e0
%JqU_1Z6>]/JIP)?:alEY#=D#NjWX'/Mg(lf\prt&WO\Y=Rh#&UahCl?qmGI0l'@1X=\C`9TLdVLW`#)Lck7jJZ#KW>X30lX&V+jG
%OerP26tW_+6OY%([i6FbITt[th>9?aP=[^P"9*>sMj@OOZ3X3/ea[ml5e"pJq]XDHd;;9Z&T<:JXdXEr%,h=n2fp00F+b#D75;W&
%%O539]ApLt*&hZ)gL;l.!%pgt(\g4?Hd69P,qO8$fBj2GR4A=8b,[O4X'iWZGJt*@Mu]O5jW>[Zo;5Uu%SLOl$SVeM[_b3OTH=!K
%#rZaU(B6#@p:'Hu@jLl^8jEL/FuU/j-b`ds%d)rdME4jEE/L+E1)*q6DC+:cH;O-)eU.a!MPIEZ*Ce!`N*'Ft?A=R&R.dt"?;.%P
%XDs,G@=l/.3_t[iP5=g5*3ep7+#DOYL151!?7kp=EYEia:AY'g3jP=gjS_1%h/lPki&B^'Gg@>\cW^bn#];Q&*H!cBA1u29*:i>n
%!/^^f'4T%k%mqa]A&rQ.keR^%IrSG'[o(0^^Uj+G&S_G+*O'S[CceWqad]Ahr*6--r<>4hM:iPE_Z<!0PN8263N1Pr&t:j(/BmU9
%V=ME5'0&*9_R,'h["ccL*R*JY2MX7%15Dr*clDaT(R+cjQf%s.XSH??7NPBNlO71-"W3%b`=<j.3E%918B;UeJ`O6Pq*mkFa6b><
%[V9:=9n-!AR.-A4GhMtOY5RI"=mVZQhR=f_g,G*r?)YdK,61f8`>`p4UDSq5]@1gnP/]CkDPh\foAL[5ku,]@JVj$Y<IYkI54#I:
%P(gH6]I--m<:AehD)<-G:`jksqXX1q&C[\ZG`h`qB]?M23Ot-KJV:_.`J"fWUaEfGFopb(F.[&%_Nle("@d*`Yb2.Fe,%pih664b
%%_1:D+#ik`+J!=3',!Gll&m\E/fNP:,O:1s-ZPV]Di=MKF0WWsZPC;u`^,8l7:n<SZ9,jB"m>:PJcD+^aa[RNm<d#8_)^_;M3eR(
%-sM67[NT*jp?iIQR<FsM0gaL*K-ZeT_l-U#jC7X7Pbo1A%f3Ma5o^(*5*W3h?%*9gjaQR5J#j6.\$FcECj68tAULB1#on3$a#r2=
%Bu2m2]3/?aqOP-D&ctFp!33r-ic*]h6s5BX^BcGml[DFo(]GYGi6gA12gnIo3S8R.VibDOWr++:7'KY[_e2ilBWE%qds'Vh]C#"4
%V/+&T!a>spr[PE[h2=F8[9<KfjnfnGqffM6.@D(!p_p8([_kuhE84=<_iUTa]'(86V]CnO%IH^BEGO5`5dc&7qJBhkRo]9IqnW+V
%h1t7)2FdnTSEH.r&in)@7;;\1SYggHHA;.hP+$7=G2B]\0h/d7JMq]k-(D9rk)SKeZ4hWS`q43[I1(9VI=AbpVq^>"rLTfPMn#!c
%m\d*O7)\;/&.]N(oQePCaNXT[FW/2cN0m#WM-B8%PLBS\&!7SQ\@P3cU_s\H4e45p/g`2m-GrJOc&4=?d4D9VORNOq&f%"WZbDC8
%Ejj%oT8P"jb0<e;fAn+3NVW'IG?A?6M_[r^kRSiU#t,D]&i0O')9-l+j#V&c$@^cpF(^6"estJ/eTF/SJ6GpP1V!N%Xd$f@72H=c
%-^jKG[_+&c+\P%)!>2@qF+,P-7L;I^:T-;u8]?cl0N%\J`L3H=f(Sg."oh(>*WGZ5E5`e"dR'FY]B#]?ISucBP9'j81^.fYpDT8W
%_+32V2I^KSRYHGG&.Sim8mMK9L/K^[e;@9naRbe3!>Ypg(h&X?)uRZAl!EH*#ho258::P,Kn08&`_g2Z0pJQbi\@IarW7a3ZB?1O
%jJY>G*Uk6M3KbA%Lh'h>QK,FmT+G6R>qZUaKV"IUgL)/@80m:BR>m>6U21Vad)]X_np<%gf,#_a>b_A+bW6`73(0>-V@H'(#tfm!
%g16eAjK)K/25uoSWB]^WK)GtN$=?b8aLZ9:H%uqC$i58>ZY'aSC[6#g[&B@E;V1LR%bIl97'cJsAFr!M>us)d2SRKGO-%0P>sS/C
%KifI^coI_=`*+@J6KJdRm4TAP;b<RX(5FOqYh6Be[LY`pH6LA11SA9d;ZOdrUsM:W;%uZm*2G7!cc@BQc(4C,0=#i`!9H8aXNklO
%jWnIP(F8l*=HFP4gI0#@Ar^M[&uf4pQ&QQYO<bU092\QjbQ`BR;)S"2r;F.@%^5V/^7WE?s6#H+549kk_HJm*g?9GJ=fuJDZ54>C
%YhK,/M#b5)XZEQU%0!*@h_ku]FW>6n+IN?CVgog)&BK?8X&YkgET:Ils6K4^Ib[?e_)(glZD[d01.7ICJ'(YqD*W\$`H2ZJs5e:d
%^ARoYE=f$\9lJ\L5C<D9J'6=FK^mY@&;Q>Vhn#>hKWb2.48CKqhgMaM<_Q+pa'?rcRAZp>E^=%bs6SXRT5n]qYoV;U-MgaX+AOf[
%,!`6MK^f-mAKOrL;_`qEi:=HTPkfA82Bf/T,P(%l]`+s]b=&uCXZaa;NcOJ3D\NNZ<&B*QkfQNf7fj;j;`4;!RViNOq+rA2CJ;XN
%*o'FS<"Ile/k9lF<<s#$@hBdc#n)W4]KS;C<Cg0f>P-DG%ZNe05:B\J!0sVbg`fHVC4=9Nkf!C@'c-1qIX)5U@EEI&!D901aq#+;
%eBI=$)c3JN%V@^U,3%"knq_&>pN-1T?;-D2rfXE2]n&>Y!$)=\7+?OA;Ke54YI_^rAr2<G6_$.G2>N@O>tRLm'Lbr$pSlT^5<"?e
%>.2J6Xl_piRCiqV.ij,mIUA7E3_*>;`Xlo[-qYMBO_ViL-07r]-knm5G>4j_cb`#I.`ggUi6WnOJ_@sc6MT2FGQnIah]<bCb_+lj
%X)#V(!Lm!a\sV%*^\ltVjLr8g*n_MZlHD5nmVHEUX'.5G)!.]6T<TBQ"o+;s%,cf"3hpZ(AgB(!X:!B"c>i3Qj0WYebgcJhAsHX?
%9!eo;!I)0Q-^9WYb-I,K@s<'0pq*DJg/o2@cmMgY"k`7$[sbScBpCh'+>NWpi"bH\&t91dfKukf9baiXp]3*eS^XC#H-Us2aS:u*
%G*'j3-gk&a=!e:'bgVKH&@jA@Qj6\)o`0_,@!%tda*`aGH0ZI@,&GrI^ohm17Y94G[a<oRcS,jKU0HN*Uto>sKGbRZqlq[AK;8!^
%4'td<Godd9kmFXOM'PDfUYKSn(KFB21B_-)d-a@iLI6?#IN+RZ`j)1r(RJAor_HrcPqS02fmn%@ataC0!"m]8!-/Yr,5Q!2ZJ^?L
%LhF/4*VX'u8YWc>*cFpG2jQ4!rKQ3fG0kH<3,nfqLDkD:1<lP^^fr)k*jZ@kWQ#'=[SMXn^eI@uqCSTi2d-m"),c;R*qbh=Kr;82
%:h$!9&0e`^\/>'dU)*"OC7E`hQ=Mp;$Yh(/KI`m3V:B,cVD/a'g;V:GSQP@EI2C/DmOE0u0VG?b'Aopd;<T,9[>=m>+.5+84"@AF
%V^,Q."/Zta/.5JYhZRpCRhc!!'L2dClZ/Qs)9/B/he,\3R2pmog6>9=/5.;ohpp]UQ62o>#`-p>%<&L3^DX`;YQ+&cH)BV&rqVT,
%?U<h)U15+ua*E*]T]f7G\k/+o,fKoXh5&]b>&uuW.huudZV:n`PR&l9L0^e<j%9?S$;R9P%&EJL['?M1@rCWXp_u=-9a(W,Ks>l^
%<.mlhG#;rE(p4ZXq,@mBJWn2f"9I;&%$tBd=B?]Pq8hSL\fFo+K!'64Z+ZUR2M*F6:"*;u0TRgE^Y_V0e>PZ;_G:t4Ht0Ti2):(&
%_O`an5E5h=DA_X`dS9B3Dj\Tp^4U&ON.4UHd*"hOhcYW5e[el3lc$p*bI>Q5<GBC!UK+)J&bXXfgI+^%1RAP"**Ut>#12?\-*%lB
%nVumsOm;l#V%SGTO_eKaK$8Ct&"ca`2S2?>N;Yg&E(%XUj"\McQ?"H.Jk9*[_oKk:P/V*RTVSTHhj?1u/&FMk/FYHK[pk/FhnH.+
%'Aa/Nb13j;4n.sB;r6u$O57"#BQAT]_WQ.ALIXI^P>7NO-E,A?g?jD&n"nm^?@gJ(^5[@Y3gu",)e9"G2apAj)C!F16)2LtZ'/N@
%00M$LP^+U!4s5eT.o0b5^n&07)NDV0"'Mi>#hXd\'8G0S;T=]Oq@-)#W's\[]jl/qOF`&r!DG:=L^M.`*(Lc0*+9A5#05Yb_?c8-
%S%J$S*L<0kc_OD81#tmlX3--E1Gm&2U4hB!!lP-I0)V!kRVl2="t:Y1mq*BsOP#224^q,Af+_ob&a;[aL@1Ot_?sYXAqpuU0dhcS
%Tsd5A/qsWlkU<$5rOK(o*Y&*,T*UY5?q]^bbENor0YVkB<Gn-BkcJAoksr\^5fiL(=#hrK6Y.Si#MTRk,k"+Gh__Kq*AX-"4<J>Q
%8Jbl;B?=4T$`Ol\@%N:8'sk7$"D0ejYa!1AHRZZumjlR-OElKA$9(eo@n>'#Lh0uFlfiV+qo*M3HiT16`EQfV=]OJ.7*ug_@L0YB
%MBb'GeKr(;^=b'Q<Iq*+Wf<A[]e#iM[JQJ]R0+C7JJ\&8M#&eScAmF6%'IhQ%0+t]5.^[lrl(Q'ITE&I(c+t"V"DqdUPG2r8LE&"
%#9S^6FP1<!)nrojYE4R)DY.thOCnQmHOPnnaG@NL>`:6bTi*+a%5q1A8fBY*67Z51B\`*u<FktHAVu8<I,nJ+lNBT!?/E?a>?RRg
%:ZFFsI4p`P2*,(HrA0'N*B7jb0``R(\.nr*q*0OlH+hn&A2GSEUI#:PorsOZR)4/,Jk_r,6pe:JPo_CEi!9[I<2aD2h4%N8S)5V8
%.I]oPO&!0S!)X^-`b=Kq?jC@bY',s75.S**=#P[dJ2I`Cf')[P>b%RI_fg/N5B&%nJQ&u6!$m!.8O;7F]5XY$2S!CrEs#ZWPjjOZ
%l.HLLEtCd/SbQbh?=\j87*pj_J"oQjmHR%IOEHWL4GK4QqPsLP1S>iKF6S>)nM"0KX-1W^9YWO\GID)L&%f\DlI)0F`n\7UnMRTp
%V7Q8`jPZ\TiDs,!6S/4VLj(Zc#eaK'\Ea[#]k6_+<>q<1OuT8%=*%GuIW[YdJF=fgK3`LjG[dp"0GB-+kf!mWXPJ.Pg\e4k"&:td
%^IgCRJQ]>H:1ko]O:#FqV\efS_B'\m`R9(cgdOF7R=O7LI>(tkA5Zmk(3=EE.rLhP%'PimXXLf\HNgR=Z"KW,![cnB05G(NjliCp
%%,8qtM:0\V===,U%BgFa)[o_6JBWeb/ZE2&aJmdq'AJN9J@A1%5Bbdb9E8,9)KahB8n$aYKPu:h<OKH]gKWKJ\8XkA"Flkf_TEr+
%AMj)UYI\#]R7B=u6,WfePds5r*)%b:/To]pZLGid-aBoTi$;8VS\P_-),8)n9!mQ\0tHgSWD[YKjQ>)FNmaA8*Sn-?qu(QIgdQ-^
%>A$"p^;%Vf#/,fWJqu0irG4K\Y-*r#T0]`V_IYV:O4Pj#.ZbV/e]GcN-NjY';t+9/4nP\HZ=/j]k0nb*KRRlg?nJBGMSht#Y/]n_
%p.B<?%&6KP6"'7P@9#F'0(giVnCSLAK7i&5<<LPk*K>lQYAOI\"gF*5)YE#^oM!gZ<CZBsMPij!VX,-fQ]Tk`A?kA2nkDRRGB<]5
%7K(jCpf/.*ITir\^act*6$[8QmC[pjWm'#B\YZd_JUJKF#%8)V(Xih'5XMWkCePVl)r)2snM@,&W1jF&&iQ3496nVgmD]KT.j!B8
%D4tJTIl0a"38Xfd0"r6Foc.Fum/CkZXF!-U*.QcH^>Ed'17PP0L1g^93Sai]2B/F\W_=GjNsrf48np2<__cBDOg,\?12YE&^^Btu
%6.+CI.`a;7'*02N)@$>/QK*^4_;dW.i6#k<9#/H#I`g1I\NELY#O_.nIc,N9iWe"!lNS0(e:aa@BkOSd.`DQR.hfVSiGO5`9Vluu
%^/)QcYf,\KlAtocCbC_tL'!gj'n'N3)'^Q3W1=C*U]AXL1=9K_[t-dR88Bp%*];"KHBbUdP%Sm%Z>q!jS-Vf,^_]MXj$X<JQ!93M
%n8_X1A6hg!D3=<ak<JcgB-7+S*KSi@8G`kpWiK$*N$U=lL9^n6<Z1\_U+S`KB6c+(<;kPCm+JmURZFj;^W$5Te"$Rpj'8Q2'dk59
%K_-R<-7I2?c5!W&bZusje6VC?<B?66J&OkW,X\IY_<ae!]=U$/PpBATqFcmU"WdoDK8JV(1m`aW'D1(k3i4l)2q[Z-)qb2jk2'so
%Z>@,gHTuKKTjI@8W6MhZ*ppp$(_Z0?9;!Z=8T/.W%NVfc*OGe&ZX*EdbZHYNC.1QjQB34HC9:TZN_:JmdX#\B)Q^sX)Wh'V(OOk-
%X-uebQ[rFU2c+BM2n*+e[qRfY8p#K:8`;XnLP*-PkQ=>kCrdHngRSp5#Ep\WVjQQ"jja>'c"]X2?LAu/iO</n+=`V]0Zn!`5+\"#
%V\TI0H3<aV4+Nhc*\)5Z4(UrX%@`le,`>,XXTXE0paKdMg&G-Fb=tWRP<F[F$>g?fZ@37<JW,a_[Bb+s+YsT"B6&ha,Y.<Bbq6X>
%Ko"[0C8K&;/S1Vi\R0SAW?=aF5?N-&6X!s*b2$%1?!hng73Cq\6plrJ5cSL4]QS"qoXoo6;]&]tKEmg?QIk9X@_sapop,?.j1:2p
%8YgJW%O,%CV'CL62sm\!k+/!E.1<\ijXZ??(r?4<Q<_)j03dATkPsB*\)]4f^'rgp\4jCF<Q-,(WmX[P%oP0oL#)d\YBBO;(UJ3H
%S[d&%\EVjHTf]REe(A2`Q#368QrVhiRiGLRG^u#g,:MtLgo+:u]9hQsqgS084PGPE![!*pL).Iib-Ie_ODo".YOY[aC4I/`nl;jL
%q-ms=V\"[joj(42a55L0?Li\K%E&<YIpof6\HHiN+'A=IcO?TN]^76]dYKIHbI@GfS-.RDCaJ@FGc&RAZBBphV6XhCi[7WOom-@.
%=0I'-6*JKXKR$!O!0ddCXJd^]&79BbmN2.5:&6)rJIg>CVLQr?ATJM]Jsj`V_hZr.9&jl,fW7o:r'c7j5hpP^,M[nfpVbO!].Z`T
%7G.YDSluq&hK;o$fqsKT^M5Yt#m:nWet/+D)!,@,A/cOtW;+^Y-*W`7-(o?t8p9JtA2PK0rT`+UASi3*Y&D:?4BXm3a>.fkpD8m=
%nT*6f:gL@BBVW"tnckCL+KuoW(SIjoL,FC$6)Bo0/S&&H@k=b./(`GNSWSu(p,hE49@rFf[4YebEg"5O.gR"2;o%Jp$RA&>.VbWI
%"P)Iq9jL&UKpshKb%G.I3D^>sQncJ]!O(9W^VRnaEVoU\=h8k>Mhu^j##Df>Lp`AFV.EZp8a)nO+-^,Q2cii6pJ;j_U3(*cc6F94
%,G-`;C.E5NobI[IbLoK;3=tn@#5pjW&X3h4"p@dZC]0mm.QqgkI'@/NUY2baYgd*GZG=K"h7=:=g'r"/`AiXrA1R8$MOm6-a%`M0
%;M&bJ3@raE7.#oEM8g+3]/uNg'(^=d^!CRXgg(a03_f"dn5K[olM^rb>6H3$0/HF^]Fb95`ZlB18%U,)#3n182<,O5>0:9U41h>U
%'<:>65QPA&UGm[hHoa2t19.,f!G7\S`Dr=C4Gem0OEKi3IHGAH`T)-X7ZRuJ3W[P,-3_W\@YrsuXX!jl]n&u$Eoe"s6WB"p'7Eab
%6i+=:E!)*RWMhm&Q-.Nb3\-UhC0%fc*A8N,XP("Aj@fg]1-uX9F.U;))TS6d;([ajX/P`M+[c9$[m?OfDdb@sV\NRH^Pe\hD0.&n
%fPD>b78hY:$AV+sW*m;m\s89b9dkr1DCku48rK:R),:RkQ->*$!Y&&Cbg;NAEtID5K#n_f>X>7b%"3bT8'9:aURbiu%1L`^.?]7l
%Pa"po?SnC2GqO+1$+.KJWlc@)![89X<dQ1H=obsfOmY?+?ZZW,fL6-IA@F:X!`4kNrm.T(HWhTm6-LWdAn=Z'LLS9T+R:="nh[>j
%6s.<j+\k<D`^A#pA);nG?isdmYBbSORhage5l@=N>1c(3,AHVl)1-RC&)H^<MkRVuCFZPE^RBT3[pedAI8:_81<S1STgCmR_o/a_
%V?5<k1oBl$P,'iMBF!?Gb8sToc"CSV0SYfi`\kThB,h?>Q#Un5L@9r-eY%OnmjdF</Jo`DRWL%eX'!fofNeIa3a;46+X9jUe=Ghn
%?u3b(KQijUX58>!&J0qVV"6jR:S"%I2%Z3r2bS&mRua]0_\?-/$3*8o"rH`l#&D@IZ:JO-%%1hml7Is#]Qi1tF)jKj2jYaqcLTdh
%gb0Pk$2ClSE$l35Q-C3m-m.^e3'(qo$&4/'2N!%l\.$_C!J=,_6IUtQ/ai>b:##8W0Ac0M]:EfB_d[j8(tskDm5X-j)S]XIgXU?C
%1(*-jm3Bn-!%2do\orVm>_,je"e9,_V1K?alV2nPcGZtjMW*o!&NGP?1k=WG)O4&!VN/?u\<SA'9[JTBE\R#+:\r327el788^4Kp
%Q&nDWd2.SWAp*#Yi'T+8/J<QRo?p"h#A9UulrL4SL^aMd0":pY6tHa80<Qk]!JRNbL+K9'$n2Z&kgrB3Upu!;biE)3,qOjM)Q&#G
%"b+qFQr\;;SKpM/W;OugJPZipm(QR67Si[XW[`o1,7g%58o1i:mNE!5'<6XsU8tEc`F@^W\%p%%ZsTKMJoLMDWomaV:OWRH2\522
%K;o7qDQ9,>];^%ISJ/MM$$?Me$$T(8.bbdTkQ._mK?:bD(+kHq++5ctAd(D,niZ,mFk'Z+p)(eE+Pn6C=[N1>>n1jac=AWo"M#Y8
%6(>\16@hhM9=Y3gUm^Q_2=?o]6RI)jbDhNm*<BbOQEZ#gZmQ.cSYM(<e/\uAY6Pu_)2@XMq>Jr]mu[VF@o1I3:ipb;"S"1SOmgpJ
%GF#TGF=VPL**28/Q"<`i/^?gt_*U$6%joSY:`*6G+lAWpaDb19/V.5?]#;7C'er,.3%[fr$D5dJ#a2n&+6?l8,m@)QVemPAJ*p56
%ra"E=*?XoM+3H@pc^leq<nJT&<_V<O_i4dY:SPs""%_.NLT?9`E#*d2joV\(r/&D'7nYu)\fLQRoR9i]r9uD)C7UJ?J9U!:G>lf#
%^2,ISpMLLHDNta&HJUD;gXJOR:A_PSc97=/3;%q6;1OHaWjR8g/ZuP.`?oqC2qBc?SLVE0C<XLA8k-=K8,dLOk;-LW%ou5.=huZR
%#Mi+uGQBUtZ4/Z[HsP:1r8#F$Z%Z.d%/:rDh>g-(&Jcfm!]\@pGVU;KSj%YO+Ib=R(b<uDnio=[a0,CH)l*-D8ag<1%L;A5\UNl:
%D4RNi8&6o@]JHA<VIfdD,*pmUjtnkdNh0=$Q[D7EIOeYSg&8KgY5a80`.J<RIL6CIL8nKHVMmeq1"'E2QBB,p>&as3d*WpCmn38%
%0V-SL6h?qg-=NU9M>MsaiF7Ws2T"")q*AW^@h_htce49n(=cjui9+[C)%WcE%Ahbr!ppQF&lRYA6&A^C7>Ss&IL29&'rR8aO?m4a
%iook/M5EaYNj:C!Gb,lUZXb)u,alm6:9cXZIB\&/M2Pdmq;oBmY""<iR2,/#34;t$#OWN<42Ie_kQZVW<2.$tX4u_EISpfq@"QeF
%EZFBj_4heFU?fV]<22pl8eSCn"A@C[^n*EO;G3S<<$G_f[.<VBMIkh#LnZS7.(!L*?4LYQVb9:B>>o2oai^ku9XKBs#;.p)7)3l'
%[oX(lqFj%,a"9PeNBe#u,E2<C3''C/NZ9ZpS:^&)(p-H?0!cPoF"F9m[c`P:('r5hFHMI?!L8%@:qNf5fp!F_b*S:R,k?;$k%%NJ
%!oKbXMZaT6g&M>tNo8c%6/U>/Wi@R)&M1hm-m:)EP'f[N(FssHg]r>a9Z2i=(2OYl5./-jp4uQD.7WV`C5Q`j?ng_.,i+<V!ITiH
%mTnhMXPo;(M1lAuc$C"W)2dJ]rPSh"OeR8^*LjuDaGGMsV4)[tR4+A<;C4mq)]@<`M?cM#KX\GiG/ah\q95#4hG-ASVMqX&CN-5:
%ln?3oBW.50S>c4e+^1>j*E7eX=F#Jh,-t6R_HHDXaIm@E55XpH9#mo?Rin`J/@pFI1KhVd]%<(KV#uXlA3+Gu$0!4=1-qXc&_ReU
%@(WE'#J771UmQ)#%Z8JC;j+MD[>.akYj>?\pkV`t8@i^dHP4$q"kQenc";Tc>ipRCKp&2b1SAOLVYa.Lb/QI&g/*ur@1$="$rLfl
%6aAWn1X]K8Pinu2j&"ES(_f(u"!a;:"3t2<FCCr9-2eULj@rN30X&kn<pSg)eht"9M8kad"@pF.K[C5QUh,Mg%Pc#CTl&KL%XksY
%\?288YDYOm,_jL4WJ:@T75AI<*je[tVuf#)-2QI<T5o?J["KJ']!Np]o-&L1S4V&VOt>\?)$j&,2d@NSc6$(<MROm23MFZKJ";;N
%mIG$>*[IACa,utp"bo6=&*ZLK;T_pG7H2tHo#UAZ'c@bKbTKS"mS3D?>kbK"_K1YOTAek*fUWL2Km_?k;oktL?l-53)01gpmTZZ^
%kq6<5[P'#/8p1&\4I!CHJMKh3/?=>b_4G'n!88WS)a\2*hZZ9>>HO]11.WgmngeV,@>7NUeK:D-a:R6_'<<1;<Re)YLAb_f4LlDg
%adj1`<Y*@2'r'C1MpQI!$6os9&!Qm+8*pTlrlDS<]0!C?5V,02caJK>LC1RDJS:6OesW8\qsG>WZ4Sb['1PZ&bO!\4E2H>b>-JDb
%__29@5j%Pfc"E4[-EbAdl/J#>?/@__h4;TuVYR:]]79aV8A.6PQ92qq(+G8&7q'7sQ3CqRB!_oe4EqZBH,:uear^\"Mee"NroaW+
%<qkMuL+=bX9bc:%ACX-/!@\)W[Fc0t(F@O@G3-B_7B$G#o_m7QPs]k6'&SnoiA?Yif@047LkF=tEj1"-:.rfFa%>7U[.AEdMi,(A
%Fnsn7Gp\07$[2jlAf(%`O`d2F3_r[I+r/mGLP$a4NG'SY#,6^JWZ(k3-:t6SDT4ESKNLta'rCDJr$p#);]oPLK;W^ZhFKc9/k<nY
%aV]%@I12YM^@*H7Xha\9[<j1gr>:s:]=PmE^(2jHJgh;NfP3a_Htq@_C+=,sAP2hGG&(G)_-?9>(J"/d4Pud,1\nsE-%[/C2k[c<
%0oEaU#\6n9I3'V%KmM@:/Tlf=e8kO[,dI8I>fDrY]fQ&]#*HFN^9R29&ok^Z-sOZs(R&sQS@Xb=WX=5q+B2?3a<$bu$n+%0YhQW;
%2Esq6-H26dT=-jqpeZS99TaO4ZO?^'IFSi26tF8GirkPi)^C(/(nnBg08:]WJ.?>jJORdNZ%*4N_.qF)-!PgFBs+T`=qo:&nT"Pu
%jOfNQ7R]@I16bXH)nB0%o9g=B(*LT9&_0fLcT#q+fO<4).V*n`@4K>2`6jg]%&5t"Cef$G_Z*L8);J2IJXiA^nsXb^Dp=@RE9&d?
%7?<oh-%JL*itM=?]b@a!+Oc"RR?5<937s.3^0Ro@+62?e0h!3053loq!=V-B*PNj-`o7G]r=JBP/,[?,&NH=\d)8UuH?n_i?>FWb
%$<eB]H<!R#1&>9\PaeYQT&/6BME.05?0p`_3T9CGJ,IRiigEKDc=^3`K86(YN2i=4]HAlgFm:l)*ZWe6P>DuO[Nj5Y'Nu%fbWOh[
%BP7j^7:!cRh*f7tH]Qt-@[%#\,<FfIF_`sL0JVkA7J,btH.;H9p',+1Zp_\m<Ab;#RE`B#2.Cfpr=V'F1.@@mKed[@OY(Q&(C-iS
%'D8VgpZo$Nj5p;;=*K^i5LQ,Pq<D:K8-[MMR@$Ek#R+HRD-e6=>AV#l&'j"a\itZ]-h[I$hk,7NafDXo#1PDn!55+/>C-Msg;TQ<
%0&Q\-mba_N4Z=f'kYKq*ekF$ZTbKas[r`ZIQ%>J4;VN?'IZpWZR>D*u#-5W29Uo.,P5#5+s*dM*@>PgC3f.>BB.Q;b8toEZ&SDp9
%WVCA+2B%>(=O*Y*5U^&_9n.-2G6Y]2H-!q#(b33fdV)H7!#_.tN#t.`_$h4^mo?U,plme5]M;BrF:`*9WA?-P+kLW1)Ou2_/eB/e
%[MfiH,lh)8/lNoqP(&g`+%`-^(Me-)>e/1l4+Dl8gG6p6RAYm:-YA&[$'puQ&6N_9kD(L0c63OW0$JJNQbj`;UKcB!kkTh*KPVO(
%lDHI1d2P_S)mgL!S_V>c,&'aG/eGumCUe.\F\jK_VuXe)ZOtNF\5rr:[u4iH(T@7/_,Z<>ao/9SA]WVG'o^1(0]"H]L;tO<Kc[Ff
%$_`kIXp").=(9HWM<U:-d='D:M`5j98$4+G%SF%,KX$Uq+2\PLm`n&/7e#j].jbtY@3MLAa\:tZ`"]7J#RmTLb\?:BClt,p%hs[F
%\'4\F/em2"C:f$47j<[)[2_\HjPU/>f>*i[L>P_RO1U<77e?G.mc)dV0K,ub=kQM$.BQ39"nS(K5!ERXhWk'=\@pVs3%$b^i(S)E
%)/n.Qbk'/`gFee9k%gANA1"a>iZ-C[A2T&\W&00Y26^]VGF%:_I`l_pj^>BYo2Zg!DfE\?I6,%&Vi/[1>u(3.>lRnma^h0''\VuR
%bL%th,58T(jLfd5MR?*Fm4D8J@H1#]&*W)!,.o2&?3'Eu,p`0(O;M\)QW`Ue\SVXIo=K]F&MY_k\9j!#I,F'n!Mi?i@8L$Knmh=]
%qsgj`@f<;RH>GB[1nitQ8uH1DcUu*r;;]B7P5C&bQr&C2p.+@K7umneb5'R:)Her:&[P"ROmO1cT!2LfWojq?e\&HC#Jf1VU2.!X
%GI5JKS.LgEAsc\f8D5_4ob!f%D'%d.`T)kd7Qp*V`-kJh8hT\nn7>`h;iB&)\n"daa`>-HDQiGmcZ)=$6dlgT>,3HVVC`YpK3ShA
%),ZE(gE.#!'S8=tg;CKJo.HP%-XpY,'D3Brig$6q;^M+=Kd!N,=::B8LC#!8C<e@REGS.29DW\d*)2;UkZlLR!R"ACO)g,ii8L,#
%DC/n^MJL@E23GXMBpgj?Ie"F))e8*siF.8-0Feg<-`mcCo4"^`,Fe3%%L1_KfbJ"_eu7?SeO.L73O<;HD^MkBB;N-D=I07JA]:rl
%FbU_qK#NST0-Ek4K@#CrOJj6J:$Bgd7V5XTX%r_rb7lCmnsal*clAA(DgJsD/iMFAm:]\&qo-'K2(U>Y7_#hdXgm-fm-pZ"63^tC
%WAQ:k+6j@&fsmO3+&u&qG/k-5dD:Nu&lRG`p-6[Q\kV[]TnUW"qtVH-`#A$^!N*]G39g22i8/GBK"/9D(O#"k_\q$9+P,a+-P2fD
%oE:''j:<Xh1:!Q"b&2*,Dj`9_>K?re\@Nf_eVPn:lg=AiqRmo\hlJH%Rronm8q@j6@g+-X(L=5V'tR\RgSagB8b2:EM9co7^J^39
%X@Gh@a":<uF@:^>8UQ6YNBocB7Y)J'VVMkA,QV,u"d1]")Z$sf<,8AR$I#"[(009r<XZENP:EiV$M3%dfNq%=jl0=E`&)%ZZWc0$
%CW^^_1Rh79]=9Nur^sFi9Xg`o<(:sA1KqZBNis4GWen="!ZZ=l2hj=n]$![t?XQT:`;nC"%Ks"mG["^-=7HAbK5%_X#tQo:*nc;<
%SFr`%iMHV'kS#XfOsk0A;8N^^d,=1SA$2pK%ZsO>:c\+:;$Or?dnO<34/sPWi`p;VgZ:p#"(l>1=f8l*)5PpeMJB%/gOaAb>RF)n
%/r+AdA^8(#eTs"'De1VR#_G3)Brj)pn"G"8*K/&3=W>eKrMmf87Df]`FdRti!t:&+HhUtg7+WI/dR_7FG-'Z_+qM?AT.M3(,[Jsn
%GPA84i8qU9>P#X&#U.-OR-h;H^hiU/n&oag/6s^+15MD>+0*WYq2A]Ja][th*BIqSL/:4l2"^RrQJGXY8PnFA^'_"h+U>MX.S.G/
%-o`]Zh\)HYBGutOPXc/T=opUg?qF8Y'L?97SCD2TiZjK+qXK)cW>&aWNgT\0^20mIOXRPPj8Fg"/SqH>(UJ@5pUQ?D3/(V/_t16_
%NIfN[Wd8U_((_qhEWSJ]N7b1Gk`ig;cDs2=n\S\hIY5Hj+u-.*#V=$KC6T^K]:qgGZhsR3>tt0.3#Q94-m'3!?<='D^)1F>^kt#/
%K-M-76pNp'/3boVlbPL!hX>)0<Kb^JFEY-i`Fc(lSIkM1]V6[OnSq!;buiS9asAp&+AA9`k0mUBQT,MdE]m5,/\p;[B?\Fe:m@+-
%c]*a92WX#W,V%NUM%K+$O9O0`<.b=X1R1G)%qUaqUZdFD%n.+^!c0-)TU"$%-jS7#qD,I&%qm9C#b&E+U]@TcC5F5d.<+>Ra`4,F
%*=.T6Jr*.195$q^/2C&`;p?^Df(JajCB"<r&hT4C?pt*RrCN*40`sqJ]ZM((Xkk*9_P?If+Spqb4Tc[P<c85NA5YcuhaKu=$b0s,
%"kl(4j,]@b3q>OR_Tj2F>uAsS>ss5hE)I;^+Ng-gOE"Le'3Hp]p&ga]"(FV[_Ss]ICfpTVS-Aa3fJeBR>>b54'j03WWW!J*/#"!(
%-/qPJlt`2ReOgU=",3#_lO@%C/9R6,a(T'&!Xr6UXD4O%bZL3@E/3cgaIAYL"GF;B4n$G:+NRNq08_kUP4B*@JA[2BQNH;8%R-7l
%)QO'BI!N)#/Xh5oQ67J.-7i-tHSo8Rcf#)XD`5V\-\-*dot5q$%^0i&q[>rV)cF@'=`#0douMj*)BcW/XTp55$3fY)BS^RlUrO,P
%,FE5(['`5MaDrW5s#]>D4q+GOhG)FZF.25%G+)I;4;u"N]XFE=PGbqd+a:Y'elY5e#co[neF%,ac.BY2]!,l"VJi#>8#VgF-H(0D
%&-E.Rq0G/.::sYtl#+0'cLp5/03sYA'.BU"]olOhb(<oe\dO.8D`R>n'_'aR\#F+F`TG5\D-J%>@ZkYr;u]DqROo-\,Z+!6-c$(g
%](4d!!hi728[&gN,t3Bp^4#PY)stuMB<9qj;RW^t6[EEBAeHME4I]A+Z*/$J>,-7L-_ViH/Odc7HVDU$@+1K"jF:C0hT4QPQD#'N
%EbW%AB^[Ph'[nk$kr:MsCA9G!>m-RfD+#@QSd7^+j>EcerEZGnEKk,Pm[cT??,D]<B`k1eauG6mLn9bcfIT9-^jC1=A_"%82.1^]
%PioWU`,)^=H#@RR+rc0S'hn1enJXQ](dX1>R16u!SkAE5GH$CLPbmLT6Yi;O0OJlA&I26,1Cc#M6Rh7dX/["hepUXW&(b&aLn"UH
%@-t't5G/@T+B9I;FHV9LhiY9`"IC5m$M_(#;%sI-aU^>Ad,%;P%l]!Ch3B;G>Qm4U`'8:2dBh#,hYdbj?(Qt8pEpKhrU8(O]>IY:
%8iS-X0p)\%DN]4Sa<Q6=eMl@HCr'S>G->fXB(Cu\M'NI,D/L-\67.h?%V-a=_2`]BDGbE'4=PT:Y:@:hGMN$C&X,Eg@7]Vm<_qGe
%<eM4P=UfqH@TC#E2QBm;;e,uWP3e9'0"\*O"J%!O+7o,Z]8cI%]=rD<QZAJWna!_1*k3!+ai8mgSGf8#2jh5gq*;kfLuJm"J]*mB
%,?UAn50,MHC8jjE.,lJ!UbK'6s"Q,%CIf96A9\VD]Y?N;&On!7'l_']lV'QD5)?97E+agc'"k@3Pej%?n)64+;:XTDn[<@1rGc$_
%S*AOg3Un(/JbeMgT]WNN3sqLucKlL*@R@bD1,#+DWE(bmO8AH4JgOhcXb^oK1?ion1Ea"X$t`(&ZQ'6LjI&BX%.s7@TonC_3?Kl4
%!9#`g6csh9H>6P%IkHs_8'$WE>=1.$J_ij<'/ifPMaJ-p'28Rb\jojriTF#Kg!cg@G7Vrah/u7/1@GH,k$[4GV2kk">"=M;K%M8O
%4cDa6TEYG&C8N#q]"sbs`E'+-24+2Cr`BF$;71)d$o*aI*R]2*YR:W38/**ndu^?2[tn7g;<j[_),/d16UD!B$/oFpU6'!!%l%Vd
%cae`=PkFqc$K;a-fTb4gM:o9@X:ELU-ogK'f.d_I%??N"<^#!]"j][+LI69(q9)^^HK:O0q?V8eVC`Yoj9SFSY`8>qp.=D,LHQ]a
%<E/(r7&JPeLAGN>JI0R^@!.$,R;f#9fD$=(1#XqVNafTW3Kt+QHZi0\;$%__P>ED9O)(&Z[M6A8_;VIq1ESi:AE!#D6&&^Yl<?&I
%N];"Ul?ad/om<*`OAR<s@HCF].pOioQmj4DUA#?h8B90>P\`uZ1^6`+JG1i0qA/!]*O(ceU'e_.%YG8RAh?QXGct`?PL=g9Rhb.O
%)X=u7`i6<-QMRe6NuI/74m&\fW[<bh+Rn^b?/Mq!a(@sT>h6VD*kAS;M,OX-VVEAsTHR1I8TugM4JSlH!@9_tWo>F>_<Go_iu%@B
%[Z_UEmeK[3_7hqOq6T.Mgjd(m*4)&)nd;8YC"Pdkfns7uj1?\i*<,,r3QQYiklIK5B<]C1O6nWR!A=r+/jXi>fo^FT&D`)Gc]/Mu
%J!Y^)DJk)$9ZoIub%UKdd81s6QJ7+>NFk.V,$+E1#aoGXdb%)VL_%-gE,5!t'AlUudg'4(i<IXG_@>;6X\rh6-PB0,mkNVT<QLF;
%&M,UXjF?+"W>[HUIA>Pll;ATnIEHrQV2drD!_K$(_QGkE;fF.tr)Go;,?^_dOGA/?..n:e"7Rq,-)RBb,l302V'N`14'&)2N0f)H
%YeGD';6o<fe#u>P>f,"N^QgCmQ5O(F^c!0S%,X3MJ#df_fPt/'e>jiaJRK"nQ10_1U]&EDMT_aqEbhrlM8\B0[;V%scOhK]6+0WP
%fiG#uJYkmJ0Dd'F)UhNX35F6CBqS#7,ZN*@MoHd,BLUjAdX_Ek4BXA3#H=o4a7rZ%.WrcO6^nV7a2rN,7oW1u(_qrBe=f]n`^go/
%Q:WhR?r]OU>Fk)%C]#TEIFg/m`P3:kI(p]I*W8#\mR%OAGSk$p+c,qC*/mq5)27Bari0i;-28<d7tpOAR:<`E-0jQq;(0?_J8C7I
%?<l7eN`"I339J2a7#VK7N&V/>prjA]<l#/j"@$:U,Hd%H?`iHKk:!+2BfrC<85+SE853()gn9SVhsL.%:$$nUGj$HRiWd'1oYVQ_
%J:kq7R/,Oqq_u)bi_IP7Um4T9Q?g%];r7^.\TE#+[CD%<=.-/mMr*!>:`N^0M"@*):9&b0kie4u"ktr)XG#*+>TJ-K?^5mkGbU\^
%T(Nff83a<Nb<>ClSpQHW)*;Mf!Q,k3q[,)F_C5tJo0^i<16;tsRXk?SiWFt^MFWHcMKg\6Z:4B%A.=o/n.XG]A,@QMGjWS(9XUp`
%Dn?>lesHG.A8@^H::MFnigo1is1Q4@I,qt3d\5`>9-@5]!#YOIh!-gY77hmITMoO>>/J7PFqKTtX1K`%\%n7Kk=Ppb\!MW1^e$6B
%!?,ieGLKVIF:d*&1b!2)e"na=RZ!40p9I>0YGltDdO6N4:c(buW1]!OX+V"-63t/qQrV%\gB:Ln^_'P(I=_*QM/\R-&h"D)k#0^0
%@]$#3[dq3!]N)4X6'23,i>:V1@`M.iQJ$49%;R9]hS8j0$--%n"^^Q([kq<$3TA6YE89u6B/jrPHYB\E!di@/&hD_AGt9a-L(\F0
%r@DXD[UKfi=5Pk(<-9h`?"sfO6rJ.Mjt/n[:!@.m3A=;)B!If`c:<$rI"H)O#!Z^dT%0DhXdPTC*EH;M#P]Wmrm@?+Z4E*H%H:da
%hY,2N<X.FY=3&[OZo"ANDN.+B;sEj)B!9+DEF,SSo3]_EjqV=;n413-^I`_mUQb?Wid6ju%o4RU#2OT9oT/=T!!B0o<-7TT(/b9+
%OXJrGBF:]oA1]mr7E7m*`<&[:RagITP:mLBM6Zs$=++j6O4>1d]n\lC`P8U+ikhNTs7c%kER(M"5o\dm%2^#-3F+>'_WYEA-]#mQ
%2+NM7RXjeRQc2d%]KHkA1P:S"a)p%2FM5DW8L-&gM,pt82_o:g2'X\BJOZ9Q*DS-';,&)V(=Ur*`:WtB3jl,JT):9O'7Pj1StV'r
%![L9;n<*h?$O"Cf)b%^NWDRcAi\)4.KKI#PXtqKP'Ha+7(dh5DEhfT'JhJ=R42e^D1?3R+o@#%u49"h>I&%#K=Tji'9I(HS17\%Y
%32nSA4>VL^-[p8p+-%C!UdjN@610F`P'Lsn%>L6lPJ2W?TMQl:-/@r[`c,V>*P`4+jF>/S98MF+;knb+i&6Ei.6]`EQ-&C7RaU'j
%W]`2,'a-ZMr(QK8,+Q*,g*W9B'I&.(Z7+@nkc%V:'s'W]OIfkSAN1,"1.If1F6hVm!mY.hk_l-A]T=O*Ea6W!LP?Y,_?b>&NF%Pk
%mH5fs+"CnFdt5jB>fWSg$,11;/j#N6pXogJ)mkX0N>(O\r9%PkgnTXA_7guT2ThGYe(]rt[?$%%]FRVq;Ku7^AXbLr#RC74fE5_P
%7<'!A4K17h9tO!X-8rM@HdO+n'r4OaSJ;AP!tX[eg"ki7dmp4l`C0[!+b"MF+2s.Wnr(Wa)*L,sE1SpTKOZ",Y!A0Xho2)3KO)7]
%rP[L;i(^-F`CsVja3/&32^tRh?Yu9PH]mf"lI%)=nGk.4aDq5"^=q/A%X"+Y&$agpiug1:1]_%Nmku)uHEeVH[dF%m^<*BfAS'PU
%]*F>gEt\fuXmVP=G-tqs=Qt9V$P@!f.n^%OdXVfCk&BRpGm-3HADJSI`Hb\NQZUlmgltARiMA+cG(pRLgGi-eZ9i)Cl=\O^XJ-ah
%hNb`Cblu?YKg8rXj&Gi]NZ?XE=UpZs3;*Q.*Gu"#D87'WT,(6ZPg-I=bcVC;>2K87'epb/[W.F)p@_%Oelk:_\ga%M&ARC-il:Qd
%!lG#PDHq_''cEY[*!Bg,eWnsT\Dk4PIhH811oTYsljNL!2"tk1^.=:or@$/#_qm'V1r?pM?j0#@)EsEjV_SKC3JJ)R>cdbgE[Q7u
%G5DF]Dn,g\+9+Ls`,o0Q*7e<$mrq0%]X;^,i,03f&+6m9a;i&*#K`LN.Z=L#=nfs5E'oGu#p].,^u7N4MQ(g?f<AHGA4N!MnO6J5
%JI%S)"qLlFJ,3@'W?iT;+IXW7lW2IT895)IWhrR6Jh<*bdmmhIS;QsS`Sj9tXT.VrIr>ja*B_tA$.jAA"PH/A[4^G+mUu;^DnlUF
%4mOImP.[qG2TJCjL@ULO(Q&pt';l]Q?l(@&NVF(sqh^:UQm>(d%%4sSP[d)##,$>j14i-`JGh!4YD0nn'tK9AT\p^09$(M_Y5DO>
%b/BCPB1U=P=r<L#<#5Yqbj[$l+0-#ppFgmj:k//#bfRij4XnTZ4*itKaYR[>OE@2J5cJ9m@Mn-[n%"jSPVG=BURSr3B?tm$mTun)
%E(GDSS&HD6ZBSH4Ese>;kEQ4_?eC:e^YC.X2s[hVQ47WX5^h)B?M!dmj-s_RQda;5G.Ad!2U;9h]&&,@%61#FF:fkFOr_HOL_gU"
%U[1_Ni7@pPZraoKHo6LfN$9n:N?k*>?ka_bJY=B?)htF-bKqB`:b.5h'O:p>_,+1QC@N'%[q0=O]\lK8L#BR$D1+?=U,mtmp;\fb
%a4d21$]/._L_mp^HBu`HV)]ppPfW^_opIq1F?FDpRpjl[n1iFiAMEOn<@97[i?l'AYH([:>5jRfLI[EAh&JU-k?ofpSqK]\DU/Qr
%\N61%U27BbpnhsFAVe`%JYY.6O;d)$;XO/kDM3o_^=WZl)s51C^`V?1XINn.HI;84OmWL`&ds7dihC`Ym4E$]CC6u1'NVr]`8rk8
%q1\.sDLI1[5e>*l#\q39+W][hL`i"i]e`WR\,far_k/_dj6A!`eR\5n>+/(:hgPXI2N[iB=W9<5E50X8-al-!i!<6m`2?as%s"?5
%Ei*_Ue+YkjLJVPt8p<MUO"Mfr]D@SUnV0^ldjdtUK,C@X+!u-1Cf@n?kbO`=<EG229._1e[(&/'$=5J&@\(Q$5DYO(/--MrX2K'!
%IZep!E>EI`W1c,48c"dp#d?'<6E4/nR+]G!_'+cBn\n1dM[flL%`!F4W!?2Fq;&?WePmCPh3<*o?'l@rFLjbe:3GSjVOXr=%To3>
%-6fGW$^fS61l+`uC1td!QU.FkJo!o*hC2qr%l$s\>0'l0J\Jj#leCM2pnMF@ropS;`<6<!67R:JJX\1gUeG8'GlY0Q-*'IG5r"7=
%?,m*ql$8>Q8G!a9;N+eTg]nr(6cX[[%*tp<N<-*XXULFHEhW8Tj:95f@o8Kl4%Sr>0tS9kr+kN1_@P^0=q$fP*.p<C"bf\s,rn@g
%EXWtS(Op.ofR"#P<D)d(e2/^FKsfd$?OY0i&fj1p/"k]8&rAm\S^!GZ(h9SsXHCV7b6)el"@mi:]#&$Yh./Z3C4[#f=>a[gRM8A;
%<S-N3i,X]1>S:od=[/'3csVsYn;F:RAj9X=Gh^FGqUXOqKV?IhgHD34REd&.d#Gmu%Tfig5Jb+U7_(0-m7$-5AVY&a'!$\%@%h:A
%d4ts%QGOMD_B5h/#fH4%GEg/[Tn<O\p(r!*;qu2Z2BL3Wd'i?0EYU`_B(qBZXGr>V2ipoX\d!DM'lM?.V8=l@GoN#%/u5T63-Q($
%46UM_2_nX9SR[!aMMdeA+Y('p^1]!M7)::nY]8CHaGD'L2D,Kt0=j81'.01>YN@J:AZ4Cr$&c%9DReD#<W+9sX/,m%<^:'k'dost
%IY$NO"92FCs%X22*6s,202LC:h8:rh!3$u;oN,n;-5Zri4S4d6p$ruL\WcH6kO-"t6S!rT>DTXoDJ`73Z$ABtCB&<7F^H2W3f_5M
%iKgVF]6B>*]?FM&M144Wi=M0H:"N;[[5lJQd8i=:`UuZcGSN6)&=^m(Ni&3#0iN0g^0LZjhfCm@,:Z"`)r12'/L`fPC=kq!=H<dK
%#>iW.XpMp9MQ!*A-7)='#B/ur-DWYq<;u)dh#H3fAM0Q/231(L;3P!2%oZi$p]NQ;Pj!<<EZ.u^E[stmPA-Gm4I#CCC`jFDQ[!^7
%M:`"i?QGoC7'JQmr$af8lm@U3m^(V?@_RLu*,E$h9<PYu*"ir&A;&L3N?sm_m1*,4kp3EgB3`.6.QbHn//^5?Nq]=?aq$,c1oNbY
%Qf(i$%gI_/_^I5_)H),H9&fTOqKlOEO"<L4)658UN-:dLlFtqgO]1,Q_C.c2$BYS:U8#H\6PQ\1m2@JmJ^M])C0*g$5KB3QL3E>4
%XK9$50C`i-QT"Qn(QU<RKj#1!g8sPFJJpoBf>3PP$8Fq?:?+K.bH91WV\)%]<FeAX3L$j7KmjZdUoS`2p,MLPN_8dC%piN_2H'[)
%.(WFQe,&n+ru+;ojTY4jmWd#mi7&qRIZhkj;_[U@U7#.^"cseK_X[tU$==du[d/^gk3bXkH?blM%f.sP4\qd\#Z>N4DZ)'.qWn_3
%`UW;:(['k>+nou-"(R\mW^X(iSB0#&D'WO)@(e5Mop68T7"t&3IM_bon:#tM;m%r-hE2eFUn#9+bGa%fN**o-L##LApDF6lY#ZL#
%3eL)bd%Q^YU3J85aO*Te4:g;'R<Qm;9!MhmLUdU]%mIqMJL\5q'qMm0#GXj?1H6,-Y!'p2$KEHXNJgm:fQHtCA+C+7C'o^9!\qnG
%>jBrBUVUV1#X?,Q_MqkE[fh9IZ(mS`:h+im[gnSn0YG_q6.8(7D\MgGco#^rj/L8=_'%K9T`_bJ6,l0o&e7"MpEAlWcn)-d$oHnB
%Y(@'cf%LP.^BHYbA.9J;OEjePLtY?$DimB^)k@`+4rsNr3(?[MoVhS'lCPr?TdDa,qfcSuP$'7g023)6a&b%;3[]TpQd)LM=,E;D
%>F_@cR!<`Wm+<b;?lVZ6ps6q6#qn#SZ2=h*fM[@AbTfMO\'3@G-e4(8h'Q#AWb(021OP:0R!?%@dYNaGLZDf1Ebn(b:mI=5pn$A*
%,2b&6$;J*sT-IW!00;'XbS%B/>j:io.>bRIr8:W89<l;@q[5(emDJbe5.nl&r,2.9_u>_+JDu@Wc4?;Qhgis#9qg/.ra:N=WnN]!
%Jeu?.H$$^-qA;/#Nan`:SEtDOKf`hD(<+$Y3#acQjjE<d*npqSfDSDDfQ;Oc^g(V_aX;;fml1k&R9ui7`i7X\RfidI9dqri0[!5N
%ncLcT7oO:$b\Ef%G;'9N\Ir0T/)6T<C'fTQ<j7_MQXKk\W"0=9`C.BGpO?iks7;ca31LQ24L!(%RJs!Z8gF^H&'&OK[nfR>o#"H;
%X_JC[8agQlC)-35Q4V"sI*T=1^rqejQf2hm0%TZ[`G\%$$JMT!.)C3=[9R.rYT*a,9lNiu>V)"S_Y2%#\hIPrBiA6O#XK.?5G3rb
%D-%N#RL`nI.8Z@:7M@m1S@OAmi2[>\>__o1SMamm\R;>u1\l[CaLQ$!8M.m&N.r;,38JRZN['Z^(jf>l$_L>6'gnat*HNcdE>gR%
%2%1(DCLHSq5@*W5O56t"<%'tu_!e*-nVHc:Q-C#l1;Su:F4\r%^^\6M_.,J?6uqnh-CiQhh0-$s'$bkk)H7!:S[D]9*SHIE]:cW$
%jKR4ZCM(&(k*AY``iE6+GnO]"m<jl8,%`^=/ZSnk-'2eFXD+A+6%7(^#/cSJ%AU"i'@9_V3HgcG8'/)A$@8C9M_:76O%DKmp]C#[
%Qa5G]d\aP&O.e$#d8s<Vj5Gso7b\?b/,fTBHaBOK&u-`$glYE#d0iO`<"KmUQBUl">CQ4G2Tm'I\C"h/C7R(,a=*_/F2g&14WSEq
%fQ:QlLH3C&ZB>>@j(]^U1TiZ&8n%6;e5%^jb3a3S]p3M&C$9cPc,#oEC^t&;+`7):U'S4VI@'(jd0PBD]J*WD;FLcn#4q]pWdH[o
%M!>GZ,)A+YE3$#YF'-0['4KcEU@G,%'@)mNi,Hi#&]"5S2%H5j0)D@r/%r.agc7OF:/%32puC]a`F;X.mUD!J;)k8\7LBpAg?GZ_
%:!(!+)u$(s_nr7fX0uRcDk%-FV-aE#@9uV(QoO"[3<G$HJ8HoNpm:C5UW`\0^G0Q<T9Ue+"dKc]IH7NLN7o49-Reb;l1NI(`__Nj
%NqcMAa*oT&R#.e/!E?iB62'M%BIMoe`TRANd_;]?Xd8/hJoO-]#*8+e2S(Z1J_FZS@_`dGJ;k`B(i^sbX$,rQdc]#q35?cQ`5gHm
%HOU,7K-MDl2b92XpQ'f'r6Ot!\0C[:mE%&?I?p+[9a,U&$m,fsB_fX'U:tGsX)+B?a_6Pr#1fh"p;.m>Z\@uN1lUoOfst(.Xp1ms
%=V0mem95,#<cqT:OSi0R_1g-Y@9Hc^ja^U-Uq>Z1Gq;1!2';?kIOr/@2FAM@h)W\gE79@/?N*98X"F%-YG8,I*EHM/R)a9+4ThHB
%H&u6E"sp+,0l1T_1-HZ".Pa/GMGT#[G*HD,_%jM-'ER^dU3tR76h%]^A:I;EU7scDJ34^;OL>oX;5]'ePe7mJ5\^i9@$KJCoG8^n
%UIuLq7!7dC$L2*)TA,O@&OV]VfadsH2+J?/4Un`4o=J;*ZHEEAA8dYFOl^XhXO"p*T!u#Mn#ALc@F7,JMgAf1V9mk*@\55m:uY#6
%arkpoUc;Lt;\N:HICMZ-A)B7lP3[lK%bmcK6)pJarj$BiH>^bd7`@!<d94U#pmJLU8e.(.LkXL*>?pj;V@ito$jA.bhJ*+?_W`?=
%#Bq8hc3r0iE+QCg4;W`C#g)NNUHIK$:&k^,f*GXZ\Q$\Zj6e*OqCr$bT=)SqSL0W>O0>8X8_6HB/#:TYhh(KOh\KoT]V4pj<1oln
%,aeX[;l/.1SAWVsdiu>6%'`@E9Zp==:M613'pD.W_'Y]I_Q\'M-j3Jfie^TahU*X]OcHFYh4?CL58X4Y(;"7^DalBDpb-R9?=qnQ
%s"6JiL_Wo?"I[Fk5S\*43BQKSK\.i\=hr+0ji&9S;h788#)"L5i\J].;9D%XZk3$hm0A<($jf11elG1F<MZMYo"qBAbbnu]`Q0Q`
%r^!66;GhfGX6S(b(.W0A@9\!efMDR7TN?coC)L[X<IBLRC`jOK,jOpL93[GcY';TdPdmJZ^M#Ds(c40O=]k-Yc9F7I]"FZs\*i\)
%[_QhSMsog4])\.pfo@b9Lae<bF2Di.Qa2SiSB\iJ<2`gpKPq&_-*1NW;V-!J-o#GY5ViHN&0nG.K;6F5>^TP'&Tn#FB#BS6\ubud
%XHMOBEa>qs($6?#.QDC'J*lZ8hlMMqGTM@H>C=3=T&fRFLk/jR(PUrrL7#<.[mQIil.orlB.uFNeg_Q^E;iH;gBok;aoH'X^5#GH
%#%1NjOL8h-/N\bmg5$,dO7oS"\1edW/EJ]>FL83r`ml6D3,4dmncP6L&YHT5=J$E9g(KDj@>[p^kQ--DG@B`j_dJa0UIBaT*&Z^l
%G(QHSAQ)8LEQ6,%8/(__Lc&;;Zkr5^/^eUhQ40W21=7)aadJ<naEG./Mu!%Z>?%sp"JdCl;hKrX_H,ZY^!!>"1f6N#(oc!XMG73:
%TK(tsr>YsA3<dJHiN!FoAUBsPSGH+F%J=";X*KXnHl%&iIMH"ni^@"72j4<FRSB2sYrWtBF$@PfXu-K@Z6LIJ$<'6HP(kXr3N<5+
%_uoIdTt.amk/5P`?3+L`!"9528+7&$BQ:fiaG-G#K/s7e\Ehfj=QYNp\bIdt!mN9MX9i8[p]=H[E-**UVUI58.^4g*UWTiO4+^R?
%M>jeJ14%m(EcjHEN@HAp2IJFW_3PYLlXW<$CEs-l9:YR3WD[oaSc"P=A+jc0F*tTiq7jX@T?+,VYP4-nnCqk1n./Qpj!n<9-RItF
%:5\@gU)n+YE^i(Kgi)=kW;HUqhclJ$+l!L=!O7:o;SHT0nuuXa[T;0@q:($^8W*an%*dj*55SnFe=uTNb2H&Qd`bB1k>:cR0.s!0
%ZMJ?obHut_5<$9jdL/Cpqf@K5i&T`!hG)F&V5D;!o&3?^;1ce&i/!prX;Yf;$,U(K"tM973!?I?fD"AX>g1dtP[;Wt*,f><Z:lUH
%$X(AH3FsZZEaeBZ_TDPH*WK,t]9[n=M3r*ma]*3Th7NZlfmS8=hqsGU6^J/PYR'_)]\am9J@8Gh%("V[r%B1J@B\;5>@"rA`?\_a
%-:'rB>\@jd`>pj)T9#S-XEopAl\MD&cF+L4H4W:IB*-l(W\'u[GIsd5`N+I[.QlFDRn-1*<TP-id)Cib1kF$p;'2j7go$N7YM\I,
%V=/'ZH3R6=1fO5`#rV[d2V_?i#N-lS!L<oq#[*K53\.3EdC2TP'U,3OCom);H2@MWs"J*D\0=X>LosdO`ZgHoX<.4oJ-X!iRKa**
%F='tjhWjCn0BVJ`aZO^Zf_ra!m+J#L$8pDsrfKFrS3IX+ZqlK;qE.)bqM1QW9aJXm*!Y&m%5ogQC6T:a#MenGO73Ii^ET7ub=.7\
%8?-=D->?KVRA7u3rG9Q5es/A)K+JD`:O4rHm8-eK1oi_`R`"V(31po&fZ*77<++'i85'C>-mmbK6/f-'aY%MLO$$N/4ifR'5OTC!
%IIV'=;aB1)D;IANcPWZO&nMkJX)X])YXEGPPHQUXP3%]3)-=?b;[`6?/bXWXjC;j%N^r?^CV"bmqfffH,:FG%*!q;X_#g%U+5EZG
%iB[uuLn&D:f1fe[E4Mo/'.6ii(oA=!jed@=KCQj&p+)`_r>XWibOtKN%*NIT,n3)EbbuGL<$]$KV_7T>O]*Ut]hiVa4g[4I&lV7-
%3=p5rj4Lm].%#fMoj&[MH4q7Ij-,o6,0rW-mdj_\8$83T@hW%R=Cq`5Z5!LG8B*2hDn!R8TU_=H_4If$U>TEe^Y1ni_DPI0*FSAA
%<1!qbFgEgH-J%6SQbkcf8$:6[Vk!B53_`>o>;;04eS\8O1aL5^"R+kgIq,g;Tsg]\b>3/tY\:,n35>sTB,9D-6X(PoltttQFWk.V
%?d7/7a(U_Tgb,JD)f\N..(X-6,$\rBM6?:*5&l0:ouK#[(FXSFK2l5/d+`nijRJ$5ng@C^7hcN^\nuk2PUicm1g*NRP8t%eM/Q9i
%W"`7&lt";PX+`XIU<@!i&@ZiT6&`++Ej$j[:6nMKX!A:$TcJH`\7Ob'Z>KZ$QCcc7P:5?pB.W<bJ/ea`*FCY7,qHhOUoF_82/K2H
%R_$geAji>p+qH/08qET3)9r9ghanPm!)pU@&-Y3E1,hblR`gqU?GIBCW?4!OH6OQ4"F$o6?r45d6'P)cBttP0.hZBZaOa%o#"#X)
%MOIYH`FC`Q<_EmI-ZC=2&Fr8f0Ns['W_OQ!_-b)crm*&THXaIp:mGi,=,>30VKg^5QN])XB,Xol5bPq)VEdK%l0PDQ3H9LR*Lhi[
%Dt=ihBiKiaU/6><K*md&WkEBKWe$nC2u"/XqKWc>o%MH7>Q:hPV4n^i=*'T'2Imk4)OoDSM6jFo\(W$NTh/r%?BHdYX<eC-[=1]G
%JQrDP;c\QMlr3[kghQn&W*G"Nbg)IV@VB@(',Uo/iL?9Y(g4-l)&Z&).NCu^79>2!QcMAEN''?e<BC$N&1c%ikCi&I'%&t^AB+H,
%Ok4T:;c:a2;0FdD,5hKVZ\rPofJS&Dh[8IbM;c;$_0u6WdFudc_[]?O?u.1M0h:iSb8ArXpX\4tbMC\(U+Gj5*+,hdh3.<?7VR]`
%!S9&dSiCR`"=KKbc*IR^5=5WR2`q,M"S"TfYg,N=:BH?19m4ti^"\M_HhM>ugEG6Kgrr(CG"bPq[N+`2l;"SPfB.7e@_W?!IWPsS
%<3(sk)SjIKUZ?G@lbN(_ai&eb^982X`=UjV7";RB[UH\,AK/?Nr<X;N%&G`85!g=sf6.qNLEOC"lGMQ1@/$Aj^_*Kr`YBhlCQ_g[
%)0<bJktNQ3Fna7!WiN=kJPoV;.Go'79>&T1[>o/V\"9hDMBPG>C3b@l6$.O7^7E!`Rf,FlK+q@j^mUb=ANkaC8J?+VEHfmfBmCKX
%=Tk3jEUs\c$V5gmSG19dSm8YV&d"`-n*%n@HcK5j%dkNF0&S>&:Djpq^0'p[jZ`Ilh=_63>3O\>rE-hlQ-Pl^Fe.]<kp"$I<T:[V
%f&GLD@g^h%&6"'m&BCCWkb=Di:3UeP-?u30)I=UgDH2nXP#oNBAb/u2PVs,h-AT-^/u*.2MHo(qF7C?tDb3F0&uS0SUUkGc18#-)
%e*(sc-q)(7RsgrL?>?A#d1h.fRtS0G1l:<NM=/E6@1m4?`7DdNc7k+4:%?81Jr^&Vj`bA0k'#,+GASY`\64E^&0h4-P!3u!&T3?q
%&:b?uI&$KteH^k/]rETPN"LuH`5FKHUc(h(bp45A^"R?h"sJS-M],h):c`'C"@t-O)hNh_\%Ah[M_Q=2-)1fpEbdR"]MMFc]D$_(
%b^@cSI4,tU5D-]%63F1^63,?\CaN[,YqDJ6qMMEAILMf=1"!'&'MoTVRWk6--iFH^M<>YI_VRcoh_$.4K+![8-na0</,+(@0/g]/
%NqpKDV_&k@2NR:aPA[EYOsO@FD$i&ON2CFqCNI0HY4g5]:4$PFmPC%)#%8lQ.VhXi$G(KE+(p,pO/Mc%AI57LpP)fk#Uug?EMfCo
%dL4geN"cmD:*kCH%l-"K!"rQ1<Cefo%#-%HVPDh#!dZap2]6#e.SJSJq)LW^ks*f=]t^"^59okak*d'/TWB+$mH,\<87j@pAt$/9
%>Di[i67W?+)hPMn2)^53fk9(IpZlt,W)p&"U!)r`)7Z/%cFoM1'WEQ/c(WhkR@pt;4CX#MeHE=YBg3?^6*&6M/C8NKAV>>HT5uO<
%0Cd"F\C`DuaS^IFU<<B/]ckq+K$?PHT_.`ng*p7FPW\E7<c%a"M=VSGZmGN!]_9$/K_A&I*Z99g!bT&-I>P<$(qrC0NcX/POQ$\(
%B8m1dV$0HE8NA+ZW,D2E$pn?tG(mi[<BrSGg2HlDDa(E+&h?U6]-O%W9MK1&3q9<GIkag0bN\o"A;'Wl%Qf,a3mW^0"@A&^BRMu7
%08;tGG75?LU)/p%c#u4:fLOZ9B$3nC:@QT_m",o4c65JQ0SRFjUIe;-%f$;tcH!J-U4>qn4N38NA.stb'a.XGTi-$NMXOZlBfX`Z
%=pe@COi2n5(Z@U,h`7M#8-NPeanfB^`EpEC`'j.9WmQ7>J%_[,F&d9KA"P1d_[(Hhnrf?$P5%^7JHI249Zmdk[HS;Bb2]2c\J0r7
%I]iMff\M;4o\`]Qf9")\Q>VefaAJ(2Rd=Jggb/??+#c4MU@JIT7B+YUUPo0mC>)H<g:eTX&>tOUa!>)#6Z/K_r1)D`SllTb<U_ej
%i"E#^LFN0f1K-GVD)a!Ff12qmTIU`^;NF4js"`4eK+`C]<\S#PquLP4'@9QT>hFFmOZJu3:/r/jUfr+/_pk]V;dq4qaUMY(4,<+c
%)=R^f"]lqgZGJG&>Cc*n3&FjpNZ!Y#`[O$jQ=&f2d&eQ%5r(CSj>WrJBe.(on2)HppAW;)ZDA+BW@JFuN^J[bD";af,r'+>0J^_g
%Ze4fmn(CMI1)hFO-dUCL,]KgZWLla-G!$Nhh2$P'o@NIJCHtk7CUEoJ*elhAo0H_(@Yd>ZQmBn1;4!n8\uU;1WnF'E/n0uB_HTBK
%LaPc2lQ!"9J-Hl0Yq(pg)G'7qp;t<O8X#)n6GO=T]QUga(m8K@Y"e[$Hro-8\\e7O?\-V(Q,i)#O7S"X*Z-mW0TM5nSjTX@VMB#N
%4)[^@G>L(Q-(u89C<ba>P."/e-]eS6<@0;0Zbe=BM3$8M$g.?sTh:=g=&a*IFXftR$!C=aH'kDP6>QqjpXk!gm<+14;*24nJS5A\
%=h$j#(TJ-@8p<W@j&[Tint`4SNBTU>=VB/u+Y]Bi76N5H-+%mC4Og5/Z!15Xl%W8!n^8C@4;bESK6DE@]<ikAgW9V9`KEIV;fR+\
%%3YV]/t8Z4..IQnA1Wh.B[S#F@1^)$Mbo-Bd0(l/m*:V("BHZ0,!Q=hB8'^uDa5d;-N](]r8_nhXU\4FJhg/+Yj5*@Y'RTG+Au.9
%$SMFS%5h#+k%fKGSqUR6-5p3\F\FONqG]CX(;G01CdJ++!\4pAE*_>6$9aHD.cD/A@:WH7G1<+(F*7dUUn5r\6]lbJ&<#?j4L!R;
%2ptZXWs6!M;#/G!M)g=')AcK#mIDHIlQR@i1XBEVq>K><7;DgqA6l>bgHDutp440M3b)*!+1P`Pn.f=t`1`.('@JdMQ$D)RRR21e
%\(?r-kO%dqlo9*,?m^!%!6;[h,RcJFOVKPPAnKm?m;Z]2,C&suD^C\jS&b86G;p6u=.G-/I.MP\`kl@hnVYZL;sJh&HG3.(0!:BY
%KC;NTcKH%`j><eN?kP88?=63,j#".j\-&N1QBP=b9WNd.>`*=al_(qe"H?hIm3Y7m(j7ilebi9)Nc:k@nrg7hc::DX"c%Vi$Of&2
%c;`M45@)L]>;>YX/,);&S3KL9n#e#-O7*-TJHS6)iN_gkI#l@-W6bX!61U1T!et2q\MSGY#&e]I:P\W27,K)^1G-ROJBjN;6kWn'
%!\0Hk.EFB?0V$ZmU\\e1fM',"\P]B:J7p(uEddMnE<?e:D>c`Cr*,#26g^e0=h7nah8bsa7E:p'?:0NCKCoaDGcsWW%4eoSo].]K
%CB%"JkL(4_WXZ9Wl4#_-Qu;f7K<YWNe>9^M2?O2EH_5`s',g_>8^HZ!n9i]_.\.Y[G:ea79d@S2clI<m$C`fIC4kWIkND'.+]"8'
%?#7_l*@(Mc@Z?hoh3MlpOldW4nh+-4'A6Y.n\C+NIUYu&7*,d*<s$B:1j3N(!i?g_#8WM?#76bQ'"__RJM9VD.F?'7Y-]H)Rjh5;
%gJd]"5h3t=XP3q_!7E!XXq*HJ@Bk#,ICiba5K;g@!]a(CZd[5e\k?PK(aUjuTR4=+"bPlS`XLKNMEQmVgd#TU2^0W^R-4o7\CSEI
%du*?t&5UDA:9A8^^PRBjl>6uXVFbED$:rX]8g>n1Mb!aK>i4F';f3tj#?>O2m'AM+Yp_HcE+"Ls&Z23\("7.<U2S$mTR%Jd^eNtL
%alorpL^$,F+ptOTon]qtR/MoH1b6/BO'/CE+)iX17?&FoR"P`FIjJl\,0^>k=n*R*4X=,3*=7Y'VudGN9'GF%U]QlGPQK[h#:L'X
%0.,so([mJ*r*r\V5O&I!VUWlOAk6qBdEA^m1X^+K2#s1K79NkkmHR*p@eY:tE\<C(/*HE]^g8#Hqt"_?(hM2V>1m*g0!?SQ!Pdr@
%a,AQ_>u&87>fA!sceq,U%/-Kf0?=u;E"F3p6qs4D".PMbEr.&Zj0o(Vb`/=R)2AD4mn2`Vel;o,l"N"3/CJA%9W';Ci@0E^JBqAg
%&]_A3Kc(UPM.9MHDFf3dUBWJRb*+Z2YcFb2)H+?o?)ea1]gq(<%"-4:'W;DTF6ZBD2"uj%k29%/SEQJ'(^Cfso=C3]iso%D"3L&4
%9)iL[!.Ts"RE6)@8n.PG/jJ5p.(O\MrSF['m;h#HlO*S";K'o'e=qJm\=%(FapguQXk!8&X+i,g6f`Ze3MU(goMYa$DKkB.B<r,4
%/gFfQ$0CM8ZlMtk#)aY=3qDg5Mt(R`-$9r4PY`pRb&?sI6Io4LA<+0?CXEZ^EB%nF*-'26Ztrk<rHl7iaP3t/j"^+`pT'nEnJ#R*
%nOc!361cC,L4-fF,F3nM)9\+^8.*m.>c2*+)!3UW0Uc^Ma19L:l3(.0%[HQX#68]n^g^2#Qs`k/D0\f1X%hpr+]@s5?A'=BI,m%F
%og:PHUqfCWl1hDIhIt?^DRN%)]DDXh_Q'_CPG52acj0DamUth*h8g\Udf)Nknk(CVgE*L1C2n&#ihVa5E>>Skk>Y4BrSb9"f*F?+
%lC4;QVc<N[B4G_@&09&CA9IK"<i9ld-COjUcg$\d'_7`Mc?fq>H`%%XWT7'dB3Q%A&9=,Llu5+4"RbIIFuel\i;tPa,OoK`Hu'A?
%h;B)4O)s5)dm8M>gR.s,bl<8b(+7mS;iSgHa#mH)Ju&kq5c?4/K2?07IgoM?U0/%u8!4b,<'L'=d`%Y:JVRiHZmW`I=E+`qL!n:i
%1Ue#Ok<h1]+*h\_Hi".FW*,CBk'!.9pbmni1OWu`M74aa1j2m9hjAomClR6DWY5%k)8JkWY^C9OKEtWd0m%H(HA`$*ieXPV<&o*.
%&rP?n"2JYdp<\)O>XC[nJCHP<7-pI7H=,ICfU$=jJ!LR.c=@CN2IqOgJ-=HTSn'(@MM+r&fDYIBcFCQn>s?:Jq(8,#dnIg+]_/QS
%XDgW&n-Q(N5U;R6<[aZJEsPX?lVL4c:L$G(Ya1cgN,???(93)eO;,`V$Nur/^M:'U7faSn\0eGI8YYh?pgD4^P/W;\WZlf><pCQ!
%d"kNf9eJ3n7k0L%(OmE_#'EO'N(hC4e&/^r@qCc<$e*EG3OtcWcU]Is^Y&Y>\=/UHBXUUm!a.D2I]9.Q>QL5DW0iNX;2Q,0`G2%u
%^j<N^i!:mF&8ftG?'lE7OFd<uSWP%Ie!(JP.,<=2iW*0F(YeuEnPHf*P"T!146L(2E?hW-,;O/H>)fRo_qG`,UU>Me$_U9g'i?e4
%<Q(YKM]E!Y*.F]RY8;9Xj!kEYbkqAng2<K3DG]"]Y!ip\a]'oSrfDStqp]*ZBaM<mmuK0)qu'C,YQs(>%,N@UB'$o'gi#&^H+,Cj
%2M7]_C:^ZBpe]CB%muA6ZnM\qnKE3TXQL@#6#C)T^=]$df=0r;VWWDX\p/,0$:r?XMW8Mo?*ID58iZL_P2%Z+l8*ga3?n7Af&Eu9
%0^62_CM'h-iq=n,(NeZ*HK5de176=>7eI&&c@CD=+=*'3m/'4`]k'qq80PGi]!Nm:<5CV`**Ha.7o^hfJ!*hEHIcki0$XA(K9T2A
%VBRIkh@f&YG7VkcCtL8oN$N%S,<S+$<`!!9bp)Z.L;H?&85c%R`g0o8NG#&(_>JnsG+&oi6tVZ17G9##bDs'Vi=#rG^_65_6ZL'e
%5`tTpcup-/NYI;^.<$7NXFR;`8UslBlO1BMd5M,t61uZ$5<c9_#eS7IK&gU;8hDHRY_7)&/T-oEjU[`R!D6JA%bb4:4HZZ;_f==!
%f!]Z5*qV6g@%UgR)hJAbem*H;TRo4ij/Q4GGb6H58<#U'/Xq*K^+*K)q/HNS!2=uGR_!4SYI2rI%1uYON)@cXm!tRgGF/\=Ej!8-
%D5H$u4l*mErS)dQHh751c*(<01qX\$>`@?C>E)l=rrPG$HPfbr@WHZ0h9-:KQ:CDD>Yam"EU+j(,6'RugXQGSP?A.DF[ji5jCtoo
%(Y+IXhJ7:7&f-7R8a2rT,;QUr]TG7&pHX,n9M?^(/AhOaNol2T*prP8nduu*K6asKmg(n"1-eSDb^ansdG1ZBeC$L@g[eNjmT9")
%HiNV[6@>aC+l[MVnTCHiq@:#%MH_KEhBddfJ5`:RH5AOM+@[f@_+7M:r5*F.hJY@^::)E&&;UJ]i*D+21o[hMmr"#$QP9B:4pOMG
%KENtTdaR;+HgY+>dds6+Uc9ZalPOj^6*C$WiWL\jUU(>r,:u4[72:e<>KGS0\<Oi6W";^r=d7O*r2njU9>!8MU<d3Okd+T4.Io7m
%?8=SS=,m>%7(noG[+AJcLgOq^,0cUdOiCZL:8(f&j'g!<%bFE!8;tb2VXc"JeS*MoLZpo[oOD;[c.t;!r':Rs&j&h&+eY.bEE==h
%nm.fg%4`:i:oBI;g0)"]n?JIaapNE+fXYF5)A@+aIA(2N+MV%6gM9I]#CoP,s4t[aPH<_7plHr)Ul&j>grRLOK"d)0QIV^>]Os6:
%FLdLqBlTT81H6Q?WGEAdnP+O5_ZrGPjF7)nghA/PPH$U!Bmt.Kd=K2BOR!-FjiT1M]Ib*1GY2\E6eVUl(?1C(\p2hf%?97t[fFm_
%N\_:fbLLY,`6],R1]pDt!i91bWU,Ar"jVUWq1nZpZ["nEaQ%p&MIn2Act%6-^strnAW7_\8Cs99Q8EUI1,m!(X(N@D(pr()4S$Nf
%,MGRqDa9$!Ec%s:bFGiqduu1/\P%uN?'ua7aE&1N3^o(W(nC-]fF2#8`lccXf>t).g`7u=R(@3[One"Ph.kf/qqR=5LRJOH(PIAT
%d9(;kIZn^lU4T./rA,&a&nu,o!>&nLTsCdCga%4XW-[lDk_Jt0l!pqF^ELWRX:k`3_<^DY)qhnb,VPWJ/-=[@ZLM4f+Bksq;fuNq
%XtAN\QK?*9P1^t3,+J41EG?*#ZOWb)//<^&Zm"ITU7Ane],9J98!E.=Xt84jV7S[ApNDbR!;'a[2]s\IhC:5TYUp&YquAKZbjb"?
%hENH#A)\tqWn0cY\&-cE=\8fmXe'I(6ISa@<K6?5O;cQrL<(c_/D1S0Port!_cnEfL@@mQD=_g1$<s-)bQMUT9W;5JnRL.I-;=sf
%S_!F7S;s)%^IDQBWT&b0Ri5E=&QT7%:B41N9jlRtLC]$bRRF5T72=,lGL]d*@3"h_UW76@$rjU+\g-)DBaejYjd]&>P]1_g#Eg;X
%l7/(s:J`(^%L&(HB2u4TK1U994r6DZO*`kZ^rRqi_?'ba$Q"]n.OVjN#o;T8>OGF`l8=@BeeQ<oZIiDkW:$tn(1D>_HQCD2O"Tuk
%p0"EU'JT0I*YZ"&D$.LDdKB.A-mO\C@)[2TGt95jF=#XK\7X@NTu0sgn:dddZLIk'cqC1)Z]e>_%985;8[)k\W[M4nV@-`1mKD=J
%NlB'9P)%<]pZK-DZ$K]tV_n5s]0!?9ngkTF-BP>*`j;3",XbsT07HeG]Xeap%(\fRdLlXL<cO5s#+J#OmcaUA(*Wp<LDoIQ/gWnN
%f^'"o.*8\aFe"R[P,lJUd0d5d>,TFG$=R!;!#cFO<?#2B5pf!(NN1/;P5k<W\q<:#W/H"52,W8Glrt9H6-J$Xp&#F5gk\<InVlfn
%rae]M_oer-N'2GK]G`(n;t#H>'_YZ&V7Jb3Ur28"PV@W\(KHK<m\-,g#411u9?K;<1$/^DF()1tW0I#kXo?O21#3>`c\U=Th@/ZI
%Pq'S;,jbl(U:]b=Nnq<kI;@\j)f5K)P<JFI5[1BIF?3lm_lRAE_,-%'1"#\TR@m9<9J$"LQs&MD5D!h2KuuR^Mt*g'6BG=e`j%ll
%.i_tdOWspu@OY=gLk6Njpu^ROc;FY.E#$h,8/il[j*_1YrDgRd"A:J1%J<mUEcp]GTcVN0doZSP'_"f=.e[7-7AMPk[>02kY$NFh
%HI_QT<q+X,Xf^US2Z3,\/F>N(Z9C^=B`)3N[p`VVn!M#hbUW1hno?t4+6sV*.QM>I,%aZ[F])F?#c%D?bpY857:?YJCqD-tM/^Ef
%Fj=>'g2;.fM(@("3E1PB8WqAn+:nM-WeUG&r*DCEMNTq&0T>1uCf7.U6PghZ"e6nbaikt2dG\*2/*R+K:N;n3]]q/r41N4i9CZ)U
%622*b*HfW<HZT<j6uZ$ZC5cm*]F`_H-4J6\DM;q]2,PP?l^pQpd<L^`Jsfk?_^-r%j;A52eW+bZ'WY:98453J!Df]U()Sa`SfDX1
%f;4sd`Q8SH9KcT%'iBi,"7a4f[/Y7<Z>\"Mna=F"s*D.XfD<0i7?&8fE\>uXf(h)5/dn=_PV:aT)Idgh2i5re;:js824M-O4M3]`
%od24,!q<'11W]ViL]j?2]^)0!:1P1Bd+WKWFH)[B^:V5\X'\8:@(``&OF_[^<H:2.a`QrXpFU1.(G<3fDiP'=7c-O7Z<g17fop#W
%-dg3bR7,VA`=<FB)mqRCa@q1`SP;$7R$)t&JeUmoc-Ht%"X+dmDq'r"$k9#'_VPEXEe0jAS(iT7ZV"ThifQ*Vs7p=HP'ZlYn3<ea
%/D:\XC5mhh4aJMB&^TGg499a&!*g4ZqAg)B#t9hgd]e.gM8Fo[lfY7>8Z//D[bVrr&.i\85sm,-kH=I#&3^Ya1#"SR2Q\F!LP7-2
%<6\'LrfE$s<VGe=87H^ci'#^'rM2MW0e>>HD"O9[");$YC55`iUG7YI4?4uYGKWY(@O?UYi3X]<%n*F:pTo1_8$YH'K7A?Z(^SQ[
%%O8676WKIbWiG5ZgrR0.(WMj*#LL]Q(0FrE2ggjk$Hhuk!q?VE+)pI1)8'_aK\$;FD&dtk9W9lcWUS_PC62s(o[b>mOSJl6Iao&g
%^tk0p&D(b7C`D#+8g<EuhLJM"fula8_[(X66+hf/XK\^],8dU;Hk'gZ5[*_Ye)YtE2P#^lh59GmF70mLRG>c3MF4V;2C!HsPs,DP
%$+<HC1)T"L^n!:aarp3\^KQ6R$#nlqmCX&HAgYYe),rT`[Zi&BHP7fE,e8dR\E[_!QhkSqSD3m_52CuLOY'T<FnffkHTE*/#*HQP
%&"t7T?aB(;T'sHs0L4bp[K:R\LV=>'4J+KI=l_p-WuOI9IU@fYEM$DFM0]`.DL't>T,+h_m-mr6s5pA+a&R`Q,ieZ=LQd6[8;hFX
%S7+t<,hpUqqk3iSXk6$tN+[%2l*4Zm0\K&WS]tbiaW`2S2IR.`PRYYEV;+?1UI8b(cn<(keEQU*c7P*N,qq0KCA8D9Ma`%Dpt]f7
%Oh'J+m)-d?c_N-@DmLkrR"(fr3k4=MQ3U63j!gMV__X6V:WF6\fG1T.]@T$4!OKqr'7Mq3.alR?TSVB+r;CoH\$2'7no`a9#A@IM
%kBf]W*8+OqHH>h0?DbO5F5;V8T$*5Md7odgc.`=:cIdOXSno#1W2ZEU0I<@U!3^ETlC4DE@ln^c;h%H9<-[3KS8:Z".!B.b?W)Ue
%TjV?`W3B7O`U^?8hX3F,?hI\D<_=7VD)@ml`S8NOXc^g[/:H-+Z-@Ddk2<,*NG4uAWMKNr0Ks7gQ)Ve"0,c^L%X$gJPfnq7K:.$b
%Ma?j(Ws]EXq:a4Q@0X$t]>X,G0h<"QVZDS#hf[q+Vj/jKr/5T6Z!k(kFR$W1L:FNPbFEHKJRO_X]\%"LJ&="4"_#`p!QZKpKeq";
%fJL`ing'I=\U,f)-0GI_)$gj,R%'&@MC=JsN&QH0/T=_B'OlV_0dmdE^j3ejK"Fs<YOZXg08;;G=D5MdcmN.>@DXn&loq]P[&l*k
%M8Ul2*&-W6<N*_oKh$LiZ>\m41-ign3hDoiiR9&PG8)*n958"VCj+Gdb)2re'pKQFVg;^ib`MDXX*0s\2DE:$Q@Q`l<i;)NDk(B:
%X9<3&I:LnM7`R72e&hFi+s'tde\-9>casi_\6*D5a9fq=L<gohg_<JoGhKQ<1BH[NhSZ\pg:tE#cc9\uVuO1)TE"<9ri[u)rqg(%
%p@HVN^d%bcJ,\'7r#^FcoDeF6^\mK6rg/-5O$EZ*^\m`eJ,;2&b$Y/HpeO-Qleh^4+91eZs4^n0qN([R^]/d#_3`G#r51bs\,YiF
%q60h[rs+"GZq(~>
%AI9_PrivateDataEnd
