%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Dogi_Pirate_Shoot.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: WINDOWS
%%CreationDate: 7/26/2014
%%BoundingBox: 0 0 544 160
%%HiResBoundingBox: 0 0 543.4043 159.8399
%%CropBox: 0 0 543.4043 159.8399
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.1 x399 R agm 4.5189 ct 5.1875%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 40 8%%BeginData: 7551 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD0EFFFD04A8FD57FF7D27204B2044202752FD18FFA87D20202044
%2020202752FD25FFA87D272720272752A8FD24FF7DF84468B5FCB5FCB58C
%4420A8FD15FF52274493FCB5FCB5FCB58C4427FD23FF202144938CB5FC93
%4420F8A8FD20FFA84B2093FCB5C3CAC3C3BCB5FC6FF8FD09FFA87DFD09FF
%2720688DFCB5C3FFCAC3B5B5FC68F8FD20FF7D20688CB5FCB5BCC3B5B5FC
%93F87DFD1FFF27208D8CB5BCFFC3C3BCC3FCB5FC6820FD08FF516E7DFD07
%FF52448C93FCB5BCFFBCCAB5CAFCB5FC4B52FD1EFFA820938C93FCB5C3FF
%FFCACABCFCB5F8FD1EFF7D20938CB5FCC3FFBCFFFFCAB5FCB5FC207DFD06
%FF766E6F4BFD06FFA820688D8CB5FCBCCAC3CAFFCAB5FCB58C20A8FD1CFF
%A820698C8D8CB5FCFFC3BCBCCAB5B5FC8CF8FD1DFF208D8C938CB5FCC3CA
%FFC3BCFCB58C936827FD06FF6E6E446FFD06FF4B44938C938CB5FCB5CAFF
%C3BCFCB5FCB5447DFD1CFF4B698C938C93FCB5B5FFCAFFFFBCFCB5FC207D
%FD1BFF524B8C938CB5FCB5FCBCBCB5FCB56820204B20A8FD04FF7D4B6E6F
%4AFD06FF208D8C8D8C8D8CB5FCB5FCB5FCB5FC93686827FD1BFFA8208C8D
%8C8D8CB5FCB5B5CABCB5FCB5FCB54452FD1BFF27688D8C8D8CB5FCB5FCB5
%FC68204A4A7D4A26F8A8FFFFFF7D446F4452FD05FFA8458C938C938CB5FC
%B5FCB5FC6F444BF8754427FD16FFFD04A8FFA820938C938C938CB5FCB5FC
%B5FCB5FCB58C9320FD1BFF20938C938C938CB58CB5684B6EC1C14B274B99
%2620FFFFFF526F6E6F7DFFFFA8A8FFA8448D8C938C8D8C938C8D204A74C1
%74517D752027FD14FFA82020442020F8448C8D8C938C8D8CB58CB5686F44
%4AF84A2020FD1BFF208C938C8D8C938C44F82698C198C1984B4AC14A2627
%FFFF52446F20FF27F84B2020204B8C938C938C936820F89998C1C1C12027
%9975207DFD14FF20B5FCB5FC4568938C938C938C8D4427447598C174517D
%9920A8FD16FFA87D525220938C938C938C93204B7C99C1C14B7CC8C8C1C1
%2626A8FF4B6F6E52FF20B0FCB5FC8D208D8C8D8C8D68206E7D51C198757C
%9F74C19826F8FD14FF4B44B5FCB568448C8D8C8D8C69204A4BC198C19899
%F827742620FD14FFA8F82044444420688D8C8D8C8D2099267D20C1752726
%7CC8C89826207D7D4B446E7DFF5244B5FCB58C4B8C938C93444B99752727
%C1C82052A0CEC8C1264B7DFD05FF524BFD0CFFA82168B58C9344938C9368
%4B6EC126A84AC1BB7CA09F4AC14A26A8FD13FF7D4BFCB5FCB568458C938C
%9320C1C1992675C8C97CA852CEC8C2264B7D994A6F4A7DFFA82744938C69
%208D8C8D204B98C198754AC8C8C97C7CC8CEC14A4A52FFFFFF7D4A6F4AFD
%0DFFA820F84444208C93442092C1984AF875C151274BC8C898992027FD14
%FF20698CB58C93208D8C8D206E98C198C19F7C527D27F8C8CE4A6F205244
%4AF86F4AFFFFFF4B202044694493206F20BB99C198C8C8C85175A0CEC8C1
%204B7DFFFFFF4A6F6E6FFD0DFF5220B5FCB54493204B269998C1C19FC8CE
%C8A0A0CEC8C8744B20FD15FF204B686920214493206F209998C1C1C8A627
%68B54ACE7B4A202720994A6F2651FFFFFF2744FCB58C20204A4A4A6E9998
%C1A6CEC8A0A0CEC8C9266F20FFFFFF4B6E446F4AFD0CFFA8F8B5FCB58C69
%F84A446F4A9998C19FC9C8515151C8CEC84A4A20FD16FF5220208C8C2020
%4A446F4A9998C19FC9A0755127204B20F84AC1744A20997DFFFFA820FCB5
%FCB5444B6E6F6E6F99BBBBC8C8CEC8CEC8CE514B2052FFFFA84B6E6F6E76
%FD0CFF526FFCB5FCB5684B6E6F6E4B98C1C1C8C8CEC8A6C8CEC8C2206F51
%FD16FF7D20B5FCB568206E6F6E4B98BB99C19F5127266EC1BBBB444BC175
%6E4B4AFFFFFF5268B5FCB58C44446F4A6F20BB989999C9C8CEC8C84B5227
%FD04FF524A6E444BFD0DFF278CB58C8D8C20446E446F209998BBC1CEC8CE
%C8CEC8C8204A20FD17FFF8B5FCB58C93F86E446F44996E4AF820204B98C1
%98C1984444996E4A20A8FFFFFFF893FCB58C93206F6E6F6E4B98BB99BB6E
%9F514BF82727A8FD04FF446F6E4BA8FD0DFF2093686F4420F86F6E6F6E27
%99BB98C1C8CEC8CEC87C2027277DFD17FF20FCB5FC9368276E6F6E6FF820
%44FFBCB54AC1C1C1987568696E7526A8FD04FF27688D6820F820446E446F
%2020202620202093FCB527A1F852FF7D526E444A7DFD0EFF522020F87DA8
%20446F446EF826264A4A4A205126F8F8FD1BFF20B58C8D4420F86F446E44
%2068B5CACAFC6E6EBB986EF84520277DFD06FF274B204B7DFF274B6E6F26
%27FC93F8B5FCB5BCCAFFFF4BB52027926F6E6F52FD15FFF86F6E6F206FFC
%4B206F8C93FCB593277DFD07FF7D6F4A6F4AFD0EFF20686F204BFF274A6F
%6E27274468CAA8936899744B7D5252A8A8FD0DFF7DF820F826A8CA7D27CA
%FD06FF766875264B204A44A8FD15FF7DF820F87DCABBF8769AC3BCC3CAFF
%2727A8FD05FF524A446F6E6FFD0EFF4B2027FFFFFF27F8F8207D527D2720
%52202027A8FFC344FD11FFA852208CC3CAA127FD06FFC3934BC19F746F20
%994BFD15FFA84B2093B5CA5252FD08FF2052FFFFFFA8266F6E6F6E75A8FD
%15FFA8A8FFFF52FFA8FFA8A8A8CABCB5FC937DFD0EFFA8FFFF7D208D8CB5
%6852A8FFFFCA9AB5FCB520C14A6E204A20A8FD15FF27989920B58C20A8FD
%07FF9A20207D7D7D206E446F446E26FD13FF7CA0A8FD04FF45939493BCB5
%B5FCB5FCB5207DFD0DFFA8A076FFA84B204B202645BCB5B5FCB5FCB54427
%994B6E4B997DFD15FFA86EBBBB9F20206FA1C3FFCACAC3BCFCB544266E75
%4A6F6E6F4A4B7DFD13FFA8A0C8A0FD04FF44938CB5FCB5FCB5FC93204B27
%FD0DFF76C8C852A84A9998C1208D8CB5FCB5FC932027F84B20206E75A8FD
%13FF76A027BB98C19826448D8CB5FCB5FCB5FCB58C456E4A206F4A4A27A8
%FD15FFA8A0CEC8767DA87D202069688C6893442020272727FD0DFF4BCEC8
%C84B7599C1984B4493686F4420204B2727FFA8A8A8FD14FFA8C8C84B98C1
%C175F8214493FCB5FCB5FC93444B20C14A264A51A8FD17FFA8C8C8CE9F6F
%4A99F827204B204B204B274B274B52FD0DFF51C8CEA0754A9998C12027F8
%27F82727272027F8FD18FFA8A0CE269998C12020F8272020444444202027
%2727444A209352FD18FFA89FC99F999899924A2027F827272720272727F8
%FD0EFF51CEC8C1984B99C1BB4B2027274B274B274B2752FD18FFA8C8C8A0
%6EBB6E4B4AFD04274B274B274B274BF84B994B4BFD1AFFA0C2BB99BB98BB
%74FD04274B274B274B2027A8FD0DFF529FC19899209998994A2720272027
%2727202727FD19FF75CE9F6F204B9899F827202720272727202720204A4B
%7DFD1BFF529998BB989998BB20F8F827F8272027F827207DFD0DFFA84B98
%BB99BB4A4B2020F827F827F827F827204BFD19FF529FC199BB98BB9926F8
%FD04274B2727F82727FD1FFF276F92BB6E6F204B2727F827A85220FD0427
%FD0EFF7D4A4A756E4A20272027F82752A8F820F826207DFD18FFA84A9299
%9899926F2027F8F8F8272020F8202026A8FD1FFF7D7D527DA8A820272027
%26FF5220F8272026FD10FFFD04A8FF20272027207DA86F99BB98C14BFD19
%FFA8524A6F26527D27F8272027A8A86E9998BB9952FD24FF7D27F827F827
%FF7D98BB99BB747DFD14FF4B6E6F6E9952FF4ABB98C1989F52FD1EFFA86E
%754A996E7D7D7598BB98C16E7DFD23FF7D6E996E994AA8529998C198C14A
%A8FD13FF4ABB99C19875A84B98BB99C19852FD1EFF7D9999C198C126A84A
%BB99C1989952FD23FF52BB98C1BBC1277D6EBB98C1996F52FD13FF4A92BB
%98C19852524A4A756E4A52FD1EFFA84A9998C1987552274A756E7520A8FD
%23FF7D6E9998C1984A7D274A6E6E6F20A8FD13FF277599BB989952FFFD05
%A8FD20FF4B74BB98BB6E7DFFFFA8A8A8FD25FFA84B6EBB99BB4AFFFFFFA8
%A8A8FD16FF7D52274B27FD27FFA87D524B4B52A8FD2BFFA87D5227277DFD
%FCFFFD11FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Dogi_Pirate_Shoot</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:CreateDate>2014-07-26T12:34:10+07:00</xmp:CreateDate>
         <xmp:ModifyDate>2014-07-26T12:34:10+07:00</xmp:ModifyDate>
         <xmp:MetadataDate>2014-07-26T12:34:10+07:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>76</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgATAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXiP5jf85JWelaj&#xA;caH5Ns49a1S2cxXWoTsVsIJR1QFPjndTsyoQB/NXKcuaMObtOzuyM+rPoHp7zyYTpPmT8+/Od+9v&#xA;ZeYJwwXlJb6bb2trDCrbbzSrI/XpyevhmDHW5MhqEXqM3svo9JAT1WY79wr5fUSjNXu/+ch/JccV&#xA;3da9PJZ8uP8Ap0VnfQM254SSRKkqV/1h+GSlqsuPecdvL8Fowdg6DVkx02aXGOkh+yP2W9E/Kf8A&#xA;O+DzbeDy9r1qmlealjaWKOJi1reJGPje1ZviDL1aJviA3qRWmZhzxyC4vN9pdl5tHk4Mo9x6H3fi&#xA;3qmXOudirsVdirsVdirsVUru7tbO1mu7uZLe1t0aWeeVgiIiDkzMzUAAAqScVeC+bP8AnKVWuZLP&#xA;yLpK6kinius6gzw2rt4xQKBNIv8AlEp/HKMuphDm7ns/sHU6oAxHDE9T+jqkenfmv+fWtXPHTpbK&#xA;WZQGe0stMkmQCv7RMzOB2rXMMdoGRqMCfx7nf5fY/HhhxZtRGHvG32yCZ23/ADkD+Z2gXfoeb/LN&#xA;veRLQyCyE1jeKnd/QujIrn2DLlsddG6kDE+br83spn4OPDKGaH9E7/q+17b5O85+XvOGhxa1oNyL&#xA;izkJjdSCksUqfbiljPxI6+B+Y2IOZwNvMSiQaOxCd4odirsVdirsVdirsVeV/m/+eVn5KlGh6PbL&#xA;qnmuWMSC3clba1jb7Ml0y/Fv1WNfiYd12JryZBAWXN0PZ+XVT4cY956D3vGdPt/zH/M3WUsdU127&#xA;vZblWeSzimey0+GLarNDb8aha0q3In5nNb+by5J8MNntz7PaHQ4PG1Jlk8uW/QACjfvKc6n/AM40&#xA;+WoIJLfTr+01DVUtX1D6msUiF4Y24M0dwHep5bUNN8lOGUcp3KrpxtPqdDIDxNLwYjPg4r3EiOvK&#xA;XLzSTyf+ZnnTyHcRyWt1ca35cQj65oV3I00iRDq1lLIS6Mo3EZbi3zpkdN2gSan823tv2RjGByaa&#xA;9ucOf+l6/A8+nc+rdA13S9f0Wy1rSpxc6dfxLPbTLtVGHcHcMOjA7g7HNs+fo/FWLax+ZHlnSfNe&#xA;neWLiR31LUHWMmIIY4Gk2hWdiylTKxAQKCdxWgIOQOSIkI3uW2OGRiZgekMpybU8i/5yS893nl/y&#xA;lbaFpczW+r+ZZHtkuEPF4bSJQ11Ih7NxZYx4cqjcZXlnwxJc7s3RnU544+/n7ur5o0+G3tfRiiUJ&#xA;DFQKo6AZpchMge99c0uKGIRjEVGL2P8ALLztoWl6TqHl7VXubFdVlThq1mVV4agLVmJ5KFpWoB6n&#xA;bHSZ4xiYysX1Dru3+yc2bLDPiEZ+GD6Jcj+u/h0TP8w/zD8m3Wh6lovlyGaSXVJopr6/cMEkaFlI&#xA;I9Ql6n01/ZGWanU4zExh15lw+xOxNXDNDNqCAMcSIx6i77tup6l4tqt9JaGK90+4EOt6XIl9pzKR&#xA;6iSxHkp41+y32WrsQco0cpRmD0dv7Q6bFqdPLGSPEiOKI62P0Hk+0/KuvQeYfLOk67AvCLVLSC8S&#xA;OtePrxh+JPivKmdC+NppirsVdirsVdirsVfM/wDzkt56udV8wr5Ds5imk6ckV1ryqSPXuJB6lvbv&#xA;TqiJSRh0JK+GY2py8Iocy9F7O9ljU5TKf93D7T0H63lenhFuEFAAAQo7dM0+X6X0/TACQe/flL5o&#xA;0GPyymixammh6vFc/W7y5ljVkuIEcFl5v8ArH8G5qOozK0eWPBw3wyu3kvaXs/MdR4xh42Ix4YgE&#xA;+mVdw357/egPzf8AMfli80W103T9U/TV+t7Lcm7c82hikB/dK6qqFKkUAO3HIa3LAxAB4jbk+zGh&#xA;1GPNLJkh4UOARr+cR1q7v9bBvyq8zzeU/wAy9MmRyul+ZZo9K1WAdDNJUWc4H8yy/AT/ACscs7Nz&#xA;HeB+Dh+2nZkQBqYjcnhl+g/o+T62zbPnzsVdirsVdirsVSrzZ5gtvLnljVdeuRyh0u0mu2StC/pI&#xA;WCD3YjiMVfDsdzf301xq2pyGfVtUka7v5m6mWX4io8FT7KjoBmoz5OKT6t2NoRptPEV6pby9/wCz&#xA;kz78vvO915V1UaraQpc84Wt54HJWqMVYgMK8TyQHpmHiynDO3a9p9mw1+AY5Hho3Y7xt+lmmufnd&#xA;BB5eGkeXNLh0myaFlumm4skZlqZREv2ePJj8TfcMyJa708MI06LB7LiOU59Vl4zE3fLYcjI/q+bx&#xA;efVdVm1C1tdK02e9S4dY0kSJ2M0kisY47dfhMhIQkla7ZTh0wntfq7v19zkdoe1OPDMCA4sfWX3C&#xA;PK/M7j3vYf8AnGPz5ZabNd+Q9UnW3lvZf0p5a5MpimhuU5TRQuPhqsiM4Xru3hm40uUTh5jY/B85&#xA;7TETnlKAqEvUPj7vN9BarfJp+l3l+/2LSCSdq9KRoXP6syXXvh2xv9dvtStLiOV59du54vQmY8ne&#xA;+mkX03JNfiM7Kc00bllvrb1mSMcemIPLh/H2vaJf+cqdTveUmheTy1oSRHcahfLA54sVIaCKKYqa&#xA;ju+Z+XWY4GjzcLQezWr1WMZICPAeRMv1W8y/Mz8x9T88+adMub/R/wBDmxsZ4o41uhdxyF5Y2Z1P&#xA;pwlT0FCMozZ45Ienvd52J2Rm0eqIyjnA1vfWLHcw3sFn6T1lpoLXS7J7+SeeOziIrwNxLXhCpUMz&#xA;OaV4qNhv0ww08Zmr3511dR2j7R/lfTEcfx2Hle+/kzXRfLOlSaJHq/mC/LxtHzuI/UNrbQsDR0Yg&#xA;pJVG+Fubdf2Rmm1GpyRyHHCNEHuuX49wdfLtLLnxieTJUSOUTwxHx5/M/Bjdr5ENn5kltbbQ01fS&#xA;728t2Or3IL+hAqk3cLoAIg7GSq8wHFF49c209aBpyMhMMoHLcG+leXe8xHSk6gGHrxk78j778+57&#xA;F/zjr52vNH1u8/KvW52lFnzl8s3UpBZ4FAka29+MbCRfAcl/ZGbTRaoZsYl1dbrNMcMzHo+g8y3E&#xA;dirsVdirCPzq1LzVpf5aa1qfleZrfVbKNJzNGiSOtvHKpuWQSK6VWDmakfLfAeWzKHDxDi+nq+db&#xA;X8yvzRMaXdj51vGMgDhpobOeI1AH920IAFOwzTntHJE1IB9I/wBBmlyYxLHknuOexH3D72FSanqm&#xA;ravq+q6tMlxqd7ePJczRrwQnggUKu9AFAoMnnycZB8m/sPRflsc8d8REzv8AALi4jHMtxC7liaUp&#xA;3rlFW7oyEdyapfp+t6jfX8NhaWDSSTMiJPMwhiIkJCSV+NyjcTRlTehpleTBGMDMnYd2/wAPf8XU&#xA;T9q4CfhwgZy77AB8+pr4MsvvJHmddMnlgv7b68qVht1ifhyqOsrMxO1f91jNZDX4uIAxPD7/ANH7&#xA;WvUdr6wxPBwRPTY/eT/vWDWdzdtplvrEGpfpO+00W+rXVmImRojDeBTDz4oiuoRZKgMOLe1T0Mox&#xA;w5IbbS2+z7XlMvbGp1ennDIeLkeXmOVUB8i+7fLnmDTPMWg2GuaXJ6thqMKXFu/Q8XFeLDsynZh2&#xA;ObN5pMcVdirsVdirGPOv5meSPJaQ/wCItTS0nuATbWaK81xKBt8EMSu9K7cqU98BIHNlCEpGoiy8&#xA;U/Nz/nIHyt5l/L/XdA03StbjnvYBHFdzWaJB8MisQ1ZfUCsqkV4ZV+Yxk0JB2P8AJGriOKWKfCP6&#xA;JeOqysoZTVWFQfY5qH1eJBFhwXUp5VstLBfUrjaCNRXYfaZqlQFUdSTT9WCRhEcU/pDh67WnDCoH&#xA;95L6ev6vmf2Jx+W0Gj3F/bjVLoavq1yZ2tYnkDi3a2k4EPa8F9J5B8UbNy5KNuBqMx+1ceSOIShU&#xA;YHnXPfvP4+Lx2l7RlqMhjmlKZG4v6fl+n7k81i90rzZ5iPlW4abSrrTL8r+kizRNbyRI6+s1VCiM&#xA;ykRL+8DEsKdq16LS5NPDxgQTIfT5e/v+Dia7W48x8Mg0D9X7O5EfmV+Wkfljypp3pzOlxo00b6fq&#xA;UZIlBluFDsCKFWV5BItO4A6VyvR63J+ZJP8AH+gbfqbZ4cWTAIj+Gh5+o/gvUF/M3/EX/OPOsapq&#xA;MsUOufUb3SL6NWC8r1V+rM0Y2+36qSADpyzqhMGPEO63nvCIycB53TzL8hfLn6a/MmymkXla6LG+&#xA;ozV+yZF/dQKff1JPUH+pmDooXInud52xlqAj3/oTH8//AMvU8l6pJ5t0S5i/R+u3YFx5faonN5L8&#xA;UktmAGDK27yKacT0O9BdqtNGYs7Uz9n+282ml4UQZxkfpHO/L9TyXUl1ZWt9RvI0iiiejoG5uqSD&#xA;ieVAFFCQxoT065r8RhvGL3Gr/MAwzZAIxidxdkCW2/QVsTV8uakbk3LlhyGnQMGuXUkPLGjD1RER&#xA;uAE5fEOp2HjkiOH+seXl3W6ntDtOUrjj+gfVLv7+H9fXp3vVbzyvpGu+XbfSkP1OOzkSaze2ovpu&#xA;oIR1p7Of15z2PWZMGY5OZPO3D1Oihlx8HIcxTM0/Kny5a/lauhXtne6xEUWZxaGIXdWk9asQkZI/&#xA;hLV4719zTMjFqpSz+LtGR+XKnQ6jaPhC+CP62R/l9oNtpmh3djHpkthpbzl4Evm53c4aNBJNc/E4&#xA;DM6kKNvhA2GDWZDklcjxGt+74NOG48tnhlhqh1X869An0Q+qBrllBZyR7mS1tmb65IPFPSeWp6cQ&#xA;Dm47JwyxgA9xJ+PJye08gnjMj1Ir4Df8e59M/mv5+Hkrym+pQrHJqdxKlrpsEoJRpXNWZlUoSsca&#xA;s53FaUqK5uMs+GJLpdPhOSYiOrxP8rPN3mHzH+bmjXesX813NyuUXm1EVDZztxSJOMaCqj7K70Fa&#xA;nfMLTZpzybnp+p23aGkx4sI4RvxDfryL6ezYujdiqycwLBIZyogCkyl6cAlPi5V2pTrXFXwxqdpp&#xA;WoeZdUvPKQk0vyfPOx0y2ko7soNHkhVgPRhkbdEbkQPDNRrM0BKgLk+j+zGh1ksFynwYT9Iq5fC9&#xA;gPffu6pLIzabf3FqWku5pissNQoZjxCNUqFVQoRamnfIg8cQeTm5s40eScZGU5SqUeVnbhPIACuE&#xA;Xt172Q+SbG2n1gvqyJdSxok9tGRWJOLlZKIdmK1Qhm332pmBrskhCobDke/y/S6nxp58h8XfawOg&#xA;79utbbn7GcH8t9W1vzmLzTdXktLHUGtZNXsxy9OUWDiSJiAQp4lfhr9k796ZiaXtPgwHDw3z39/e&#xA;63XaIeKMxPKtvcmX5heVIYPMX1i385QaXb2NjxvdKlbldVkJpPbwBk9SV6hY/wDK2FScv0AhCFHH&#xA;xmR5/jk63VarJOV8XDXQMi8+eSfKeg6Bqmo2dnDZW9zFKNSVFCh1Mbkknr47V75rzLJKcNySCKdh&#xA;pcsamJAbxJJr713/ADiZq92/lbWfL9wxYaRdxTwA9ETUIRM0ajwEwkb/AGWdtgnxRt57V4uDIR7v&#xA;tFvdcucZ2KuxV2KvLPzx/Ki+832tnrfl9o080aQrpBHK3CO7tnIZ7Z3/AGW5LyjY7A9etRVmwjJH&#xA;hLsOzO0cmjzDLD4jvHc+Y7/UdUiv7nQ7rS7i11q2PC8sJ04NHUVBZm+DgwNVIJqOlc089J4RuR2f&#xA;TNL7QR1keHFGUp9R3e8/TX2+ST291LZWxs5463luwiigDV5hq+nRiBtxFC1OxOWyiJHiHIuNDVnT&#xA;YjDIP3kPSBfP+bv7tif6JLNPy5uksrq4hnCvezATG4AoZIhRWjFa09JzsPBgepOantKJmAR9I+z+&#xA;39DqcOSUpy8TeZ3vy7v839Pfb07yZ5O0E6/earpsMdprNxbTNb31C4Sd6ASCJy0dQTyPw798wIar&#xA;JKoTNwj0cLXaeEImURUpcywnzXqP5mX2hy6X5lWPQ5yDbaprs0Mv1ejtwdorm4c20SyINxaqrt0F&#xA;fs50eHUY4msURX+y/X83Xfk9MdPx5Mx8XpER2v38vj97vzw/N/Q9dsdO0/Rkup9L5m5mvGtZ4kuG&#xA;j+KOKH1UTkAV9Rj7Cld6Yej0JEiSRxDzG19/3McOXh3IlR35Het9vvPuYfp/l/zFL5Y+sX6Wul2z&#xA;rNP6N67epNJO5leSNQQIfg4IoNWPDl8NaZdqNdiMo44cUuHqOX7W3TYMoEsk+EcfQ8/h3PQP+caV&#xA;1iXz6v1WR4rUW81xqchcgXNvEZLeGN4lAQMk8nIGg+y1OtM2GkB4jR9I6ebi9pSHCLFyv6vIeXvR&#xA;n/ORGptP+bFra3D0tdJ0iN7SI7gTXk8nrSDbYlIUX6MHaJPCAOrvPYrFDx55Jc4x2+P9lfF5H5g1&#xA;yGWyu4LSN7uSGF5Jo4VMhRAKF5eNQiDluWzF0ulldvSdudu4MeKUL4pEEVz6de4KllEsXoRAAonF&#xA;OPYgbUplczdl5+EQAAn/AJX/ADD8tWukWcU2orDcW0QhcSK/xen8A+LjxbkFrscwdV2dllMkRsFh&#xA;pu0MIxgSlyFdemz0XS/+cjNBhsordNPvdVeMBEks4WC0Gw5tP6Sj51yqPZ2QbSMY+8/qtxp6Q5pX&#xA;hjOd90TXzNBKNe/MTz550c6WmhXOm+V5oZpNQj0+7hXUruGFazxW1xNG1v6iRn1HgUcnQEBqcs2u&#xA;g0OIHiJ4q+AcDtLRZ9NUZ1GUuUQbP2fg3te9dE/JDyz+S+k6VN5t8uaq9/OqC3u9S1aWNJ7IMQDb&#xA;tFxhS2qw/lq38xGbqEYgbOnzTmZVO7G3ueZfn153i8xed5oLeYNpHl9Xs4XB+Bp61u5a+zKsf+wJ&#xA;75g6zJZEQ7vsnBwxOQ9fueqfkD+V76Dpv+JtYgKa5qcYFrBIKPaWjfEFIPSSXZn8BRexrlafDwDz&#xA;dZrtWc09vpHJ6/l7hOxVhP51tqo/KjzQulQy3F7LYSQpFApeQpLSOUqq1J4xsx2xSOb5R0+LzBdp&#xA;HZ6J5e1S7aMLGkcNjcniBQLyLIiKPdjTNKNBMmy+pS9q9FixiOM2IigAD099JRfadruneaNR07Xr&#xA;T6jqVgkCPal0lZPrEYuPiaMslWR0qAdumWZ8XhgRdD/KZ1uQzqhHYfpPx2Rul65pmk6zZy39wtvH&#xA;JFcx82BI+IwnegPEEp16Zg5sEskCIi+X6US1EMeSJka2l/vXqvlD8zvKulXiy3Wq2htmQxNIJ4qq&#xA;pIP83YjNR+TyiViMvkWWsniywoTj8wyzUvzq/JyJlu59Ytru4tQWiMMElzKhOxCmON+NenUZkw0W&#xA;c7AEX37fe6E1ffXdv9zDvOcH5tfmjY6ZceW/L3/OlXQW5tZHvrJHnYMQr3SiVmRUpX0lDEH7W/wj&#xA;c6bsrw9yfV93uaYa6MTyv9Pvexfk5+WZ8h+WpLW8uEu9b1GX61qtzECIvU4hEii5fF6cSKFWu53O&#xA;1aDbQgIig4ObKckjKXMs8ybW7FXYq7FXYq+FtK1Z9Rt59evn5X+s3E19duSSWeWRiAK12VaKo7DN&#xA;BrDKeUjufXvZjFjw6GB6zsnz3/UkdzfWt55gieIcjHHMplAqvIGOsYfoWUMCw7V98uGOUcW/e6Tt&#xA;bW4c2qEYEGURK/s2tGtrUWimDU5QzLazAmNKcnWRWR1FSOx5f7HKPBOW4DqHXajOMQEz0P37fj3P&#xA;R/IOk+evOdvql1p+tp5cnsIPrNpp9pGLi4nVg3wm4dgkZqAKqh64MGgwm/4px79h+Pe2a/Hnx+Ec&#xA;9Qw5ZUeHcgeZIrz27kp8p2trfancSeYry61vUNO4S6fc6pcPdelFNWojRyVDiSMmvGtONM1+uzZO&#xA;ECFRjLmIiuX9rk5uxsWm1BjvLYGJlvsfsux9yj+ZHmLTJxHpaTRC7SSG5fnIiNFFDKkjOeRHxN9l&#xA;VG5rXoDkuy9JPefSj8b2Y5NRjjlxwMgJccTz5CJ4vtqh71vljRPNPnvy7b6N5dsZbsabeusWon4L&#xA;CJQGCpNcNRWEcU9OEXJ6Bds2WHs+fjGfSQ3+y6+IdZr9fhxkxgb4ZnhrcVvQvyBrbufS35TflZYe&#xA;QNCNv6/1/WLpY/0lqJXiH9IHhFGv7MacmI7lizHc5uoYxEUHmcmWUzZRPm38ovy683atFq3mLR0v&#xA;tQhiECzetPFWNWLKrpFJGkgBY/bByVMYzI5HmrXf5ceSB5Q1HynaadbaTpWrwvazJaRxwszOhAeo&#xA;HxyL9oFq9MLF8mfmB+XWq+R/M+leX9Y1mK/sr9WnmnsYmivPqcbBGJEpaNJJNwvEtShPzwcmCEPU&#xA;XoNBkz6yXgxIjtz/AB+hmHmnTfyau9K0PS/Ldrd21/e6rpdnHZSFxEEa5jEvNuTndA24atcrwyw5&#xA;Mli+J2naOPtLSaUQycHhRMaIq7Bsfd3Pd7P8sPyy0aGO5k0u2iWNQS93I8kfTeondk/DMn8riG5A&#xA;+LqP5e7Qy+gTl/mgA/7EWwn86PO3ke+8n3Hl3SHW71KPjJpktnxWC1nj+wwlA48WUsjLHXkjMu1c&#xA;oz6zEBwjf3Oy7L9nNdkyDNL0GJ4hx8zIbjbnz539rxbTdAsZPLsWvfpVdOvtUK3UiyzMtk5RCIIJ&#xA;4iVVnij5Ub7StyIqM0c9ZkjM4QDKA2oc/f8AP7G7UcOfJ+aNRyS3F8uVAe+vttR/KSybU/POhwmw&#xA;/SCpfJcGxEDrE0AZTLI5LFAtq0laVpVVU15UzcYInxBQvv35f2up1eQeCYmVd23Py59PsfbebR0D&#xA;sVdirsVdir5U/wCcl9DspvPrXnllpTrwtIpPM8carNHwACWpVPtG49JSSo/YC9yOWFrMuKNCfM8n&#xA;a9lwykkxNQH1bX9nVJfKC/lTZeSdQl18XVz5nmXlY6nD++a4lFRBZ28Srxj5s9CpG53LCgpjwlDL&#xA;+7IMS9Pm0+bs4jWYpxzY5CpXXXu/ZuOoIt6H+Xn/ADjH5ck0KK98zNONeuiZ71IDB6UUkpLGJOcU&#xA;h+BSFPxdQabZmS0okALls6HB29PFKUhjxSMpGXqjfPu35M8sfyJ/LbToJPrdvJe2wU81vZQIgtPi&#xA;5LGIUIp15CmQhoscTxbk+bdqfabWZ4eEOGMZbVGPO+m9/Y84/IXztpvlXzf5q/L681CD9AWDzahp&#xA;mpyTIsCqjoktZWKp++SSOai/CrF6bZkQmDy5Ol1OnliIE7E+oPMH+yj8Xqf5gfnB5V8n2EbmVdT1&#xA;O7iE1hp1q6sZI3FUleQcljhPZz1/ZDY5MggLLXg088sqiHzD5w8++ZvNmoNf65dK0a/7z2SfDa26&#xA;+EaMTuf2nb4j40oBrMuolM7be56PT9n48UfUBI95fQP/ADjv5RudH8r3Os3PKOTXGjeGDootoAwi&#xA;k4jYNKZGavdOGZ+mjIQ9V2XRa7JCWQ8AAiNtuvm9XzIcN2KuxV4jpn/OJ/ki3vnfUNT1G/0sSO9v&#xA;pAdbeERuSRFK8IWWQCvZ1yvwo3dbuce0tR4QxcZEB0G39vxd5v8AJH5bfmFp9l5Y8m6jBo+r+WGn&#xA;k0r0bWQWjR8liu0SqxR3CFwokeF2KvSpr1ZCM7i4+LJPFITDENc/Ia08m+StW8w+aNUXVL2kNhbx&#xA;28LRWtqmo3MdlNNxLO8sginbiT9negLUORx4Y4xYb8uoy6mQj3mgB3lV0DQvJvl7U5rryJ5/XRYr&#xA;hCHsb+2/SEARfiEaFjBOi1H85PzyHi4geKw7OfZ/aOSAxGM5RjyHd8WO6T5Q8jaNqE15rPmy61xD&#xA;EIlstFtnsC558v3s87FuP/GJlPv2zBnk0wG/qd9LsvtXVyBmI4tqu/1cR+5HaJ5m8oj8xfK1kvl7&#xA;TbLQbqZ9J/RTxLcNKL0rwmnkmV2mlW4SL94/QEivxb3aTVSyTIqo04Xb3YGHRaaMuPizGW99R5Dy&#xA;2/XyD6ms7GysoRBZ28dtACSIoUWNKnqeKgDNi8crYq7FXkvmLy5pfm/zt5lh1iMT/omG0sNIdgC1&#xA;m8sH1p7m2brHMXlX4x8XwLvmj7V1U8c4iJrr73N02OJiSXmXn3XJPNPmny/o/mWxWS+0bTr2C9nP&#xA;CS1uZ/WtAbi2YHkpYJVlZVZDtuNzHXa4TwCWM0eIX8i7PsvRGGasg2MTXzHJhX5oaDpeiLomoWcU&#xA;qxJdssiCWWT4jEzRlRI5VeLLXbMPsjUTymUSd+HyHV3GqzjFkxzyGUscZcrMt6NbE9Clb+cLZ1Vz&#xA;DczuQKmidvEu4zN/IZCejv8A/Rdo4x2Ez7oj9YSy/wBc1G9UxKBaW7bMFblKw8C1AF+j78y8OhjE&#xA;3LcvP9p+1eXPEwxDw4nr/Ef1fjd6l5J/5x98w+a/y60PWbPzAti0wu3i0+7tuaJHJcyLG8csbqaN&#xA;EquvJG69abZkHSQMjLqefweXh2hkgBHoLr4vafyo/J9fJU0uo316l9qklutlAtvG0NvbWwYO6Rh2&#xA;kd2kdVZ5GO9BsO88GnjjutyeZadTqpZSL2A5B6Rl7jOxV2KuxVgXnnUdfvPNGn+WdJ1WbRYjY3Gp&#xA;Xt9apC9wxSWOGCJfrEc0YQl3Z/hqaAVFTmB2hqzggDEbkt+DEJnd4j5QuNR1F77VtXlWfWb27uZb&#xA;+VF4qZVmaGiqSSqpHEqKOwGcz2xmM8vlt91vXdlYxDTiut/e8l8x+YdPuvPt5qNtblLa1dFs7i2A&#xA;TnJGXRrk8SPUJcMFcb0GbzRaeccAF+rr5eXl7nEwa7TR1MjljcP4e69wZEdfIsy0X83NchtRFH5l&#xA;voqH7Ek060psKc8jljnB24nqtNm7Iyx3GK/ONfoCD1j8x579ON3qV7qzLusbvLKK/wCtKeA+/IDT&#xA;Zp/VfxLdLtrszSgnEI8XdCNfbQH2sdttVinN/NdrFDewTWtzYOUMiJUSRTKzEr1jCnqKkDwGWZdO&#xA;YGIG4IIP2EPJZe0Dq80spAjRjXWuY3+HuZV+XXkLV/O2tLp9pPbWTTwyX0924dx6SSJGSsShasPV&#xA;QBGddv2tsnhxjJIi/pcfNqjgxgiI9ZPufSfkn8i/I/lgx3MsH6Z1ZKML+/CvwYd4YaelFQ9CAX/y&#xA;jmzx4ow5B0WfVZMv1F6JljjuxV2KuxVL/MU1xD5f1Oa2ZluYrSd4WX7QdY2Kke9cVeQMlrYfl95S&#xA;1TTbpLHVtHs7SfRpAqyq4a3SKWJ4y8bSQyJJSTi1RswNQM5HFq5Yc8pc7Jv5u7x6Q5wIj59zCvzX&#xA;/NLz35i8galpV1pWnWluRBPcXFvPPNKRaTx3FUjeKNV3h3qzbZuYdq48hEKPq2T/ACTmwfvQY+j1&#xA;dem/c8VsvMWoxSKxjhlqKAjkgNf+Dy3JohIVbutP7XZYG5QifdY/WjZvMWsSArH6MAP7QVnYfIsQ&#xA;v/CnIQ7OgOZJbNR7Y6iQqEYx+0/q+xGeQ9Ju9a/MPy5YxM01/dalaytK55N6VpKLmZu2yRRMaCgz&#xA;OxwERQGzyms1WTNIzySMpF965a4DsVdirxv83W1vyrrFz5jtFf8AQGtQRW+r3KAt9TuLZZESaTj8&#xA;SRyxyKvOtFaMV+1mp7V0csoEo/VF2fZebHGdZPp/T5vGPMGq6ZKttq1vqlmbyzkaWN5rhAkyOCss&#xA;bPU/bG4O/wAQGaTBjnZgYyqXly7i9PqMuOhOMo3HluKI6j8dWG+fPOeqa7DZWTac9rDaSC4PrMVe&#xA;UmMqhTYArxeobvm47O7OGCRkTuQ6DtHtAZwBEUAe9CeUvLvmzzNJdwaFo89+9hGst2FeCMRo/Lix&#xA;aSRBQ8Gzb06vjpIG1JrtAiMsMclBQNWVqivEAfZr9Jwck3b7o/IXVF1D8pvL3USWMDadIjgq6mxk&#xA;a3AdTQg8Ywd8MZWAWmceGRHcz/JMXYq7FXYq7FXnH5q3L+XdT0nzq0bS6dZw3Om6txJpHFdNFLBO&#xA;9A1FSa3EZb9n1KnYHNd2npzlxenmN3K0chxgE0C8O1fSRf6pfX1nfXOnW+pSPNdWtqYhG7SVLsvN&#xA;JGjaStX4MKnfrvnNjUbDiiJEcib/AF7/ABexhoRGNRlIRPMCv0jb4PO/zEttItLvTrfSvT+sWlu0&#xA;M9pGwLLBGy+nXfZuUjH4uu+brsmeSXEZcibvzdL2xjxxMRCriKry6Mbsr5Wk9EJJ6jVIT03LfCCx&#xA;6A1oBXbNxTphIKl3qlvbSPC4b6wn2oWUoQf8ovxC40njD1L8g/yrPnRdUvzq6adqNpNCzo1mLhxb&#xA;zIRFJbvJJGEPKKReZRgafPMfLghm5k0O4/e24tTkwcgLO4scvc+qfJ3kHyt5QsVtdFskilKKlzfM&#xA;qm6uCtSXnlABdmYlj2qdgMyoxAFBw5SMjZLIcLF2KuxV2KuxVxAYEEVB2IPQjFXzp5o8hedPLV5+&#xA;j7bTrvW/LURpo9zZKJ5LeGgVLaa3B9QGJEVBIikMoFaNtmh1vZUpTM4dej0PZva2PHDgmOXUfpSR&#xA;9C863MFx9W8r3wiijd57jUUFjbJGqlmZ2nIkYUHRI2PtmNi7Hyk+oiLm5u3MIHpBl9z56hhukiQx&#xA;uFqoLROKhWI3CkHpXOkDzBBZ55h/LnXND/LjQ/O0+qWstrrc0dvHapDJ6kReCeZuTsyj4Tb8enev&#xA;zTVWgSN0l35VavHpX5ieX9a9Rpxb39utzdgF1ihnkEErMVHFFEcrYDIAgWy4CYk1dP0Ayxx3Yq7F&#xA;XEAih3B6jFUui8t+XYZ1ni0uzjnU8llSCJXDeIYLWuKvmL80/K+ma9+bXm035kWSC4sY4ZEkZOKH&#xA;TbViKbrTkT2zSdp6zJhmOHlT0HZOhx5sZMuYkmn5aWOl+QPNFtInKbRvMAj0fUS8jFkluJVW2mqT&#xA;9n1G9NgtKc+XY5X2X2pLLkMJ8zy/UvanZsccBOHIc/1sY0DUdO0O1g0TXJ4rXU9JQWV5ZzusMivb&#xA;/uuXBypKtxqp6EGua/X6TL4kqB3N8nbaDWYzhiOIAgAc+56F+S/mBH/MSaw8vSC40a+s5rjW4YWV&#xA;4IbmNoxbz/ByVJJAWQitXFD+xm17G8YQMcl0OVuk7aGLiEoEGR509/zdOkdirsVdirsVWTQwzwyQ&#xA;TxrLDKpSWJwGVlYUZWU7EEdRirBH/If8qHnaYaH6YatbeK6vIrYVNaLbxzLCo9gmVnDAmyBfubRn&#xA;mBQka97yj88fIvlaLzRoGh2emRadpUGmXc9vHZL9XHrPcQq7n06B24qteVeu/bMHtPUTxQBj3ux7&#xA;I00M2SQn/N/Sxry/5Xs/JWqWHnHSud3daNKbqWCSQn1LdoXhuIk6IHMUrFSV+0AOhOanS9szOURn&#xA;9J2/a7PWdkQGI8F8Q33+5MPM2oaVZ+eNakvZ0ittWuY9X0mWdhEtxaXltE6yQl6Vo3JDToRlva+n&#xA;yHJxRBql7E1OMYjGRAPF1Rfl3zLYW3nzy7P5emV9XuL23sLq2gcOZ7C4lC3AljQsWSFGMwY/ZK1r&#xA;uQa+xhnhko3wHmvbQxSx8VjjHLfd9P507yzsVdirsVdirsVdirsVY9+Y0k0X5e+aJIVLTJpN80ag&#xA;8SWFs5ADdt++KvlPTPy28qXkMTsrrzRHP7+WjEgE0o46+xzkMvaueFi/sD2keytOQDX2lll5PdN+&#xA;XEXloQvcN5F1W21NZYQ0hfS7361CshQcmrbtM6uB+wob2zcY8x1WlND1cviP1ukljGl1YJ+m7+B/&#xA;UlSeaPJE9hJHd3ljc28qlZQ80LIVYbqwZs506XOJXESB9xellqcMo7yiY+8PdPyJ1XVdS/L+CS+a&#xA;WaCC5uLfSrufkZJ7GN6QOWb4n4qeAc/aC13rXOz05kcYM/qrd4fURgMkhDeN7PQsuaXYq7FXYq8R&#xA;/OT/AJVd/iNvrX6X/wAXehH9Z/QHH1PSofR+s/Wf9CrSvHn8fH2pmHq/Ar97X6f1udovzF/ub/R+&#xA;phXk/wDwh/ijRf8AEP8AiD6v9ct/qv139FfVPrvrL9V+s/Uv33H1uNKfDypy2rmJpPynifu/q+P6&#xA;XN1353wv3v0dfp/Q+jtb/wAK/u/079R/4q+vej7/AGfV+nNu6REaP+hfqQ/Q31b6lyNPqfp+ly/a&#xA;/u/hr44qjcVdirsVdirsVdirsVeZfnb/AMq6+p6b/in67+lazfoT9E8/r9Pg+senT936f2OfrfBX&#xA;j3plGo8Ph/eVw+bkaXxeP91fF5PC7n9F+o/1v/FH+H+DfWa/oX656VTy/u9v7vrx+LwzUw/I8Yrn&#xA;/nO7yfyhwG+Vf0bfUcP+Df8ADOm+p9U/QH1eD9HfW+Hpej6a+jT1v8inXfN684raH/hD1Zf0F+j/&#xA;AFeI9b6j6PLjXbl6W9K+OKpxirsVdirsVdirsVdirsVU7r6t9Wl+tcPqvBvX9Wnp+nT4ufLbjTrX&#xA;FXy7rv8Ayqn1X/wb/ij0Kn0f0d9V/R9K7+n+l/j4Urw9P4fDbNVqfyfF66vyv9DutJ+e4R4fFw+d&#xA;f756P+Qf+EfW1n9H/pX/ABD6dt+k/wBNfVvV9Csvo+h9T/celz9Tp8VftdsytH4PB+6+n8d7ha7x&#xA;+P8AffVXly+Gz0e4/wAIfpIfWP0f+k96ep6Pr969fjzLcJOMVdir/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:E6A8D89E8514E411846E9A58BC82E63C</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:E6A8D89E8514E411846E9A58BC82E63C</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:E5A8D89E8514E411846E9A58BC82E63C</stRef:instanceID>
            <stRef:documentID>xmp.did:E5A8D89E8514E411846E9A58BC82E63C</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:63874799FF12E4119767B49514B84AF3</stEvt:instanceID>
                  <stEvt:when>2014-07-26T01:05:24+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:E5A8D89E8514E411846E9A58BC82E63C</stEvt:instanceID>
                  <stEvt:when>2014-07-26T12:33:58+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:E6A8D89E8514E411846E9A58BC82E63C</stEvt:instanceID>
                  <stEvt:when>2014-07-26T12:34:10+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>700.000000</stDim:w>
            <stDim:h>300.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=63 G=169 B=245</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>63</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>245</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=122 G=201 B=67</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>122</xmpG:red>
                           <xmpG:green>201</xmpG:green>
                           <xmpG:blue>67</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=29 B=37</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>29</xmpG:green>
                           <xmpG:blue>37</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=123 B=172</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>123</xmpG:green>
                           <xmpG:blue>172</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=189 G=204 B=212</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>189</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -159.84 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 159.84 li
543.404 159.84 li
543.404 0 li
cp
clp
[1 0 0 1 0 0 ]ct
127.855 106.008 mo
126.345 108.632 123.779 110.427 120.819 110.93 cv
115.1 111.901 105.482 109.404 97.5449 102.844 cv
97.0605 103.024 96.5913 103.149 96.1353 103.218 cv
94.8608 103.406 li
93.9526 102.492 li
91.187 99.71 79.873 83.9775 84.373 76.1519 cv
84.6772 75.6221 85.0503 75.1372 85.4824 74.7119 cv
89.4893 70.7524 97.0205 75.8794 104.992 81.3096 cv
106.267 82.1772 107.493 83.0122 108.615 83.7407 cv
109.878 84.5596 li
109.878 84.5596 109.763 86.1494 109.759 86.1943 cv
112.348 87.5625 114.511 88.4336 116.615 89.2803 cv
119.327 90.3711 121.886 91.4014 124.617 93.2813 cv
129.814 96.8594 129.938 102.386 127.855 106.007 cv
127.855 106.008 127.855 106.008 127.855 106.008 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.75021 .679683 .670222 .90164 cmyk
f
86.9927 77.0171 mo
85.2822 79.1382 87.1372 87.5605 94.7295 96.5 cv
103.091 106.341 114.824 109.361 120.391 108.415 cv
126.211 107.426 129.459 99.7119 123.171 95.3818 cv
116.88 91.0498 111.584 91.6572 99.5942 82.6826 cv
93.001 77.7485 88.9912 74.5391 86.9927 77.0171 cv
cp
.0250248 .567285 .998169 0 cmyk
f
85.7241 76.6206 mo
83.8696 79.8447 86.4141 88.6777 93.7573 97.3242 cv
102.417 107.518 114.669 110.682 120.605 109.672 cv
123.19 109.233 125.431 107.666 126.751 105.371 cv
128.611 102.137 128.451 97.4678 123.894 94.3301 cv
121.28 92.5313 118.898 91.5732 116.14 90.4648 cv
112.069 88.8291 107.453 86.9717 100.357 81.6626 cv
99.418 80.9575 li
92.9482 76.106 88.6748 72.9009 86 76.2163 cv
85.8994 76.3408 85.8076 76.478 85.7241 76.6206 cv
85.7241 76.6206 li
cp
86.8301 77.2568 mo
86.8799 77.1694 86.9336 77.0889 86.9927 77.0171 cv
88.9912 74.5391 93.001 77.7485 99.5942 82.6826 cv
111.584 91.6572 116.88 91.0498 123.171 95.3818 cv
126.984 98.0059 127.291 101.874 125.645 104.735 cv
124.576 106.594 122.683 108.026 120.391 108.415 cv
114.824 109.361 103.091 106.341 94.7295 96.5 cv
87.397 87.8662 85.4155 79.7144 86.8301 77.2568 cv
86.8301 77.2568 li
cp
.75021 .679683 .670222 .90164 cmyk
f
94.7324 96.498 mo
87.1372 87.5566 85.2842 79.1357 86.9927 77.0205 cv
87.1768 76.7837 87.3911 76.6016 87.6226 76.4707 cv
86.9863 79.5176 89.1948 87.4766 102.238 97.3936 cv
117.911 109.305 127.473 101.548 123.96 95.9961 cv
129.163 100.401 125.946 107.474 120.393 108.418 cv
114.828 109.363 103.094 106.339 94.7324 96.498 cv
cp
.101595 .727993 1 .0109865 cmyk
f
96.0977 78.582 mo
97.9487 79.6577 99.9038 80.9487 101.805 82.229 cv
99.9331 88.2422 95.0239 93.4668 91.6748 95.249 cv
90.4409 93.3232 89.1958 91.1055 88.1689 88.8672 cv
90.9663 86.7988 94.2661 82.9902 96.0977 78.582 cv
cp
0 0 0 0 cmyk
f
101.805 82.229 mo
103.728 83.521 105.584 84.8135 107.227 85.877 cv
106.862 91.0615 100.05 100.057 95.7588 100.697 cv
94.7769 99.71 93.2495 97.7119 91.6748 95.249 cv
95.0239 93.4668 99.9331 88.2422 101.805 82.229 cv
cp
0 .970642 .96051 0 cmyk
f
87.2764 76.5264 mo
88.8208 75.002 92.2349 76.3301 96.0977 78.582 cv
94.2661 82.9902 90.9663 86.7988 88.1689 88.8672 cv
85.9443 83.9888 84.7954 78.9824 87.2764 76.5264 cv
cp
f
87.2764 76.5264 mo
87.3984 76.4009 87.5337 76.3013 87.686 76.2241 cv
87.1963 77.9126 87.6899 81.502 91.0391 86.2822 cv
90.0762 87.3066 89.0928 88.1826 88.1689 88.8672 cv
85.9443 83.9888 84.7954 78.9824 87.2764 76.5264 cv
cp
.132235 1 1 .0386358 cmyk
f
91.0391 86.2822 mo
92.2476 88.0166 93.8281 89.9063 95.8643 91.9219 cv
94.4141 93.4209 92.9336 94.5791 91.6748 95.249 cv
90.4409 93.3232 89.1958 91.1055 88.1689 88.8672 cv
89.0928 88.1826 90.0762 87.3066 91.0391 86.2822 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
95.8643 91.9219 mo
97.4429 93.4766 99.292 95.1006 101.455 96.7959 cv
99.5313 98.8955 97.4526 100.446 95.7588 100.697 cv
94.7769 99.71 93.2495 97.7119 91.6748 95.249 cv
92.9336 94.5791 94.4141 93.4209 95.8643 91.9219 cv
cp
.132235 1 1 .0386358 cmyk
f
85.4795 76.7856 mo
85.4795 76.7866 85.4795 76.7871 85.4795 76.7871 cv
81.6143 83.5063 91.7847 98.5029 94.8569 101.594 cv
95.1421 101.881 95.5469 102.016 95.9468 101.956 cv
99.5322 101.423 103.748 96.6895 106.149 92.5195 cv
107.13 90.8135 108.334 88.293 108.498 85.9707 cv
108.531 85.5068 108.309 85.0635 107.921 84.8105 cv
106.796 84.0801 105.57 83.2461 104.273 82.3638 cv
97.0781 77.4629 89.6396 72.3965 86.3784 75.6177 cv
86.0293 75.9644 85.7271 76.3564 85.4795 76.7856 cv
85.4795 76.7856 li
cp
86.5835 77.4233 mo
86.7725 77.0938 87.0015 76.7949 87.2739 76.5254 cv
90.3057 73.5298 100.562 81.5547 107.227 85.8799 cv
107.104 87.6064 106.266 89.7588 105.044 91.8818 cv
102.6 96.1309 98.6206 100.27 95.7607 100.694 cv
92.5278 97.4434 83.2622 83.1997 86.5835 77.4233 cv
86.5835 77.4233 li
cp
.75021 .679683 .670222 .90164 cmyk
f
133.259 93.1221 mo
130.264 91.3242 li
147.723 67.5449 li
147.937 67.2539 148.052 66.9014 148.052 66.5391 cv
148.051 53.3755 li
148.051 52.7778 147.738 52.2246 147.226 51.9175 cv
146.714 51.6108 146.078 51.5942 145.552 51.876 cv
133.937 58.0713 li
133.618 58.2417 133.361 58.5098 133.204 58.8359 cv
120.443 85.4331 li
117.448 83.6367 li
116.644 83.1538 115.599 83.415 115.116 84.2202 cv
112.503 88.5762 li
112.02 89.3818 112.281 90.4258 113.086 90.9092 cv
116.759 93.1123 li
110.809 105.515 li
110.429 106.306 110.714 107.257 111.467 107.707 cv
113.152 108.719 li
114.837 109.729 li
115.59 110.18 116.563 109.985 117.082 109.277 cv
125.224 98.1885 li
128.897 100.394 li
129.702 100.876 130.747 100.614 131.229 99.8086 cv
133.843 95.4541 li
134.325 94.6484 134.064 93.6045 133.259 93.1221 cv
cp
f
114.026 107.262 mo
115.712 108.271 li
146.352 66.54 li
146.352 53.3755 li
134.736 59.5718 li
112.341 106.25 li
114.026 107.262 li
cp
.280522 .914061 1 .298253 cmyk
f
145.19 55.3105 mo
145.191 68.1211 li
146.352 66.54 li
146.352 53.3755 li
134.736 59.5718 li
133.888 61.3403 li
145.19 55.3105 li
cp
.215396 .82446 1 .119539 cmyk
f
129.771 98.9355 mo
113.96 89.4512 li
116.574 85.0942 li
132.385 94.5791 li
129.771 98.9355 li
cp
f
131.997 95.2246 mo
116.187 85.7412 li
116.574 85.0942 li
132.385 94.5791 li
131.997 95.2246 li
cp
.144869 .807401 1 .0376593 cmyk
f
124.946 96.6992 mo
124.874 96.6563 124.813 96.5908 124.776 96.5088 cv
120.876 87.7246 li
120.781 87.5107 120.877 87.2598 121.092 87.165 cv
121.307 87.0703 121.558 87.165 121.653 87.3799 cv
125.553 96.1631 li
125.648 96.3779 125.552 96.6279 125.337 96.7246 cv
125.207 96.7822 125.061 96.7686 124.946 96.6992 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
118.204 92.6553 mo
118.089 92.5869 118.009 92.4648 117.999 92.3213 cv
117.982 92.0879 118.158 91.8848 118.392 91.8672 cv
127.977 91.1729 li
128.21 91.1563 128.414 91.333 128.431 91.5674 cv
128.448 91.8018 128.272 92.0049 128.038 92.0225 cv
118.453 92.7148 li
118.363 92.7217 118.276 92.6982 118.204 92.6553 cv
cp
f
119.934 98.9385 mo
119.187 100.799 116.72 101.558 114.424 100.635 cv
112.128 99.7119 110.873 97.457 111.621 95.5977 cv
112.369 93.7363 114.835 92.9775 117.13 93.9004 cv
119.427 94.8232 120.682 97.0781 119.934 98.9385 cv
cp
f
118.686 98.4365 mo
118.073 99.96 115.833 100.496 113.682 99.6318 cv
111.531 98.7676 110.285 96.8311 110.897 95.3066 cv
111.51 93.7822 113.75 93.2461 115.901 94.1113 cv
118.052 94.9756 119.298 96.9121 118.686 98.4365 cv
cp
.0250248 .567285 .998169 0 cmyk
f
43.7021 136.777 mo
41.9219 136.924 40.0894 136.925 38.2554 136.786 cv
32.7959 136.371 28.4214 133.819 25.604 129.406 cv
20.7944 121.876 21.688 111.028 23.2349 106.896 cv
24.4004 103.78 26.3452 101.891 28.5703 101.708 cv
31.2285 101.491 33.3564 103.478 34.8945 107.617 cv
37.0659 113.459 42.8315 114.251 47.2856 113.886 cv
48.9663 113.748 50.7207 113.411 52.3599 112.909 cv
56.2451 111.719 58.7285 111.145 60.6631 110.987 cv
63.6875 110.739 65.8096 111.581 66.9692 113.494 cv
68.4604 115.951 68.271 119.407 66.4502 122.975 cv
63.5161 128.724 55.7988 135.788 43.7036 136.777 cv
43.7026 136.777 43.7031 136.777 43.7021 136.777 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
64.7896 114.816 mo
63.499 112.69 59.7622 113.31 53.1064 115.347 cv
46.2939 117.432 35.8618 117.539 32.5039 108.505 cv
30.0435 101.884 27.0225 104.051 25.6226 107.789 cv
23.5532 113.319 22.9805 133.065 38.4492 134.244 cv
57.3296 135.684 68.2397 120.505 64.7896 114.816 cv
cp
.101595 .727993 1 .0109865 cmyk
f
27.7285 122.26 mo
26.7153 121.857 26.7007 124.91 27.3037 127.274 cv
23.5918 120.688 24.3013 111.336 25.6226 107.789 cv
27.0225 104.051 30.0435 101.884 32.5039 108.505 cv
33.8501 112.131 36.3291 114.28 39.2627 115.431 cv
38.8906 116.716 35.5601 115.309 34.8789 115.841 cv
33.7021 116.782 36.6406 119.962 35.4043 120.489 cv
34.168 121.018 31.71 118.805 31.0879 119.854 cv
30.1572 121.404 32.2075 124.879 30.9365 124.982 cv
29.6655 125.087 29.0513 122.792 27.7285 122.26 cv
cp
.00985733 .0806592 .600977 0 cmyk
f
69.5254 159.441 mo
64.9736 158.946 60.7485 157.779 58.2227 156.325 cv
54.6284 154.253 54.3765 146.623 57.2607 127.167 cv
57.4009 126.219 li
58.5293 118.504 63.231 115.243 67.3887 115.435 cv
67.5854 115.442 67.7769 115.458 67.9668 115.479 cv
72.1997 115.939 74.8467 119.087 75.8335 124.834 cv
76.2002 126.971 76.3691 129.546 76.5483 132.271 cv
76.8135 136.298 77.2129 142.383 78.5181 143.746 cv
81.687 147.055 84.4575 152.452 81.8379 156.774 cv
79.9551 159.879 74.1035 159.938 69.5254 159.441 cv
69.5254 159.441 li
cp
.75021 .679683 .670222 .90164 cmyk
f
67.272 117.981 mo
63.8491 117.825 60.7549 120.906 59.9238 126.587 cv
59.0918 132.269 55.9546 152.075 59.4956 154.115 cv
64.5244 157.014 77.8335 158.46 79.6567 155.452 cv
81.48 152.443 79.2769 148.225 76.6768 145.509 cv
73.7764 142.482 74.3677 131.368 73.3198 125.266 cv
72.5352 120.692 70.6748 118.139 67.272 117.981 cv
cp
.101595 .727993 1 .0109865 cmyk
f
76.6768 145.509 mo
77.959 146.846 79.1494 148.557 79.7974 150.304 cv
75.7295 155.479 63.9189 149.766 66.4487 147.176 cv
68.5664 145.004 73.5503 144.384 76.5239 145.34 cv
76.5781 145.396 76.623 145.452 76.6768 145.509 cv
cp
.0250248 .567285 .998169 0 cmyk
f
73.3198 125.266 mo
73.9331 128.828 73.9829 134.109 74.4995 138.484 cv
69.5737 141.479 61.605 140.22 58.3662 138.474 cv
58.8535 133.602 59.5859 128.91 59.9238 126.587 cv
60.7549 120.906 63.8521 117.823 67.272 117.981 cv
70.6748 118.139 72.5352 120.692 73.3198 125.266 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
64.3984 140.771 mo
61.7368 140.482 59.3081 139.755 57.6953 138.865 cv
57.3813 138.693 57.2666 138.297 57.4399 137.982 cv
57.6138 137.669 58.0098 137.556 58.3237 137.727 cv
61.4351 139.444 69.4829 140.905 74.4414 137.705 cv
74.7441 137.511 75.146 137.598 75.3398 137.899 cv
75.5347 138.2 75.4478 138.602 75.1465 138.797 cv
72.1309 140.744 68.0464 141.168 64.3984 140.771 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
100.647 153.724 mo
96.0684 153.724 91.7417 153.021 89.0737 151.848 cv
85.2764 150.178 84.2012 142.619 84.9653 122.965 cv
85.002 122.007 li
85.2905 114.216 89.6113 110.466 93.7661 110.207 cv
93.9629 110.193 94.1548 110.188 94.3452 110.188 cv
98.6035 110.188 101.575 113.03 103.177 118.639 cv
103.773 120.722 104.219 123.264 104.692 125.955 cv
105.391 129.93 106.445 135.934 107.891 137.149 cv
111.398 140.096 114.736 145.162 112.599 149.742 cv
111.063 153.033 105.252 153.724 100.647 153.724 cv
100.647 153.724 li
cp
f
93.9253 112.752 mo
90.5054 112.966 87.7627 116.364 87.5503 122.102 cv
87.3379 127.839 86.3594 147.868 90.1006 149.514 cv
95.4131 151.851 108.8 151.851 110.288 148.663 cv
111.775 145.476 109.129 141.52 106.25 139.101 cv
103.04 136.404 102.427 125.292 100.726 119.339 cv
99.4502 114.877 97.3252 112.539 93.9253 112.752 cv
cp
.101595 .727993 1 .0109865 cmyk
f
106.25 139.101 mo
107.67 140.291 109.038 141.863 109.871 143.53 cv
106.387 149.115 94.0273 144.711 96.2627 141.863 cv
98.1328 139.476 103.021 138.319 106.08 138.948 cv
106.14 139 106.191 139.051 106.25 139.101 cv
cp
.0250248 .567285 .998169 0 cmyk
f
100.726 119.339 mo
101.72 122.815 102.34 128.06 103.326 132.352 cv
98.7534 135.862 90.6953 135.473 87.2866 134.086 cv
87.2446 129.19 87.4653 124.447 87.5503 122.102 cv
87.7627 116.364 90.5083 112.964 93.9253 112.752 cv
97.3252 112.539 99.4502 114.877 100.726 119.339 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
93.5313 135.717 mo
90.8545 135.717 88.3613 135.259 86.6621 134.548 cv
86.3311 134.41 86.1743 134.028 86.313 133.698 cv
86.4517 133.367 86.833 133.211 87.1636 133.348 cv
90.4429 134.719 98.6011 135.302 103.185 131.584 cv
103.464 131.357 103.874 131.4 104.099 131.679 cv
104.325 131.958 104.282 132.368 104.004 132.594 cv
101.216 134.854 97.2012 135.717 93.5313 135.717 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
75.9883 131.972 mo
59.1362 131.972 54.3433 122.55 53.2891 114.646 cv
49.8281 88.6875 63.6787 69.9829 72.3735 68.4482 cv
73.2017 68.3022 74.0513 68.2275 74.8989 68.2275 cv
90.0898 68.2275 104.782 92.584 105.959 107.879 cv
107.095 122.643 95.6299 129.648 84.5215 131.282 cv
81.3691 131.745 78.5781 131.972 75.9893 131.972 cv
75.9883 131.972 li
cp
f
103.414 108.078 mo
104.442 121.381 93.7832 127.34 84.1528 128.759 cv
75.6699 130.009 58.0835 131.309 55.814 114.309 cv
55.6948 113.442 55.6016 112.592 55.5249 111.751 cv
62.7075 115.193 89.7881 118.126 102.504 102.681 cv
102.972 104.577 103.287 106.396 103.414 108.078 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
98.8496 92.6768 mo
100.456 96.0508 101.705 99.4766 102.504 102.681 cv
89.7881 118.126 62.7075 115.193 55.5249 111.751 cv
55.1846 108.028 55.2104 104.509 55.5249 101.21 cv
65.8354 103.098 86.354 102.825 98.8496 92.6768 cv
cp
.132235 1 1 .0386358 cmyk
f
92.8398 82.6724 mo
95.1436 85.749 97.1836 89.1836 98.8496 92.6768 cv
86.354 102.825 65.8354 103.098 55.5249 101.21 cv
55.9585 96.6113 56.9443 92.4561 58.2705 88.8008 cv
68.1899 89.7871 82.3252 88.9287 92.8398 82.6724 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
84.0679 73.9683 mo
87.2212 76.0933 90.2051 79.1528 92.8398 82.6724 cv
82.3252 88.9287 68.1899 89.7871 58.2705 88.8008 cv
59.7915 84.5591 61.7725 80.9893 63.8462 78.1841 cv
70.0513 78.5669 77.6333 77.6572 84.0679 73.9683 cv
cp
.132235 1 1 .0386358 cmyk
f
72.814 70.9595 mo
76.6133 70.2876 80.4551 71.5205 84.0679 73.9683 cv
77.6333 77.6572 70.0513 78.5669 63.8462 78.1841 cv
67.0166 73.9004 70.4165 71.3843 72.814 70.9595 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
102.504 102.681 mo
102.972 104.577 103.287 106.396 103.414 108.078 cv
104.332 119.986 95.8916 126.013 87.1958 128.156 cv
77.438 129.039 72.2954 122.725 70.1538 114.462 cv
80.9653 114.811 94.5483 112.347 102.504 102.681 cv
cp
.574731 .695186 .633936 .604669 cmyk
f
102.504 102.681 mo
94.5483 112.347 80.9653 114.811 70.1538 114.462 cv
69.1333 110.587 68.7847 106.269 68.938 102.078 cv
78.9082 101.763 90.6211 99.3574 98.8496 92.6768 cv
100.456 96.0508 101.705 99.4766 102.504 102.681 cv
cp
0 .970642 .96051 0 cmyk
f
98.8496 92.6768 mo
90.6211 99.3574 78.9082 101.763 68.938 102.078 cv
69.0996 97.2588 69.9155 92.6006 71.1221 88.9199 cv
78.5176 88.334 86.3628 86.5225 92.8398 82.6724 cv
95.1436 85.749 97.1836 89.1836 98.8496 92.6768 cv
cp
0 0 0 0 cmyk
f
92.8398 82.6724 mo
86.3628 86.5225 78.5176 88.334 71.1221 88.9199 cv
71.9385 86.4463 72.9243 84.415 74.021 83.0718 cv
79.2485 76.6543 84.7905 76.314 88.6494 77.7935 cv
90.1196 79.2725 91.5225 80.9126 92.8398 82.6724 cv
cp
0 .970642 .96051 0 cmyk
f
72.1558 115.15 mo
64.3735 115.143 57.6899 113.644 54.7314 112.19 cv
54.4106 112.031 54.2798 111.638 54.4404 111.308 cv
54.6011 110.979 54.9937 110.841 55.3145 110.998 cv
61.9043 114.235 89.6357 117.714 102.413 101.866 cv
102.638 101.587 103.045 101.549 103.324 101.778 cv
103.603 102.007 103.646 102.421 103.422 102.699 cv
95.6631 112.333 82.8936 115.16 72.1558 115.15 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
54.2354 130.943 mo
51.209 130.836 48.4243 129.406 46.5947 127.025 cv
43.0625 122.424 40.7729 112.755 42.8638 102.671 cv
42.4785 102.327 42.1479 101.971 41.8755 101.599 cv
41.1123 100.562 li
41.4961 99.3311 li
42.6616 95.5859 51.2817 78.23 60.3032 78.5493 cv
60.9136 78.5713 61.5161 78.6738 62.0942 78.8564 cv
67.4688 80.5483 66.4551 89.6025 65.3818 99.1885 cv
65.2104 100.721 65.0454 102.194 64.9253 103.527 cv
64.7915 105.027 li
64.7915 105.027 63.3335 105.668 63.2925 105.686 cv
63.292 108.613 63.5337 110.934 63.769 113.188 cv
64.0718 116.095 64.3579 118.84 63.9727 122.133 cv
63.2383 128.4 58.4116 131.093 54.2368 130.943 cv
54.2358 130.943 54.2358 130.943 54.2354 130.943 cv
cp
f
60.7627 81.2695 mo
58.0874 80.749 51.5098 86.3252 47.1567 97.2158 cv
42.3643 109.209 45.1792 120.992 48.6177 125.472 cv
52.2124 130.153 60.5518 129.42 61.4399 121.836 cv
62.3286 114.251 59.3164 109.853 61.6445 95.0576 cv
62.9243 86.9229 63.8877 81.8779 60.7627 81.2695 cv
cp
.0250248 .567285 .998169 0 cmyk
f
60.5205 79.9629 mo
56.8027 79.8301 50.1836 86.209 45.9731 96.7432 cv
41.0098 109.162 43.9399 121.473 47.606 126.249 cv
49.2036 128.329 51.6362 129.575 54.2813 129.67 cv
58.0107 129.803 62.063 127.479 62.7065 121.983 cv
63.0757 118.833 62.8091 116.279 62.5 113.322 cv
62.0439 108.958 61.5264 104.011 62.9043 95.2549 cv
63.0869 94.0967 li
64.3521 86.1094 65.1875 80.832 61.0063 80.0181 cv
60.8506 79.9873 60.6865 79.9697 60.5205 79.9629 cv
60.5205 79.9629 li
cp
60.4751 81.2383 mo
60.5752 81.2412 60.6714 81.2515 60.7627 81.2695 cv
63.8877 81.8779 62.9243 86.9229 61.6445 95.0576 cv
59.3164 109.853 62.3286 114.251 61.4399 121.836 cv
60.9014 126.435 57.625 128.513 54.3267 128.396 cv
52.1851 128.319 50.0327 127.316 48.6177 125.472 cv
45.1792 120.992 42.3643 109.209 47.1567 97.2158 cv
51.3608 86.6992 57.6406 81.1367 60.4751 81.2383 cv
60.4751 81.2383 li
cp
.75021 .679683 .670222 .90164 cmyk
f
47.1597 97.2178 mo
51.5127 86.3252 58.0908 80.75 60.7598 81.2715 cv
61.0562 81.3237 61.3159 81.4272 61.54 81.5708 cv
58.5493 82.4336 52.5459 88.1045 49.876 104.271 cv
46.6733 123.695 57.9995 128.521 61.2656 122.822 cv
59.8027 129.479 52.0469 129.942 48.6167 125.474 cv
45.1792 120.996 42.3682 109.209 47.1597 97.2178 cv
cp
.101595 .727993 1 .0109865 cmyk
f
63.6357 90.0508 mo
63.5508 92.1885 63.3228 94.5215 63.0796 96.8008 cv
56.8892 97.9561 49.9741 96.0586 46.8354 93.9307 cv
47.9604 91.9395 49.3379 89.8037 50.8374 87.8496 cv
53.9727 89.3555 58.8823 90.4922 63.6357 90.0508 cv
cp
0 0 0 0 cmyk
f
63.0796 96.8008 mo
62.8354 99.1055 62.5601 101.35 62.3887 103.299 cv
57.6353 105.4 46.4985 103.583 43.9272 100.088 cv
44.3408 98.7578 45.3916 96.4756 46.8354 93.9307 cv
49.9741 96.0586 56.8892 97.9561 63.0796 96.8008 cv
cp
0 .970642 .96051 0 cmyk
f
61.3291 81.291 mo
63.3979 81.9438 63.8203 85.583 63.6357 90.0508 cv
58.8823 90.4922 53.9727 89.3555 50.8374 87.8496 cv
54.1104 83.6021 57.9985 80.2451 61.3291 81.291 cv
cp
f
61.3291 81.291 mo
61.4976 81.3403 61.6479 81.4131 61.7886 81.5122 cv
60.0664 81.8682 57.1245 83.9824 54.4639 89.1777 cv
53.1079 88.8057 51.874 88.3457 50.8374 87.8496 cv
54.1104 83.6021 57.9985 80.2451 61.3291 81.291 cv
cp
.132235 1 1 .0386358 cmyk
f
54.4639 89.1777 mo
53.4956 91.0566 52.564 93.3379 51.7339 96.0801 cv
49.7305 95.498 48.0142 94.7305 46.8354 93.9307 cv
47.9604 91.9395 49.3379 89.8037 50.8374 87.8496 cv
51.874 88.3457 53.1079 88.8057 54.4639 89.1777 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
51.7339 96.0801 mo
51.0972 98.2021 50.5259 100.596 50.0381 103.301 cv
47.2827 102.581 44.9414 101.468 43.9272 100.088 cv
44.3408 98.7578 45.3916 96.4756 46.8354 93.9307 cv
48.0142 94.7305 49.7305 95.498 51.7339 96.0801 cv
cp
.132235 1 1 .0386358 cmyk
f
60.2598 79.8237 mo
60.2593 79.8237 60.2588 79.8247 60.2588 79.8247 cv
52.5122 79.5488 44.0088 95.5488 42.7129 99.709 cv
42.5923 100.097 42.6626 100.518 42.9023 100.844 cv
45.0493 103.764 51.2031 105.277 56.0142 105.45 cv
57.9795 105.52 60.77 105.407 62.9004 104.466 cv
63.3252 104.278 63.6147 103.875 63.6563 103.413 cv
63.7749 102.078 63.9399 100.604 64.1147 99.0449 cv
65.0835 90.3945 66.085 81.4497 61.7119 80.0728 cv
61.2441 79.9258 60.7554 79.8418 60.2598 79.8237 cv
60.2598 79.8237 li
cp
60.2124 81.0977 mo
60.5913 81.1113 60.9629 81.1743 61.3291 81.2886 cv
65.3945 82.5688 63.0938 95.3867 62.3857 103.301 cv
60.8018 103.999 58.5083 104.264 56.0591 104.175 cv
51.1616 104.001 45.6421 102.419 43.9302 100.09 cv
45.2935 95.7119 53.5532 80.8623 60.2124 81.0977 cv
60.2124 81.0977 li
cp
.75021 .679683 .670222 .90164 cmyk
f
68.4648 3.60693 mo
68.4644 3.60693 68.4614 3.60693 68.4614 3.60693 cv
62.4595 3.60693 53.5049 4.56055 44.9302 9.10254 cv
36.2173 13.7173 30.0195 20.8862 26.5078 30.4106 cv
25.0293 34.4209 24.332 38.8545 24.4229 43.6357 cv
24.3579 43.6157 24.2925 43.5957 24.2275 43.5776 cv
21.4058 42.7583 18.2959 42.3423 14.9858 42.3423 cv
10.8833 42.3423 6.54785 42.9717 2.10107 44.2134 cv
1.87891 44.2749 li
1.21582 44.4556 .653809 44.8965 .320801 45.4976 cv
-.0126953 46.0977 -.090332 46.8071 .106934 47.4653 cv
2.4541 55.314 7.98584 60.3789 13.5308 63.0894 cv
13.4219 63.1807 13.3135 63.2729 13.2065 63.3657 cv
5.06494 70.4106 5.55371 82.8599 6.42871 87.0625 cv
6.67676 88.2529 7.72559 89.0928 8.92383 89.0928 cv
8.98584 89.0928 9.04883 89.0908 9.11182 89.0859 cv
17.2793 88.4863 25.2251 85.7471 30.8555 81.8193 cv
30.7988 83.4038 30.8833 84.9941 31.2188 86.6289 cv
32.25 91.6572 35.7017 94.6592 40.4521 94.6592 cv
46.0591 94.6592 52.8301 90.0156 54.5615 83.1582 cv
57.5083 83.9858 60.6782 84.4038 64.0249 84.4038 cv
66.5903 84.4038 69.3135 84.1577 72.1187 83.6719 cv
83.5444 81.6924 92.6792 78.2681 99.3057 73.4854 cv
100.47 74.042 101.749 74.3301 103.087 74.3301 cv
106.358 74.3301 109.76 72.646 112.419 69.7085 cv
115.399 66.417 116.873 62.168 116.463 58.0518 cv
115.725 50.6489 109.228 40.9419 104.313 35.2437 cv
104.403 34.9248 104.431 34.5884 104.391 34.2515 cv
102.887 21.5503 94.8706 10.5078 83.9688 6.11914 cv
80.0029 4.52295 74.3516 3.60742 68.4648 3.60693 cv
68.4648 3.60693 li
cp
f
32.2998 60.335 mo
34.9971 57.9077 32.2998 48.5762 23.5171 46.0264 cv
14.0942 43.29 4.10791 46.3101 2.5498 46.7349 cv
7.0835 61.8931 25.2168 66.71 32.2998 60.335 cv
cp
0 .970642 .96051 0 cmyk
f
23.5142 46.0288 mo
32.3027 48.5786 34.9971 57.9121 32.3027 60.3345 cv
25.3071 66.6245 7.57666 62.0176 2.74854 47.3462 cv
5.97852 52.5996 13.9175 60.4365 22.0859 54.3843 cv
25.248 52.0386 23.9644 48.4341 21.9331 45.6294 cv
22.46 45.7397 22.9868 45.876 23.5142 46.0288 cv
cp
.132235 1 1 .0386358 cmyk
f
14.9858 43.6172 mo
10.999 43.6172 6.7793 44.231 2.44336 45.4419 cv
2.21436 45.5049 li
1.88281 45.5952 1.60205 45.8154 1.43506 46.1157 cv
1.26855 46.4165 1.22998 46.7715 1.32861 47.1001 cv
4.71582 58.4277 15.3081 64.3535 24.0205 64.3535 cv
27.7095 64.3535 30.9526 63.2627 33.1528 61.2832 cv
34.4829 60.0859 34.9087 57.9287 34.3218 55.3647 cv
33.4697 51.644 30.2217 46.6455 23.8726 44.8018 cv
21.165 44.0156 18.1753 43.6172 14.9858 43.6172 cv
14.9858 43.6172 li
cp
14.9858 44.8921 mo
17.7114 44.8921 20.6406 45.1909 23.5171 46.0264 cv
32.2998 48.5762 34.9971 57.9077 32.2998 60.335 cv
30.2603 62.1714 27.3047 63.0786 24.0205 63.0786 cv
15.9014 63.0786 5.77832 57.5288 2.5498 46.7349 cv
3.63232 46.4395 8.78223 44.8921 14.9858 44.8921 cv
14.9858 44.8921 li
cp
.75021 .679683 .670222 .90164 cmyk
f
35.8418 63.5933 mo
33.4336 57.6431 22.4741 58.7173 14.8755 65.293 cv
7.5083 71.668 8.21729 83.1431 8.92529 86.543 cv
24.3667 85.4102 40.8564 75.9819 35.8418 63.5933 cv
cp
0 .970642 .96051 0 cmyk
f
35.8389 63.5898 mo
40.854 75.9829 24.3638 85.4092 8.92773 86.5391 cv
8.74951 85.7061 8.5791 84.3892 8.52002 82.7827 cv
17.1133 80.6836 26.5996 78.0996 28.3081 70.7046 cv
29.6255 64.9927 26.1064 61.1841 23.2251 60.5889 cv
28.8774 58.7871 34.2412 59.6372 35.8389 63.5898 cv
cp
.132235 1 1 .0386358 cmyk
f
28.5967 58.4136 mo
23.835 58.4136 18.2573 60.6802 14.041 64.3286 cv
6.36475 70.9717 6.84424 82.8047 7.67725 86.8037 cv
7.80078 87.3975 8.3252 87.8174 8.92432 87.8174 cv
8.95557 87.8174 8.9873 87.8174 9.01855 87.8145 cv
18.8926 87.0908 31.0674 82.8027 36.0098 74.8579 cv
38.2954 71.1836 38.646 67.1226 37.0239 63.1152 cv
35.8145 60.127 32.7427 58.4136 28.5967 58.4136 cv
28.5967 58.4136 li
cp
28.5967 59.6885 mo
32.0044 59.6885 34.77 60.9458 35.8418 63.5933 cv
40.8564 75.9819 24.3667 85.4102 8.92529 86.543 cv
8.21729 83.1431 7.5083 71.668 14.8755 65.293 cv
19.0928 61.6431 24.3447 59.6885 28.5967 59.6885 cv
28.5967 59.6885 li
cp
.75021 .679683 .670222 .90164 cmyk
f
98.1304 32.6743 mo
102.838 36.3193 113.062 49.6401 113.925 58.3047 cv
114.949 68.5801 101.481 77.5176 96.8413 67.2363 cv
93.876 60.6646 96.249 53.1982 92.0537 43.4106 cv
87.7686 33.4121 93.1177 28.7939 98.1304 32.6743 cv
cp
.280522 .914061 1 .298253 cmyk
f
98.127 32.6753 mo
102.836 36.3218 113.062 49.6411 113.929 58.3032 cv
114.523 64.312 110.163 69.8711 105.513 71.3843 cv
116.87 65.1372 111.251 53.2456 105.36 42.9434 cv
101.884 36.8652 98.4927 32.9302 95.8916 31.4941 cv
96.6221 31.7065 97.3789 32.0977 98.127 32.6753 cv
cp
.215396 .82446 1 .119539 cmyk
f
94.6187 30.0308 mo
94.6187 30.0308 li
92.8784 30.0308 91.3789 30.8525 90.3955 32.3442 cv
88.6729 34.9561 88.8506 39.1729 90.8818 43.9126 cv
93.0723 49.022 93.4116 53.5791 93.7109 57.6001 cv
93.9771 61.1719 94.2285 64.5454 95.6792 67.7607 cv
97.2227 71.1816 99.8511 73.0649 103.08 73.0649 cv
105.949 73.0649 109.085 71.4932 111.47 68.8594 cv
114.211 65.8311 115.568 61.938 115.194 58.1787 cv
114.26 48.8027 103.426 35.1621 98.9111 31.6665 cv
97.5293 30.5967 96.0444 30.0308 94.6187 30.0308 cv
94.6187 30.0308 li
cp
94.6182 31.3057 mo
95.7178 31.3057 96.9336 31.748 98.1304 32.6743 cv
102.838 36.3193 113.062 49.6401 113.925 58.3047 cv
114.628 65.3628 108.493 71.79 103.08 71.79 cv
100.612 71.79 98.2939 70.4556 96.8413 67.2363 cv
93.876 60.6646 96.249 53.1982 92.0537 43.4106 cv
88.7915 35.7998 91.1128 31.3066 94.6182 31.3057 cv
94.6182 31.3057 li
cp
.75021 .679683 .670222 .90164 cmyk
f
34.0708 57.5718 mo
37.1245 65.7837 44.6958 85.834 71.6836 81.1592 cv
98.6709 76.4844 107.596 64.3716 108.021 55.2344 cv
108.417 46.7012 104.511 46.1367 98.4585 29.3091 cv
89.7461 5.08447 64.2461 5.93408 48.7334 14.4341 cv
31.7021 23.7661 27.9082 40.9966 34.0708 57.5718 cv
cp
.0250248 .567285 .998169 0 cmyk
f
79.3418 10.3711 mo
65.5801 9.14746 51.8105 15.9639 51.0288 37.2905 cv
50.5098 51.6816 58.5337 78.4224 81.1357 79.0342 cv
78.2627 79.8501 75.1177 80.564 71.6836 81.1592 cv
44.6958 85.834 37.1221 65.7827 34.0708 57.5718 cv
27.9082 40.9966 31.6992 23.7676 48.7334 14.4341 cv
57.3779 9.69971 69.1333 7.33691 79.3418 10.3711 cv
cp
.101595 .727993 1 .0109865 cmyk
f
69.6172 7.73779 mo
62.3198 7.73779 54.6855 9.71875 48.1206 13.3159 cv
31.7925 22.2627 25.9512 39.3906 32.876 58.0156 cv
35.6704 65.5313 42.2148 83.1313 63.9966 83.1313 cv
66.4976 83.1313 69.1572 82.8906 71.9009 82.415 cv
84.4097 80.2485 94.0767 76.3564 100.633 70.8462 cv
105.96 66.3696 109.036 60.8462 109.294 55.293 cv
109.538 50.0669 108.209 47.5137 106.009 43.2827 cv
104.409 40.2075 102.218 35.9937 99.6582 28.8774 cv
93.043 10.4839 77.9971 7.73779 69.6172 7.73779 cv
69.6172 7.73779 li
cp
69.6172 9.01318 mo
81.4268 9.01318 93.1089 14.4351 98.4585 29.3091 cv
104.511 46.1367 108.417 46.7012 108.021 55.2344 cv
107.596 64.3716 98.6709 76.4844 71.6836 81.1592 cv
68.9224 81.6372 66.3667 81.8564 63.9966 81.8564 cv
43.1953 81.8564 36.812 64.9438 34.0708 57.5718 cv
27.9082 40.9966 31.7021 23.7661 48.7334 14.4341 cv
54.7212 11.1538 62.1934 9.01318 69.6172 9.01318 cv
69.6172 9.01318 li
cp
.75021 .679683 .670222 .90164 cmyk
f
42.5708 52.6841 mo
46.3628 57.2744 53.4082 72.5171 52.3457 81.1592 cv
51.0859 91.4082 35.9834 97.168 33.7168 86.1182 cv
32.2686 79.0552 36.2246 72.2925 34.2832 61.8218 cv
32.3003 51.126 38.5332 47.7969 42.5708 52.6841 cv
cp
.280522 .914061 1 .298253 cmyk
f
42.5708 52.6841 mo
46.3618 57.2744 53.4082 72.5146 52.3457 81.1592 cv
51.7339 86.1406 47.8662 90.0508 43.7778 91.5029 cv
53.3745 86.7354 50.3145 74.9629 46.7529 64.4819 cv
43.9648 56.2627 40.6836 51.2988 38.0913 50.5254 cv
39.562 50.3042 41.1938 51.0181 42.5708 52.6841 cv
cp
.215396 .82446 1 .119539 cmyk
f
38.5981 49.2061 mo
38.5977 49.2061 li
37.0903 49.2061 35.6831 49.9004 34.6362 51.1592 cv
32.7241 53.4585 32.1533 57.3286 33.0298 62.0542 cv
34.043 67.5195 33.3726 72.041 32.7808 76.0293 cv
32.2554 79.5723 31.7593 82.918 32.4683 86.373 cv
33.3682 90.7627 36.353 93.3838 40.4521 93.3838 cv
45.9741 93.3838 52.7368 88.4268 53.6113 81.3145 cv
54.7612 71.9629 47.1904 56.2744 43.5537 51.8726 cv
42.1333 50.1523 40.3735 49.2061 38.5981 49.2061 cv
38.5981 49.2061 li
cp
38.5972 50.4814 mo
39.9307 50.4805 41.3506 51.2075 42.5708 52.6841 cv
46.3628 57.2744 53.4082 72.5171 52.3457 81.1592 cv
51.5679 87.4902 45.5059 92.1094 40.4521 92.1094 cv
37.3242 92.1094 34.5835 90.3408 33.7168 86.1182 cv
32.2686 79.0552 36.2246 72.2925 34.2832 61.8218 cv
32.8999 54.3584 35.5171 50.4814 38.5972 50.4814 cv
38.5972 50.4814 li
cp
.75021 .679683 .670222 .90164 cmyk
f
34 68.5513 mo
36.9902 63.3184 70.4082 30.4434 101.858 34.5513 cv
100.583 23.7842 93.9253 12.876 83.0171 8.48486 cv
72.0137 4.05566 39.2417 3.24316 28.9004 31.293 cv
23.457 46.0576 30.8833 63.3101 34 68.5513 cv
cp
0 .970642 .96051 0 cmyk
f
99.5552 25.646 mo
100.728 28.5273 101.501 31.5444 101.858 34.5537 cv
98.1187 34.0605 94.353 34.0947 90.6128 34.5454 cv
95.4751 32.335 98.4668 29.4712 99.5552 25.646 cv
cp
.132235 1 1 .0386358 cmyk
f
48.895 29.9126 mo
53.1108 40.2993 63.1494 41.0049 73.5107 39.2544 cv
52.8813 47.8906 36.0767 64.9072 34.0029 68.5537 cv
30.8833 63.3091 23.4541 46.0542 28.9028 31.29 cv
34.0029 17.4434 44.5684 10.6348 55.2871 7.8125 cv
49.3794 12.3433 45.1631 20.7153 48.895 29.9126 cv
cp
f
68.4644 4.88184 mo
62.6064 4.88184 53.8726 5.80957 45.5278 10.228 cv
37.1006 14.6914 31.104 21.6304 27.7041 30.8525 cv
21.0435 48.918 32.7847 69.002 32.9043 69.2026 cv
33.1343 69.5898 33.5503 69.8262 34 69.8262 cv
34.0039 69.8262 34.0073 69.8262 34.0112 69.8262 cv
34.4644 69.8223 34.8818 69.5781 35.1069 69.1836 cv
37.7461 64.5649 66.9932 35.4717 96.3223 35.4717 cv
98.1411 35.4717 99.9482 35.5879 101.693 35.8154 cv
101.749 35.8228 101.804 35.8262 101.858 35.8262 cv
102.192 35.8262 102.514 35.6958 102.754 35.4585 cv
103.034 35.1821 103.171 34.792 103.125 34.4009 cv
101.674 22.1563 93.9688 11.519 83.4932 7.30225 cv
79.728 5.78662 74.1099 4.88184 68.4644 4.88184 cv
68.4644 4.88184 li
cp
68.4644 6.15674 mo
74.4746 6.15674 79.7227 7.15967 83.0171 8.48486 cv
93.9253 12.876 100.583 23.7842 101.858 34.5513 cv
100.016 34.3105 98.1719 34.1968 96.3223 34.1968 cv
66.6025 34.1968 36.8149 63.6245 34 68.5513 cv
30.8833 63.3101 23.457 46.0576 28.9004 31.293 cv
36.1455 11.6411 54.3989 6.15674 68.4644 6.15674 cv
68.4644 6.15674 li
cp
.75021 .679683 .670222 .90164 cmyk
f
101.894 55.8296 mo
104.994 62.0757 100.503 70.6138 91.8623 74.9038 cv
83.2217 79.1938 73.7026 77.6074 70.603 71.3618 cv
67.5024 65.1157 71.9941 56.5767 80.6353 52.2866 cv
89.2759 47.9966 98.7939 49.584 101.894 55.8296 cv
cp
.00985733 .0806592 .600977 0 cmyk
f
90.5562 50.7607 mo
91.168 52.6992 89.3354 55.0078 86.4624 55.9131 cv
83.5894 56.8198 80.7646 55.9814 80.1533 54.0415 cv
79.541 52.1025 81.3735 49.7939 84.2461 48.8882 cv
87.1196 47.9819 89.9438 48.8203 90.5562 50.7607 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
89.8481 50.9844 mo
89.7886 50.7959 89.6973 50.624 89.5923 50.4604 cv
89.2734 51.7803 87.9111 53.0713 86.0283 53.6646 cv
83.8247 54.3594 81.6621 53.8628 80.833 52.5713 cv
80.7314 52.9907 80.7339 53.4141 80.8613 53.8184 cv
81.3901 55.4941 83.8296 56.2178 86.312 55.4351 cv
88.7935 54.6523 90.3765 52.6587 89.8481 50.9844 cv
cp
.636561 .700954 .654597 .746487 cmyk
f
71.5137 50.2754 mo
72.8311 53.3276 71.8018 56.7085 69.2158 57.8232 cv
66.6294 58.938 63.4648 57.3677 62.1484 54.313 cv
60.8315 51.2598 61.8608 47.8813 64.4468 46.7656 cv
67.0327 45.6509 70.1973 47.2207 71.5137 50.2754 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
70.8052 50.5811 mo
70.6655 50.2578 70.5024 49.9541 70.3184 49.6729 cv
70.7544 51.8892 69.8594 54.063 68.0054 54.8613 cv
66.0835 55.6899 63.7866 54.7729 62.4941 52.792 cv
62.5742 53.1982 62.6836 53.6055 62.8569 54.0073 cv
63.9741 56.6006 66.6597 57.9326 68.8555 56.9863 cv
71.0498 56.041 71.9233 53.1714 70.8052 50.5811 cv
cp
.636561 .700954 .654597 .746487 cmyk
f
68.8501 49.0459 mo
69.436 50.1294 69.1528 51.4165 68.2168 51.9229 cv
67.2817 52.4302 66.0474 51.9639 65.4609 50.8804 cv
64.875 49.7974 65.1587 48.5098 66.0942 48.0024 cv
67.0298 47.4961 68.2637 47.9629 68.8501 49.0459 cv
cp
0 0 0 0 cmyk
f
58.1406 46.6494 mo
60.832 45.8511 63.9448 44.9912 68.0581 45.501 cv
70.8076 45.8418 70.8833 43.5566 68.3516 42.7539 cv
66.3193 42.1089 61.4736 43.1226 57.9717 45.563 cv
56.4775 46.604 57.0303 46.98 58.1406 46.6494 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
98.8076 40.1108 mo
100.072 43.1357 99.084 46.4858 96.6025 47.5908 cv
94.1206 48.6958 91.084 47.1392 89.8208 44.1118 cv
88.5566 41.0864 89.5444 37.7388 92.0264 36.6328 cv
94.5078 35.5283 97.5439 37.084 98.8076 40.1108 cv
cp
f
98.1665 40.5684 mo
98.0322 40.2539 97.875 39.959 97.6973 39.6851 cv
98.1182 41.8403 97.2549 43.9536 95.4678 44.7295 cv
93.6147 45.5347 91.4004 44.6431 90.1543 42.7173 cv
90.2319 43.1128 90.3374 43.5088 90.5044 43.8989 cv
91.5815 46.4194 94.1704 47.7144 96.2866 46.7949 cv
98.4019 45.876 99.2446 43.0859 98.1665 40.5684 cv
cp
.636561 .700954 .654597 .746487 cmyk
f
96.2983 38.8667 mo
96.8765 39.9707 96.5967 41.2832 95.6729 41.7988 cv
94.75 42.3164 93.5317 41.8408 92.9531 40.7368 cv
92.375 39.6323 92.6543 38.3198 93.5776 37.8032 cv
94.5015 37.2881 95.7188 37.7627 96.2983 38.8667 cv
cp
0 0 0 0 cmyk
f
94.8652 33.0527 mo
92.7275 34.4956 90.3062 36.2021 88.4263 39.4414 cv
87.1709 41.6069 85.2969 40.2954 86.062 38.0093 cv
86.6758 36.1738 90.1836 33.3237 94.0884 32.2827 cv
95.7539 31.8394 95.7476 32.4585 94.8652 33.0527 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
88.3438 50.502 mo
88.4058 51.1235 87.71 51.7021 86.7896 51.7944 cv
85.8687 51.8867 85.0718 51.458 85.0093 50.8364 cv
84.9468 50.2148 85.6426 49.6353 86.5635 49.5435 cv
87.4839 49.4502 88.2817 49.8794 88.3438 50.502 cv
cp
0 0 0 0 cmyk
f
84.4702 64.771 mo
82.7129 64.771 81.0645 64.1094 80.2544 62.5391 cv
80.0928 62.2261 80.2158 61.8418 80.5288 61.6807 cv
80.8413 61.5171 81.2256 61.6426 81.3872 61.9546 cv
82.3999 63.917 85.2139 63.6743 86.8579 63.0337 cv
89.7271 61.9165 90.7871 60.541 90.2964 58.5762 cv
90.2109 58.2349 90.4185 57.8887 90.7603 57.8032 cv
91.1016 57.7168 91.4478 57.9263 91.5332 58.2676 cv
92.5156 62.1978 88.606 63.7212 87.3213 64.2222 cv
86.417 64.5742 85.4272 64.771 84.4702 64.771 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
78.4746 23.2021 mo
80.3223 22.2129 81.6504 19.6079 79.0269 16.0996 cv
76.4033 12.5913 69.7407 11.6851 65.6509 12.9019 cv
61.561 14.1196 57.5854 17.7876 58.0425 22.2725 cv
58.4502 26.2734 61.5444 27.7305 65.0605 27.5527 cv
65.4058 29.5342 65.896 30.5645 66.3252 30.4746 cv
67.0532 30.3237 69.8271 29.3398 70.3662 29.1489 cv
70.29 28.4019 70.04 26.6904 70.04 26.6904 cv
71.2368 28.6528 li
72.0903 28.5806 75.2778 27.3276 75.605 27.1279 cv
75.4053 26.8008 74.5225 24.958 74.5225 24.958 cv
76.5059 26.7744 li
77.3638 26.5957 80.0308 25.4976 80.0308 25.4976 cv
80.3789 24.7671 78.4746 23.2021 78.4746 23.2021 cv
cp
0 0 0 0 cmyk
f
68.6846 20.2173 mo
69.1821 21.5039 68.6084 22.9243 67.4043 23.3892 cv
66.2002 23.855 64.8213 23.1899 64.3237 21.9033 cv
63.8267 20.6167 64.4004 19.1963 65.604 18.7314 cv
66.8086 18.2661 68.1875 18.9316 68.6846 20.2173 cv
cp
0 .970642 .96051 0 cmyk
f
74.9556 17.7173 mo
75.729 18.8579 75.5508 20.3276 74.5586 21 cv
73.5664 21.6733 72.1348 21.293 71.3613 20.1509 cv
70.5879 19.0103 70.7656 17.5386 71.7583 16.8662 cv
72.7505 16.1938 74.1821 16.5742 74.9556 17.7173 cv
cp
f
535.133 59.4131 mo
536.469 62.1294 536.528 65.2603 535.295 67.9976 cv
532.912 73.2871 525.478 79.8784 515.604 82.8081 cv
515.484 83.3115 515.325 83.77 515.129 84.187 cv
514.574 85.3496 li
513.309 85.5938 li
509.458 86.3379 490.089 86.957 486.103 78.8574 cv
485.833 78.3091 485.639 77.73 485.525 77.1338 cv
484.474 71.5996 492.93 68.207 501.881 64.6182 cv
503.313 64.0439 504.69 63.4922 505.921 62.9663 cv
507.304 62.375 li
507.304 62.375 508.561 63.3564 508.595 63.3843 cv
511.175 61.9995 513.104 60.6895 514.979 59.4155 cv
517.397 57.7725 519.68 56.2227 522.763 55.0034 cv
528.631 52.6846 533.287 55.6636 535.132 59.4111 cv
535.133 59.4131 535.133 59.4131 535.133 59.4131 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
488.281 77.1655 mo
489.088 79.7681 497.114 82.9253 508.769 81.6079 cv
521.601 80.1543 530.65 72.0996 532.969 66.9512 cv
535.394 61.5684 530.801 54.5708 523.7 57.3745 cv
516.597 60.1816 514.146 64.916 500.012 69.8643 cv
492.239 72.5859 487.339 74.1245 488.281 77.1655 cv
cp
.0250248 .567285 .998169 0 cmyk
f
487.245 77.9976 mo
488.888 81.3345 497.638 84.1484 508.91 82.8745 cv
522.2 81.3701 531.659 72.9644 534.132 67.4741 cv
535.209 65.0835 535.157 62.3496 533.988 59.9746 cv
532.342 56.6265 528.377 54.1563 523.23 56.1885 cv
520.279 57.3555 518.156 58.7983 515.698 60.4697 cv
512.069 62.9365 507.954 65.7334 499.59 68.6626 cv
498.481 69.0488 li
490.847 71.7139 485.803 73.4736 487.063 77.543 cv
487.111 77.6958 487.173 77.8486 487.245 77.9976 cv
487.245 77.9976 li
cp
488.39 77.4341 mo
488.345 77.3438 488.308 77.2549 488.281 77.1655 cv
487.339 74.1245 492.239 72.5859 500.012 69.8643 cv
514.146 64.916 516.597 60.1816 523.7 57.3745 cv
528.006 55.6738 531.388 57.5757 532.845 60.5376 cv
533.79 62.4609 533.924 64.8315 532.969 66.9512 cv
530.65 72.0996 521.601 80.1543 508.769 81.6079 cv
497.512 82.8799 489.641 79.979 488.39 77.4341 cv
488.39 77.4341 li
cp
.75021 .679683 .670222 .90164 cmyk
f
508.769 81.604 mo
497.111 82.9233 489.088 79.7651 488.284 77.1675 cv
488.19 76.8823 488.158 76.603 488.179 76.3379 cv
490.354 78.5654 498.191 81.1699 513.696 75.873 cv
532.323 69.5054 531.218 57.2432 524.65 57.0625 cv
531.208 55.2007 535.285 61.8149 532.972 66.9512 cv
530.653 72.0977 521.599 80.1514 508.769 81.604 cv
cp
.101595 .727993 1 .0109865 cmyk
f
494.658 70.4805 mo
496.583 69.5435 498.745 68.6406 500.868 67.7764 cv
504.814 72.6836 506.415 79.6724 506.025 83.4453 cv
503.739 83.396 501.205 83.1929 498.773 82.7969 cv
498.617 79.3218 497.296 74.459 494.658 70.4805 cv
cp
0 0 0 0 cmyk
f
500.868 67.7764 mo
503.014 66.9009 505.12 66.0811 506.92 65.3101 cv
511.02 68.5034 514.688 79.1753 512.827 83.0938 cv
511.46 83.3589 508.95 83.5122 506.025 83.4453 cv
506.415 79.6724 504.814 72.6836 500.868 67.7764 cv
cp
0 .970642 .96051 0 cmyk
f
488.032 76.6563 mo
487.628 74.5239 490.635 72.4312 494.658 70.4805 cv
497.296 74.459 498.617 79.3218 498.773 82.7969 cv
493.484 81.9233 488.688 80.0854 488.032 76.6563 cv
cp
f
488.032 76.6563 mo
487.996 76.4854 487.989 76.3169 488.01 76.1479 cv
489.139 77.4956 492.394 79.0879 498.229 78.9731 cv
498.542 80.3433 498.721 81.6489 498.773 82.7969 cv
493.484 81.9233 488.688 80.0854 488.032 76.6563 cv
cp
.132235 1 1 .0386358 cmyk
f
498.229 78.9731 mo
500.343 78.937 502.793 78.6792 505.601 78.1128 cv
506.037 80.1528 506.173 82.0278 506.025 83.4453 cv
503.739 83.396 501.205 83.1929 498.773 82.7969 cv
498.721 81.6489 498.542 80.3433 498.229 78.9731 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
505.601 78.1128 mo
507.771 77.6694 510.15 77.0396 512.766 76.1899 cv
513.435 78.9575 513.563 81.5479 512.827 83.0938 cv
511.46 83.3589 508.95 83.5122 506.025 83.4453 cv
506.173 82.0278 506.037 80.1528 505.601 78.1128 cv
cp
.132235 1 1 .0386358 cmyk
f
487.245 78.2925 mo
487.246 78.293 487.247 78.2935 487.247 78.2935 cv
490.669 85.2485 508.789 85.1694 513.067 84.3428 cv
513.465 84.2661 513.803 84.0049 513.976 83.6392 cv
515.533 80.3662 513.956 74.2275 511.832 69.9087 cv
510.963 68.1431 509.543 65.7388 507.706 64.3076 cv
507.34 64.021 506.848 63.958 506.422 64.1392 cv
505.188 64.666 503.813 65.2183 502.356 65.8027 cv
494.276 69.0425 485.922 72.3916 486.777 76.895 cv
486.87 77.3779 487.028 77.8477 487.245 78.2925 cv
487.245 78.2925 li
cp
488.391 77.7319 mo
488.224 77.3911 488.102 77.0342 488.03 76.6577 cv
487.233 72.4707 499.615 68.4326 506.922 65.312 cv
508.286 66.3765 509.605 68.2725 510.687 70.4707 cv
512.851 74.8687 514.066 80.48 512.825 83.0908 cv
508.323 83.9609 491.333 83.71 488.391 77.7319 cv
488.391 77.7319 li
cp
.75021 .679683 .670222 .90164 cmyk
f
537.678 54.2515 mo
534.269 53.4922 li
543.322 25.416 li
543.434 25.0718 543.432 24.7007 543.317 24.3569 cv
539.158 11.8672 li
538.969 11.3003 538.498 10.8745 537.915 10.7456 cv
537.331 10.6162 536.723 10.8013 536.313 11.2344 cv
527.25 20.7817 li
527.001 21.0439 526.842 21.3794 526.795 21.7388 cv
523.09 51.0044 li
519.68 50.2466 li
518.765 50.0425 517.856 50.6201 517.652 51.5361 cv
516.549 56.4946 li
516.346 57.4111 516.923 58.3198 517.839 58.5239 cv
522.02 59.4541 li
520.292 73.1011 li
520.182 73.9722 520.752 74.7837 521.609 74.9741 cv
523.528 75.4004 li
525.445 75.8276 li
526.302 76.0181 527.164 75.5254 527.433 74.6899 cv
531.654 61.5977 li
535.837 62.5288 li
536.753 62.7319 537.661 62.1543 537.865 61.2378 cv
538.969 56.2798 li
539.172 55.3633 538.594 54.4551 537.678 54.2515 cv
cp
f
523.896 73.7417 mo
525.814 74.168 li
541.705 24.8945 li
537.545 12.4043 li
528.482 21.9526 li
521.978 73.3149 li
523.896 73.7417 li
cp
.280522 .914061 1 .298253 cmyk
f
537.055 14.6074 mo
541.103 26.7617 li
541.705 24.8945 li
537.545 12.4043 li
528.482 21.9526 li
528.235 23.8984 li
537.055 14.6074 li
cp
.215396 .82446 1 .119539 cmyk
f
536.205 60.8691 mo
518.208 56.8647 li
519.312 51.9053 li
537.309 55.9102 li
536.205 60.8691 li
cp
f
537.145 56.645 mo
519.148 52.6406 li
519.312 51.9053 li
537.309 55.9102 li
537.145 56.645 li
cp
.144869 .807401 1 .0376593 cmyk
f
530.921 60.2725 mo
530.839 60.2539 530.76 60.2104 530.7 60.144 cv
524.225 53.0425 li
524.066 52.8696 524.079 52.6011 524.252 52.4438 cv
524.426 52.2856 524.694 52.2964 524.853 52.4697 cv
531.327 59.5708 li
531.485 59.7446 531.474 60.0132 531.299 60.1719 cv
531.193 60.2681 531.052 60.3013 530.921 60.2725 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
523.247 58.5645 mo
523.116 58.5356 523.002 58.4453 522.945 58.3125 cv
522.856 58.0957 522.959 57.8477 523.175 57.7578 cv
532.051 54.0713 li
532.268 53.9819 532.517 54.0845 532.605 54.3018 cv
532.696 54.5186 532.593 54.7666 532.377 54.8574 cv
523.502 58.5425 li
523.419 58.5776 523.329 58.5825 523.247 58.5645 cv
cp
f
526.872 63.979 mo
526.75 65.9805 524.65 67.4795 522.18 67.3296 cv
519.711 67.1792 517.808 65.4355 517.929 63.4346 cv
518.051 61.4336 520.151 59.9341 522.622 60.085 cv
525.091 60.2354 526.994 61.9785 526.872 63.979 cv
cp
f
525.53 63.8975 mo
525.429 65.5371 523.474 66.7529 521.16 66.6123 cv
518.847 66.4712 517.052 65.0269 517.151 63.3872 cv
517.251 61.748 519.207 60.5317 521.521 60.6729 cv
523.835 60.814 525.63 62.2583 525.53 63.8975 cv
cp
.0250248 .567285 .998169 0 cmyk
f
445.283 133.085 mo
443.503 133.231 441.671 133.232 439.836 133.093 cv
434.377 132.678 430.002 130.127 427.185 125.714 cv
422.376 118.184 423.269 107.336 424.815 103.204 cv
425.981 100.088 427.927 98.1982 430.151 98.0156 cv
432.81 97.7979 434.938 99.7852 436.477 103.924 cv
438.646 109.767 444.412 110.559 448.866 110.193 cv
450.548 110.056 452.302 109.718 453.941 109.217 cv
457.826 108.026 460.31 107.452 462.244 107.294 cv
465.269 107.047 467.391 107.889 468.551 109.801 cv
470.041 112.258 469.852 115.715 468.03 119.282 cv
465.098 125.031 457.379 132.096 445.285 133.085 cv
445.283 133.085 445.284 133.085 445.283 133.085 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
466.37 111.124 mo
465.081 108.998 461.344 109.617 454.688 111.654 cv
447.875 113.739 437.442 113.847 434.086 104.813 cv
431.624 98.1914 428.604 100.358 427.204 104.097 cv
425.134 109.627 424.562 129.373 440.03 130.552 cv
458.91 131.991 469.82 116.813 466.37 111.124 cv
cp
.101595 .727993 1 .0109865 cmyk
f
429.31 118.566 mo
428.297 118.165 428.281 121.218 428.884 123.582 cv
425.172 116.996 425.883 107.643 427.204 104.097 cv
428.604 100.358 431.624 98.1914 434.086 104.813 cv
435.431 108.438 437.91 110.588 440.844 111.738 cv
440.472 113.023 437.141 111.616 436.46 112.148 cv
435.282 113.09 438.221 116.27 436.985 116.797 cv
435.749 117.325 433.291 115.112 432.669 116.161 cv
431.738 117.712 433.788 121.187 432.518 121.289 cv
431.247 121.395 430.633 119.1 429.31 118.566 cv
cp
.00985733 .0806592 .600977 0 cmyk
f
471.107 159.148 mo
466.555 158.654 462.33 157.486 459.803 156.032 cv
456.209 153.961 455.958 146.33 458.842 126.874 cv
458.981 125.927 li
460.11 118.212 464.812 114.951 468.97 115.142 cv
469.166 115.15 469.358 115.165 469.548 115.187 cv
473.78 115.646 476.428 118.794 477.414 124.542 cv
477.781 126.679 477.95 129.253 478.13 131.979 cv
478.395 136.005 478.794 142.091 480.1 143.453 cv
483.268 146.762 486.038 152.159 483.419 156.482 cv
481.536 159.587 475.684 159.645 471.107 159.148 cv
471.106 159.148 471.107 159.148 471.107 159.148 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
468.853 117.688 mo
465.43 117.532 462.336 120.614 461.505 126.295 cv
460.673 131.976 457.535 151.782 461.076 153.823 cv
466.104 156.722 479.414 158.167 481.237 155.159 cv
483.061 152.151 480.857 147.933 478.257 145.217 cv
475.357 142.19 475.949 131.076 474.9 124.974 cv
474.116 120.399 472.256 117.847 468.853 117.688 cv
cp
.101595 .727993 1 .0109865 cmyk
f
478.257 145.217 mo
479.54 146.553 480.73 148.265 481.378 150.011 cv
477.311 155.186 465.5 149.474 468.03 146.884 cv
470.147 144.712 475.131 144.091 478.104 145.047 cv
478.159 145.104 478.204 145.16 478.257 145.217 cv
cp
.0250248 .567285 .998169 0 cmyk
f
474.9 124.974 mo
475.514 128.536 475.563 133.817 476.081 138.191 cv
471.155 141.188 463.187 139.928 459.947 138.182 cv
460.434 133.309 461.167 128.617 461.505 126.295 cv
462.336 120.614 465.433 117.531 468.853 117.688 cv
472.256 117.847 474.116 120.399 474.9 124.974 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
465.979 140.479 mo
463.317 140.189 460.889 139.463 459.276 138.572 cv
458.962 138.4 458.848 138.004 459.021 137.69 cv
459.195 137.376 459.591 137.264 459.904 137.435 cv
463.017 139.152 471.063 140.613 476.022 137.413 cv
476.325 137.219 476.727 137.305 476.921 137.607 cv
477.115 137.907 477.028 138.31 476.728 138.505 cv
473.712 140.452 469.628 140.875 465.979 140.479 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
502.229 153.431 mo
497.649 153.431 493.323 152.729 490.654 151.555 cv
486.856 149.885 485.783 142.326 486.547 122.673 cv
486.583 121.715 li
486.872 113.924 491.192 110.173 495.347 109.914 cv
495.544 109.9 495.735 109.896 495.927 109.896 cv
500.185 109.896 503.156 112.738 504.759 118.346 cv
505.354 120.43 505.8 122.972 506.272 125.662 cv
506.972 129.637 508.026 135.642 509.472 136.856 cv
512.979 139.803 516.317 144.869 514.18 149.45 cv
512.645 152.74 506.833 153.431 502.229 153.431 cv
502.229 153.431 li
cp
f
495.506 112.459 mo
492.086 112.673 489.344 116.071 489.131 121.81 cv
488.919 127.547 487.94 147.575 491.682 149.221 cv
496.994 151.559 510.381 151.559 511.869 148.371 cv
513.356 145.184 510.71 141.228 507.831 138.809 cv
504.62 136.111 504.008 125 502.307 119.047 cv
501.031 114.584 498.906 112.247 495.506 112.459 cv
cp
.101595 .727993 1 .0109865 cmyk
f
507.831 138.809 mo
509.251 139.999 510.619 141.571 511.452 143.237 cv
507.968 148.822 495.608 144.418 497.844 141.571 cv
499.714 139.184 504.602 138.027 507.661 138.655 cv
507.721 138.707 507.771 138.759 507.831 138.809 cv
cp
.0250248 .567285 .998169 0 cmyk
f
502.307 119.047 mo
503.301 122.523 503.922 127.768 504.908 132.059 cv
500.334 135.57 492.276 135.18 488.867 133.794 cv
488.826 128.898 489.047 124.155 489.131 121.81 cv
489.344 116.071 492.09 112.672 495.506 112.459 cv
498.906 112.247 501.031 114.584 502.307 119.047 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
495.113 135.424 mo
492.435 135.424 489.942 134.966 488.243 134.255 cv
487.912 134.117 487.755 133.735 487.895 133.405 cv
488.032 133.075 488.414 132.919 488.744 133.055 cv
492.023 134.427 500.182 135.009 504.765 131.292 cv
505.046 131.064 505.454 131.107 505.68 131.387 cv
505.905 131.665 505.863 132.075 505.585 132.302 cv
502.798 134.563 498.782 135.424 495.113 135.424 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
477.569 128.278 mo
460.718 128.278 455.924 118.857 454.871 110.953 cv
451.409 84.9956 465.26 66.2905 473.954 64.7559 cv
474.782 64.6099 475.633 64.5352 476.479 64.5352 cv
491.671 64.5352 506.363 88.8916 507.541 104.187 cv
508.677 118.95 497.211 125.956 486.103 127.59 cv
482.95 128.053 480.159 128.278 477.57 128.278 cv
477.569 128.278 li
cp
f
504.995 104.386 mo
506.023 117.688 495.364 123.646 485.733 125.066 cv
477.251 126.316 459.664 127.616 457.395 110.616 cv
457.276 109.75 457.183 108.899 457.106 108.058 cv
464.289 111.501 491.369 114.433 504.085 98.9883 cv
504.553 100.885 504.868 102.704 504.995 104.386 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
500.431 88.9844 mo
502.037 92.3584 503.286 95.7842 504.085 98.9883 cv
491.369 114.433 464.289 111.501 457.106 108.058 cv
456.766 104.336 456.791 100.816 457.106 97.5176 cv
467.416 99.4053 487.936 99.1328 500.431 88.9844 cv
cp
.132235 1 1 .0386358 cmyk
f
494.421 78.98 mo
496.725 82.0571 498.765 85.4917 500.431 88.9844 cv
487.936 99.1328 467.416 99.4053 457.106 97.5176 cv
457.539 92.9189 458.525 88.7637 459.852 85.1084 cv
469.771 86.0938 483.907 85.2354 494.421 78.98 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
485.648 70.2759 mo
488.803 72.4009 491.786 75.4604 494.421 78.98 cv
483.907 85.2354 469.771 86.0938 459.852 85.1084 cv
461.373 80.8667 463.354 77.2964 465.428 74.4917 cv
471.633 74.8745 479.214 73.9648 485.648 70.2759 cv
cp
.132235 1 1 .0386358 cmyk
f
474.395 67.2666 mo
478.194 66.5952 482.036 67.8281 485.648 70.2759 cv
479.214 73.9648 471.633 74.8745 465.428 74.4917 cv
468.598 70.2075 471.998 67.6919 474.395 67.2666 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
504.085 98.9883 mo
504.553 100.885 504.868 102.704 504.995 104.386 cv
505.913 116.294 497.472 122.32 488.776 124.464 cv
479.02 125.347 473.876 119.031 471.734 110.77 cv
482.546 111.118 496.129 108.654 504.085 98.9883 cv
cp
.574731 .695186 .633936 .604669 cmyk
f
504.085 98.9883 mo
496.129 108.654 482.546 111.118 471.734 110.77 cv
470.714 106.895 470.365 102.576 470.52 98.3857 cv
480.489 98.0703 492.202 95.665 500.431 88.9844 cv
502.037 92.3584 503.286 95.7842 504.085 98.9883 cv
cp
0 .970642 .96051 0 cmyk
f
500.431 88.9844 mo
492.202 95.665 480.489 98.0703 470.52 98.3857 cv
470.681 93.5664 471.496 88.9082 472.703 85.2271 cv
480.099 84.6411 487.944 82.8301 494.421 78.98 cv
496.725 82.0571 498.765 85.4917 500.431 88.9844 cv
cp
0 0 0 0 cmyk
f
494.421 78.98 mo
487.944 82.8301 480.099 84.6411 472.703 85.2271 cv
473.52 82.7534 474.505 80.7222 475.602 79.3794 cv
480.829 72.9619 486.371 72.6216 490.23 74.1006 cv
491.701 75.5801 493.104 77.2202 494.421 78.98 cv
cp
0 .970642 .96051 0 cmyk
f
473.736 111.458 mo
465.955 111.45 459.271 109.95 456.313 108.498 cv
455.991 108.339 455.861 107.945 456.021 107.615 cv
456.183 107.286 456.574 107.148 456.896 107.306 cv
463.485 110.543 491.217 114.021 503.993 98.1738 cv
504.219 97.8945 504.626 97.8564 504.904 98.0859 cv
505.184 98.3145 505.228 98.7275 505.002 99.0068 cv
497.244 108.641 484.475 111.468 473.736 111.458 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
460.543 .40918 mo
460.542 .40918 460.539 .40918 460.539 .40918 cv
454.582 1.13623 445.809 3.16699 437.847 8.71436 cv
429.758 14.3496 424.473 22.2168 422.14 32.0962 cv
421.158 36.2559 421.003 40.7412 421.673 45.4766 cv
421.604 45.4644 421.538 45.4521 421.471 45.4424 cv
418.57 44.9702 415.434 44.9346 412.148 45.3354 cv
408.076 45.832 403.849 46.9814 399.584 48.7529 cv
399.372 48.8408 li
398.735 49.1006 398.231 49.606 397.972 50.2427 cv
397.714 50.8789 397.723 51.5928 397.999 52.2227 cv
401.279 59.729 407.384 64.0869 413.216 66.106 cv
413.118 66.2095 413.022 66.3145 412.927 66.4194 cv
405.698 74.3984 407.69 86.6973 409.068 90.7627 cv
409.459 91.9131 410.602 92.6211 411.791 92.4756 cv
411.853 92.4688 411.915 92.458 411.978 92.4473 cv
420.013 90.8633 427.567 87.1816 432.681 82.6001 cv
432.816 84.1797 433.093 85.748 433.624 87.3311 cv
435.257 92.1973 439.046 94.7588 443.762 94.1826 cv
449.327 93.5039 455.486 88.0752 456.375 81.0586 cv
459.399 81.5229 462.597 81.5547 465.919 81.1494 cv
468.466 80.8384 471.139 80.2642 473.864 79.4424 cv
484.967 76.0938 493.619 71.5889 499.618 66.0386 cv
500.841 66.4502 502.146 66.5815 503.474 66.4194 cv
506.721 66.0234 509.894 63.9399 512.178 60.7017 cv
514.737 57.0737 515.686 52.6772 514.78 48.6411 cv
513.152 41.3818 505.527 32.5332 499.957 27.4722 cv
500.009 27.145 499.995 26.8076 499.915 26.478 cv
496.884 14.0527 487.591 4.06152 476.237 1.02588 cv
472.106 -.0786133 466.387 -.303223 460.543 .40918 cv
460.543 .40918 li
cp
f
431.513 61.0986 mo
433.896 58.3633 430.09 49.4268 421.062 47.959 cv
411.378 46.3843 401.83 50.5908 400.335 51.2017 cv
406.671 65.6992 425.254 68.2847 431.513 61.0986 cv
cp
0 .970642 .96051 0 cmyk
f
421.06 47.9614 mo
430.093 49.4287 433.897 58.3672 431.516 61.0977 cv
425.333 68.189 407.176 65.7632 400.606 51.7837 cv
404.448 56.6079 413.278 63.4258 420.653 56.4287 cv
423.509 53.7173 421.798 50.2949 419.442 47.7568 cv
419.979 47.8027 420.518 47.874 421.06 47.9614 cv
cp
.132235 1 1 .0386358 cmyk
f
412.303 46.6006 mo
408.345 47.0835 404.23 48.2036 400.072 49.9307 cv
399.854 50.021 li
399.535 50.1509 399.283 50.4033 399.154 50.7217 cv
399.024 51.0405 399.029 51.3979 399.167 51.7119 cv
403.901 62.5459 415.133 67.145 423.781 66.0903 cv
427.443 65.6436 430.53 64.168 432.476 61.937 cv
433.65 60.5874 433.812 58.3945 432.918 55.9204 cv
431.622 52.3306 427.793 47.7617 421.268 46.7002 cv
418.484 46.248 415.469 46.2148 412.303 46.6006 cv
412.303 46.6006 li
cp
412.457 47.8667 mo
415.161 47.5361 418.106 47.478 421.062 47.959 cv
430.09 49.4268 433.896 58.3633 431.513 61.0986 cv
429.711 63.1685 426.887 64.4272 423.627 64.8247 cv
415.567 65.8081 404.847 61.5249 400.335 51.2017 cv
401.374 50.7773 406.299 48.6177 412.457 47.8667 cv
412.457 47.8667 li
cp
.75021 .679683 .670222 .90164 cmyk
f
435.424 63.9043 mo
432.313 58.2896 421.564 60.6831 414.817 68.1304 cv
408.276 75.3506 410.37 86.6553 411.484 89.9443 cv
426.675 86.9502 441.901 75.5947 435.424 63.9043 cv
cp
0 .970642 .96051 0 cmyk
f
435.42 63.9014 mo
441.899 75.5957 426.672 86.9492 411.485 89.9404 cv
411.209 89.1357 410.88 87.8486 410.626 86.2607 cv
418.901 83.1367 428.006 79.4233 428.807 71.8755 cv
429.422 66.0459 425.468 62.6919 422.536 62.4497 cv
427.928 59.9766 433.355 60.1709 435.42 63.9014 cv
cp
.132235 1 1 .0386358 cmyk
f
427.604 59.6401 mo
422.878 60.2163 417.616 63.1421 413.872 67.2744 cv
407.057 74.7979 408.966 86.4863 410.277 90.3545 cv
410.472 90.9297 411.043 91.2832 411.638 91.2109 cv
411.668 91.207 411.7 91.2021 411.73 91.1963 cv
421.444 89.2813 433.01 83.5508 436.954 75.0664 cv
438.778 71.1416 438.635 67.0684 436.539 63.2866 cv
434.977 60.4668 431.72 59.1377 427.604 59.6401 cv
427.604 59.6401 li
cp
427.759 60.9053 mo
431.142 60.4927 434.039 61.4063 435.424 63.9043 cv
441.901 75.5947 426.675 86.9502 411.484 89.9443 cv
410.37 86.6553 408.276 75.3506 414.817 68.1304 cv
418.562 63.9966 423.538 61.4204 427.759 60.9053 cv
427.759 60.9053 li
cp
.75021 .679683 .670222 .90164 cmyk
f
493.51 25.6704 mo
498.624 28.7183 510.387 40.7036 512.292 49.1997 cv
514.553 59.2754 502.267 69.7783 496.416 60.1343 cv
492.676 53.9697 494.128 46.271 488.777 37.0635 cv
483.314 27.6577 488.063 22.4253 493.51 25.6704 cv
cp
.280522 .914061 1 .298253 cmyk
f
493.506 25.6714 mo
498.622 28.7212 510.386 40.7041 512.296 49.1978 cv
513.613 55.0903 509.958 61.1362 505.525 63.2017 cv
516.042 55.6255 509.025 44.5015 501.931 34.9883 cv
497.742 29.376 493.9 25.8804 491.145 24.77 cv
491.896 24.8926 492.694 25.189 493.506 25.6714 cv
cp
.215396 .82446 1 .119539 cmyk
f
489.704 23.4712 mo
489.704 23.4712 li
487.977 23.6816 486.588 24.6792 485.792 26.2793 cv
484.398 29.0806 485.086 33.2451 487.676 37.7041 cv
490.468 42.5103 491.357 46.9932 492.142 50.9478 cv
492.838 54.4609 493.496 57.7793 495.325 60.7954 cv
497.271 64.0039 500.108 65.5557 503.313 65.1646 cv
506.161 64.8174 509.085 62.877 511.134 59.9736 cv
513.487 56.6357 514.363 52.6069 513.535 48.9209 cv
511.474 39.7271 499.067 27.4985 494.163 24.5752 cv
492.661 23.6812 491.119 23.2988 489.704 23.4712 cv
489.704 23.4712 li
cp
489.857 24.7368 mo
490.949 24.604 492.209 24.896 493.51 25.6704 cv
498.624 28.7183 510.387 40.7036 512.292 49.1997 cv
513.845 56.1206 508.533 63.2432 503.159 63.8989 cv
500.709 64.1978 498.247 63.1538 496.416 60.1343 cv
492.676 53.9697 494.128 46.271 488.777 37.0635 cv
484.618 29.9038 486.378 25.1621 489.857 24.7368 cv
489.857 24.7368 li
cp
.75021 .679683 .670222 .90164 cmyk
f
432.937 58.1416 mo
436.962 65.9233 446.905 84.9097 473.129 77.001 cv
499.352 69.0923 506.744 55.9883 506.06 46.8667 cv
505.42 38.3481 501.473 38.2607 493.428 22.29 cv
481.847 -.701172 456.637 3.22998 442.268 13.5464 cv
426.492 24.8716 424.812 42.4346 432.937 58.1416 cv
cp
.0250248 .567285 .998169 0 cmyk
f
472.158 5.80615 mo
458.351 6.2583 445.508 14.6919 447.313 35.9561 cv
448.541 50.3042 459.744 75.877 482.253 73.7471 cv
479.501 74.9053 476.465 75.9941 473.129 77.001 cv
446.905 84.9097 436.959 65.9229 432.937 58.1416 cv
424.812 42.4346 426.488 24.8735 442.268 13.5464 cv
450.275 7.79932 461.658 4.03076 472.158 5.80615 cv
cp
.101595 .727993 1 .0109865 cmyk
f
462.187 4.37012 mo
454.943 5.25391 447.604 8.14453 441.524 12.5103 cv
426.399 23.3682 422.675 41.0771 431.805 58.7271 cv
435.488 65.8491 444.115 82.5269 465.736 79.8896 cv
468.22 79.5869 470.83 79.0259 473.496 78.2212 cv
485.65 74.5562 494.775 69.522 500.616 63.2583 cv
505.362 58.1699 507.747 52.3145 507.331 46.771 cv
506.938 41.5537 505.312 39.1802 502.615 35.2471 cv
500.654 32.3877 497.969 28.4707 494.566 21.7168 cv
485.772 4.25928 470.505 3.35596 462.187 4.37012 cv
462.187 4.37012 li
cp
462.342 5.63574 mo
474.063 4.20557 486.317 8.17334 493.428 22.29 cv
501.473 38.2607 505.42 38.3481 506.06 46.8667 cv
506.744 55.9883 499.352 69.0923 473.129 77.001 cv
470.446 77.8101 467.936 78.3369 465.582 78.624 cv
444.935 81.1426 436.55 65.1274 432.937 58.1416 cv
424.812 42.4346 426.492 24.8716 442.268 13.5464 cv
447.814 9.56494 454.972 6.53516 462.342 5.63574 cv
462.342 5.63574 li
cp
.75021 .679683 .670222 .90164 cmyk
f
440.782 52.2607 mo
445.103 56.3584 453.941 70.6357 453.933 79.3428 cv
453.924 89.6689 439.63 97.2139 436.041 86.5205 cv
433.748 79.6851 436.856 72.4932 433.662 62.3345 cv
430.398 51.9575 436.183 47.8979 440.782 52.2607 cv
cp
.280522 .914061 1 .298253 cmyk
f
440.782 52.2607 mo
445.101 56.3584 453.941 70.6333 453.933 79.3428 cv
453.93 84.3613 450.563 88.7109 446.681 90.6484 cv
455.629 84.7529 451.167 73.4375 446.362 63.4653 cv
442.599 55.644 438.74 51.1143 436.074 50.6602 cv
437.507 50.2627 439.214 50.7739 440.782 52.2607 cv
cp
.215396 .82446 1 .119539 cmyk
f
436.418 49.2896 mo
436.417 49.2896 li
434.921 49.4722 433.608 50.3311 432.721 51.708 cv
431.103 54.2217 431.004 58.1323 432.445 62.7173 cv
434.113 68.019 433.996 72.5889 433.892 76.6196 cv
433.798 80.1997 433.711 83.5815 434.833 86.9258 cv
436.259 91.1738 439.538 93.4141 443.607 92.917 cv
449.088 92.248 455.201 86.5098 455.208 79.3438 cv
455.218 69.9214 445.803 55.2651 441.659 51.3359 cv
440.041 49.8008 438.18 49.0742 436.418 49.2896 cv
436.418 49.2896 li
cp
436.57 50.5552 mo
437.895 50.3931 439.393 50.9429 440.782 52.2607 cv
445.103 56.3584 453.941 70.6357 453.933 79.3428 cv
453.928 85.7207 448.469 91.04 443.453 91.6523 cv
440.348 92.0313 437.413 90.6084 436.041 86.5205 cv
433.748 79.6851 436.856 72.4932 433.662 62.3345 cv
431.385 55.0938 433.514 50.9277 436.57 50.5552 cv
436.57 50.5552 li
cp
.75021 .679683 .670222 .90164 cmyk
f
434.195 69.0488 mo
436.531 63.4922 465.722 26.8125 497.438 27.082 cv
494.869 16.5483 486.938 6.52686 475.578 3.48926 cv
464.119 .424805 431.49 3.58643 424.622 32.6826 cv
421.007 47.9976 430.467 64.2236 434.195 69.0488 cv
cp
0 .970642 .96051 0 cmyk
f
494.072 18.5215 mo
495.586 21.2393 496.72 24.1411 497.438 27.0845 cv
493.666 27.0479 489.932 27.5376 486.274 28.438 cv
490.833 25.6548 493.456 22.4502 494.072 18.5215 cv
cp
.132235 1 1 .0386358 cmyk
f
444.302 28.8911 mo
449.745 38.6909 459.795 38.1758 469.868 35.1836 cv
450.437 46.2539 435.815 65.1802 434.198 69.0508 cv
430.467 64.2227 421.004 47.9946 424.624 32.6787 cv
428.01 18.3164 437.673 10.2788 447.971 6.17969 cv
442.655 11.3921 439.484 20.2134 444.302 28.8911 cv
cp
f
460.696 1.67432 mo
454.882 2.38379 446.324 4.36279 438.576 9.75879 cv
430.752 15.21 425.639 22.8237 423.381 32.3896 cv
418.957 51.1294 433.044 69.6431 433.188 69.8286 cv
433.462 70.1846 433.903 70.3687 434.35 70.3145 cv
434.354 70.314 434.357 70.3135 434.361 70.313 cv
434.811 70.2544 435.195 69.9614 435.37 69.543 cv
437.432 64.6382 462.94 32.2178 492.053 28.666 cv
493.859 28.4463 495.667 28.3423 497.427 28.3569 cv
497.481 28.3579 497.537 28.3545 497.592 28.3477 cv
497.924 28.3076 498.228 28.1392 498.437 27.874 cv
498.682 27.5659 498.77 27.1621 498.677 26.7798 cv
495.755 14.8008 486.817 5.1748 475.908 2.25732 cv
471.987 1.2085 466.301 .990723 460.696 1.67432 cv
460.696 1.67432 li
cp
460.851 2.94043 mo
466.817 2.2124 472.147 2.57227 475.578 3.48926 cv
486.938 6.52686 494.869 16.5483 497.438 27.082 cv
495.579 27.0659 493.735 27.1763 491.898 27.4004 cv
462.397 30.9995 436.394 63.8179 434.195 69.0488 cv
430.467 64.2236 421.007 47.9976 424.622 32.6826 cv
429.434 12.2979 446.889 4.64307 460.851 2.94043 cv
460.851 2.94043 li
cp
.75021 .679683 .670222 .90164 cmyk
f
500.049 48.1992 mo
503.884 54.0244 500.459 63.0439 492.401 68.3481 cv
484.344 73.6523 474.703 73.231 470.869 67.4067 cv
467.035 61.5815 470.46 52.5615 478.518 47.2568 cv
486.575 41.9521 496.216 42.375 500.049 48.1992 cv
cp
.00985733 .0806592 .600977 0 cmyk
f
488.182 44.5415 mo
489.023 46.3911 487.484 48.9043 484.742 50.1514 cv
481.999 51.3989 479.094 50.9087 478.252 49.0571 cv
477.41 47.2065 478.949 44.6934 481.691 43.4463 cv
484.433 42.1982 487.338 42.689 488.182 44.5415 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
487.506 44.8486 mo
487.424 44.6689 487.312 44.5093 487.188 44.3594 cv
487.031 45.7085 485.836 47.1543 484.039 47.9717 cv
481.935 48.9282 479.729 48.6973 478.749 47.5156 cv
478.699 47.9438 478.752 48.3638 478.928 48.75 cv
479.656 50.3491 482.165 50.7725 484.534 49.6948 cv
486.903 48.6172 488.233 46.4463 487.506 44.8486 cv
cp
.636561 .700954 .654597 .746487 cmyk
f
469.22 46.3647 mo
470.897 49.2349 470.285 52.7158 467.854 54.1353 cv
465.421 55.5552 462.089 54.3794 460.412 51.5068 cv
458.735 48.6357 459.348 45.1577 461.78 43.7368 cv
464.212 42.3169 467.543 43.4922 469.22 46.3647 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
468.554 46.7539 mo
468.376 46.4507 468.177 46.1685 467.961 45.9111 cv
468.661 48.0586 468.036 50.3247 466.293 51.3423 cv
464.486 52.397 462.094 51.7651 460.571 49.9556 cv
460.7 50.3486 460.858 50.7397 461.079 51.1177 cv
462.502 53.5562 465.33 54.5537 467.394 53.3486 cv
469.458 52.1445 469.979 49.1899 468.554 46.7539 cv
cp
.636561 .700954 .654597 .746487 cmyk
f
466.427 45.4673 mo
467.14 46.4717 467.015 47.7837 466.146 48.3999 cv
465.28 49.0161 463.999 48.7031 463.286 47.6987 cv
462.572 46.6943 462.698 45.3818 463.564 44.7651 cv
464.434 44.1489 465.714 44.4629 466.427 45.4673 cv
cp
0 0 0 0 cmyk
f
454.869 42.6851 mo
457.444 41.5669 460.431 40.3359 464.574 40.3442 cv
467.345 40.3496 467.144 38.0723 464.533 37.582 cv
462.438 37.1875 457.751 38.7808 454.57 41.627 cv
453.213 42.8413 453.807 43.1475 454.869 42.6851 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
495.083 32.9702 mo
496.703 35.8203 496.129 39.2651 493.8 40.6621 cv
491.47 42.0596 488.267 40.8823 486.646 38.0303 cv
485.025 35.1797 485.601 31.7373 487.93 30.3389 cv
490.26 28.9419 493.462 30.1182 495.083 32.9702 cv
cp
f
494.502 33.502 mo
494.33 33.2061 494.139 32.9326 493.929 32.6821 cv
494.607 34.77 494.006 36.9727 492.326 37.9595 cv
490.585 38.9829 488.278 38.3662 486.809 36.6055 cv
486.934 36.9883 487.086 37.3687 487.299 37.7354 cv
488.673 40.1074 491.399 41.0796 493.39 39.9102 cv
495.379 38.7422 495.877 35.8706 494.502 33.502 cv
cp
.636561 .700954 .654597 .746487 cmyk
f
492.44 32.0391 mo
493.148 33.0649 493.029 34.4014 492.175 35.0254 cv
491.322 35.6514 490.055 35.3267 489.347 34.3008 cv
488.639 33.2739 488.758 31.9375 489.611 31.313 cv
490.466 30.6895 491.731 31.0137 492.44 32.0391 cv
cp
0 0 0 0 cmyk
f
489.039 24.3164 mo
487.093 26.0073 484.896 27.9951 483.422 31.4375 cv
482.438 33.7393 480.419 32.6641 480.901 30.3027 cv
481.289 28.4063 484.425 25.1519 488.175 23.646 cv
489.775 23.0044 489.844 23.6196 489.039 24.3164 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
485.954 44.5522 mo
486.091 45.1611 485.471 45.8198 484.567 46.0229 cv
483.664 46.2261 482.822 45.8975 482.685 45.2881 cv
482.547 44.6782 483.168 44.0186 484.071 43.8159 cv
484.973 43.6118 485.816 43.9414 485.954 44.5522 cv
cp
0 0 0 0 cmyk
f
472.852 18.6484 mo
474.566 17.4424 475.568 14.6958 472.54 11.5308 cv
469.511 8.36621 462.788 8.27295 458.875 9.97656 cv
454.963 11.6807 451.461 15.8032 452.457 20.1997 cv
453.347 24.1216 456.594 25.1929 460.063 24.5908 cv
460.646 26.5161 461.257 27.479 461.672 27.3384 cv
462.376 27.1001 465.011 25.7876 465.523 25.5327 cv
465.357 24.8008 464.901 23.1318 464.901 23.1318 cv
466.327 24.9351 li
467.166 24.7598 470.178 23.1304 470.479 22.8926 cv
470.24 22.5918 469.142 20.8696 469.142 20.8696 cv
471.329 22.4321 li
472.159 22.1514 474.675 20.7378 474.675 20.7378 cv
474.932 19.9712 472.852 18.6484 472.852 18.6484 cv
cp
f
462.773 16.8706 mo
463.422 18.0874 463.024 19.5669 461.886 20.1738 cv
460.747 20.7817 459.297 20.2896 458.647 19.0723 cv
457.998 17.855 458.396 16.376 459.534 15.7686 cv
460.674 15.1606 462.123 15.6548 462.773 16.8706 cv
cp
0 .970642 .96051 0 cmyk
f
468.694 13.6294 mo
469.6 14.668 469.602 16.1489 468.698 16.936 cv
467.795 17.7246 466.327 17.521 465.421 16.4805 cv
464.516 15.4419 464.514 13.9595 465.418 13.1724 cv
466.32 12.3843 467.788 12.5889 468.694 13.6294 cv
cp
f
506.708 69.3447 mo
507.829 72.1582 507.643 75.2832 506.201 77.9165 cv
503.412 83.0044 495.486 88.9961 485.414 91.1465 cv
485.256 91.6377 485.063 92.084 484.832 92.4824 cv
484.189 93.5986 li
482.909 93.7441 li
479.011 94.1855 459.653 93.291 456.311 84.9058 cv
456.084 84.3384 455.937 83.7451 455.87 83.1426 cv
455.253 77.5425 463.948 74.8208 473.152 71.9404 cv
474.625 71.48 476.039 71.0376 477.309 70.6099 cv
478.733 70.1279 li
478.733 70.1279 479.909 71.2036 479.941 71.2344 cv
482.621 70.0552 484.647 68.8989 486.616 67.7749 cv
489.154 66.3257 491.551 64.9585 494.72 63.9839 cv
500.752 62.1309 505.162 65.4624 506.707 69.3438 cv
506.707 69.3442 506.707 69.3442 506.708 69.3447 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
458.615 83.3887 mo
459.217 86.0479 466.972 89.8193 478.692 89.415 cv
491.599 88.9688 501.25 81.6431 503.963 76.6914 cv
506.801 71.5146 502.768 64.1782 495.47 66.4214 cv
488.169 68.6655 485.357 73.1938 470.88 77.0254 cv
462.918 79.1323 457.913 80.2837 458.615 83.3887 cv
cp
.0250248 .567285 .998169 0 cmyk
f
457.517 84.1372 mo
458.894 87.5938 467.399 91.0811 478.735 90.6895 cv
492.103 90.2266 502.188 82.584 505.082 77.3047 cv
506.342 75.0039 506.503 72.2749 505.524 69.8164 cv
504.143 66.3491 500.383 63.5776 495.095 65.2026 cv
492.061 66.1348 489.832 67.4077 487.25 68.8823 cv
483.44 71.0586 479.12 73.5259 470.553 75.793 cv
469.417 76.0928 li
461.598 78.1538 456.432 79.5156 457.371 83.6699 cv
457.406 83.8257 457.456 83.9829 457.517 84.1372 cv
457.517 84.1372 li
cp
458.702 83.665 mo
458.666 83.5718 458.635 83.48 458.615 83.3887 cv
457.913 80.2837 462.918 79.1323 470.88 77.0254 cv
485.357 73.1938 488.169 68.6655 495.47 66.4214 cv
499.895 65.061 503.118 67.2222 504.338 70.2881 cv
505.132 72.2798 505.081 74.6538 503.963 76.6914 cv
501.25 81.6431 491.599 88.9688 478.692 89.415 cv
467.372 89.8066 459.752 86.2998 458.702 83.665 cv
458.702 83.665 li
cp
.75021 .679683 .670222 .90164 cmyk
f
478.694 89.4111 mo
466.97 89.8184 459.217 86.0439 458.617 83.3906 cv
458.546 83.0986 458.536 82.8193 458.578 82.5562 cv
460.572 84.9458 468.183 88.1543 484.055 84.083 cv
503.121 79.187 502.975 66.876 496.441 66.1841 cv
503.125 64.8398 506.674 71.7515 503.966 76.6914 cv
501.254 81.6416 491.599 88.9648 478.694 89.4111 cv
cp
.101595 .727993 1 .0109865 cmyk
f
465.494 77.2212 mo
467.486 76.437 469.712 75.7056 471.896 75.0098 cv
475.448 80.21 476.498 87.3027 475.815 91.0332 cv
473.539 90.8057 471.029 90.4053 468.637 89.8213 cv
468.751 86.3447 467.813 81.3936 465.494 77.2212 cv
cp
0 0 0 0 cmyk
f
471.896 75.0098 mo
474.103 74.3047 476.269 73.6523 478.121 73.0234 cv
481.96 76.5273 484.784 87.4521 482.622 91.2139 cv
481.239 91.3701 478.726 91.3291 475.815 91.0332 cv
476.498 87.3027 475.448 80.21 471.896 75.0098 cv
cp
0 .970642 .96051 0 cmyk
f
458.407 82.8618 mo
458.17 80.7051 461.33 78.8521 465.494 77.2212 cv
467.813 81.3936 468.751 86.3447 468.637 89.8213 cv
463.431 88.5381 458.792 86.332 458.407 82.8618 cv
cp
f
458.407 82.8618 mo
458.384 82.688 458.391 82.521 458.424 82.3525 cv
459.443 83.7847 462.563 85.625 468.391 85.9668 cv
468.597 87.3574 468.673 88.6729 468.637 89.8213 cv
463.431 88.5381 458.792 86.332 458.407 82.8618 cv
cp
.132235 1 1 .0386358 cmyk
f
468.391 85.9668 mo
470.501 86.0957 472.964 86.0293 475.809 85.6846 cv
476.083 87.752 476.072 89.6318 475.815 91.0332 cv
473.539 90.8057 471.029 90.4053 468.637 89.8213 cv
468.673 88.6729 468.597 87.3574 468.391 85.9668 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
475.809 85.6846 mo
478.007 85.4121 480.428 84.9697 483.1 84.3262 cv
483.552 87.1377 483.477 89.7295 482.622 91.2139 cv
481.239 91.3701 478.726 91.3291 475.815 91.0332 cv
476.072 89.6318 476.083 87.752 475.809 85.6846 cv
cp
.132235 1 1 .0386358 cmyk
f
457.494 84.4321 mo
457.495 84.4321 457.495 84.4326 457.495 84.4326 cv
460.366 91.6338 478.436 92.9668 482.767 92.4775 cv
483.168 92.4316 483.525 92.1982 483.726 91.8467 cv
485.534 88.7061 484.439 82.4624 482.66 77.9907 cv
481.932 76.1636 480.703 73.6553 478.983 72.0845 cv
478.641 71.771 478.154 71.6694 477.716 71.8174 cv
476.446 72.2466 475.03 72.6895 473.533 73.1572 cv
465.225 75.7578 456.636 78.4448 457.138 83.0024 cv
457.191 83.4902 457.312 83.9707 457.494 84.4321 cv
457.494 84.4321 li
cp
458.68 83.9619 mo
458.54 83.6099 458.447 83.2441 458.404 82.8628 cv
457.938 78.6265 470.596 75.5669 478.124 73.0254 cv
479.401 74.1938 480.568 76.186 481.475 78.4629 cv
483.288 83.0156 484.064 88.7051 482.622 91.2109 cv
478.066 91.7275 461.147 90.1514 458.68 83.9619 cv
458.68 83.9619 li
cp
.75021 .679683 .670222 .90164 cmyk
f
490.342 48.7305 mo
488.391 51.2397 480.87 55.3999 474.122 55.7432 cv
475.036 62.8354 479.781 67.7554 487.216 64.3232 cv
494.184 61.1079 492.629 52.8486 490.342 48.7305 cv
cp
f
476.176 56.4517 mo
477.383 56.7202 485.385 55.0352 489.775 50.5728 cv
490.2 52.1309 489.988 52.9102 489.351 53.689 cv
488.265 55.0161 482.992 57.4043 480.426 57.939 cv
478.726 58.2935 477.097 57.8682 476.176 56.4517 cv
cp
0 0 0 0 cmyk
f
478.866 62.2603 mo
478.654 59.8516 487.438 56.8057 489.988 59.71 cv
490.2 62.6143 481.347 66.5806 478.866 62.2603 cv
cp
0 .970642 .96051 0 cmyk
f
305.423 125.335 mo
302.855 126.94 299.746 127.317 296.897 126.368 cv
291.395 124.535 284.083 117.807 280.165 108.284 cv
279.653 108.215 279.181 108.103 278.745 107.95 cv
277.532 107.516 li
277.161 106.281 li
276.029 102.526 273.449 83.3198 281.102 78.5322 cv
281.619 78.208 282.177 77.9561 282.758 77.7837 cv
288.157 76.1753 292.391 84.2427 296.868 92.7842 cv
297.586 94.1504 298.273 95.4639 298.922 96.6348 cv
299.651 97.9521 li
299.651 97.9521 298.802 99.3008 298.777 99.3389 cv
300.417 101.765 301.916 103.551 303.374 105.287 cv
305.255 107.525 307.027 109.639 308.554 112.582 cv
311.455 118.184 308.965 123.119 305.424 125.334 cv
305.423 125.335 305.423 125.335 305.423 125.335 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
283.005 80.5283 mo
280.498 81.5952 278.173 89.9004 280.665 101.361 cv
283.414 113.979 292.347 122.164 297.703 123.947 cv
303.304 125.813 309.8 120.535 306.29 113.755 cv
302.776 106.974 297.817 105.017 291.461 91.4561 cv
287.964 84.0005 285.936 79.2822 283.005 80.5283 cv
cp
.0250248 .567285 .998169 0 cmyk
f
282.073 79.582 mo
278.92 81.5542 277.009 90.5449 279.42 101.63 cv
282.266 114.698 291.588 123.257 297.301 125.157 cv
299.789 125.987 302.503 125.658 304.748 124.255 cv
307.911 122.275 309.966 118.08 307.421 113.168 cv
305.962 110.351 304.311 108.385 302.397 106.109 cv
299.575 102.749 296.376 98.9385 292.612 90.915 cv
292.116 89.8516 li
288.689 82.5269 286.427 77.6875 282.507 79.3545 cv
282.359 79.4175 282.214 79.4951 282.073 79.582 cv
282.073 79.582 li
cp
282.75 80.6631 mo
282.835 80.6099 282.921 80.5635 283.005 80.5283 cv
285.936 79.2822 287.964 84.0005 291.461 91.4561 cv
297.817 105.017 302.776 106.974 306.29 113.755 cv
308.419 117.866 306.87 121.422 304.071 123.174 cv
302.253 124.31 299.909 124.684 297.703 123.947 cv
292.347 122.164 283.414 113.979 280.665 101.361 cv
278.258 90.291 280.346 82.1665 282.75 80.6631 cv
282.75 80.6631 li
cp
.75021 .679683 .670222 .90164 cmyk
f
280.67 101.36 mo
278.174 89.8975 280.502 81.5938 283.004 80.5313 cv
283.278 80.4092 283.553 80.3496 283.818 80.3423 cv
281.823 82.7324 280.028 90.7939 286.872 105.682 cv
295.097 123.565 307.184 121.221 306.696 114.669 cv
309.214 121.004 303.049 125.732 297.703 123.95 cv
292.349 122.168 283.417 113.978 280.67 101.36 cv
cp
.101595 .727993 1 .0109865 cmyk
f
290.304 86.1934 mo
291.431 88.0137 292.55 90.0723 293.624 92.0977 cv
289.143 96.5215 282.353 98.8223 278.56 98.8184 cv
278.377 96.5381 278.321 93.9961 278.469 91.5381 cv
281.909 91.0293 286.613 89.2217 290.304 86.1934 cv
cp
0 0 0 0 cmyk
f
293.624 92.0977 mo
294.713 94.1416 295.742 96.1543 296.691 97.8672 cv
293.931 102.27 283.687 107.002 279.599 105.548 cv
279.197 104.215 278.79 101.734 278.56 98.8184 cv
282.353 98.8223 289.143 96.5215 293.624 92.0977 cv
cp
0 .970642 .96051 0 cmyk
f
283.486 80.2285 mo
285.567 79.6099 287.955 82.3887 290.304 86.1934 cv
286.613 89.2217 281.909 91.0293 278.469 91.5381 cv
278.801 86.1875 280.142 81.229 283.486 80.2285 cv
cp
f
283.486 80.2285 mo
283.654 80.1753 283.82 80.1509 283.99 80.1548 cv
282.765 81.4146 281.511 84.814 282.218 90.6084 cv
280.886 91.0576 279.605 91.3682 278.469 91.5381 cv
278.801 86.1875 280.142 81.229 283.486 80.2285 cv
cp
.132235 1 1 .0386358 cmyk
f
282.218 90.6084 mo
282.468 92.7061 282.973 95.1182 283.821 97.8545 cv
281.837 98.4951 279.984 98.8213 278.56 98.8184 cv
278.377 96.5381 278.321 93.9961 278.469 91.5381 cv
279.605 91.3682 280.886 91.0576 282.218 90.6084 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
283.821 97.8545 mo
284.482 99.9688 285.352 102.272 286.462 104.786 cv
283.775 105.733 281.212 106.124 279.599 105.548 cv
279.197 104.215 278.79 101.734 278.56 98.8184 cv
279.984 98.8213 281.837 98.4951 283.821 97.8545 cv
cp
.132235 1 1 .0386358 cmyk
f
281.78 79.6123 mo
281.778 79.6123 281.778 79.6133 281.778 79.6133 cv
275.208 83.7236 277.125 101.743 278.382 105.915 cv
278.499 106.303 278.792 106.612 279.174 106.746 cv
282.588 107.963 288.534 105.771 292.616 103.221 cv
294.284 102.178 296.531 100.52 297.77 98.5469 cv
298.017 98.1543 298.029 97.6592 297.808 97.252 cv
297.156 96.0781 296.468 94.7646 295.738 93.377 cv
291.695 85.667 287.516 77.6968 283.122 79.0044 cv
282.651 79.146 282.2 79.3496 281.78 79.6123 cv
281.78 79.6123 li
cp
282.454 80.6943 mo
282.775 80.4927 283.118 80.3364 283.485 80.2266 cv
287.57 79.0098 292.845 90.917 296.69 97.8691 cv
295.771 99.3359 294.018 100.84 291.94 102.139 cv
287.785 104.737 282.326 106.518 279.602 105.546 cv
278.279 101.156 276.806 84.2285 282.454 80.6943 cv
282.454 80.6943 li
cp
.75021 .679683 .670222 .90164 cmyk
f
316.254 116.508 mo
314.457 113.513 li
341.051 100.745 li
341.376 100.587 341.644 100.332 341.814 100.011 cv
348.007 88.3955 li
348.289 87.8691 348.272 87.2334 347.965 86.7207 cv
347.657 86.209 347.104 85.8955 346.508 85.8965 cv
333.343 85.8984 li
332.981 85.8984 332.629 86.0146 332.337 86.2285 cv
308.563 103.693 li
306.766 100.698 li
306.282 99.8945 305.238 99.6328 304.433 100.116 cv
300.077 102.73 li
299.273 103.214 299.012 104.259 299.495 105.063 cv
301.698 108.735 li
290.614 116.88 li
289.905 117.399 289.711 118.372 290.162 119.125 cv
291.173 120.81 li
292.185 122.495 li
292.637 123.247 293.587 123.532 294.378 123.152 cv
306.778 117.199 li
308.983 120.871 li
309.467 121.676 310.512 121.937 311.316 121.454 cv
315.672 118.84 li
316.477 118.355 316.737 117.312 316.254 116.508 cv
cp
f
292.631 119.935 mo
293.642 121.62 li
340.313 99.2129 li
346.508 87.5957 li
333.343 87.5986 li
291.62 118.25 li
292.631 119.935 li
cp
.280522 .914061 1 .298253 cmyk
f
344.572 88.7568 mo
338.546 100.061 li
340.313 99.2129 li
346.508 87.5957 li
333.343 87.5986 li
331.763 88.7607 li
344.572 88.7568 li
cp
.215396 .82446 1 .119539 cmyk
f
310.441 119.996 mo
300.952 104.188 li
305.308 101.574 li
314.797 117.382 li
310.441 119.996 li
cp
f
314.151 117.77 mo
304.662 101.962 li
305.308 101.574 li
314.797 117.382 li
314.151 117.77 li
cp
.144869 .807401 1 .0376593 cmyk
f
307.234 115.754 mo
307.191 115.682 307.169 115.595 307.176 115.505 cv
307.866 105.92 li
307.883 105.686 308.087 105.51 308.32 105.527 cv
308.555 105.545 308.731 105.747 308.715 105.981 cv
308.023 115.565 li
308.007 115.799 307.803 115.976 307.569 115.959 cv
307.426 115.948 307.305 115.868 307.234 115.754 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
303.189 109.013 mo
303.12 108.898 303.106 108.754 303.165 108.621 cv
303.26 108.406 303.512 108.311 303.725 108.405 cv
312.51 112.303 li
312.724 112.398 312.82 112.65 312.725 112.864 cv
312.629 113.079 312.379 113.175 312.163 113.081 cv
303.381 109.183 li
303.298 109.146 303.232 109.085 303.189 109.013 cv
cp
f
301.76 115.371 mo
300.225 116.66 297.69 116.17 296.099 114.275 cv
294.507 112.381 294.46 109.8 295.996 108.511 cv
297.531 107.222 300.064 107.712 301.656 109.606 cv
303.248 111.501 303.294 114.081 301.76 115.371 cv
cp
f
300.894 114.34 mo
299.635 115.396 297.407 114.815 295.916 113.042 cv
294.426 111.267 294.236 108.971 295.495 107.913 cv
296.751 106.856 298.981 107.438 300.472 109.214 cv
301.963 110.988 302.152 113.284 300.894 114.34 cv
cp
.0250248 .567285 .998169 0 cmyk
f
235.602 139.2 mo
233.846 139.532 232.024 139.728 230.186 139.781 cv
224.713 139.941 220.095 137.864 216.829 133.772 cv
211.254 126.789 211.002 115.909 212.106 111.636 cv
212.938 108.415 214.673 106.331 216.866 105.915 cv
219.488 105.42 221.812 107.173 223.777 111.126 cv
226.551 116.707 232.367 116.89 236.758 116.059 cv
238.415 115.744 240.125 115.225 241.702 114.554 cv
245.44 112.962 247.85 112.13 249.757 111.769 cv
252.739 111.205 254.938 111.82 256.292 113.6 cv
258.033 115.887 258.208 119.344 256.772 123.082 cv
254.459 129.107 247.526 136.943 235.603 139.201 cv
235.602 139.2 235.603 139.2 235.602 139.2 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
254.264 115.145 mo
252.756 113.165 249.105 114.174 242.7 116.9 cv
236.145 119.689 225.781 120.893 221.493 112.262 cv
218.35 105.936 215.573 108.408 214.575 112.273 cv
213.098 117.989 214.604 137.687 230.111 137.231 cv
249.038 136.679 258.292 120.438 254.264 115.145 cv
cp
.101595 .727993 1 .0109865 cmyk
f
218.19 126.442 mo
217.14 126.148 217.447 129.187 218.295 131.475 cv
213.911 125.313 213.633 115.938 214.575 112.273 cv
215.573 108.408 218.35 105.936 221.493 112.262 cv
223.213 115.725 225.904 117.604 228.942 118.438 cv
228.708 119.756 225.248 118.705 224.626 119.308 cv
223.555 120.366 226.811 123.22 225.638 123.874 cv
224.463 124.529 221.786 122.588 221.278 123.695 cv
220.515 125.337 222.919 128.576 221.667 128.813 cv
220.414 129.05 219.562 126.833 218.19 126.442 cv
cp
.00985733 .0806592 .600977 0 cmyk
f
259.759 159.608 mo
255.207 159.113 250.981 157.946 248.456 156.492 cv
244.861 154.42 244.61 146.79 247.494 127.334 cv
247.634 126.386 li
248.762 118.671 253.464 115.411 257.622 115.602 cv
257.818 115.61 258.01 115.625 258.2 115.646 cv
262.433 116.106 265.08 119.254 266.066 125.002 cv
266.433 127.138 266.602 129.713 266.781 132.439 cv
267.046 136.465 267.446 142.55 268.751 143.913 cv
271.92 147.222 274.69 152.619 272.071 156.942 cv
270.188 160.047 264.336 160.104 259.759 159.608 cv
259.759 159.608 li
cp
.75021 .679683 .670222 .90164 cmyk
f
257.505 118.148 mo
254.082 117.992 250.988 121.073 250.157 126.755 cv
249.325 132.436 246.188 152.242 249.729 154.282 cv
254.757 157.181 268.066 158.627 269.89 155.619 cv
271.713 152.61 269.51 148.393 266.91 145.676 cv
264.009 142.649 264.601 131.536 263.553 125.434 cv
262.768 120.859 260.908 118.306 257.505 118.148 cv
cp
.101595 .727993 1 .0109865 cmyk
f
266.91 145.676 mo
268.192 147.013 269.382 148.725 270.03 150.471 cv
265.962 155.646 254.152 149.933 256.682 147.343 cv
258.799 145.172 263.783 144.551 266.757 145.507 cv
266.811 145.563 266.856 145.62 266.91 145.676 cv
cp
.0250248 .567285 .998169 0 cmyk
f
263.553 125.434 mo
264.166 128.996 264.216 134.276 264.732 138.651 cv
259.807 141.647 251.838 140.387 248.599 138.642 cv
249.086 133.769 249.819 129.077 250.157 126.755 cv
250.988 121.073 254.085 117.99 257.505 118.148 cv
260.908 118.306 262.768 120.859 263.553 125.434 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
254.631 140.938 mo
251.97 140.649 249.541 139.922 247.928 139.032 cv
247.614 138.86 247.5 138.464 247.673 138.15 cv
247.847 137.836 248.243 137.724 248.557 137.895 cv
251.668 139.611 259.716 141.072 264.674 137.873 cv
264.977 137.679 265.379 137.765 265.573 138.067 cv
265.768 138.367 265.681 138.77 265.379 138.964 cv
262.364 140.911 258.279 141.335 254.631 140.938 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
290.88 153.891 mo
286.301 153.891 281.975 153.188 279.307 152.015 cv
275.51 150.345 274.434 142.786 275.198 123.132 cv
275.235 122.174 li
275.523 114.383 279.845 110.633 283.999 110.374 cv
284.195 110.36 284.389 110.355 284.578 110.355 cv
288.837 110.355 291.809 113.198 293.41 118.806 cv
294.006 120.89 294.452 123.431 294.925 126.122 cv
295.623 130.097 296.679 136.102 298.124 137.316 cv
301.632 140.263 304.969 145.329 302.832 149.909 cv
301.296 153.2 295.484 153.891 290.88 153.891 cv
290.88 153.891 li
cp
f
284.158 112.919 mo
280.738 113.133 277.996 116.531 277.783 122.269 cv
277.571 128.007 276.592 148.035 280.333 149.681 cv
285.646 152.018 299.033 152.018 300.521 148.83 cv
302.009 145.643 299.362 141.687 296.483 139.268 cv
293.272 136.571 292.659 125.46 290.958 119.507 cv
289.684 115.044 287.559 112.706 284.158 112.919 cv
cp
.101595 .727993 1 .0109865 cmyk
f
296.483 139.268 mo
297.902 140.458 299.271 142.03 300.104 143.697 cv
296.619 149.282 284.261 144.878 286.496 142.03 cv
288.366 139.644 293.254 138.487 296.313 139.115 cv
296.373 139.167 296.425 139.218 296.483 139.268 cv
cp
.0250248 .567285 .998169 0 cmyk
f
290.958 119.507 mo
291.953 122.982 292.573 128.228 293.559 132.519 cv
288.987 136.03 280.929 135.64 277.521 134.254 cv
277.477 129.357 277.698 124.614 277.783 122.269 cv
277.996 116.531 280.741 113.132 284.158 112.919 cv
287.559 112.706 289.684 115.044 290.958 119.507 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
283.764 135.884 mo
281.088 135.884 278.595 135.426 276.896 134.715 cv
276.563 134.577 276.408 134.195 276.546 133.865 cv
276.686 133.535 277.066 133.379 277.396 133.515 cv
280.676 134.886 288.834 135.469 293.418 131.752 cv
293.696 131.524 294.106 131.567 294.332 131.847 cv
294.559 132.125 294.516 132.535 294.236 132.761 cv
291.449 135.022 287.435 135.884 283.764 135.884 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
264.059 134.418 mo
247.334 132.348 243.734 122.409 243.659 114.437 cv
243.412 88.25 259.454 71.3872 268.272 70.9316 cv
269.112 70.8882 269.964 70.9185 270.805 71.0229 cv
285.882 72.8882 297.472 98.8643 296.762 114.188 cv
296.076 128.979 283.837 134.524 272.612 134.781 cv
269.426 134.854 266.629 134.735 264.06 134.418 cv
264.059 134.418 li
cp
f
294.211 114.074 mo
293.598 127.402 282.288 132.007 272.556 132.233 cv
263.984 132.431 246.371 131.563 246.206 114.412 cv
246.194 113.537 246.206 112.683 246.234 111.838 cv
252.938 116.137 279.454 122.372 293.971 108.605 cv
294.202 110.544 294.291 112.389 294.211 114.074 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
291.571 98.2285 mo
292.752 101.774 293.571 105.327 293.971 108.605 cv
279.454 122.372 252.938 116.137 246.234 111.838 cv
246.353 108.102 246.811 104.611 247.528 101.378 cv
257.528 104.516 277.925 106.767 291.571 98.2285 cv
cp
.132235 1 1 .0386358 cmyk
f
286.837 87.5615 mo
288.744 90.8984 290.349 94.5566 291.571 98.2285 cv
277.925 106.767 257.528 104.516 247.528 101.378 cv
248.522 96.8672 250.012 92.8623 251.776 89.3984 cv
261.5 91.5957 275.634 92.4795 286.837 87.5615 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
279.2 77.8462 mo
282.069 80.3418 284.654 83.7451 286.837 87.5615 cv
275.634 92.4795 261.5 91.5957 251.776 89.3984 cv
253.807 85.3755 256.211 82.0757 258.613 79.5469 cv
264.725 80.6885 272.361 80.7168 279.2 77.8462 cv
cp
.132235 1 1 .0386358 cmyk
f
268.401 73.4775 mo
272.254 73.2778 275.915 74.9731 279.2 77.8462 cv
272.361 80.7168 264.725 80.6885 258.613 79.5469 cv
262.286 75.6846 265.97 73.605 268.401 73.4775 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
293.971 108.605 mo
294.202 110.544 294.291 112.389 294.211 114.074 cv
293.66 126.005 284.543 130.949 275.65 132.008 cv
265.857 131.687 261.529 124.787 260.418 116.324 cv
271.105 117.998 284.888 117.221 293.971 108.605 cv
cp
.574731 .695186 .633936 .604669 cmyk
f
293.971 108.605 mo
284.888 117.221 271.105 117.998 260.418 116.324 cv
259.882 112.353 260.066 108.024 260.732 103.885 cv
270.666 104.798 282.585 103.848 291.571 98.2285 cv
292.752 101.774 293.571 105.327 293.971 108.605 cv
cp
0 .970642 .96051 0 cmyk
f
291.571 98.2285 mo
282.585 103.848 270.666 104.798 260.732 103.885 cv
261.485 99.1221 262.866 94.5986 264.516 91.0947 cv
271.928 91.4219 279.936 90.5869 286.837 87.5615 cv
288.744 90.8984 290.349 94.5566 291.571 98.2285 cv
cp
0 0 0 0 cmyk
f
286.837 87.5615 mo
279.936 90.5869 271.928 91.4219 264.516 91.0947 cv
265.63 88.7402 266.858 86.8447 268.111 85.6465 cv
274.087 79.9199 279.629 80.2627 283.277 82.2046 cv
284.555 83.853 285.744 85.6533 286.837 87.5615 cv
cp
0 .970642 .96051 0 cmyk
f
262.321 117.254 mo
254.599 116.291 248.149 113.981 245.392 112.177 cv
245.093 111.979 245.012 111.572 245.211 111.265 cv
245.412 110.958 245.818 110.868 246.117 111.065 cv
252.259 115.087 279.354 121.943 293.979 107.786 cv
294.238 107.537 294.647 107.548 294.896 107.811 cv
295.145 108.072 295.136 108.486 294.879 108.737 cv
285.996 117.344 272.977 118.582 262.321 117.254 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
226.934 123.966 mo
224.35 122.384 222.626 119.771 222.203 116.799 cv
221.387 111.055 224.143 101.509 230.918 93.752 cv
230.751 93.2646 230.639 92.79 230.583 92.333 cv
230.43 91.0547 li
231.367 90.1719 li
234.223 87.4824 250.257 76.5996 257.958 81.3101 cv
258.479 81.6284 258.953 82.0142 259.367 82.4575 cv
263.217 86.5703 257.886 93.96 252.242 101.781 cv
251.34 103.032 250.473 104.234 249.713 105.337 cv
248.86 106.577 li
248.86 106.577 247.275 106.419 247.23 106.414 cv
245.792 108.965 244.862 111.104 243.959 113.184 cv
242.795 115.864 241.696 118.396 239.743 121.073 cv
236.024 126.172 230.498 126.147 226.935 123.966 cv
226.934 123.966 226.934 123.966 226.934 123.966 cv
cp
f
257.022 83.9053 mo
254.947 82.1377 246.478 83.7632 237.337 91.1113 cv
227.271 99.2012 223.934 110.849 224.728 116.438 cv
225.559 122.282 233.183 125.74 237.682 119.571 cv
242.183 113.401 241.72 108.09 251.016 96.3477 cv
256.126 89.8906 259.444 85.9697 257.022 83.9053 cv
cp
.0250248 .567285 .998169 0 cmyk
f
257.453 82.6479 mo
254.28 80.7056 245.381 83.0093 236.539 90.1162 cv
226.114 98.4951 222.619 110.658 223.466 116.618 cv
223.835 119.215 225.341 121.497 227.599 122.879 cv
230.782 124.827 235.454 124.792 238.713 120.323 cv
240.583 117.758 241.605 115.404 242.788 112.678 cv
244.535 108.651 246.515 104.088 252.016 97.1387 cv
252.745 96.2197 li
257.771 89.8838 261.09 85.6973 257.849 82.9346 cv
257.728 82.8311 257.593 82.7354 257.453 82.6479 cv
257.453 82.6479 li
cp
256.787 83.7358 mo
256.872 83.7886 256.951 83.8447 257.022 83.9053 cv
259.444 85.9697 256.126 89.8906 251.016 96.3477 cv
241.72 108.09 242.183 113.401 237.682 119.571 cv
234.955 123.312 231.08 123.514 228.265 121.791 cv
226.437 120.672 225.055 118.74 224.728 116.438 cv
223.934 110.849 227.271 99.2012 237.337 91.1113 cv
246.165 84.0146 254.368 82.2554 256.787 83.7358 cv
256.787 83.7358 li
cp
.75021 .679683 .670222 .90164 cmyk
f
237.338 91.1123 mo
246.481 83.7642 254.95 82.1401 257.019 83.9053 cv
257.25 84.0962 257.426 84.3145 257.551 84.5493 cv
254.521 83.8311 246.507 85.8223 236.239 98.5918 cv
223.907 113.937 231.402 123.705 237.046 120.345 cv
232.501 125.425 225.518 122.019 224.727 116.44 cv
223.933 110.852 227.274 99.2041 237.338 91.1123 cv
cp
.101595 .727993 1 .0109865 cmyk
f
255.21 92.9648 mo
254.085 94.7852 252.742 96.7051 251.41 98.5713 cv
245.45 96.5361 240.359 91.4873 238.671 88.0908 cv
240.629 86.9092 242.878 85.7246 245.145 84.7593 cv
247.136 87.6113 250.853 91.0127 255.21 92.9648 cv
cp
0 0 0 0 cmyk
f
251.41 98.5713 mo
250.065 100.458 248.723 102.277 247.616 103.892 cv
242.443 103.387 233.636 96.332 233.113 92.0254 cv
234.126 91.0703 236.163 89.5967 238.671 88.0908 cv
240.359 91.4873 245.45 96.5361 251.41 98.5713 cv
cp
0 .970642 .96051 0 cmyk
f
257.504 84.2017 mo
258.986 85.7861 257.566 89.1641 255.21 92.9648 cv
250.853 91.0127 247.136 87.6113 245.145 84.7593 cv
250.081 82.6685 255.117 81.6548 257.504 84.2017 cv
cp
f
257.504 84.2017 mo
257.627 84.3271 257.722 84.4648 257.796 84.6201 cv
256.121 84.084 252.52 84.481 247.65 87.6982 cv
246.652 86.708 245.804 85.7012 245.145 84.7593 cv
250.081 82.6685 255.117 81.6548 257.504 84.2017 cv
cp
.132235 1 1 .0386358 cmyk
f
247.65 87.6982 mo
245.883 88.8604 243.951 90.3887 241.881 92.3691 cv
240.422 90.8789 239.305 89.3672 238.671 88.0908 cv
240.629 86.9092 242.878 85.7246 245.145 84.7593 cv
245.804 85.7012 246.652 86.708 247.65 87.6982 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
241.881 92.3691 mo
240.285 93.9043 238.611 95.709 236.858 97.8252 cv
234.811 95.8457 233.318 93.7256 233.113 92.0254 cv
234.126 91.0703 236.163 89.5967 238.671 88.0908 cv
239.305 89.3672 240.422 90.8789 241.881 92.3691 cv
cp
.132235 1 1 .0386358 cmyk
f
257.294 82.3984 mo
257.293 82.3979 257.293 82.3984 257.293 82.3984 cv
250.681 78.353 235.414 88.1133 232.241 91.0996 cv
231.945 91.377 231.8 91.7783 231.85 92.1807 cv
232.285 95.7773 236.901 100.121 241.006 102.634 cv
242.684 103.66 245.17 104.932 247.487 105.159 cv
247.95 105.205 248.4 104.996 248.663 104.614 cv
249.423 103.509 250.291 102.307 251.208 101.035 cv
256.303 93.9746 261.569 86.6768 258.436 83.3286 cv
258.101 82.9707 257.717 82.6577 257.294 82.3984 cv
257.294 82.3984 li
cp
256.626 83.4849 mo
256.95 83.6821 257.243 83.9199 257.505 84.1997 cv
260.417 87.3115 252.117 97.3457 247.612 103.891 cv
245.89 103.722 243.762 102.825 241.672 101.546 cv
237.491 98.9873 233.462 94.8975 233.115 92.0273 cv
236.453 88.8848 250.942 80.0083 256.626 83.4849 cv
256.626 83.4849 li
cp
.75021 .679683 .670222 .90164 cmyk
f
272.355 6.10107 mo
272.355 6.10059 272.352 6.10059 272.352 6.10059 cv
266.396 5.36377 257.392 5.21045 248.324 8.66504 cv
239.111 12.1748 232.079 18.5288 227.424 27.5498 cv
225.465 31.3477 224.229 35.6621 223.731 40.4185 cv
223.669 40.3906 223.607 40.3628 223.544 40.3369 cv
220.845 39.1772 217.81 38.3823 214.525 37.9761 cv
210.453 37.4722 206.074 37.5645 201.507 38.251 cv
201.279 38.2847 li
200.599 38.3823 199.987 38.751 199.583 39.3062 cv
199.178 39.8613 199.015 40.5562 199.129 41.2334 cv
200.495 49.3105 205.362 55.0166 210.533 58.3872 cv
210.413 58.4644 210.294 58.543 210.177 58.6216 cv
201.232 64.6138 200.188 77.0288 200.541 81.3076 cv
200.641 82.5181 201.578 83.4814 202.768 83.6289 cv
202.829 83.6362 202.892 83.6416 202.955 83.6455 cv
211.134 84.0532 219.356 82.3105 225.427 79.103 cv
225.175 80.6685 225.064 82.2573 225.196 83.9214 cv
225.602 89.0371 228.659 92.4404 233.374 93.0234 cv
238.938 93.7129 246.229 89.9355 248.788 83.3428 cv
251.611 84.5259 254.706 85.3306 258.027 85.7412 cv
260.573 86.0566 263.306 86.1465 266.15 86.0098 cv
277.731 85.4468 287.218 83.1704 294.382 79.2378 cv
295.468 79.9336 296.703 80.3765 298.03 80.541 cv
301.277 80.9424 304.859 79.689 307.859 77.0996 cv
311.222 74.1992 313.205 70.1631 313.305 66.0278 cv
313.48 58.5908 308.225 48.1597 304.047 41.9004 cv
304.176 41.5952 304.244 41.2646 304.246 40.9253 cv
304.313 28.1357 297.714 16.1929 287.434 10.4985 cv
283.693 8.42725 278.197 6.82471 272.355 6.10107 cv
272.355 6.10107 li
cp
f
229.499 57.959 mo
232.473 55.8813 230.942 46.2891 222.539 42.6797 cv
213.523 38.8076 203.242 40.5781 201.644 40.8081 cv
204.282 56.4082 221.686 63.416 229.499 57.959 cv
cp
0 .970642 .96051 0 cmyk
f
222.536 42.6816 mo
230.944 46.292 232.473 55.8853 229.501 57.9585 cv
221.786 63.3418 204.755 56.5928 201.766 41.439 cv
204.326 47.0498 211.243 55.8018 220.092 50.7988 cv
223.519 48.8594 222.687 45.1245 221.016 42.0918 cv
221.525 42.2656 222.031 42.4653 222.536 42.6816 cv
cp
.132235 1 1 .0386358 cmyk
f
214.368 39.2417 mo
210.412 38.752 206.148 38.8423 201.697 39.5117 cv
201.462 39.5464 li
201.122 39.5957 200.816 39.7793 200.613 40.0571 cv
200.411 40.335 200.33 40.6826 200.386 41.021 cv
202.357 52.6782 212.142 59.8604 220.789 60.9302 cv
224.449 61.3828 227.802 60.6992 230.228 59.0044 cv
231.696 57.9795 232.383 55.8911 232.115 53.2744 cv
231.727 49.4771 229.117 44.1177 223.042 41.5083 cv
220.452 40.3955 217.534 39.6328 214.368 39.2417 cv
214.368 39.2417 li
cp
214.212 40.5068 mo
216.916 40.8413 219.787 41.4976 222.539 42.6797 cv
230.942 46.2891 232.473 55.8813 229.499 57.959 cv
227.249 59.5308 224.204 60.0684 220.944 59.6646 cv
212.887 58.668 203.522 51.917 201.644 40.8081 cv
202.754 40.6479 208.055 39.7451 214.212 40.5068 cv
214.212 40.5068 li
cp
.75021 .679683 .670222 .90164 cmyk
f
232.613 61.627 mo
230.954 55.4263 219.946 55.1465 211.597 60.7397 cv
203.503 66.1616 202.797 77.6367 203.082 81.0981 cv
218.545 81.8696 236.068 74.5381 232.613 61.627 cv
cp
0 .970642 .96051 0 cmyk
f
232.61 61.6235 mo
236.066 74.5386 218.543 81.8687 203.085 81.0952 cv
203.011 80.2461 203.003 78.918 203.142 77.3164 cv
211.927 76.2881 221.659 74.8887 224.263 67.7598 cv
226.272 62.2529 223.247 58.041 220.46 57.0967 cv
226.292 56.002 231.511 57.5044 232.61 61.6235 cv
cp
.132235 1 1 .0386358 cmyk
f
226.059 55.5972 mo
221.333 55.0122 215.52 56.5771 210.887 59.6802 cv
202.453 65.3301 201.476 77.1323 201.812 81.2026 cv
201.861 81.8086 202.33 82.2896 202.925 82.3633 cv
202.956 82.3672 202.987 82.3701 203.019 82.3716 cv
212.907 82.8652 225.516 80.105 231.396 72.8276 cv
234.116 69.4614 234.963 65.4746 233.845 61.2979 cv
233.011 58.1836 230.173 56.1064 226.059 55.5972 cv
226.059 55.5972 li
cp
225.902 56.8623 mo
229.284 57.2808 231.875 58.8687 232.613 61.627 cv
236.068 74.5381 218.545 81.8696 203.082 81.0981 cv
202.797 77.6367 203.503 66.1616 211.597 60.7397 cv
216.23 57.6353 221.683 56.3403 225.902 56.8623 cv
225.902 56.8623 li
cp
.75021 .679683 .670222 .90164 cmyk
f
298.228 38.5918 mo
302.451 42.7866 310.962 57.2627 310.755 65.9678 cv
310.509 76.291 296.046 83.5073 292.704 72.7334 cv
290.567 65.8477 293.84 58.729 290.878 48.5 cv
287.853 38.0518 293.729 34.1245 298.228 38.5918 cv
cp
.280522 .914061 1 .298253 cmyk
f
298.224 38.5918 mo
302.449 42.7891 310.962 57.2632 310.758 65.9663 cv
310.61 72.0024 305.6 76.9844 300.801 77.915 cv
312.838 73.1094 308.722 60.6182 304.141 49.6704 cv
301.438 43.2119 298.555 38.8896 296.15 37.145 cv
296.85 37.4458 297.552 37.9268 298.224 38.5918 cv
cp
.215396 .82446 1 .119539 cmyk
f
295.066 35.5366 mo
295.066 35.5366 li
293.34 35.3228 291.751 35.9546 290.591 37.3135 cv
288.562 39.6948 288.22 43.9014 289.653 48.8545 cv
291.2 54.1943 290.977 58.7583 290.78 62.7856 cv
290.605 66.3633 290.441 69.7417 291.485 73.1118 cv
292.598 76.6958 294.975 78.8877 298.179 79.2847 cv
301.026 79.6367 304.332 78.4614 307.022 76.1406 cv
310.114 73.4717 311.939 69.7749 312.03 65.998 cv
312.254 56.5786 303.177 41.7104 299.125 37.687 cv
297.886 36.4556 296.481 35.7114 295.066 35.5366 cv
295.066 35.5366 li
cp
294.909 36.8018 mo
296.001 36.937 297.153 37.5254 298.228 38.5918 cv
302.451 42.7866 310.962 57.2627 310.755 65.9678 cv
310.586 73.0586 303.707 78.6841 298.335 78.019 cv
295.887 77.7158 293.75 76.1064 292.704 72.7334 cv
290.567 65.8477 293.84 58.729 290.878 48.5 cv
288.575 40.5464 291.431 36.3721 294.909 36.8018 cv
294.909 36.8018 li
cp
.75021 .679683 .670222 .90164 cmyk
f
231.595 55.4341 mo
233.617 63.959 238.669 84.7871 266.026 83.4619 cv
293.383 82.1362 303.729 71.2109 305.272 62.1953 cv
306.714 53.7754 302.905 52.7354 298.966 35.292 cv
293.294 10.1807 267.882 7.89258 251.444 14.4233 cv
233.396 21.5933 227.515 38.2275 231.595 55.4341 cv
cp
.0250248 .567285 .998169 0 cmyk
f
282.319 14.1494 mo
268.812 11.2456 254.31 16.3198 250.915 37.3882 cv
248.633 51.6069 253.312 79.1309 275.667 82.5137 cv
272.717 82.9702 269.507 83.293 266.026 83.4619 cv
238.669 84.7871 233.615 63.9575 231.595 55.4341 cv
227.515 38.2275 233.393 21.5942 251.444 14.4233 cv
260.604 10.7861 272.561 9.88477 282.319 14.1494 cv
cp
.101595 .727993 1 .0109865 cmyk
f
272.992 10.3423 mo
265.75 9.44629 257.93 10.4741 250.973 13.2383 cv
233.669 20.1123 225.77 36.3931 230.355 55.728 cv
232.206 63.5298 236.539 81.8003 258.155 84.4751 cv
260.637 84.7822 263.306 84.8701 266.088 84.7349 cv
278.769 84.1211 288.84 81.4453 296.023 76.7817 cv
301.859 72.9932 305.59 67.8896 306.529 62.4102 cv
307.411 57.2534 306.407 54.5562 304.743 50.0869 cv
303.533 46.8384 301.876 42.3877 300.21 35.0112 cv
295.903 15.9443 281.309 11.3716 272.992 10.3423 cv
272.992 10.3423 li
cp
272.835 11.6079 mo
284.556 13.0581 295.483 19.8735 298.966 35.292 cv
302.905 52.7354 306.714 53.7754 305.272 62.1953 cv
303.729 71.2109 293.383 82.1362 266.026 83.4619 cv
263.228 83.5972 260.664 83.501 258.312 83.21 cv
237.668 80.6553 233.41 63.0869 231.595 55.4341 cv
227.515 38.2275 233.396 21.5933 251.444 14.4233 cv
257.789 11.9033 265.467 10.6958 272.835 11.6079 cv
272.835 11.6079 li
cp
.75021 .679683 .670222 .90164 cmyk
f
240.631 51.627 mo
243.83 56.6484 248.951 72.6411 246.835 81.0869 cv
244.326 91.1035 228.631 94.9639 227.739 83.7202 cv
227.168 76.5332 231.925 70.3076 231.284 59.6782 cv
230.63 48.8198 237.224 46.2808 240.631 51.627 cv
cp
.280522 .914061 1 .298253 cmyk
f
240.631 51.627 mo
243.83 56.6484 248.951 72.6387 246.835 81.0869 cv
245.616 85.9551 241.298 89.3613 237.062 90.3008 cv
247.171 86.7461 245.58 74.688 243.332 63.8491 cv
241.575 55.3496 238.928 50.0205 236.45 48.9346 cv
237.937 48.8955 239.469 49.8047 240.631 51.627 cv
cp
.215396 .82446 1 .119539 cmyk
f
237.115 47.6875 mo
237.115 47.6875 li
235.619 47.5024 234.138 48.0186 232.943 49.1392 cv
230.764 51.1865 229.722 54.957 230.011 59.7544 cv
230.346 65.3032 229.125 69.708 228.048 73.5933 cv
227.092 77.0449 226.188 80.3047 226.468 83.8213 cv
226.821 88.2881 229.462 91.2559 233.53 91.7588 cv
239.01 92.4365 246.331 88.3486 248.072 81.3965 cv
250.361 72.2568 244.774 55.7578 241.706 50.9424 cv
240.507 49.061 238.877 47.9058 237.115 47.6875 cv
237.115 47.6875 li
cp
236.958 48.9531 mo
238.281 49.1157 239.601 50.0117 240.631 51.627 cv
243.83 56.6484 248.951 72.6411 246.835 81.0869 cv
245.285 87.2744 238.702 91.1143 233.687 90.4932 cv
230.583 90.1094 228.08 88.0186 227.739 83.7202 cv
227.168 76.5332 231.925 70.3076 231.284 59.6782 cv
230.828 52.1011 233.901 48.5747 236.958 48.9531 cv
236.958 48.9531 li
cp
.75021 .679683 .670222 .90164 cmyk
f
230.177 66.3218 mo
233.787 61.4956 270.989 32.9727 301.696 40.9121 cv
301.754 30.0698 296.485 18.4268 286.198 12.729 cv
275.822 6.98242 243.398 2.15137 229.691 28.7192 cv
222.475 42.7036 227.727 60.7373 230.177 66.3218 cv
cp
0 .970642 .96051 0 cmyk
f
300.503 31.7915 mo
301.313 34.7949 301.711 37.8843 301.695 40.9146 cv
298.045 39.9658 294.304 39.5371 290.537 39.5254 cv
295.634 37.9282 298.954 35.4541 300.503 31.7915 cv
cp
.132235 1 1 .0386358 cmyk
f
249.703 29.8047 mo
252.612 40.6309 262.488 42.5635 272.986 42.0986 cv
251.452 48.1357 232.685 62.96 230.179 66.3247 cv
227.727 60.7363 222.473 42.7002 229.693 28.7163 cv
236.456 15.6011 247.777 10.1416 258.761 8.65674 cv
252.341 12.4277 247.129 20.2188 249.703 29.8047 cv
cp
f
272.199 7.36621 mo
266.385 6.64697 257.603 6.49512 248.779 9.85547 cv
239.867 13.2505 233.064 19.4004 228.558 28.1353 cv
219.729 45.2461 228.915 66.6196 229.009 66.8335 cv
229.189 67.2461 229.574 67.5317 230.02 67.5869 cv
230.024 67.5874 230.027 67.5879 230.031 67.5884 cv
230.481 67.6396 230.925 67.4487 231.198 67.0854 cv
234.383 62.8257 266.982 37.5439 296.089 41.1455 cv
297.895 41.3691 299.673 41.7065 301.377 42.1465 cv
301.432 42.1606 301.485 42.1704 301.539 42.1772 cv
301.87 42.2183 302.207 42.1284 302.474 41.9224 cv
302.786 41.6821 302.969 41.312 302.972 40.9185 cv
303.036 28.5884 296.695 17.085 286.815 11.6143 cv
283.266 9.64697 277.801 8.05957 272.199 7.36621 cv
272.199 7.36621 li
cp
272.042 8.63135 mo
278.007 9.36963 283.092 11.0093 286.198 12.729 cv
296.485 18.4268 301.754 30.0698 301.696 40.9121 cv
299.897 40.4468 298.081 40.1074 296.245 39.8804 cv
266.75 36.231 233.575 61.7783 230.177 66.3218 cv
227.727 60.7373 222.475 42.7036 229.691 28.7192 cv
239.294 10.106 258.083 6.9043 272.042 8.63135 cv
272.042 8.63135 li
cp
.75021 .679683 .670222 .90164 cmyk
f
299.119 62.0332 mo
301.428 68.6133 295.923 76.5352 286.82 79.7314 cv
277.718 82.9277 268.466 80.1846 266.157 73.606 cv
263.847 67.0259 269.354 59.103 278.456 55.9072 cv
287.558 52.7109 296.809 55.4546 299.119 62.0332 cv
cp
.00985733 .0806592 .600977 0 cmyk
f
288.489 55.6108 mo
288.858 57.6099 286.756 59.6758 283.794 60.2217 cv
280.83 60.7686 278.131 59.5898 277.762 57.5894 cv
277.393 55.5894 279.494 53.5239 282.457 52.9775 cv
285.419 52.4312 288.12 53.6099 288.489 55.6108 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
287.759 55.7456 mo
287.724 55.5513 287.653 55.3696 287.569 55.1943 cv
287.091 56.4653 285.58 57.5786 283.64 57.9365 cv
281.367 58.356 279.281 57.5977 278.617 56.2139 cv
278.465 56.6172 278.415 57.0376 278.491 57.4546 cv
278.811 59.1831 281.143 60.2007 283.702 59.7285 cv
286.262 59.2563 288.077 57.4722 287.759 55.7456 cv
cp
.636561 .700954 .654597 .746487 cmyk
f
269.65 52.791 mo
270.583 55.9819 269.146 59.2109 266.443 59.9995 cv
263.739 60.7881 260.792 58.8408 259.86 55.6475 cv
258.928 52.4561 260.365 49.2295 263.068 48.4399 cv
265.771 47.6509 268.719 49.5977 269.65 52.791 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
268.91 53.0068 mo
268.811 52.6694 268.686 52.3477 268.538 52.0459 cv
268.699 54.2993 267.543 56.3467 265.605 56.9116 cv
263.596 57.4976 261.429 56.3052 260.39 54.1807 cv
260.419 54.5933 260.478 55.0112 260.601 55.4312 cv
261.391 58.1426 263.893 59.7944 266.188 59.125 cv
268.482 58.4556 269.701 55.7153 268.91 53.0068 cv
cp
.636561 .700954 .654597 .746487 cmyk
f
267.157 51.2437 mo
267.606 52.3906 267.167 53.6333 266.176 54.021 cv
265.186 54.4097 264.018 53.7954 263.569 52.6479 cv
263.121 51.501 263.56 50.2583 264.551 49.8696 cv
265.542 49.4824 266.709 50.0967 267.157 51.2437 cv
cp
0 0 0 0 cmyk
f
256.824 47.5503 mo
259.593 47.0884 262.788 46.6172 266.807 47.6279 cv
269.494 48.3042 269.85 46.0459 267.436 44.938 cv
265.498 44.0483 260.565 44.4595 256.79 46.4512 cv
255.179 47.3008 255.681 47.7417 256.824 47.5503 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
297.985 46.0552 mo
298.869 49.2119 297.477 52.4155 294.879 53.2075 cv
292.28 53.999 289.458 52.0815 288.575 48.9224 cv
287.692 45.7642 289.085 42.563 291.683 41.771 cv
294.281 40.979 297.104 42.8955 297.985 46.0552 cv
cp
f
297.294 46.4302 mo
297.199 46.1016 297.078 45.7896 296.936 45.4961 cv
297.089 47.6865 295.973 49.6777 294.104 50.2285 cv
292.166 50.7998 290.077 49.6431 289.078 47.5791 cv
289.106 47.981 289.163 48.3867 289.28 48.7944 cv
290.039 51.4287 292.45 53.0317 294.663 52.3789 cv
296.876 51.7261 298.055 49.0615 297.294 46.4302 cv
cp
.636561 .700954 .654597 .746487 cmyk
f
295.648 44.5122 mo
296.087 45.6787 295.647 46.9468 294.668 47.3447 cv
293.688 47.7456 292.538 47.124 292.099 45.957 cv
291.66 44.7896 292.1 43.522 293.079 43.1226 cv
294.059 42.7246 295.209 43.3452 295.648 44.5122 cv
cp
0 0 0 0 cmyk
f
294.94 38.5664 mo
292.641 39.7354 290.028 41.1318 287.765 44.1152 cv
286.254 46.1104 284.555 44.5791 285.595 42.4043 cv
286.43 40.6582 290.26 38.2598 294.264 37.7061 cv
295.971 37.4712 295.888 38.085 294.94 38.5664 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
286.325 55.0825 mo
286.311 55.707 285.549 56.1958 284.624 56.1743 cv
283.699 56.1528 282.961 55.6299 282.975 55.0049 cv
282.988 54.3799 283.751 53.8906 284.676 53.9121 cv
285.601 53.9331 286.341 54.457 286.325 55.0825 cv
cp
0 0 0 0 cmyk
f
280.729 68.7676 mo
278.984 68.5518 277.431 67.6929 276.818 66.0347 cv
276.696 65.7046 276.866 65.3379 277.196 65.2168 cv
277.526 65.0928 277.893 65.2646 278.015 65.5942 cv
278.778 67.666 281.601 67.771 283.312 67.3369 cv
286.296 66.5801 287.518 65.3452 287.271 63.3354 cv
287.229 62.9863 287.478 62.668 287.826 62.625 cv
288.176 62.5811 288.494 62.8315 288.537 63.1807 cv
289.029 67.2017 284.962 68.2339 283.625 68.5732 cv
282.685 68.8115 281.679 68.8853 280.729 68.7676 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
279.884 26.7773 mo
281.838 26.0225 283.476 23.6006 281.304 19.7959 cv
279.131 15.9927 272.629 14.2749 268.421 14.98 cv
264.213 15.6865 259.817 18.8384 259.72 23.3457 cv
259.633 27.3662 262.525 29.1924 266.037 29.4478 cv
266.136 31.4565 266.496 32.5391 266.933 32.5029 cv
267.674 32.4424 270.547 31.8066 271.106 31.6831 cv
271.122 30.9326 271.083 29.2036 271.083 29.2036 cv
272.031 31.2979 li
272.887 31.3311 276.204 30.479 276.553 30.3208 cv
276.396 29.9717 275.745 28.0347 275.745 28.0347 cv
277.49 30.0806 li
278.363 30.0088 281.146 29.2461 281.146 29.2461 cv
281.581 28.5645 279.884 26.7773 279.884 26.7773 cv
cp
0 0 0 0 cmyk
f
270.534 22.6128 mo
270.869 23.9507 270.126 25.29 268.874 25.6035 cv
267.622 25.9175 266.334 25.0884 265.999 23.7505 cv
265.664 22.4126 266.407 21.0737 267.659 20.7598 cv
268.912 20.4458 270.198 21.2759 270.534 22.6128 cv
cp
0 .970642 .96051 0 cmyk
f
277.064 20.9019 mo
277.691 22.1284 277.334 23.5654 276.267 24.1108 cv
275.199 24.6572 273.825 24.104 273.199 22.8755 cv
272.571 21.6489 272.928 20.21 273.996 19.6646 cv
275.063 19.1191 276.437 19.6724 277.064 20.9019 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 15.0.1
%%For: (WINDOWS) ()
%%Title: (Dogi_Pirate_Shoot.eps)
%%CreationDate: 7/26/2014 12:34 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6qfCN3Q6?+;X8G3OQW,:.NHror1k;'pXTCfZ:3N0u`OReXRbDd:&tN\[93tc4\XC5343r?U+9anJOU;@m-C]uapZ^/ih5<L7
%CiO`AEI)fuoA]>5J"<FdlrBM.=])'&=13ALij6u1mHj`;a%iIVB!F[k(@s(19;lajASDLaB3lipKf:V;:N#$-0<W(%\ieYpr7G>I
%?XA0Yl`C&5F#!Q<o/$<MRJicFq>',jZc2b&jB&jhq5S\O5!.Z)0<a5NY%MpL:gs'`DZ9N'\-j4jcVjbm`Q@r#l1R3KIs_%BHhdOa
%rDLA+05n;Nf?e;XWkfaa?iQbu*VSX!ZXdAX8S[15>Lp7*kX1N1.=A'-A+SC:s7uWekHg6$=.AN^bDZDt"h)m-A[t<L[N@F*"$?l2
%!nZW)j(u8S\%+N6k-!!W/bjSh`=/72s(:/;^ljb#Q^oFE1NZ#;ramW]T[t]Hs*V6R-iBL[Z<>K!q<kj@4sT.r2OWY1r1(n=VY:'A
%q4'L&!<-F(rknQoH:npD--7.hfG+*fpdH^Ne1l^%Z`L>#frLhM3!).kjkSPm*_YCe\jqkL5L-^PrH7gPgWf!V9(8La\pe_oh_<r!
%P2O6Rq"pQPmFC)IcE71ggec7:nb)#.p7*L6DI9#SE9]gccsNdB_rg7Im56$\jnT?\`F!8CHce9+mpC!^hd1`\#4&bUIb8!)E;AtP
%d8qas&[;G8.&gs3Wn"X8g!#gEQpY^'n&N&Jh%HXK4$_54YKhS\]D1\B"64co(Ps:(hlb7"4oW<=X8!27@9s-+>2Rb,)#*^rp-QB/
%d^SVq^*T/TYM[DWIe`$erD+6!1P?\urB-Lqb$>"e?S".f)gH6t(mpY>c5+0%e(RFPQ"B_,-59d/NIT\`9=#',cSGD5OJ'V.r9JZ'
%\+=If@PqrkS$cAC>-)?'HEE1X2:eaBXAd#pDQdiW<nCF_5N,tNf!\\_D=Q2c`F%=7l`A_5l[!D"h7d3*L%UmQi_FQ]\OZQkrY9A%
%hm3`/a8`@^NXPkr2&qsCQ@He<iEr[=K>PA[Fp/-.N8qdip^II^J$CF,(,q5*_S7pNr.)aG/po.dP^@r2E+o"_l`A]?VR&[]B1Og0
%)-$BtDroC<!4_p]4+9A9?DgDrn-c;U)"B7;`=p?<kMKh0n,l_/1$VFgB_Z0Z,Q>Z#3'bIcr%">Y,5dALE/aRY-^2r3J]g3lB.>N1
%k7s2&lF;`\H`Y6&;qUU'GlZ?>mM\<XgX^*!.f."C3'bG[*$F(_,Nk\=N;+3i0s9OR)(p:mrl$oX5e(+)>ZVPjO.X7UY3;rXUNf;"
%B9Zi#cpa[MbL#GO1$n_X$p<gf:5k3o]8tM7q:n(k^q]J63mS2!0q7?t!Q7^6l,BUf=$PRE\*N>PlV)lkf)]BmXoXT?FM#R??28rX
%("RglYYPU$]%r!,];o5g-Zd1QX"apon:)UH7UBfO5Pb?TQ08)$s3E@.]dUD3s3ImSjR<(tIT7,4Y:B;=8mY605Pb?T[92pBs$+9V
%p>qHqr;Z[uXn]O.T3mG%$(]*s`4nFLr*@)-s#A"TDt@GO9NLY2RH.)M?5DXK>qXS]:%AJ#o/'%^,$cir[9bd,r0#u,+QAI[F'?Z2
%-/ON/M\MXRF)5`"jghK/`Ob/TL"M)r@hf*T(26t7H(AXQXopUSBEI<7RPaed7DIB@gqKrT)$rJG]?:Yj=kg_R>>SnH&ZCoCgctdk
%SVM+:W`ns&J3S"rU7`I*[5<c9Kf[YS7B8;-Waom[blHh/WG5R5'kiDpgr`H0"V!$s!+'+#MOn/fD?K7sWoX`ND/`,M4_a]"HpKGn
%@Ae*I>-hd`5i$;82QU/'7I7)W#cfOjWF2LVA=Clo/_s`:]<^aMJHbr[KS>Al-1Eekk,O]7@]DcFl`/JSE6O6+#Ct^4QMRu,Bu<!G
%=)GjGca`<9'*+ul?9jQPJ0o(2Q7mKsok&dbd58BOhg%t<csh.aOTuTu^;_)t%W;4>oVG\%oG:rj39l3F`[PEaa"\rp^sG3Z$aHkn
%md\Bjm?)QD#\kk2(d8AeL%XBtYW@eX&_r]82!567.%ZF.C$[t@;r6REFK%h`iBP$64+N?\88'U;Ku/H]J_RRaX9`lSPm+?FA)6tl
%n1BAjE'$i8i\bke;nX@d,/@C2)?=9808LXE2AOY=5gL%60R7G],!QmpK-6*P*sZ$4/W.tf?C5a>A0mp%kM0&\;$g-fn4):K*%Xlj
%"X$Hc\)V,_q7901LCCouru1)b!'0-Eb=gEhE=gJ!U,S#ZIe8<=ckg)+'op!cfNStTYiCD<3BgY5R6q3Hn5W,O&O>X`)rMmgmBQ^D
%;m@MMJf2BFk9F>u-ist0b8-Beomn9)&]QLR!-^[?lp8KO5T"iI`pP(>.La1e/4uXZCRg!f6@@eoi8W8*U2\/^XU.'*$:GX3?m1ap
%c+Zm+)NgCn8pC%>6`O(CKFGk,!*Ma"`?W3s,62^4_CQfUV>5)3_T`.V2M&Ica9)_+Bu#[jG(fof/HBG*MZg!ZHtitQ$o05K5c57B
%L@?%rLZkrB\2M,f'K'Q!1+!QJ7m;%V&Y$S@!%;ek"['PS#-&lD^80PN]$;6[dKYI0r@%L;QBk4=J:TFT4=0L`MAmb\XKX'tK9Id,
%J/VW:g*GGt/ImFkNt.hQ&r&>9!ErD=>bVX;6o84VK_%n#FhMQtm)goDFkHhhQae*@0DK>d[Tdb$'mfCjJZ5\iI*`/Yhu_:@3=0#B
%l\3UsNL_DRDf1qM^gtj*lN6(CTP:GWY"&,k_Ki>R6s?VkU^P&R!f$nW=s9WG7);$+$asep]d#94UfZZ0Ldm5$BQU[:gaAU?AWBHJ
%iV+'F6s/&CI(&>CbWh:$L';WZ@O<\1#Xr:I9*SRp$J[?Q<K.!qMrl"/DeM\-iB\H<H:!_^hV9Ai8l2L)9umbADfAfNL"!t[)2'QI
%4FGa<8u4@9.t&4)fb;B:VUE%%8Ja31V")9aO:$rd#\S#\TN'$:J9`OO1MFt[N+^31AjMhB%E@D]`4fYuO_!CgXcRQb53(RY/&8;*
%6(sEu1oa`N?D5$NFIj=5?uU`s7-"C1R$(MOXoLfJ'lsEZ0L3W39F0so4[]RE*g!8tgnN.D1S9:,[)*Qp/>QmJ(Y4f9cU@I%<O#fH
%/!9#66Y$5U,smU?K(LrQ<Hc3V@7C%,A9Q3k&b/+*&gk$El#H<"[OfT8j!sS20Ah;A,5?_A+FtMd/Qt'NqN+h<8cuFKQrIOE=LMWr
%ks=RA$-WA?BOM`i>p5LWc_D@lLj6*;lVS"-.OGr7=1^d_%[=B[,m&mSCo^I:cdShfkNC=]LajfQK6RNN-pe!)b":GtadL`X6Ko,3
%`mGH`!Wkp!lSO<MfD1#9Y=7:kq6%NTjR5'j,["QVcqBL,@>=T7Ul$nT&uetF7BS0R1$V%lTYpRmEb)5ZBe#Vm=OfET'*SQ&YA!?$
%&L4g'CpXY7D&13,CnMD?3)MM!+<[\QktU7P`)RKiD;DFN,6GEn2WgqI@iQ*HQ-fJ-8`lId5PC"X9N"2[MaU6WJN^hJ%FPqAYNREp
%;&,eLJ:T;.n'LnUUr>c;$EjNj1uc#Jm8>,s'[A2B"/i,S7IlGNb-3(JU3NYV?>#.8>cV,0[RY.ce6GnYC=/?/j!4A-)PCI@/0OBG
%[4,Y5!194.;Ntugh-;BI"4",e!>:/lb^^Wi0WbLCh$`;<g_%:+>&P,o"FZaU$W`+SVBP8r(t!q;J:J1c+)i;:D?+ok6oAj]l[i=m
%JrdDM6PBVeC*;Q7,M,lJ'5:PO9^7g<>!tqTX?T/LMV47]fAGM_m;V%r1q%rW(Esd63:jj><hYIHUm-2Z+JLTW.AXRHk:BLC2JrN2
%!gOkHEn2e_U/>rL!V`6Fd<QRM_9r^,W_-38I#.<O7On!bQOu9>]F#F+M+o&``0/LQ$!:X"p/5gI=7oa]d(1PRTBI9$RY>[sHPDX!
%N$I6SJ42^YZ)W%J>bo@[KS<#r9O"KN'@fO<@9Q%(6fosf-tUnAdR2<KZHs:LL1%l[-gJr=PJDr]"<P;8C47S)i<dQ^,Xgr6$fUW+
%@rZYPIFoP;MDP@T'+?=$#)S;%[)h*@M3'BR/7BBM(Ffq!&VfC32g4U9ZsNn>(-F%i_f]#XLugEA7JQMORNGXP+CN%c#]%(QDs.0!
%P/bL]^!fNV/Y/L&9h^+a-,YgAU[Fh;Q]^U`W;R'6]QD!F/FgJ2%Hb:X`1_b`9N]l1mk3!Ri@^khZ<#l4.@]i61%5Ln"r+[O";5!t
%kUWtE>Wa1j7F7=SO>nTDC>iQli/K:n+rW7*8=.0?L]f@L$f?Q^@C[CE7CLF19qVhq[[8XHe1,Oij&N+UgOQj`-*#SRH:NQ)01+/l
%d=T1jhhjQN-2eDp_0=aD5=KP3!An>+A*QZ^W*-E8UsST,4Ob]HV\5h+d"\fo7[G8@\HaOpU9)3%%\emf.J,=4#q(r]8+e\,a60f<
%kS%*=W<QNfKM_R9M0)CB#;Sii2]Wn1UYoirE2#T@@n43=k\\W?bf[\uYA'[[Loq9MpN4%$9b=?Bqq"IfcWGdp67gXp/Q7Lm<$CUa
%0k)j:Cis`TSltmA?G8o?qFB_VrU/tAr:4LreUO:MhJBB65.kEE1_m\%jq;Pk]0O^3b89(*Dq3V2c>VX]^Kk.%I/*!dh;ufrT/W[7
%5Ab$t>]!6/k3UiprbHk$rPe,E.I`tdgmhYgkF8dg?ej)ZqL!@lSain&4+2h_hr4TFmU'kh?!b5=%<1RsiZHqHb7?nVY%2Tn3r=u_
%eV>l=Is8W;fNc\b#M8\8Z[]bD)ZZ1Bh3X+9G'ioP!s"@!U,ni8m&:Qo2!Rr-lX+7^oBjN]8(TeOm<"p-a#*VSp\-mXStCFYmhuU-
%gujg5]A?k"I!`]c]Xmq6bNt#-bB"1"Xrot)8\VduHOf0]Y4BpAi5``P]\T*MTDa/Fq=)S\a\_j:^Uja<\9AW&SIj;+Sf%Lg*nJ*d
%0V3oIIWosT$F^Sso8pS3rrJnVAoE.OI)'3m\INBNG)NgpUdH@(lIC@SS0kS]79JYi=.@Yp?iYZ[)S.p4&q)cESc6:`J3%qr;!BO!
%A[BA?b8:3SnjP=CF\29r%")Om'R\''!YqeI?=n=WeG.-rAQhou8PNX(/1ko;OO$+;]=<1J`e)L\[(2U52UfZXg=AreRRp/YFB0YC
%N2_F&0])'],;lt*paA9U*joLsU\3qM]>_He/3UEl_X9\KDmkuKZgTVFD>*F25@8588Kno\'k;2gl1)8Wat-1'"A+Rg2>ECP+=cEL
%.^LHL1eZ2l73D(U@;JW1^Id]fmpDd3+HnDDU0?')B!GUB>4eM!D;H%F$&W->0%slp\l$&_QMIg/gI\ehQ;AHO,aRarZ:\3O.UNo5
%AO7J>jf2KAE'[uQ5ns]r=G%0S^h)_%jiZMu^H$_bjXT=Er;Z>A/'W]MR9V2S_[B\hVk=A#DiNMESh.-Bcq!HUK)4-H<C<DK.d99F
%\Y(I.Ol;SBA`-0]TI&$oU*($J%RT1:$\1bWE2a+,(9R_3Plo5cJ6]ZB!5Setp%Vq-M#rGJAF;b,3-prC^q9Zgk8;e>njT%2D)YV!
%iI[*,A'f/.J9bm;[]2b&QUP*lb[IqNiI^=nT00.\>_Xm05NNe[PO%d&3W5RI)`b<le$jqC=ns-FR!s(*F'":galRFf:OslPC\\?V
%!:gd%/n)Qj#p@eUn@<7JH<3g4mfNH'nBU67RKVM*kl(!Wer.+nG>7P3L.,;_FUgHN#4LX7MqZYe9]?]A/a+AdGZRlOQ`]hYW3RnT
%P00#fp+?@'9aM8nASGT;'P1;`cpc=:O42_7`e$BeCKoKoY2#m4Ym(aP-5NJX.A0!%!FH`.CIsZL/"CRcQK7PF**+09EcR@rc36`A
%e,&V=!5$OFXNJ\eaD@/TBpN<W9)ufZJ1,9g^uX!Z"n*)2q]&U%SQ126!Dq`*"iqO2$USHZmM19^RSlb0N[<m3I/$;63bq,\[d[6M
%5#U_AA`^eS,G`c1&?OFc01&Kd=A;(`5Uc_O3P[3MaFVotg,VE7"gDb[Ib4gS?YM)X&;Fs0>_u0_Be^S>M&;PT5Vjd4RKA_&J1.c1
%$Xs]6[0tS$/2BWQ7c9/cbpeejiOT67/d8Ni65>.]KIjtuUWBfq#gs>$)_R?nLJ?ViBHB]-]RX\C_T,*11^M)(Li>\E%Mu3HntY"1
%V6`dY,%DNWoO1=UJZ1t%e0$%eJEstDF^O)'U=HWD[:@V:$CH>o":./mM[TfAZb<;P=946V#"T]Z@EJ:>\@t3Q/BeZ636VcU8I`!L
%GR\]o=:=W%!W!SiScRmcJGTuKRGhuhg8Vm!"oN3?HNA<k^4mcC&dSTf)OLUlKFl.[K5p4MN,V6W'>b$ViR)\BmP9%'*15r9n-`F4
%f3LM>0J7jO40DkmUjk[g#si;#>4&hcK3*sIN3DVSM]Gm*j/U!)>4g^P*ETf3Z9oG8=R<Qg*ET]0&o<]<RWe46i#7t_J.TS9"l]\d
%0f4e+?npZH"hK7QZSk@C(P(nWU]Kp]fL__[^+re&8CK.nX=Kr42:86(XIC!(e;?YgK[9o`""ZCj',K/%"e5[?`r\7-X?WM.CD\fh
%*ZE"tGn->_<iH6`M:Ah#q__V1n0Oa(+Aa6F%'45X'F6/%/?Eui^GRb_%$W!Z]IMJh!QG2ZJ21Z^..TYsoGg$=8Db4Ol'GqK?,Ip+
%1;mhD(CI*3_7IQ>)WJ7YE"W_c?G7i>aGJkJJM-'&SWWZ2^k[Gg&as%&#QP3CCI0F:HlcR6"n=MCnY)A_!La8A"E6R:^edoO`&%a!
%Os4jIQDBFrA;pe,AdaiEfrWu1npD?7QTUJ>S&LY^_9C/175MF"=ee";)1sqgo>S&DF>K3Q/BJ=jr:''Sh9=qt<be1fQS2l=N114@
%k$as)+>]*>kZ88b#^;"`6QGsdi8$@pY8s,Nb,'`0lX4KJ>T'QL658LE(!:hJCM';BPbM;3J9QQfYum3=Oc"m%8]Rc$b@lIqX[pnp
%WbVTQ[%qQgUi3V8h_:bD!@Uj([XjmeRV"G,E**J@UhhWLM#N&8I$$CKijD16f>Lrl0#c$)7<06#4Et![AU061<L([,KTSojb8/_E
%a_$g%bud"/fbL_M"h5M6crMF0U5ZN')&@.j8<UqL;FD-9'%D'7&d`D@gqCR1M,$C\6paO=%V7rZ(.ES9cDj,j92RSL$.m@4%<RaZ
%1Dk6WRjBVT!T(71RFNRNQ%7D=8-jr\KJgk`XfaISIJQ:YCR@#KQ!><QZ4K$tVA34]=sUr3jDm!*"eJM^P[#HJ><<m];r&(I=pRW5
%!*GgK+[GOH/$^-d)33T&0CaO[ZfKJMcVLj&K;=NGpqL,f8K:Ors*lN/`!lR?*mdS+o^?.d*CHUCC&B9nV]iQ%mm@asLA+N`qp7aH
%\ij$_4u<jP`ZD.)+.<K-?k68m:D9:2LNH)NP0g1)CJRMlB-!K7mXeWJe65EqnjT?d!Lb$3$1u1KpIi%tFJ2]Cm0#X[H6e0NR9VaX
%"^SA3=fl1&OJ>?N;*11^[dk9g'Lel2Z?G06`_2Vpi<uSG.;!*8aiIYKPD';r;Sncs>bn_ZKq&LTk/#,KGfL<$a@75Zd&]YAB&\ur
%`V(8q?Xi%]/n/rMcq5$Z]**"qRJka\(EMg@pW@Bao'Y&5LU!+\pLS9RJ:0\@jdrO,HdtJ"[-57^[p4jdlLJki'a)s[9/$-><0q%o
%blF1f9Jr2TKTni<7jq57*GH;Q#KTe:6i,5I/C/Jc>!mJ$N9#L5P\WQ/W(CH##b>DWG"%]NQGSU%\>bZY==,Ir:(aIZjkcHmD(PW<
%7*b=CO%M_n"`e_+aiQ7Rli-jIS1NZ/OcC3CV2j<-!In.!XW5""fi=q\9*8t)+sT@2/2+6gTGfJ!`2kVm`'IS:lPf*`XS]'R6;e4_
%/JUi7NQ=(QlBqc*Yp,Z:8tfZg@`lY&kkMVhK@q#VSK6?BHYZ9;/6c2XfMtk4;-+s02I\BDM%m1SjAE4XY!i\/$'_:466o>?8=_5O
%H?k^M9pRY&GAK_!ga-[SEb8CmN$V.jqJ@WhP'fj0^KPGNKik+_m8#<3Q*X%nTiDH^6g[c20=GMY@[iV9r@CNq)+f2#/eE79$K3Sn
%DkOfH,:8hdo,t-QMm.;NN4E+Zre/:2]ZPL8e@T+B:Fau?S>RN1rouTUGQH>.::t]*LXpJ37f3gF0lJ_a-c&mCHkX'5#NVRL`CjX0
%!GUs!'e:YO[,SXS=!JcFRP:']P%"EdX`tinnLgbi,'/p/nbQLhaluK@\]Lu/B97U3S8:FigW)>El>^'B0eV/*^O,mnF29&N(ACB3
%qrNlE;N(QuMZhOpQj33Oe4IE/8?=?C2^4_D<?`/L1j/A%+]\ZP'7c;RGc1,o8h:1'=:J.U8JY'MXIT5si?ZBB+<SJ3K_69VL/''0
%D]jB2CLNA6kLii'k0eMlfBdQ(pa)&h;e<X!P3_u8S^)Hlc7f/C3AR+!2`Ck^n)76lAg?/+.pgGa-kF`FU+f6%0aKu.I6^E0,[0.)
%%d8>Z<QmR[3)$!g,:,cO(ji<F`hM#h1mbR5Uqo(=A(:@:5-s&X[6D$$js8!PV6V6d"&@[0=><EeCn3uKA0\D7R_2.ifHNtn6FK8n
%;-lW8P7\U?9ogleaJ5%DVkLL$,rF[lQMc?"GR7UJ)Nmd[Ld)It1A3HRic>6>%K8!5)p+[CG\?$<AC"g9T$1A#Rk73:-t0OCs'2fn
%'IBel9qGP^QDWY)<Bht9Ph],%rFXk8b!cEnn*U\Ukc;/5Xf;S>3],@6;CCGZop(F5J7YZ7YT]ZEZkD,n$1%qOfF\m.7ptYmg;^6s
%`n;iu&joSZ!kr&iKMd\,%C$,FKSN[kn4N')X;dNl2fP($cj(Iu2khCMh:n%+13YYFg0kq,/$X@=B3k!BmlJ6Hee2)E16ITir`7-F
%+W'GM9@4=#F.8A(VYU<t+:'4V;Q[`j'nS(Ue@fMfQIk=9LV,+nn"QBk^`I/DG7o/bjR#F<GY>L47J8.<8.F7Ia;RKR?F<3V#-f2k
%$LXQfM&I]+PEn$s_A#Lg8ruXW.oo>b5aJgR-SC5/0Vp40Sl[VT86JQHPnu9,#,k'9e7/fkPN&06U'sR'0JXiIW!_U>%Il^EIVB@?
%;t%#L&'X;k+'."FeV/Ej6&T&6l<h1$E.`U$p?=l$I6ZUA^L4b8MYrI\UAq[F=5!=_nhoV=,mlMWm5"J'!k,a,TBO"4q0rJgEF9)X
%3mFdHrWc)FXB^,^L0UotnM$nk+ndPLj=O"b.OO^:KO0A8:Vf$H0(p`uL.=9G:cFC2:eaaa$EWQm[`A69C4*!KI`23hdenUsa717G
%!I"ALWX#gVW4iJe"]ZLPI?<K*)Y06#<lfT\C5/f/WclJ[Tk]C`,AM<+l\WEV.=siq(g(!AI8MlAP^W;#2(k(NYUZeH2Hr_R=X]US
%-^h@fRFS,!fc>&U'JBYG0ZT)kF9kBnEJ2t-/HUGMK/S;X>6H,l<+$BL^I8-5`'Km.r@J'`$e2Khm'd6g)U9]9aM]Mpop,[@`!ojI
%OAAWp5G=/u?2Q8l$?850>7pD^;#&?T1Lj7iM(/f!b'9>lPcZ@D9.-i]_-M`tGOZ;Ik96Z2,,:/Np4WnGWn`ch7A#e=`!\ePJR<2]
%A0h7.1"_4KYaVF/-_26;64CHdTM#h-%;KlH"sa47C<494#SEfLI\`nfln4L;Ya(j_TF.@o,6BN<2@IJnTu7n(SD-Pfo86Xubj5_8
%jBC_KWJU:$BYbqb8%OnH3ufWK%K^P^k7#[mR,k!O<^@#ZP!a0,RDDLpW0(OK#aJ2*$-;"%9`/Yhmi1ZA]#9*?_ZMJCq,?bIg'RP3
%lO;Q?/V_%;CR:`-aH.(&C<55Y284b/G,>W?@,N>b>pB.T>lD;JQP+tnc@0s3.oY#l9FT1P,0mOlT,De6!a/HB$Q'6''\4l)'p2o(
%?:qFP]P3WaaiU2o<c.Y<'?P,_dAU;0!Pb`M!r1$6Z9ZB";+ZUJ:uJDX)lR_[,h7VOBbr$!=%#2$;M,;m<\&a/-*.IUq3"'4QUEu5
%V5bsAck=;g?'m2Kg+FcjYp#QdZljLb[^[o7!NR2kBIPViQ[mF?X`k6ZXbcZ5=WR]M.U-IOBcN;LE/)`&N$'j-7E`fi)+.6ncH*Z;
%bdDT0Qj#3EUs_mCa_YYQF/$esTWFj/"[UcP9O!)kROnl@]S>WelN/mN@Zq*aVBpPFF;!i5)Tu>$VTFCXa:Nq!OUH$bfV-YT8+fjN
%6/ZpS+<l.Yi>9%;K#"tKO_J(<2)UK!DugV>6$<c9.Dl//7gRZ95m\el5!l36%nZhLJ!<b]+-Zb@nkh`]Hr'n&n"YPNq*6N6@j=@K
%JtU70"`:G(2QV3.$J8*BMsr(-MWh@n7H+jJr_c(FiiA*B-Fst`X7[8hSX.[2l<KH?^8&H`_kS$(ZMp+X<utX9kH`K8qMU$eWcQ_<
%,p)7mOE0Gp7hoBb\AG[r@C!:n;X8pG=)PBaX,JKK@C([RU\9CoB/P'[8_u?8U"(:>PRWDTg,V"=M?-QVC>"Qe6+(/q,T<>L[2N;n
%L.1Dp&!/:!7_Zm1)-]"-,E6ZY[YDTA!Olfg[)C?OlrF4,(F0ME-.m9-_O-c9;[QRHLduJ&Xp3ldc7leJiODNnT&^FeJ>380WhC&>
%NeZ_3J1a`l?LYp)UYZiO'=m-Lr&P4Un&*/A*@@VuN78A!%ti:t"4;Qr;30Re-D;USN]7pdD_VpU?6([,\!]q!OlbR.2WFS`NFT5n
%O4*u%Fam6@=&m#9kd-`8:rnEY7Z?(ge]?mP+aM"`3hMLe[pY&G,WSi_=b9k7!aj@+W*E<r(#gf47Q*-gQDPC6BL9tdP*CMjOocSY
%ZE7g%X%A"44`U?n7a_K=&<\q"]Q6g<#0S!gb\KReXjT]Sa<-@0r$`'4bfJS0"lUW(@''`!Bip54qHKbY>@eS1fi[oSb?M,mhrXPe
%hKCcc>d[nb@_Lg%DS=2dMtVgi_;<>uEZW1iN#P4&$Y8lAj$o/)!Z?F)\5<se@#=:`d1e@ph?hWPrS@j0HK"digkR5:2Ntkb*>G/q
%(;3ufNVJ^'SLCgD@`o+8/F2`"TK"]er>2._1jTiKUK[=Qrl^iRIkl_jHm,AK7RU#Eper/HQVI-s:@6jH[=>(fr.W\$]:QTm-+ph$
%RJKV#0sk=9;n,mXG:HM!LN*eZg1\O]:,PU*RRXsPM!'`Y/+K!>ln&J7Buj)a&heM_38KZ\MgaWE47!W!e/'_s;M]Ot@I3C#4KE5E
%;_6"U]hc$aHFlEfJg3%"BuC2u4Ai>;W1Mmtm`]%!i"_7)Jr`'R=\-VA1,mrOjtISUV4XhC0_KkFjR$,A7/fMT+2o+l!Kpn#NA/M,
%N0BNO6rBmh;Db'`VNL6]@dgHjl!KMQJE&L8=sIQV4Yf/og4O/o@t5=TLuu/32E'Y6)RR#4ea6q86.erqJen<ohTORRmhK$:gPl7q
%rOkNJGIp^+_"g0fQ+Pj#+Of__R60.A#9+/L2lJ!dd%r\b,WAj!OrI@Q*)I:gA.lD88B@E@f]kLi]rP*jaa6*$&21H=%WBD1A<qJ3
%iiQ=B\@j_q!4#n=P(o"GaE9PB9uS&hG]Bot3G0$ON)D@aZW7\YP=_]Q'amSe03p:]'U2Qr;IN/9-.ZF=&t(d"7+'!)fd+.5B5P?-
%3hWa`es_L3ls=ugBs"D?;J6MSWdu"ATf"?X+#"CZiBqBW&Ai]s;^dBoR8opcB-$0MeP2fh(G"M7.>;Ks,j*T#N%m+]R$gCsTARB1
%h22e\Y)*!(rC_MRcsh2D7-s7'qbq\89LpUd(AI]0_L&sd-1n7V*gMUL@7*hJFTJXN%uLmAoNLfHEe66e'tfPHkfFGac,#:FKILNo
%I7O.^;P<$d"Y5q"\c@@-Td!7"ck&@F&KOFED)E]1:aI8r\8Kk1:.CYqiMn=dBL.!"3'8plQ%=bE:mfU]!u),F5n]u\'%U7o)QJTk
%0.:q@-0hU7c68)aZrdmAY6`T-UAbP;G7J%lN;#q0+sDr#-r<[kYMkK+c!g($p\%S'F4_;II\B3g.r#/.dS^/ljW/]?<o,X/a]AQ$
%Pm1*cDbE%"j@!cV(W`H\8F:e:]]Gt)>.k=Z&pYE']6rBf[fHk;&.hi$$WIjCQXlRr'UZn04=[)`:"LTjiYS>LH6e`8Rj^+q<]-6-
%Fs\'i_UHI#J<Up"1@Y-D_IM2NFW"%Z%T?j\h[g5K7)X"8FZ"h*`?#&P`VZK.75*LN."T]J_H&ZgOSTEPin*n@4U/3c.TZk4>Sstf
%>hF5F2R*4\7Zp7MQD#?^C9S+aqL%(+)=mYfC9S-:nja.T+cjF[@%"g/dn"FXG]g\,ATYm4M9&me.k(+(`4h9"/,#4G>4l&#]@>$P
%ot\NFR5VXf^7E(.""cDO^JNNt<(9sUEJhG,`.jpRn#_Iq=o/lT`,=2BImtL7rQ/MP9bZQG:d.@IEoDQ"`<p0/,d7q81`S(MI'OhI
%Uk+-0@YHXLE%k/qBHbD';>R4d][2hS1L\L(jcUB]QW/j[#pl5u8,7Ju_?q`rcm>-\>qD+m(M\J/7YjT$L+^\H;c!KOa]kSlU2hE4
%N9?)EMRhS9^2c3CE7T'H/+H=`jsYs42X%fW5(2'emWNF2Xp*Y+<Q`:-^2t0YDEh(m:\App4eY;V-&LAdQ3R68rBBm2fW?4pcbJcF
%\mN]9$W';(lrd7UPSlh-lr:#RJ@#]Vm>eL>aY#DM7TC&.cL$dXo#]iV&u6=sLM8rd6K5cm3Wo[kGq&DM-df@Hp=W>/f[B/`2mhHK
%=eBiq@?o$]aLe!H@[8Nfa2?ZQNqcT1R1m=54"#2UOE`CMUNcLXMs`(1B@8OCnqNaJir+na8)<R2qiD`*_pRpjN&)i9@9At877/2%
%%p*2S`j&mrEjpi"$;mic7[>`8b0mQQ5pf9cYE]Zs"rG<$@nT0Llp<&#H.3T^P?QqN!HKNpRW<.FEgn5ije/,I>\#;:\X.2X.U!K7
%#]VQ->UU;k6]o;1k=ht(RH7%m34]S;ar%YNo?((o/kdR`,%m1Y%#QRXrYO^]o,6XDX5?glPRn0m6k[Y%fMJdfNF27tBbi_R+h&(S
%+m8"r"#6.*l%L>2J3^)629c!KiJ$)h'NV#\72f>DAb-O]WpWt=>`b)&)6&2,RqR`g6J.jPCE;O-b'Q,Ye@W+6Z-F;&HMa,Kc_[59
%+Hom2UFF?25eFD`4C7tl9pH)!&2c9OhbaW))#Q*.r\5Am&qkd3UqI:a0b2c;&ABn6#-p#r"Qj)G(rXZg*"4S>%MB#"^`7#YaC%h8
%A6O%?+]H+[]B@b%%B)\V.GHB#+K"U9fYTZT>@;2`KT:h=PV-X#r*qpXZChb-VV/*4**%<UC,fe#0WDXJ8G:U<Ab>S^#"Ir.E3rf.
%><_d/WiSDZ1_09lF1;T@D.Jhq&a\^`3HI-[W/a4Ll=h7UZuZTJm4,$1$MhIj1Wbb@XI?-pn'oh%U\#\pbeWNU>'.@',D?550E?ni
%]-90%)6F4^muDY;?.#*%[Ll)RqP7R2Z(UJo)Llp7eEcKu/7#QOh3"m&""PY@5m&,ae0,6DE!^VkaFakHd$-OC>o,uZL8hb3pd=;/
%F(ng\2@+r^5`!@X3A)-Mk,en%Ds?[$9t(i`6=?Wt+>i)$2A7h`AhebPC_<uh?oBND/Y94$>>[L[L8(!U0EArD-C9;tM@i#T@3(%E
%e7=j,/^Z"mEGQKI&E'/VR>.tB)&9KX52Ph$LCio:f!,I:;Z]p9lh+0(!2t=QFBGuG%DE`f*="iS)l["3FfR1_p%af5b_MX/]*;O@
%oIc?q4nBgoPgl64\pHaHDL^La"#?N\QV6cW'Y)tT%(mK(rr%T4Sd+MOr6EP/3r8fpRF!)nSS6sJ3(\@l!?R[Aj9O,W5aiA-#69F&
%J0\oabMqeS!<D,Dl)]nc\,)bJgfY2IgI47NA[75]h+qg+$tmEk2#9q7J22X3aP:38]3c:a@r-i!\EGjtr/N$J@\7*VTSt!&/6W0N
%?jki>Pm+TMD]K4fAr-o'n@=rfNr9O].@Z]:N+>#@>4$DoTk.#9I9q*ajPTL\)`;]3k%n9,=a8";jK)89/sT:'Sh./ujZ>%jqR/PV
%<:GVX^!4_[]@:#)E37&ZenT@JYt#O>N@JUH`o0*:gm7LB23]a!0g2F[8ng1$]!]nY6LqB(L4ksq0G(%Q9QQ`g@S,P@WC1gXlopZd
%Xb*:UC<:(])0Q@Rc!hiA&q*4Wc^L=8)IH,dO-3=uUO3ktY&DRk1R&]\->3#.kZDje\)^N>Lf>,MFM1O0',QNl%c0A:h4]f5RT$#$
%+Z>VHl<?_d2?auD.uBNq3C1_YhN1cCZOCEj(pY@L,&GpQ];1rP/lr<nc'"^?P0:VJ.hXs(:C)k:.>]o^O<qiff[o38/kCq_*$HLi
%P[lZ7fL[=BL/B'%"T4r%+`<dH3c814L[aAbJIE$2a=Fo(#8j-P*0aq]cfgtX&a""63[\Gs;fkcX'VE-+*Koetp4b-@hQV%G8Tdgl
%eh&NJ+FAai^Z4)YV:39`GNDS4dBL6]k:i([?Hut)>;$e%<uQ)t%D%PqN[&ZcO\9i<FYr;Eg>P6LjZj`-+[o-OFU\O)e<DiMM6fYS
%a+DRC\XBlae&H"JekDR%BhPdS<YfbGQss*.F!0RYE&?;/[``<m4flmPR8r>g-uelnh$fb%e)c+8>!1gs:Qi#P-%*sSPlbR5LRM"k
%j'/Rp.Io;V:[T:5o95l"`>U-HjFuAjlIg6$@VUg2W2goJQtl\&>o>d)!KGlIr:N0(PPj:tQeNSi2eoiIXWA39Urc-l@1<re!7)n`
%:n+7%,(+GSNApqus+&X!7U--F"XLtgJ'<1!\-4YnE@mQr#IVF18q9g;f]UHo1d5eCd19o98nT\UVL["@697n:)$8tEXZQS)l+@-;
%s%mr2/!#BEg"_*KqP]c+9g2Sgo6FA9jeMNGRcGM*'o3TH1[#X@B\OM,JJ91,gte>);'dZkMB3+GOk-ZYO?Q"\HA'9ZJEaig5uMqU
%VFrEMLQ7q#9_M$(OiAFEX&<U=,W9JF1<JR=c#1.S[0#VRLq\q]!4^!0ShU&tfu:/$n)<Tp*)Dk0^Wm6EX9ZmojgopYN5R]"igZKY
%_Ptek5K-&LK8?V6c%Zi3ZP'Cn(,QISk>kDXKuQ)*`EZgsc5tMO:(lcOEEKi$-CO3OnOGQXK%@?9qIe+2UdpP!3.O;(U#W8^iATD7
%'.q84kNmg4UI@n7O6e-3*i75MeFb&kkqMfRkts)sh\#7,da5NOnfTN9i48>2QgR-lq;=OkjhO/7h#gs\OY1sYMa,i?38VWNQLA]o
%)9TF&G$dC"O#QD"1o5IQPUJGKak(X>/f;RhK/"!t_P&B3`9GmLZ>m7#.q'hV;WuUljo[@95t;i>U-#Xr&p-I31DcY!\=Z>:Cc9jY
%3p_S8cB_GU'nnsL]iqBC/)d.adKPjlDLF'5XX00;6Af[CP%LHjN9d;cF]bu.KY+UGEf+u5Aa+Z/V*sk5cBbk+pZfJobjEW['GK9C
%Ss>"&I_:hL>&-^FS`nJ,BEFj_F+p^,1.[0?-:HE@!ot$ufp0%@*=Mk05\o)/@O.#'^[f4AfR9_8cL>_T2=6uMBhq]&qk#G,GiB`=
%M;-^jJ'W^fEP6bYS6T>Y=7#,X?!Yb/($o:HmOk.GhW:"mHR2b=)7A\qP8r:&.4JgWfst_!;tj7(O(=>QegHb(fHnXB-XjI$6gMTO
%Ep`)SngM4Wnr`\aF!"u]ZVkgM8iC;X=E?B8Ao=(=gV4A6i`s+ZF,iK:(j(a)f3%[b7ASNf/mU-q4KUu1<"H1+=2+QP3tHPo@NQQL
%>Vn/n3eqKmFLdC:j!DNZhC_!<kH!K9,OSWRGD-9dG;3"OUUu^0GAr`=JrSHoRl[Y;+/9\3-&&)t\ETs?=PSk?1T)XU%Yb17+M&C.
%iogr>&tT.W`jjaA<YOP^LbUg+g&Q0p(IS,fj)Hl2e%I7eAc=&kfQ8"BdTL2E+<tI(]LLl3L-"t`HE+(L;eD9rk,1sq\cWWUT]65L
%1G9Z9,`+AM]A7a&M>HZW(Rt0Re(N&F1c$O^&!Xpu1R50DPr;?Zi\uMR:"o=(6m&$S6H,KjW[q4mq"MY=M]e*l+I&T68E%E@Hkrd&
%V>S`J4lgd/F=9?0Ag!.Lmi])[Dij7'R-H/W.`qjkAOGmo3;P1cU<hJ+)9/94?LjYLB>gK1QXq.b[L*KgB'H"2WDMC?_et&ee)Bjp
%Z/hps8P>EBUS8<K8c@W=QaPlkDCHmVdKNfiY]Ue%mIQQ^@Ls$`ec>&qg_&-9/a4B5+,X?d'YF_Bn[4NH,g+1u%Z__KT,T?egtQ54
%2Y^ebR9b$bL7-lWs(uk"J3PkQ5.EI4Q46LQkgr_Tgoka[>Nt"V%jLbiI!h>%#3V<%@r<V^To2[M^<MFVVj#bd+[*o!k/]mWG5&M;
%4mi`bAIplLhpJ33Q%aR2;Mc7D(JE8=-5qafEm[8hrtQjnM.;BsUPV%:7#nWsccm@f$S0<!0V$>2-^tE@eI:MC)pFo9e*_I@T">B*
%=Yb2tmdb^+rLQcVmD4!A:.st.n[S[pQ;hDUX%Ta>"!pMG2Z-QggdC+%%AXgm<&L'gR@+7Qpd)$<$d<-m8ObC4g4VZj,rY,/iZ#tr
%_$7t!Rl&n'8e`U-5<hJEiXu?BD:kado<;Wu,pfs_a_8>@QFP:lN:O2b*\=P^OB=bY8\E-]'J9`<p8<Ru!RKV9jj,6]/i^P1rKC]j
%U.E%mJEK\KF"\P_CmJ83$cd?=Q\Joh78@R^*9.Hk2&U(.'%F!qP&\DSLGJ05A?.Dt!i>Sr;_.@*A$)+6F#&)!I)]*0!`3\s(oKX;
%gSY97:cmbS'EbNuKU\q;gSj.le@i!6/n4M$dTLQfF#*)E;DP:,C4\Js8HZ9V$Is#E&_rfdZ"m37]<5JES=FG1)4bR`>*jD8PIsdm
%qMTMBpt$_"QGKC;5^+C8Pm3RC%`&kT,CX^C7mX=6\8"4q='4.[AUs.LFta2k_]MMYI.TJ;P(F])QUrD;I<8[km^A1bZ6;e[iR9,e
%hM,S*Uk==YkVeZ``k!_r9=K$oU\sjZg9cQZAi90CDC)]t9e2p>U^cFtcRJHMB=T\[LcE[E];45g-#LRm.+`8KD4RNp46"4/)/I+b
%%T>B@fcS+Q5f7,VbM_CO=7fZ!=,;o[E.tLD?.NAi9>Ot\E.r'O9X#*UT*U*_9hkj;8o5Vq/VC)5Y(b%3rNEk2o7#BdLUS_L9##SY
%rS_UN5Uu5nD1?f^OlXP#SS`kl<e>l\<Cp3u(c7*jCo(Oe"$VqL"Z'uQ\Ds]+;6e[PjAFXP;P:gG>HZpEQJ@OCQSij>o+sR^mW[u<
%5n\ir,<=*&XHkpUmNoq>#!_ckaLg=(@'M,\LZK^.n+]N25GS8PfYKgrbj:if\6UGcTSgN9qRMXf6U*e[r-:1_IOG`In""OV<U?9q
%FX2t6g3+6L4Nm4^F!2KNU(NTJQsaI<c"BWu;G%$)DF%J0>L5-l"h2*,C_)AY2L+N_SXrYGUr!]OD^5[r/;M?l6IpXQm>(397$5PN
%(Q$=*P]kj(Tlb0`?Us39-.[XSmbH!m,K+M!<69RMGHM?6Ct2Z--;CP8KP;?Y+,1KJ33nX`0u@0'j4MOM"p:p5].5(;0A->PM&B!B
%`K1Mb\8['SG=%*Sh7O%ELIkq$!K!nneiboCj;cg;'1D^W<HaPg/_md&_(?'cE8+Sk+AV&2Q<=e>Wt)9i!QN5MRR2BRj6KH"iD4Yt
%M@n9qLhZobGe+JrK][d:-ZBKO*45I5M\067UG$S.71Of6n:$m`\"?]]^,R8]_@*4pRPc6F75(Z#YIhB[;pF_OjE<2'fWc,l>$(5j
%r9.W]&`AMdPlP=XQjLa$(j?n;RO::Spb>ql3oX[0-mbU4A@Cr)]Rd3;_+&75k1:u9eF9G+YQ:3qV^_uZ=Z`[<SsR0g1T]8Ad64hG
%V6mdBY94P`SJulaED(Y_pr)1M]OJ>`Bh92B;T__ahh@:HF)j8M,oGjB(Dn/r0esUlA\kt<hVnG,q^LY$Y&obLgB/ZL#PH0J\oVhf
%nU&/$S="8)_MJRHp>X"3[@=P_3P]jRhFodPkdsA6mbX[`KhWJQG+XEUD(^$J]KO8HL[j2E^\P\QHa,qHL[rfU1F_[S_EKF8PJTL4
%m$#:M.I<884t5i^+?h5e'2D4\1#^&L.I;<O5rTOLl78mL/6i1Y*l4M9&*>J"JIEZD\[6HB8RUh*X!C:Q(oIbk*Cu`CJTTO02dp+R
%:D.c]OVBSc2\\=f59,DSo!:@ai6L/mUKd8!#ZG8`O9T^.-orhOAXuDWPfJgr4(@!<Zq$?OS2$e"(EP(nSCj2!BM$Y%+ul4L-g"2^
%$,6j6m-#`Y]d;*B!f>IR>pWCOmEArj1:!d*m*9-$Qb)4^&q)@!;inrXrFOrj7mF>krkhYX=2F5-M:c.Kkg4o@%GMF_Lr8lj!qu/G
%KfucV0B(G(9ot$<4fT(@Ke<ip/8thN.!936-\aj`4a2Z<\76Br:3>[1$+(Hi4r7rn?LREqOM_*VU.iJsT)g"7,V$-Y$0@1qL(k(&
%3"bU;<,<E*!?7XD\o^"A2(4j/JLMPDL'$h`M(n%;\;@!,.A4Wi[ht#<3tn=8.7Tb\0#WWQPTch3/g6\A`8YYo&P*3qBnKPP(cq(1
%V_]KYf0i-"&EUaG:+Y<o9#o)]0^g;.1r)tg2$GjMd(pI@=ZmUoR_]!UI$anFWiuVI54553.+LY_/jbsT/g#>$\g'u^WjpLTd/aBn
%QS3MZfa*b#j1Yjl%nhB`9%l9fr6oH@T<-#I:=7Bnde%?UUCZ+P6[.r=`B"^N$97R+.+Y(/<hL*:LghAgCh%Z'CN'>@Gc:KkB+V_'
%Z1hZ#>L+Fb;oSP\pQc>0#JD=TPBSfDD:d4X\i$%LgX=3QlNnpcS="8)_MM,L&SFqRK-*%?S#!d%'3K//&asS#H(NQuP9pE4md.S]
%mapJhLbQ<gYeqC%3t^UqP1T8BcCpeeC=t\c-<sY]3jIKKX6"uuUEaTdDWc]ncL$tMcnRG,[rWmO/f2?5Mc'lbmcIaiS1_?53fmsm
%B=5'MR?""5]BR688$]Xc*GI>u*#!=YGfPYi9AM\B1^?I>Kd+Ds(#@(K6!AeXCV=W.pZW4J,RE\&BulOCTM4dBjss,]+NY1VLr3G\
%+G=CSkt,u[rdYV(<0@5IP92WW[dZk<87<.b7@HbBm?ASSR:P%^c_.<UCIp8/e*$N(3B_R=Ff3NM6,!li@*X@Kf4id+"VV13R:HZp
%NieO$Lj2c]XH<`D(!]B'8qO&N7<%@U7DsV_d;MIOId[3e\RnM@5=l'CW!?IE=$H,,U@YuH2#Nme6+E3bGT+FSOjC$[,^Nk;KC-^Q
%opE0\5K;hgB0C_>i\Bf?U%OeuMLVl/34'"=iKb_Ta%ghc\h%QR+:WouIGhET8@jX+iC#'T"R,e<O0)&90m&LnR!?Ig-S*5ALP[B`
%l3WP?qT1,]kpN4CCr54KH3kuR)cl\uRls9qF:P\bNjWlX0D=:M>?>L9NfLPfSesAo2o/M+bAUf@K?NuZq?4?WTZ(/6AAi1;"qtS7
%8<pFg;e8MV+iTC[aYNRebCC?i.5Ssjbh/%56]Wj+\o]<:OS$Jh5%t5LC=onfC^s#</'@@:XI;_p.SIl=C/%P?k%'P$C-8.(OV9N\
%/1.u"9jSY]fnFu?(7(+YUlpA=.X'n)\p"MmPoeE5BZH?h*CJN-.5&.=W<qZ8Q_\>3&0IGh2&+!<QF*d36$m%m?5U'$89-hb^,6DP
%$UaW^^c`dN(BgP1:5S;7X(lj3U@eR-!G2FbBFGu[&3C!BMSXhM3li9R#,?=s3PAfW2aTZ%-k*NkKCH`g]jA;Do!J\]anX7O*s>jE
%U^`,%[0uQt&.!liHD;hn82:CANhIP<'a7iVTUq1jKu#W42E3j7OV>X8>[A%9a^=S>TbSl"NUr=[Z&3X$;g@.qY3-6+bkSiE7a;sq
%#L=?(6$H)f">`0LXJ&J=-(Qs4B+9R[3@a3nReIM;2hqo-[3ZS]J>2HF9LbQ*dM5A>p)e9d9Ac_N,CJ;:jhTC?N,Rdf2";C`cUOHu
%diG3Q_ac\5-QFFkn.Et&$-*;r*-q6Q4N9\9:R84>Ur&'dPk#rl4:>-qCQl),$'S(CcTQaHM%;Y+nkn,)Pl;GC.:tofla3T>ofa9A
%C.]Y7_^s'R)O+,tWEf%1!J'-[I50_9>'hYZ+6M]KB'rX-C$3@?F(*e50^W,4FtQHM(T*`2e'<Y]kJ@pq4@Q5F3&0C1KG/iWWe%d8
%:%W6'GI_]`FNE<DJ<-@ln'K=+GlYm$!oPX1@lFCH$6a>>Bt?0$G[pgFfG;GI4=1Dl@Z\T!V&arAYr<%8)TZ0J,dubE"^.#$j/;p.
%"/#)@b.7kL=q>Q<l*=p`K1dL41h2q>1R9t"`5.3h7B#PY5(p=f]7GQ^$+n%b40_[;_a=[3A:!kl\P)cBLjO^bd/u)jaH\.b0b-V\
%K+W+p9ti,#0f!NY8>6;7C4qiCgkk8FV$JLMc)iIjl$YA$.udLcqCAg1h6VKPSCZ/GVWf-9;mP5*n>I0?+XKU<QKVL6FBf7'4c5=F
%,nXg$Hrs'eA5"$c(.2i4Fn&A;*1=lPIp+S9!]ON%ME<F;N1'5K;`6TtYp'!Q9.Hl.:(aumD@.(?;G)j1oAlZo2!-1QbY9(dQFV37
%oAines!aNg++*(DPeq)[NK1lj3)ALq2uM>NGnV0=du/hLa4TSqdqhC0nM)u]Vt^gng6KXtiV8%Dj<tsk%$(#V^cQbZ=8ZiY6k2M5
%7NJ*_2+c5O/P-0cc^FoWQ8DgJM\kq=65gS<\.]$&p.(j*K(to`7=#E6,ZY@DH)4r6=7967MQn=mVLPgHs(ER^pL'\KO6r[/o.[VR
%J%1S0G59dnma4?u>Slcoh@\AIA,!6dkmI/+qhQl\Y8GO5g4rW&5c*Dk>otkCCV3a;'Xto'Y8u"sK81YebjUJ_C'Wb2DE/=9=r_f9
%dbac%+MnM*C$20\4/9F#gVFuii=:,U\cgW8[[:SOH!+(-LJi<m<[jYp"@Z<cMP.O`X2*!6;'$h/cI;!?q/FD>'R(g5Oq0=)Z0&1-
%.pBuqgK`Nq`)2X:;E4V/P8Nc,l%u@hXlQECh-B6QcZiZ)/paJN'H(\I6ngJF5n+?@G$)<"RU*f5^64N@@DOuQ84JmT+6c6A/:-H6
%,3W1==1oH-a9^3OK7r!"6[5V#$nMDT,>]*L`EI8*.qo!_=>-gkFY$)TChXolE.u].UKDij6<OgNBGHl0NNtb%&1qR0rsie@/#4F1
%cVGHo9%549\jW\RdT%fXdGj348S;<AnSt":[*sj))@c$i)W#6dW'a3_l+i=SS\"HDI_L:jeEFSBY&D[f4aWmjXQ/2BS&Q9XN&O+u
%Pa-Xk)^8[-7%mCkr2nJt8kM/5Cu>H,HT1LlRT0cZXJ/@mVP?h_UJ(dgB0+1W3m)P*b4LdU1-Ll>3ZiJCB\8LR2=jYIBEu)BmJ;J_
%XuLF?M(;>+ET2i\aqYG@(EF!8IL'"+#J";(D.AsA0hg==VJQaj2MPob_mGD3g;Yg`A,(*K<D4S%'2D4\1#^'eiP_@%)oHXU8MBSO
%M(*WVc*k=4C_<kAC4=dMm$.q1,=7Och%)sB#9h8<8W_O57/"b&\n:;h.=5%XXa]\nhAR3Q&ds8!k\V^b`^.,j^tTt7pJZa68g8PR
%Fq:<iUI$JZg9kg3AN-i6Xi<k&Q.?DGoHqOp?tIBGq]qkg,6A/VN0T*nbUH,Pf18uaaCs8HW#<XU1+=]Y1$0/c1-i#aeBHB<YBl:V
%eT[ZmrN+Ru7I'T+,u'GL%Hk,?b%sd!!_W8%)icu4Xm_qHp1[j]UO6[(iW\s$fROQhp4r:E#X\=hLDGTQGMRS=9<V3-oS:E"5;7F5
%LgRUs?[IX^D.K_<aF&qkO9p#&N-LDNh3&)O*qE*L#[^:'L<*bp*"ES#`F+/>5-aGfc/Hm98kSKdjToUn=G!VWYpUm!.Wg"KJ[:eJ
%Wm\uHg1%;U&=pIP$\&G=r/]+qp'RcCIt.`\J.PU\Unu29AF_U*PO0b:Lakue,n)Y<3M[4LV#HG%"608$JX'+aP^2LsT]f?#JP61S
%Z'(iP[%dJH8-C@`3N`c7K1lRLrj,E\o"0k16<4=XBcC9t!\pY66/JLDFVH!Ck0e]9Cl]4[46<R[a%._`OL<$<)Y3<.'_/2C\K(?I
%O\_@(@kDtb2*s6)Jqu\+jbu=H\R3b&cZh77RK^f1k"OS=8[=_HMi8*tl6'<)JgTn?ShT"2ft*#\;L)f+j=lI&&3c4S\2=Ld0F)0A
%,kFh#SoafCOJW>Dm#Q&V(%)p/ogAX35Sj`5#h_I&r?25e'F8jO&/"+c/>nVo:@:"c=*LtkgspGl7D6J]=V#b?DU4ia$@GBp.DbFN
%g[Pl_Z3te$4&J_V'6Vq\8MA4;)gWi`bd*`E3q>iPAX?E#V"c6E2C%[$LTZ:;f^SoQnGcUAdi@sCbC!B2lRHc-IBE$Wa>3:4&Uh;&
%$<=ZUA)X`mo-JAe]&1Eh9=C=QMOr;"L-i&k3&/n$;5LS]6$JBc_1f):794!&<EB-Fhhg\cOlrZNXj?',#)9kT_7-01CE`R0plgtK
%\,&b^^@VAij>A@AmbAiUUDE)#DYZM/G'Pp(!@,:YEU9"PT:hB1a>>f>r,^Lql=-#8?HMAbkI;hQLN)4"\[>\->c#a_s7/U_Z]O49
%I.hfFDt5VX@3568kFtk!J\J]CUK5daW21^N8i#u$HrN*LQ+"I5Vkgn;Y^X5_2eo<2]@;gJMY?*7d7e9;17]p%YF[EhAn1;tg?\1_
%lfVoAp[NBLo?e&F?rp^%V<lU<GM*>tSfos@NC+\Y0bdY-391=OD%n^[c]Z^ANF&!,K_\H;cc[.':nMCZRbmuudGO^aS5^c5aP*lM
%2VPW9R(tJH7WsVJ3CH.6`bL25;[N6g@dcF_*!<;f2B&huBMjDB2-iW9;F]lXO@2/o&:(5u88_SA&4p?08\g2sPC*_,m#cXfH=iCA
%?s&4Z.<T/6n4J0oYj(#k+_R@JpB-/8-43,"/]F9U<bN_OM/:2tJC(`q0]49#R,u,\I$c:KZej:2SMo\?.s,<>fjS,/W'Q>c3lkj0
%7G7nJ6]8DqAMP5>]]1CRJ8j<R%IT^,!6oO>]AuBi)CS+^ee[(YBF60/c0"V>LM;mNGu`Q\0^Lp7/IpI9ZD+">jV]*dKajn>aBE+0
%8hBc>l#pQ/Crat<+P]drc3m_^@Ab1'QlKiBCoP9;,unM*Z$B5Y[SZQqNEOhH7sp^=Z:hPqiF-:9qD@Zu#knBcRiCcXZp^h!!(W;>
%jLhXYN,31)YipD#"#6qkZ(VnE%ceh(YX`BnP8NDSjR"mm(Z/Mh?!O"-r;>h[BWMSkH26Hh&+j)G^O<T%^><1%r,q`/nndpso&=cB
%hYabZM"\Kk?tSR*0Y<`-Er^\NX,;1gQtf[Qo)_`(4+>)\Qa:=:5Q8scrtg(^0.?d9QI!::rTF2TAu@;er5\9rpJ/'`K/..ep);+8
%c\i2(mahOm;VB#c'CYD>`99s%n?BZm%F\lcBB\D3(:5GMTEk+bZK;VFH7D\s/%iY>6'qb*EVADsn'6i:NA:'ZSKko/%VIY@W\u[.
%0ujQLH=gn(jZA0!3j2r-]%^R&[7Q)@_I'Tr%]$"]T9cAG15"OU:Q#SQBmT[BTf2kuCb\HMf!Re>/*_CX!43rcCE$+oXE!1iC#"D[
%S,K66I%mN9kK9J>CS<pD!cPPBs0OD+k\6oKoq1!n&^=j-P@c$^rbcE3UM!#JOCq!nnuUSc.DcW_pWCJm@]R&=JNu_B7"pLAHMd$%
%2Z%PbD.IoSB=Hp.c<8YNDO^W>\s/tt<`\fI:WCV*RDMQL48nHQfmd24f(<[cj0V!%>#sH;qbN.49qSj55$Fm\Ml*H-Afi8*N<gaR
%:^BN[AV-&RA(*NuaAmu](N9pbA/#Q)O;>44.049Lo3rC2cNgX^=;4Y=VQo0.4.aI[mdKPD<@;ZHNSV9Sa3u36RDdDhXOF(5j#P/)
%>/$JIN9?)YC&)YL(fF'K>1-QJ,DgZCWSTG*!@8b\1Qltn/ZB!lC-7>,X(#=i(@cY'h/2aIS74VJ*m#kZI@Ob/m2i'V,@q1Ph!qau
%[k'7?:=>S&r1(SarA?^/,7R8h[@()Sc\?6'k")t&gSbS#I!s^Vc%.`'UQ0;#@2P]eGlH<3o01rQYfAf5_3tJ9+/gK^<SA$@ooX(!
%e!,@%hd=*"]k!rO'MVFB?f"lUXSB9De]l-A>[&hXNf%IGrl*&kL'NX_If/TpM];R*.[Ite,qG7a9&/nEMDsMEX0Mk%[/`*;HJL#B
%$<4noQh-1=7==,!on5Bt/_Uu'";H;GQHc9ED7csOW\-8$G$XAcB;e3qfS7WO.!R#DmqJtJ?1O"l>8AZ;a=rJl28Q@HaQS52dhQ!E
%%WaMWn;e#!5r\].-&a4REH3XShTh=jP+bs-]/14/rjl<?bsCA@">2u%]?5O`5BWF;%#AD-/Pu2NBR.(d'GcBol<]g#Pm?^Se2<sC
%:^>%kKgXAbY0QBc__Bl=1U':4g#l_dIf,7^i<;?T0X)ls_H*UFfMI,IS'L!44=D"FcKBIVV[/o0T%-gnjiB)jL0IX6DdTCtG_?*,
%JC^ag<,-[p8uBI2#Gple"p==\pY+LfPlm$<3YOBb$f?-D@2I_II#]g<7#;hJ>$/O(W1P+lh%_W*4>Cu&\gs/F*0]T1VRlmbDMtO]
%G.XcSH(%c&YIrclD9F;Ym<`\4bOVA8o*X,R@SGL0e]uJ,lF_Ua1j9'#GncVNc%^Ha^ad4mh8:?"hI-5@>5"lerGDnR$(9%jGX[t+
%`2#FB#D&PjPdFu?]LZnq>>kEC*b/@X]$]nO9_ik6p^u?U_u+3Rphs;hXuq;<AP7PuSaSl*0#SepXTK+$G!>>):`ab"Yk&mtf(i#1
%*6<Z81cJa`S)noscni#j_`2Y^W45n0=g:B#<TX[c2Z8r,89/gVrgmEWU!/ioVt>Nt+EN]$>%F%$!`G:;T/I)"?['Y$-5)fJ38rWF
%<?AMgiF2=+"Mo`:pC=-H?)PB`A@U'(3>9i4'K5.n(KO[>"GJ3aNng)9;qV[BBJqE;5+M6g<0X$X7Em=7U-<8LM;q%[iNR>^+g0K>
%*2&"0T)e&t^2e:=S-LbpZ2*3phVGN=4N;Yp<&LlN,k#6T?Rde=qkY$;[;0DVq&b4U^3;<?LZK!t9D%.R*<\"X:atdAHSs,*PP1;s
%%Q[c]^+dM!&4-jY?*c6e9-64ImQ)=g%O]1PgOmBk_Y39ofKQC`=&h.;GsJ."U+DiO@Vp.dTO/BXqP.G#2QpptRb?:G=d1a3Pm.bK
%YOp%>7a%jF&:+PdZP6lk)_H_u@:9?G:_oWHVF@%qH&]ADV:hpm_&Cf;P>EFr_.8fFU@*&r@W#$jR?V><0J9FW(65%jX$q054fD8t
%o@e`ET;Gkb,Xj>N[0J-Y'5b)Y"idgnhYs@^\mCu!>b>;.Cp&5Zr>!L>Iq8UAPHqW(bl71qqWdG,kLo$V7<<KioD\X1lO?no@eMHW
%oh54XK/)q%kTl"Dlc4?;\/9,=o@S'd^oL.o#8:>4:n^"NXIE<ZO=id"b?^fQ=g5^2)&#arZQBQbK!oc11F^8hD)\^n-D3&rWaK;:
%;Tl0kgr/?_1b4!IW@\SR!?b8C;k):biA>ThS*GO1]U0-piR:J:-=%cR`?-kCBu]Koa_`%nD5$&oT"=#d8RZKL=(n]i?D,8K342m@
%H7t?p2ml9E95E>4-D_KDGof^t/gMG/$0.m`jWNpm9eG$ITFZ12g2LeD,onTF`<2U\[1'19*8QG0n4=tY4h&G&rt1Hao+Qh^#*YM`
%.o()f\P@#cKt-Tf9l=,iHO%EVKp0]V79-CEMd^U1=9DcH;k"0H$>.h-&^o0,-a9[OkELbNXK$)&1c:ZN</(RH`Qr:uA#_;>=YTn?
%c)g37%JK]ucRR"*VT=F+OZ;B$QdQ5)Zpg:;b`nF$n3$c?.tekPYeUG%"=[W^3D<jbX+l]^2:J?09c)65UroO<c3)%<Cd1mj-]A0V
%iDlik\irAfSSK=)1a!aKA>-me'7Zs^A0\uXWf5S]_kU![5!khKS]%-"&X+^^>Kd,Y9K9S^Q35jOagK"_81)g-ALZ;a&Eb;URTq)[
%Iqj(?A^-H7I\E_mUn0HO$)]]3o$#5?F]iLTg&mjK;b@QmVPQ>]R;h7=8[JZg6SYd.e4jcgKhjJ3WQGYrpA>Ghg/:XD`f%k;:0S+$
%,\j;WRn@*q-*@e(DlJh/Aj<\K-#-/GjaM4Xea5,)0EB+fKm?u/P?Y?L!9HZ6e@:[`">l$1<u5pXE?UJ'?uh7l>H(O(D5nQq_!M[a
%L;TpW>^^KqE=B[]SQp7KVF"ogP<';d5TN*XA=-q/Kg@Dqfd0J!B2K!df&kn^,'3T8Pa>)+i#.ra)Q])m@@gMrBX^Q:MVO`b`iXV"
%N0?S)4YHq$/7utd`<^Qd>9N<jqbYnq[nm/fMG0XSWaWfN&P??+<h&KliUJ93*`41,,T#J7rT'/XCOnAjfaK5eeac[--Ce>+S?p/D
%_C?3B\La<F6BeJ@E*AK0\]@bl[RHduaj#M^=BcO!jJH+kXE>Sb\s>\7#Fo%/78Qd<1n<>p4.M3ELQcKW4mIV&ofa?ZalMU,Ot,ho
%-_FWT1U9\n)mn;J)dMmFBdpN#TZBC\W.hbp'mg\K@4]m_'5*rZ'X/om3>J#@M<[o[V(D[EQ,:BT8!\3mmhM1H<+n7)T@Sfrj8&b0
%AZgFeci_E@Wu\@,=t3H[.3;Z`CLIGXO$C2E#T:6sOU@^oEqc!lmM!HI')qFG^]//!Fq.6[I.8$I)*@b_+2<:'c/n2U50%0do@'&4
%ci<h?quV=p"Wb6:qs!5]GFlUK!$kX8DOltucH]4h[QNu"p6Vs8Y5OFVkPFo`>Pdm]jKei&@?l=Yc>TN(5Bg'mHR@:Y7rrSYFU5aC
%(rG`;2[#>')8pH+Vq8\B(l6['m(rV*4o>&AlOfo>MGH+"k,Yu9q1i<8Dp@[%3]e?:+KY37K=UpE^U>NAMp%TJ;s<9$EnA_L`q5:)
%fAA7,Y!7p`>ZCT-`XV%VB]A^0ePA-egP_9_mEjh(D?Yr6r5f.bqbXH(+)fHFX@TJgA-<u"qqHnte)o\6IC9$'2_^A(aFC,e;[k@m
%I:O-Qn%V#rhY^kFAjM0:T5%%9QZ'%QY"s62Y$bobWSS.ukG-$4eK.:uG)a<()o:o0Er3ak6mLpjrcpJ2&oi*"$U#^=LUE]\fA9ch
%>b,^2G.%/8bLt")&WI^UduA!Q#D5<IIb7tDXtQtJ%)l:riq:`+^Ai0Jna(SWEqr,:+CXC*%fBnKI5h%D;WSBt#a6`^BS/</<A'nC
%\Nbj!p[2bu_XI:ZQY.BfASuH@:Tr!%YcAbC/iSC+9Y0#Tb>#S'UruKDgn`*sR.;_T#27kB5odI"QTljGDU`'S8Y94's04_:o?6:g
%o!cY_clJmq_]4l)gh4DUIlb?t7F@/neJY%jI(VXKDZ=]';(ElEk-4[q9*'OsgjK$E[^fN,T!cJ%Rn(]Kkno_5qLgtTbS\?=gs[W]
%\`9"S_,IP\GOI_5YP5,Q#L]iS>jL:qfT(!;T;0V^d<m=.kEf8"rU#s-H:pYnIm5#b)jGZtdWs1n5(;.UI!`1-^Q+HNNsJk`G]WOq
%F0^48Z5JF3;=u<c.$>/EKA!mthd!;_q;LmRHSK-DqR8T?!6:/(]tF,b]t)Ver%1F=E4dZ`A-<5Z\tt#(c8g2T`N++90`HF;0`Lsk
%AW6(1cRuA-O#'6&bGX[G)d02E7;b(WU$%GZJV3\*N"usO;<JH3dH'CK6jbW"/c<1Qed85V.ikiFp?NRDp$38hXtaG-`f)'f\hT/[
%V-ShSBFO\Kd+or)L<n+?IXZJ=h<&OO,'Ai<EH?8GrQG**opGRN;_uI(<.aRJl+P:"HccZnH@,>V(*Rsfda!(EniZ*qPP/ICnp*(P
%fk8?D3ZAf3Eo;[.A#:B@?)'E1+J8AunpGGbh>[-S8):Ojj#QJ\0_5nRT^ei8RkYK%MGL:F4dW+K0k33876"`b8#'7ZSt0f>KJ4C@
%>5@jQeV@KacS'bh+[@$?)Y1P^fQ/0A@lD=H3q7Mkg]&V[Fg/gMe[(&XI1A+"3Fj0M1PdIeG1mf5M3l?#YOrJ/j5I370iIJF81;Rs
%)?*/?'T@i?Se;aYfVScTO#BG=i`j:1)&ibZ[,LJKaS"KsO?=')3<H;mT66/2`6kg7AqXZurFL%iYs!TC4l;iie*m1C4Os5@+5soH
%qtU#s4>F<JSpgNU^,al\hd0Q;^%lW3/Ecs9RN(4#3sn\P:T.'$Zee1cICt!DoPoifUD4<-1*/W?H4H>J`sgt[9K=\B#6&ojOZ71R
%2@?]!IW^Ur7h:)lN#9L\88r'^^]"6_9+GgH]c.iJo^;)DHsFV8q*E?s];s-LA&^gbSkLWf-,kO\3]rpHN.$`P4k3Ad&OSQ!P@]Mb
%4k25EkJ(k_+#+J&En?e]On=`N52"/=:a%I3-kM_@2hhnY3uF!)pc$_$>=[8Ds&=W`g60`B@XP)OB@ger(c=-Oor1E'EHs9N89jpc
%c(;_.BM_"VV]+.^fu8+j@e7gck5=<+b;">dJuVVH=_o_9hN++\J,*&,GQs#X?<'oLb!@Fh-dNqKA]u9Wc$V67U)]>EG189-ppL)@
%,#Q>gib49*chcG70o=tg=;2Y-'T;Nq;`$hJ4H`g2;$?dc@o8g&o6_%Q-t<I$1sC#u7@@U^%YWq+moU:q-\t2/7G\QH7m2W0PVIeM
%2Ik%;a.eMZXFjk#cQO'8bTMp8Jif&rP[j42*+M[eW!.AMWpu<pH/-O57YTeq1N@d[2i_Mp5%u[AZ3S]*Ipqs!gEktMGl,SEY%-O"
%@uP!>P3M/?-'Y",bY3-G??FFeFDV-d-Fu+_[>D%,"^P><6-1CT:#akMPI2tdksX&KWcg>$2@4/_YVo@dM5i]TWYTo6hEJ6OrYULH
%#S?p5*.ZKn])+64Ve%[d"Of,pQ;MiDI<YD2mJ1thS)<*eLJ<:f1+Pg^,k<L85:S'9W;BPhRa)Ze!Mld`qobPbrJrOUb;2b:@`F@<
%b'NV(;_p4:VTI$rn2HcOqb-\ms*k>>baq[:pY!OMp>+E@mUL(.l2.^@>VAV+@o2p!L3=L`Rkh\d%W0A`nnEjOnH7p$\U@l346+MX
%M+5hWTYd>@*QWZmWlhh[*).:MA:?KB)K5qjbJEWq+%Z\ISXc6U^Ai0J&S0@/Dap74Il-e*-esd<-e@R)*@2F;@2o)dQQ7cM%]o;5
%>3gu!N$2NB4sB;31PT2/9[O]_V]3Mj>h\;oMoLiCh&,Q.)':t:]GiXe.c0rWdec1e/b/,mqNps2lS4RTT:/=mUEecY83?52Rs+WK
%K`Cd,,_hie^X3<7s6h(@-NEPqs1Q%gpAFj'6nQdgS0hU'Un!XpGOkQ)52XKF4.Yq^i0N6AkBhaEalN&aI(fi@D?mrO:X@n2],>[I
%aMG([d3CXi&hq2<.>)Lk00n@((c/,I*D\Q(hm_e3QbV??`:L=-J%::@Y>-dll\H-rD`H\>@gm]?o!!eGp64aK,P]^3eN;,3`XXN%
%5*@Q>)EX<;A-ZimS'H^N<!sR"J1lDdg28RX"EA2Rjk7W;g!?!lro<A9I!bhReb8XYbH&n,:7p$H3]eb=fdK<Qg!9kX2VHD'qcVG?
%B5KjheHg*7k.f7!hd#V2#;/>"XnbpuAk*8BHOeq&>&&Z#:Mcn2Sro?6)G0gi`hk:iD1*uujs\XVR@&psIb:4l=hf8h1%cZ+5%e*<
%+/$%am_As6=9&0u;U-[@=oXd8)rM"YU:n6m)6eV6A9aLN09bAVcX:u01CG..`!Sm*Qc\_P)."Z-b@Gjc$nmh'jX:NjkBlP.`tZ->
%)3EX:q,AA[,7;ao>EGH2QJ+EgOs\*!P\f=jpX($sE7)KLRi%@Mi6[Z^N#BNtCuTu>5EC=F5.=HQcHiZ.gRRXf9-5BWS<?Pc138s@
%0c^I>S2)f>#'7GPRW\*.E]c]L)W!Gb@/:Nla(+bNhZ7/`lq::NV5HZ/k,Yt0IbC5trq7n'hO0N@NE2PK>eBQf7OAt7!,^H8re-2B
%`'KN`];SI=X7af:_m(q+(ie7Z<BBJXJ+1tRo%gp=gM:%'=522d,l'X2lm^Qa[ku)hUCM78fmTI7^nK#s-Zg@Kc_O5Qg+d8SY>"K>
%m2.lRk'04TA)&3H#TZ\hF-o'-0o4`4:.GHk9"cSk9K$K:^MLpoUq)@Y2&pPTGRc0u-Tf=Ya#IruL7RZJ#;#pWcbPPqAdjkDj'Xb#
%ac:?lS9D2J*%Dhulkkp,j%/MRW1dL87KpCtqUor:ce_rE:9HP=hcub4M)XVpD?Yu7r^hido#T3@:G[gi?m-CDLndh5PPL%$4?m[H
%DV%tEs*(f_3#SLAFQu*@fZ*"6\[Zqb/Wbj>N(T0D<dq&7?!P+S5.a#3A`eu2**DZbZh%%(MeX=_fmd=bL;p==G?:."a,G\O4k3*#
%1dem3s3mh_9'.AD0Y+n;,90uQh'ek7hOlTnG=if234(,Od&.c4PW%_=RU*?dgg'f"Et58LR#Q^D-i;"6L%Wg#mO:<?-X<q&b"t,G
%0'C$f]uCK>d"B#pk7m8?C,![Bm,_CBgKco$O3*nP3>=p_l2!<Cm+C)"31snq`_N,/*IC2Yd:C7_Z/*HZ4m@!:$=.Nhad]ZJ8Xl3V
%\Oi9[[(/Dl2E*sSS@#iiTZoX;n??Q'c]-![EMVmTLlkEsgn`4ilJ/2\:$UN0c39%5Sq03eD@hT+dM:)"V&M:Z@oDRjj7;d5kGuiE
%au\d.cU"1MDPo4JgmNTS\GOM@8rV-OVS!O?I`s6*k&\ZqnI3M.PT]"Zak"(F&6J[4keI+=^,c#^b8D+%Ib:0\?2soU;7=i4f>!r=
%Yu46.Vo$E8a'TqdRMn2H@p;E<7(f:"7JFt=F7;ZEZ0UMuRH[46OOua\ec/-ZeB&j3A-V9cUMnIHW#gEmkb6IUd3CZ?Kg-ctN"!;2
%]V$M0a!d\<4.^2/^\op&J,$RE4o]7=k7%[K^#=KSNtLa'a_$d7&Cl60;2kk'qKR)SDKE*(405sg8=jp:gq[GF!42LiZhHDR4A`3C
%;b]&"U?@UWb)T"QZos1_,;$i"h'Wu1Q=iV$?]T71rl_5+#]Z*\6?aekmKp;4],Y"$1igraQPBE!SpIX*h@sI$s86h]YoP.,p2;s!
%&PkK8#78(nb9RcBN_hRS7$C;dHUlr6)Eqo0kd^jFhaoktAA-+;4W1lP$Tc&jWY8,4<dH7>)Su&p*CI\mI6n9!Adl:Li'_(r%XSVr
%i[^`XjA.^hnQqEskDIS;<qlOYqRb#*:/1$kRH!Aom/!(CgJR-F9[*#<$/2(/a"\#%d$`p]0hfg]^_DtW@$'Cdb/>5HhKZ9;nJEk!
%dp[la.eJ*,U3JflnO\(IPSip!F8.l$;oNZLQZA&Os#I!FSW6@4&edFI'YWBhF!L5o*!Hd1ZUCsi:TidPdF-&iR&Ca\J^,?"e+t$=
%rGbW_dh2'9UWlkImosR_9dZHuFS&6cO%hVi%XSf$H4EM%?B(&_%mEY+VmA-Aa`+tbP"Zkd]"cS`*.b<S%cZ3YY9:3biro>M]J;KC
%&U&q#&+50g8%!M0Ca2'2`FHoX!C$n?:UlLX)[H60h=bT3G4gO^O$fDqlci48B(m^TPNcn:NLpFQmpjV';=,a.-L7.ZPOFQqN'&I5
%S!UHlp>"'^D\JR&24Brr:WsSM)B;'n%W6RkiG*H(n_KRr'Fk];n%@W;i2n&EPLGOYm,Ub7FFr[dqNsqudXMULCX16R%HkG5E!ilJ
%1a/0WW!@N/"R38T/!IVO?(ALDOJo7rU:9#b?@3![:`>g);SLf_I!-,$o('aY+1*'bn]gOkJ%@a4Vq:(kYM8@r?7*#@jbm[Cj)6SX
%gq8%)5AkG!9.]lSrliP08O9kUgTn7f7N[dM"l4<--cY9]6hB=BDp[.*++M=LrsM$h(R4kVb@b2.rq$.:ZVu,"O5I^"nZ&Zb3R8>%
%bprKE2[M>5?HZ'2k#dX>W66%o(A$%A((-7ODG452@5^ntR0SEt[SYXl?>!DCq)+MnH'r5he4=0BH'MDWH5m]d8Wj:+PErP#QKD;@
%(%\0.-+@-K$@l#RrUSe^U&5p_AkDBTG+P%#!PbPo*53-rK<Q?8;Hf!L.Z6<o?XdHgQ*E#uhmoTuSo>)5g_<oBWLODTRs"VDA+ep`
%r$hm.^[@BiPgWIA+ch8,;WXiq=t"f?!spL4Tk8/N&+'k:0jN\8$IG]LdiM&4E^07)g8TrlL/M$qXji:p=okL2]up.IZ['"jXgTA6
%0h?q;5Bd(:!(stD0hD7._TLt:ZXpTVm1-WdOOd6i-WL\Q6+J(!'H1bF(eV3,B2UMeBaq,^'Xgq#+)3_&p49jCb@?V<jaQRqE<2;O
%hdV]DJV9<3Tk;Jc+5.`S;ioR%2)!Cb\+%:U2tf;KG02Xn&f)fl1B_E_fXV#Dh5OWf2-Y2"cuKMs49B5!m`$;1c9j&E>6NA^+CXAH
%W7e3*LNWpX(o72lmtsolAk:.PC7Z4qeUjbXOS0[9;kD9O?"Q-n7$gg^<%Wl$=D6hgR8ICQNL3HaJg%1;8A<j\jY++IheY<^M(pgR
%6V;d*k#kP@$jPQsC@$"JcYZ^Zd^O=k-j:r\K]Q;a9pQYNBD9+#h\g0.Ph"-q;E5C,!KcT(!:H?%9!5'td-kkcAO%btEkgIg.d(g`
%'QR>pBhbo;:J-/+bm*@0<C135Ta<*Jk*;pP/h!_\R3th,X^p"LB4^KPRIVR9?oZ_PkDG]8boH4&mu>\_hV\`C8TgRo^k'?.K(?Sb
%S"_*tMUt.VS#r>t5G^(S(ckD?@uSOq6kIibTJ5hW%ar!Hgl9JQ\H1IiV!%:OWmU<7>e!q7d*-Q0eNjSF8kqrD*8A>pJdA.b<M;+b
%)CD.$"bl&#KuH-3>C_!M25-O&!>I!QM.I%";PnjpEEs;=7Z]QlMO+lTaigtg#a/1[FBVm^]25dU&(ZG$UBXT$Z<V:K>F\k&Ll;U'
%#j4+/h>j]mQKLBN0V=cY6`T3Cb8IZYc4A/creu_l3<7n*6nQZ6;@A-I%Ara.0"B+(ku)c#=HM](lVoM!GtQ7<Ct9EB4n.Q!B77,&
%TR%//ET@u9IJ+G`b3N/Jrp6blZb2aC%93TT"o;QgY^B;`priEdbrNg4A&[-aTX/1dJYK`h\u=MVT5dV!:hfoPFa!Vr[i@$qg"Sh-
%ZCppcT]^^8^*9cW&#u+Ip(e^S\@aqbWidu$b5A`<ZW#8)5C8mn)oQi^=4]`:W1(DJq4aI/rl+6Ers89SdB3ZgY+,%SmIfhrCp?"r
%os`2rBik&?;6=W3-=r@S.[:R?XAjoS7UoSP@Ps!1<^<@;)(pE*A]!>^65::4-4N@[=oMas7p3JNJ!20/O-$pf8Hlg[q-H$,NI11V
%pu_DiZpeK_-^i+K./XPB?2TB6iG7rkd`Bc7IXu8+l0RT6c0<msk0\X/56L``KgKq4b\`g&<'\ZW(SE+Q^qn3O^VA2MZm)brW!J$/
%]m)1e@'O+>%->8f;%K72T^:d7&4?JU[)UMqs$m52-r^@:#\qKlGY0c"^dU\Vf.mr?)0i]#!la%;nEL:(2$8mXLtXVl#@8DOY>ts#
%*[,ZA;HA3Mo%bH^(*Q<doeC-<`ZW?c7E@fYf@ogO/p6/l_;D&:J/s+e$NPXo')eQOi,>UD\`oTGMVNk6?%5Ncp;[=6``3/]kF7Pd
%NY@]Z"SeI.8t-Al>K52_UO4([7p=`H04.g-+c/"dUs\bZB4&DQ1^&@3jJZ6B%7lY`,AK6^l+lZnB&_D(1cL0A(l1:sPptA6BJSfk
%Zr5D]8Ds+PqORK)9VVWf:kL;Y-fL3Q!`P06P4&kt8^NaSWmBFQAMMfuWlj7p/Y^)#5\PHA&$>Zu$XA9sW5?MYe"Y0)hI#oY:lnAt
%f^fH'44%Wuft![L;B\dN"\XqbIsg_RJZ<EJ#I1-C^'@X4)Ag?OjR1>sgu18t??6KHc/L"A9ed#A[XgtKd51rJ21Xu\]aDY\K2I8S
%.%>?jZ`lu=I(^KgBh"2n5jXG[5+1"O&Dr`1NeIYX)l+@dat!QmRF4bG'U4_F]0X&)5`Co6a@/uWbDb[-pCCm^Y<\Ds9I;]rK/Zk7
%"i:J"Tu"tZZMQh11%rEh4]ik<OpiH!k%\!pqYV()PVN8V.PMYl(<stCc26r_YC4J7g`G<6qo^pbfACLB0!A#YAjl.A"o4b6eM^e5
%9d]IeGF)D"FcRG64WkH0?N.<[gO*#9KeC-Vo*aIPLW@7D4r#Ldi_"Me>j8Ci#*bmJL*S+d(Xs^A4e^DE-=RDR2m.G2;c4(C`T"M9
%Ir<TIgKqSJSm8TepMZOZe+8S^\6J7Sh\JkY^H.bua>'=qr%mT09Jg'^rcU#Q`IED?Cq`/<PuW*,BD<o-5gQQ'4uOa?7sC;-NbYLA
%=[(Ci/1Oa&&I=D2;G9FJ,U>UfOIV(mZH\#B'p?br6?74<OISP0OIYbSP,hDMm`>&P,Srm+\/5MKKk-EK1'=(g@WGeDXP>6O_aCaM
%D7OhFpmSL&ZR[A,1k+%<`+0][h@Ysl5,TnXms@e:FK,<J2b$IflW<A!LIBnHJ7s;eEja7AffW!o+t,e<F'Yiqeb^E7ZAm$NXK#(0
%?+_d?"-]>#=CO&H^qu5H_SI)).%'o>LAK&gYjaDE2TW[b##Z/C'OCgucr6L$ip'(.a#M/1k0]hE>F1UU[mTnPA1L:[bp4\2HJDur
%is:*VSX07p[n>,t9_'U[oPR2AJ4)PR*e/?ag<>)K+_<HZ14ab"Gr;"Y-WBU^78HhRA87]0c$u+[R:\922-2)ck`dFDR@:*UCheuJ
%I"82!75R7?K+TJn[J<hKl8r[g"l)\-cu)L?_H(#kN*:W7DMFDWEbpl`@\`C?+1rHh?sKa4n[-<uSZk<Yl$0Km:\JBR*l$RGl\3,M
%ZLMIDSg<Dh;P*7"PJ-dQYr>T`YhT.%hd61u0#5$_InS1P>T4t1.@WlGE"8U@ffV,`*>\/imU9jZV:0!lC-_4*k!X$+ii!]DS]TFb
%9e\Ftcl?B>eBs='oF;d5TffOL?$G9E=O!+^Brh\E+UHqO4Eb_Ra"dcHk'W+ErFj(?0W5LIMOnY.K0o4&e&M;KS[gmTd?>8-8^W_9
%4\=%b'`A_D2")*".kV4*B`@/'$22,&;D_RW.97\#<+e?C](V2pLD7FK[T&,)&4II@6eOK0XdE0*=NSkCP+93'nXPSfg>[!Gq]ta<
%a=5GAPl0!b/,]@`,Y(UMj<R5jEo\;h7qVHciYIE]bEEqAM<%3"(#^?D3'U+SUDn^+oG`PWemSUIj\JdJNL=.((aa(I\>j]/mM5Wr
%MDodVQu`:><aue:G>l:5Ba./MX+K/AJKX-.C+GP@C0Ah=MoM226'dVS*G(BEgfpTZ8R"s[CLX'8)84(3(O(*V!u$+u,!8?G`2.-t
%m6*e/_]GaP-JD%o4p\^qqYKaa;bg^-_S0Q/5N1<7+M]NakOVS_P7f0%c;7$-=B'%Sb])oM<1%0oX/&W#8o)cX;\G1>PD,8KrNj%j
%=_8!bXJMI(>frFKJ>;3o)t\;e>q>clKS@-16)j=#d%h.,GW$AGK.u"HfddiXlb"q&Z/Q0?T%t2NQtIO*jNo=XTZ\oXVt(d@#>(qd
%Z8Lf5$FqqK?Ht.b8(rI%0u-cS]')U!hY#icq`Hu41"fT$e6/Kd$X75Mlak:I6[M6W6[M6uSOi%'!pn&b/b5>d<Pj-^?30X$`3=8a
%nQp43?tX82.qPH3\6qel:*E/AMLW>s"5tNIN8R<rOtRRTd_h>Z&6B3o]nlT#=_5G:\4BM#:[Tr'@F1dRe9*rgo%*IJ/u:fR#o6_/
%Q[[:P)%?Sq\]U1H;5LrU!97pf`J)\>WaMnTX3+SpUn][#L"7OUDY`g]R)2=n(Z^?L<k3QN:`)p4/+oGDRaaXs@+6Du$DTbac:t8)
%W&ASX@PeR'mYPoXP]5D,B&3$S3#GJD1>6u,$0fml$?AKA)&'lo0Hkb;;4G]98`b\\Nb[."D;.@Mi>*Cf/KNZt,]%p\\2DkajP9tP
%OS9o7mU/3DH^t>'"=tpCN!KP3X-I7Ej%sf6el55?E(P,i;,GFe.J*naN3/^;oBJH["(:lcWhm6JReOQ%*'W<,#T5la<WUZqDX'Ot
%,:R)#RKqqNR":K;.<ueE;E!J?o7`.R4>T9;3Nm1c#1r)=ceb/"[BUqc_scdc]$>eEG-YLZ;G5gQOPg;KKHqh)I5T#pK<^8McC$I1
%T&9Ou,5#D(`[%'1RH:#e1/OpWPY/?_<2C>.g**#EF9Wf-4U=`G)!cS0^m<rH`;+:,^s!3bBP+PaVjV*jih/4,b8c`Y2C9)*8(PAA
%`8l,_;U3-EPcKsSkdXue4I$9,\H56jPum/:b$\;:&Sk],!QB#D2%O>akleUfZ3r2cb]9fg$J5M,eWt6H9"aF;^oh\0ARYoiA+GV1
%>FL5^I((OY4+dquSS["oAm(<WW9'jOQ3&j%!p^o/B9@a$@JaJC354`8aT/Y'<11]R_9UcA;gQ#:JYP2_,=&2`KZuHqI&./7ICCXZ
%[nA/,SS["oAm(<WW1AR1$RJJAaC#f:7:DulQr7:)icMV5BgW&-8XQ=/c$arD)e6l9r-8=c>,3k79U0ahBnt`SKM3_*n?OLe.Clql
%R.<2Kk\Ga@9YiYfQQNO0,=<[G@Kd*SJT;\3RgSXOc)<Ut9^;mc*W6O<K!j]B.ZJiacV/l#,3[?/'=SnfV7G>PA6A$]Ug`dO^6@Tg
%T1ei*il!Y2#m#]`U2,:FFNulFgLAMuR3OBT7O<&=9M3p;lJ!(GD"aL2%&'3D'U1cFYna2?Ya#8T'pXVJ@uC?/-blBOjk"Hka=I")
%8@Fu.YF%@1P]1M4f)B,[%mY]sW_FNO$En*>TU<]9Xu"<P@PV81%j7rT7<R1V@A;D(Kj).IdK=48=eJOuRtB(fAiaE\CcYmCT9[=2
%'Wu?L2F0f5V(N1Dj0ULqH-dlp?%g)E3;PPr##KckTP=M:OQ6'B8hg%7cf5:c$2+'._du?Arn-G_TUlu81&=EF&RJJY=CWlgX,2FV
%'`ff$f%&FrItm"M3MK&L(K%-*/5_df-qK3?"+Bn)'Eggt6dD!gFuD-R3)`LdRlqZ>3?#'d%+%cn$VI:bl"nMi85;TC5\4nE]OrGe
%en!PKCuf>LnbG1q+X4gC$n,#7MI2Pu"(V%GFe)*fT;sd^a&ndh+!T\P%rZ[hSOg?;!7Mr]6-3(^S[i7$`PMa*0c-dBYP:/$!hL!@
%m\7o\+7`S.g#DZTUu,^7np'.QDYYdiZr$<W$fDToK.`#MBC60,eKV<Hr4P>1&n.!@nQmC[s.W+MG]g-uhFf-(9Sj/@^fu'+IIH,#
%"EQqm&VE?6(9ZW/SH)XW4oRQM7$WJSe2&jY[[AhGI]PO:VefiX3Zp+nB,_GEHcX"=>*mZE[ppeKl8g>8,:OGl5TXM!l#GWRJdC69
%7T,&h(L7$Q8ZEojR*$sJr!Xn9Q>85MiV?u_1,J#JK:`K#SrkW5#D$%"*!3'0L5hpICgm,Kc1R5te7&FhEk#X=!TPD`V#hDRaOmdQ
%(W=D^QjoHl`L,@dktpQJ@_f:h>MP[Z0__R51Q>n/&7dJ*$"8F#nt(C(mspH-<Q,"&1rLP#I%Ko43qd4UlCC0Ybq!7l=:Imul;?n9
%OGln`2d]TTWMF6sVuS`A9Qo;DB!]pCZ?i@BB@,moDF:)S33ZnPJYlum3ah12KVGae0uo]u>iI$_#_\6M%N`P.O!^AS#!g!:Qj>NB
%;'qT8S1t;/b;d2K/W2<+N`%Po6Ur=t8@u%Oq&YT\4l@SZj*7pIh:.h*ap(UkQJ-Q+`<3=i6uqp5%dm/_bY^7&n@J[>Yaj0R0pR:Q
%j63f`!Q[V0Y-a>/(;d%_9GY#q@3]?4`sRX'Fq2o*-qhmK8/cEsW!ib*Y:>7!@nNbU!:hK5n$nfmDg*R<4n%L94oQpnKZkh7r4q61
%47O"OmRb"!"ObYWH,P:oH/qSCn;f0I"K6Kuq^W^f'lfUMdKPr:K2HGs4>mU61^M4[A:]S#kbt@D4@7&FHk.F`Zn3lUeD5'F"GGhR
%VfN3n<&T=#`PRf2n6aX5B=^VgPT)7[A&t47FE/7,\r6\1[sXkk340m*-o6bXae9e$LIaE>-o5?TjG*J,&=CJHM9r"^#0ol]J7)t(
%@Tl$blN5aM!;nW/SjS"cCG17i%;H,V3X&uCJ-gAHK617;W%Wr*A2p?P'BS@eiag%Up?5RAnY:)4]RJ7r/lE,>`f#E@3K]G!/d"e6
%;1R\-[T$99<h<``0nO>.=5mY3QAYo\/>FWWdN^[6TQQsO`ih/e;VM<0No2BXg1;5D.!Z5FCReNDi$h^pqCXTO6)lC>+f/Ao^h!VN
%Es7qS`Y[!hM)Z7e0,6q:mk@a><X=UWWPFd+![BcUrWAlL&oMUoXn/\r*(R,_mN>Up!+;JtE)cDLXUa]D9rb-]KoG7<$hUsK'"s+D
%iQ"@iGbEf@$Yu"ch`(h2/RW*]/p5:Y;TuJd-(?ln6jRRkPYE4W<(r/C#S\"$:+<b.#DDaW*V`WFi,KX=mtW]^+,671g]_<U<,<7G
%(i\F&!;&X'"Pq>@]Z2Lq9tY=$?98i%Bc?1D7fS_M5%LLW/lY3;Gpd!H_U,:&>$,./a;*`7J0_dgBmHfhB\-8WdQ7*Pr+*m.9j-a9
%&2:[p;oujAM+Y+YK$M1)d3degG^$W=q\K#(D_Rc'RDT$:E3pg\)6q'^l`Ni,(+5<_Q^\+``mriGo>1#\\iT"9BKYE/YM@-\;G$tI
%_oQCU7GD.Y3`U_]:DSM]mS[nqR2((]"1L#)\kOMQ!X!#8S.d4\lp\tq/T5IRK7fqbCkNl_$E^oU<Rqo*SDZ,Y"MdW>0pa!"qi3'2
%[LN$j+GDoUS&GbAXbDeh;BV9eZ8*^6%gOA7Z*,V@\s;KE9N5+Q#7koI`g:(4K.YP32I+llf51_ZRmRCO:,qW!]<hl,[!ZE"eEU20
%.fPdabZaJ-9Xl\RSeB#I2ZE(D'g`S*8=_[O:.h#n-a&+C<B9^!i5Hf@l5*!M9Sg27asG\b8SAK$Hi^SEA#n8""()'BfS'`Nni22A
%8+R1/#)&Zbklcqt#184J"Wlk@>4NtNG)QKMCurhX#Gd)omnTF8):2Ck;CVbM7A(K^qiK]B'S(_M8[&[<KX0$:NCk7#"V\#4Z0n/l
%`'-rbhB[Ngn)0$i_8N3c1QGE5YQ0p`n5o7/@_$4U2D+&t`%-WT@t4VJ2>W!2ruM%"q-`Z]Rm^,RS2ur\0#^<,H)$mX-1Tg6aV[-r
%=V[@&QYBD%2l8,bhK2Dl4ZJMhJIL1RR!:[?/i#[VT!NT<32f$`H'XU7nGu,oVh=j'S^^HtQ"cRf=jgfrEa,l(BIS'_%<Fp;.!@OY
%;PT,-cP"X3X%K&XTid$%i-cg>%E[%;5!ge'Ojh&oE7rLRWdLUCnVOg?aiBA3qR[euA5QP&&1!%Zkq>:!4ZUu9iNjrd;lgaHAGWB.
%E&Lu4-g*A%1+03F5E8Bf=Fh0G/4Yp2ggJ-'^/I\:NI4hV4'bMuS.>`?>;Cen2Eof-[]^)n2fJtmc8*j_\t8i2B+-^5L1C&^N;oYD
%5VV75VZ[M6.K\Yb6,nY+PqqfXE=.:DgCau;R6N\e5"gK^_FRNH4Besd`:&3&@hcG?G^$2.J_^@>gg)7RZmMcm'F%,u*lrR5q)F"1
%&BF.l8V%q^231]A-\[oiUshL.M+Zom9#!H3GRQp.]g#(MU^nJm@WFVDJ@XVpn8th$DZ,aH7H^ig(`oN\/L-.7FOdToY;0caZ#^[,
%^p0:QE/DC3JLT],7)+-[&aoBsb%jTCbHspqC>*/%349>(4Ip8b>;d)lEbi5)?g,ih\/8hLOZq"n"['[eP/k+Eag']9'rSkU)0iqu
%12Op`L-/3dYpV96SQ/o`cN+]Y#Y[J,2\p)nPLc"BRg$A`[/=L+K;1XU$=t[</Je-nm]h6s#7jMP:,h.=EFrp![fq#D;*KkV$9&d^
%O!3Z%5PhpfX#4B5"`U*nbWbP5Z0$D,L]b1``o3BH_V+`3"Q*15jUf+um]MIHWI&%4Vktl0I,gSoM0uc]0ZjNdBAo7`5"W3f?]2p$
%IL[Ed3,@?'Z]3G1A\+GJ_c?%8qV@Fb/uIG&iocd^=@`1(iopSCkZh-K6ou9A$]Zq$<<eUbg0"%jnf;&8Hn[\a';X&&?*5o&SUfMW
%R;Ogr0]U6t_@7J/G*f,_U<h+gPFmI4-JRN,S8FcK/^s(i*j/sVn;\(;k&Y,BpId8K5M13H%eagpRW#nd=N3psB*u]/&'hX%K;-8m
%Z5S.Gc@#tuM`VX`R.uIH?NOjY"66Vj:I^MW9G=(k6fOa2E1NriBt#Dj9WL-;#7jMr.GTT_NRK1d\t-XS<GW'8DhL>,rYIM#)+;S[
%j%M&*]!@)l97B#Iq!#f?3'?,8!plZi!m\pI6I6Q_!e4?J^grW3kD78=[ciF&`k"lqD@Ynh-h+4Xh/t56Rpr]X1C".YI$K/tRE!o+
%-f%PUiC_#u:a];_A\mDUnai$_O/=8LNfEOga5'FBBpP(o4Q`TNH+H.Z%l#J9SE#!ujZ(g*kh$3?^c'Cq`jgs]VO(b+[ooAnKBj\3
%@q:1SE@KKk?H,NbmZPl3"-Zq\ru<?63*BG=D#k]\7acgETp:s$r(A)DDR9d.!Xsa&9KP)(6Weh:T#1$k`EbMA;l1fB/nGl\M,>'m
%kmT9)0?RCZDf"t:?Yo;hVEd?NLZJZAnHrLr?m=2S\M9;H1,fFKD#'G22rRHjFD7.\-h2.%a%+%@FY(i:S=;*jKpAHS]>QUR&Yns>
%?^unkR<11X_=ooM$"]=E6t)'9i'V9*^Z+<AMrp4]a<:X\0q?+M)!IU*!f8uP"66%ZYcZ@o*1eCh1Ef2J''o)+r.F;XknY.leF)IW
%qFXMI1"&pW]<T;4@a4ZD!re-[F\LgJYRB?uKeg1U!j$>a7b%-a,Z6u!h(QK`MPW!!%EbA[WA)&hk1)&M2@,'G3!5tqB5@T]Kjc$.
%\/2:=6g'0c(K#aC.)4=q$9AT8ZBSA8)OCO03>qi-!^S3a?s-\?gS>;8"q$^^7:D.GiT`W.'c%IMkmJ&Rs(hGi$0aTrC^3W\=4]p^
%PRsc]58fFV./5\g[,Z5'=G*1](ou(a0B<tg,!c7l24@rY:A+_sMG]uX'NHIf^SJpR`DOV0]K5q[.7u=jW!)a)a"sS=SAuTNYgi1*
%F2_C!+9.VJA#>FL"\qH"+Q4/A_@T`7hHQ.kQ,IA@>56kQ0"1ltLgh;6Y=aHUK)cC8Xu??8I&UEC4Y+gnKQ*7m%Y-2."Fq2q`'A>J
%1/K7m(N:K5#(aK#`M]?63%8KQd^/"[(UTsm.Q!M6RCcpOkt$a91;Z%)#^>?TNantO80<IP0.PFY(D+n)'ikDrout3*oQOr.W?BQ,
%">Bm3^8pBrVD)JWV=Qb0<(ffl2]`K>Hh!kI$.G.V98!_SVZ.rp%i$&Am]^adCl%it!=Xfl`C\mf-k>2D6VQC'0X;-4;s)I9P`_$"
%YTe%uW0MDFW!lckCr4Lki6VKD.$G[-&Du7&ad:Rfr'M;iY4rbPkRc9!YUV)Qhe]&$VZ@_^_V/Y4"H/[DMnXni0KOC6*K)?]X-]6b
%F4t;Od:-TG,GPnDQo^Bp?Z=pnG4sg]?U]6hAS%%^#@gqhjJi=+cH*M3,Y%Cm);^b#Tt;cJ-QN:"3PI8uChrfjCZ%)j$Dfa9*!7c_
%K7trN#'V!l$ChF?N*-2JK7eXJ@bs6i#U0b_-Z=tPN5JX`r](bl=a6c)EiBm(N(#hjAjZKWQl)f5:6jiZF]b1F]aZQs$jt:)T`T\*
%i.)e.#!h8O2\?m'0Y%Nma)pSl*6>oT2_NRodo)%5ajBpT$MNI,pm&k"m!4Jo+j#X5RE*sd:mJE-B*/uZ0;8aDf3r\DE^G:90rWi)
%:q`$6<#'!D`4,QT>HeGeh$mPjNEjkIM\S\M0m%,9LC0YoT[>e![>aVKOIh,88g7,u(`J8Z*qT7W`3)PdJh6]*?t?:0D9>i,"PUc/
%Te6$N6\%HAMV.$F--*'m:RT,r3T_.sO\S&DMJ!Z3?/2L=:m^%^IpWC+-J28@q+!]!P4Fd#el9M_P@[aJbq:<aE'nmf8d8`5CqrgI
%J^k-n3L6qrMWNkrNFo@,!Md^_5^ip5;%r[)#"TOB#9mW9PMiZ(Qrq/X)hp;`g`KR*KSf<ZV%Jm_pk<4]nYM5[[##F95<:YhcSm:&
%QYg8,hU(ge<q%W%&FU"7EfGcp<L!OpY&46ZO8?pu*?(EQBkPe$jKE`lD?3b+hQ!8I-ogF1E\Dmsb)7"f".Ci.h#BD`&2\(&$BFkn
%&iSbBOY2?"\s@/GKpZmh*ckOTL)uLkiM+4E>*VG+2,FK@2Bc?uiaWbr(M\>HKfic6@lW5ojnAo:cTdO1"d14*)R0MB%`V_s1b]kq
%j>]'m#q3_OqgrbNa]79i6g2<K^7Jo]Y^sY]?\7nQl8>n_:b\V%=&Aqhd[U($b+2XPqt/d''6gu(ageFc=ql>HTEl`S.YTAC00ADT
%@0TRerR*38@@Ut#kh&C<K_u5ZhkXrEZ_Gq?1BM/TV*V)sA->Z,E?Xbipt5Ht8?-[f!t;nndNSL]Ot_5Bo#.>5c>Cbi\IO<L-"DDj
%Ds@$/Q\:[skTm\X1U2EJWND1cA#`bQ:EW@W*R2aBn=pP,LsG+8oH!Mg,0ZJ8,DkHJ9M'UFVaKoI)r$1@d$6p(p_$]a)nl)%5.!c=
%77n5/`qMS<$=?qhET2,HW4p]$$0Vh.Vt&`"^meX'04M4DSg+#=n9#nP(lg=g*OFG?&EBJ3n=B@.YhBP$.%VdDd%O"C:7rEXP!Wdg
%p+ab#b_RZ3SY/Js5_MR5U+\7jdIK$SoWHJ%A%ij=/:JmHDOZIp!L89[<*,eB?#CneIJFE]BV1q.#f=SB2;8PS\An8:>5MC4Z1^K8
%UcclM3to_bT*PshMUJt%>*78:iDq4b;E/qtP\.SG(FbNbel9Y59d[Q^rXd-<FrB>dUf2D&X!2K*nSuTLBI,E[&_gC8phN&u7Gs%?
%\7?iNkB(Te!%M*"qJOFN1kakm('`3n+pPW:6EC%-&HnhIYPEOQ+>j#E%]8Z7i1gIM>ci"Wa=>u'T?rJt/QgKBX'k]Eb+KPR1bh@.
%ns8(Q&t`E:*'IY$8hbc0\X7nE5YEr("UehU8Yj%B8WFtfr`SLP2LIH:L:gMo)j-gtoJpl9]E>t5BOF8\hq`6#8l/#3ko[I'aA/.?
%F=p+`U'TY-OcKedHh"S4X,=eFn.ClRp=jC^k7FFSE[;;M1,')GUATj'crZn`?#j$H>o?RlIjq7"P2qu>3.g/.ZPeqp,buhCU?;a^
%D%pB0bmr/Opkha+s%(CM)jJ[;i%hN.Gn5@0MU+Q``>IhiOrZ_1nZ+?>Eq)#O.up7Sj2C_`S\T#u,S!4^J<.LE.BV'W51$;<qj/MI
%/28W=?()b6c.2p,)RR\l@F@eSj.7!lm\ooDNS\^nQ[Y5/HG2uYU<"Wq-!d_:YGNaRKnf1j'/;7H7Z!nseR=s"MkA@a/EW3dD*OiO
%I3FlL'r]u@FWs+G")A1dEa^\",Md3uK*hKfR/%;P>VJK;=Q3>8bQ(V\Of+T(-]D:a.@<ls%0mZ-VS4ZsH>aQ$XsZGghb[+fpO<hB
%Bgt+nQZ.\2Y/iH6n<n,u@P]/k#*pS-D8sq@_3]DW"+6FP'\tr4a4(M2-F5F=ZSA9&kLk_R#TQ<jT.fL!6Tb,4b+CGm>)FO',PP`8
%*BIoCeJ-;c$/K`1/7%79fR"FHT(tO+XeFLJCcg]Jm]i8M0*Cc4-RP+6a6\u2Fc$4t7V1")\DNM5ZYkqoG*tcG4Vk,H$>5/S^r*#9
%Qi$ms;\j?9]u&]O&Bka`b(,HRgSW-Dq0`1i:iJTuf95Z+"_p^XU#Rg_oe[PXTGqs/.>@9fnD)@K.-$57NiO&@kC:UiX-Xkip:`R%
%%l9a>Mj9*$;#ILZR$2'#_.e9SmdD_7^UG$AQMI4eD_H<X`o"B3l$KnSlA7+h2^joC,]JS6N@/4T@=4Xpb&n>Oc@uXW=?.Nnel)ot
%N'_lBT5>PaFIN@1*0T&7&#WVkT3TM(&TPW,4>8MEgk7JC1J:KTS\tW&OE8^egS\8Z2X566k$"<A$YWLg\Q`75f8p"G0)RG"X*j*j
%6KQ>A99QGcnd5lEo'e4A#DV07A2q4'Q,,_rHc85t&QdO029*4XWSIrNJr3fl?pGJFHY9l9(@$*pP&:XakBm=R=>*7'WW\@8r5#Q,
%F2Mt#cpqtWlgsb%1#3UshPW\h2D_o/g,[g<o!o&\geF_=6kSmOC'%77gJ+re)=um)B16kE#<jYo,JVHaZQA0"L/-3B-#aD]eg;^;
%0Y1=&-gX+0.t98mF(.b\&I*r1Y+;nbXUF\-5bFF)$B54NT_Q8=$:eLKZ(_3f:OmZCbsCZo30E];SLkHFqunff@ffjAW690K8QTZP
%q&QaAK>:$aRiK`Z)i\OpKj5,iNB`sR7l\,<BE<18)`SpFInZi'!C*stdW\H[#AW_[O^.jP;npN:ENh;lmX)%r&A"Hq>D.lu22S_G
%@\;_8_FHSGcgqn3Y:hV9Y"X,F8rb@SKj]N%S4/U4#EuP?6Y>2VJcloP"5)N82u0sg2S@U$Gj`jVPG@@1\%\@Yrt'=GH87R1JC/A^
%^AG\Cbg'-/KmV-qq75>%5)T*,s714F5Vjse!WL9g;8G8;Vqt#=^>]U`h7iP.Zen![bK,A`(S8T*)O'MC"kEH^J\K,`it/87#HkA,
%NeHtQ_=bFi86Fn>Ef0X5`jt"\#FmFk=Wf$.R&flU]i#gRM7*-1B8_a856r]Y$#D;Q%S?dBr(WPLUP93?U`uJ]/tlJ4j,5+m!:cI?
%0f--_h$'t_'u-$]`[AI:U)?itcJ<$,:Q-Km5c<$eZH<?b#iRDmUlVFhU6L%ta/blV":qU07h>6J3St\FJ@Zr9Qr1u?pi-nD'(6;4
%Q+Goh5F>O##A_^c28b-,0`,#l7-YDE@0Y%+8WJP1A!CuUBM?4]B/8sF)\B\+=/DJCMu84lo^>9@7jhV]#t:XGE$f)>M678A3@TGh
%ie))8G#$T#JgYhRnJRT'5.2*6T.b#SP"5VrdDRK=FAcr`01)D[CLo68QaRa/_5S/,kJ:X"`uHCX&,f1`jJpc0_HOKs'&Gm"iPnLP
%`,9pp]>[MHlS=Ii.bH'F_MX-:klh8hBGUk$PtYZKi9W76@"Q!UHOlOfd]+U#^TcnO5LMfpH'/LF2+lgL_^="'P)C\bZk-M1n6p@`
%BhZUb`N@!&`V^8g,peDCbS*@?g"(pglJtiTlR1qmFq4Iebu+]J:Oj)+?@<P"]Y(YF,_lt4@uN)nX2R.6PUTN1Q]qp7))VZ^(XpG@
%V7T,U%<fdCB\+*,kA-K<!-2)lf`p:'pSEmi@:^nJMeH>+J'bq%%_`uUXMH%1m\.?%7@[!S"\6KL:UA,lL"6o39lfifmlIa<T6"m"
%GU?n]MSa#'SmUU1N%`,jI1'(_N,CEt+t:#W)5qRf1/S<;#X\R"ci(^s/1L5:/Fgk4P9nQ>J7X$BO"hL&,;RC;%q$8EmdXkIiIhNo
%,FQ>UYt<e/A7[AKc[[d>in[_^'W07YT30%!eg,?`C_-e3D/YgF<1%>cbbIKtTo(V`Qts0,q"Pumq?uX-c0cZc91ZY0!"YjTGZ.S3
%F[1=:f/5_`&>\mZVF"$m8c@_I:9Vgq"8_@^Xe6X:@KJD8)C&rD:hcn<T:J6\`J;4E`(oFfFDEWBMG]mijMVSo,W_6Z_+Kf,P4"SZ
%4iD@+EKZPQDRTI/Vjh"Qk)*.+JE$HjaO_$?K-a2Jfeg"p]fNEc*Leh+a(f(Pq%XWs/la;/[BNa<mXgA6/5H*i#;UH>TFeMAo0^7-
%`3M,K,kRs^rCBOib'0+*@O-!YdZqEGNKQuQ#fI<ja^'k+b_[nQRA(mcr$,)H`_B4,:Dnf2P`hbJZ1a$M0detN]-ZP,e$3,;FP64C
%^WW*1eipr5luo+QTHG>/S"1'qkdYZ&g%cl49YcN$7djq%"--l?C[0.QC(&HZ>\ah5r_QU+(_\\6O7QE13[V_ABR$9l@s-UhmQ`K6
%5=U9\G!]iK@PU"6.`RWlKjh*dBLpOKYq+W1"t.t;'cb-bK;2I[*>NKl,QA=mi`!,;rQDb*:loE/6)iC!3UNI3p.N;uk%VGLdbc-F
%1+p;P\;F-9^Adn/X&$@Po+D?.JC_Zh7Q_L\pT$V.q*Q$1P%;@=/@n72pcFcTZAK<P3su["?ZXKu!:cc2(_[ZVs-;,3Y#kA0)jksq
%ON^FOIlm*MC-%8TJ2NS5[@"0FR(T9@((/*k"rL`#.&<<IAFFIY+-^VC9p@P+5<Q6rU5stH(?9X.o9i&dY@Bb5,`KVA4_j>nSW.K<
%p:'=o<Q*j=;Mc"9UOY#;WE30?K?W97pOJ1EYWS#eDcN$<N_A/<'o,ImYDNGRD(.]RSY-S^oc5U)C5hdl=e5$3rU'l51m4Ed<X+ei
%J9p=h@?-AniMC]@B?/fe3k](Set,Z3PcGDV&TP:sr,.4i$q2!81fe/tTB/r`ke`D-34A64q.0f2?=k=m!)qp?H5GHU(UG.9#kinJ
%m"I_h#sDjXh\q8cc@4ot+\p-&7kqE9TU!_4&X/eY8Iq(Nf-KTA$ZtuZUlB=ojpUt0YKS*[fUfr*6]N&BlA=TV5+ab`Hmql1@m'*G
%)QT,O9;%jk1lSXWG+K.<n$G,CVjq$e>!#$M@P#4:"L7e9F5s(=q;&>Cd-jZ"!61-B,qXVcFN[:A!(h.>Ik%eq0;.a'=*jOXds'<o
%Gn.g3H$4k/4jQUrebTb>[]l-3OA7XthGbP;b)q_R\aascYDd)nfXVJ?f);,VN=PK'r.&-:7!7'(a<lj3r@(Q^8C2!;MaOELA53e/
%PIcoBM8f[U)^Hq13'gD:TO`-^RI<"5LN)11L@gZBjDUs+"J>]-*p3e>Q[:X6D-Z4+Q\![C'pB2khu[1gj)CP7RDYOiZ0#RNq9@L\
%`+J<p<L$hn55NE:SMWpLc2qu,Ofo,5hJ)G_p2e!qaam=genN!cG<M=P2p>;U`e:]9jt&2u$XX\129plP2:goZ.(q/<*+&D#^,/\6
%*`nCU4*pS?7`W8Q!.0`lnlqD9^3F-D`g;%cl&79^/kq0N9Rk(gn1\9&mM':rbm`$2Wa$i=ja)'a93*f(F@=UL<A,=?=TS78,V.+!
%j[/"nOqbrt%!g1jqrRG?iDtpW?O@J9fQ0661raT4fNp?C1i@\8*=2*7`OOg,86bb`6iKGQ<oiZcBl3jOFB4C9IsKW6D%A\@&^4j9
%hSDdKc2Qh6s*Jo]IuF,@gYF[\p\EZ)5RAjN'HLM[%aKf!V5MREo<:A+4Wj%"#Bqit@u:4hCNd<13(Kl:SX+'&$^b$EajTFP>^HBr
%'7QNh$KhlqaF9e[ISeCUqe1)@UC0:_oYF1B`9,fp*sH">kC#)<eu_C)a\RFPTD)`kO)fYMS%W-Ti7eed\9[]R>#to\rZ;VJUYt>Z
%$s@bC$A=Mud_C;pc<3,)6$CZJ4-^S:rso210E(#cN2P"u#A9.H)36H@5GeSS^lL)HZE_sTiYDC300Sp!^LV<'4H_piX\7A`bP(BA
%3CPrg/83OY0Z4[c>l7$C8)lRii'3RJq,JN!U4\KTj.jm5>pt!3KA12ej7<3niDUq('oBft2_W%)Ur%g"E1q>S<=6XsTZm)+Hk@/]
%UBSLGThB\!$_[!m6CR#Nq$0m:hu7QQ8[&.aO+'I0,84.in-l1PU3rX9R`Y$cUs26N>m3,I>sL2o<]b&>H6mIG@((:r>T<%,g)P9>
%R;[>RkQ$i^r;hurW#$ZXdG.4#HUa-"rB\!m%hLB%N!O+Fp(Nr8lXOA41[=P\V`n+%O3gL?W'-cXDR3H>Db?\9^ei:lLq5$;n]n)d
%3kj[4G=I5aEI7OPP()XZ+1T<,Y$ur$]'UqP_Q2i/on@_hTX7gQ(!gIfRY$RiFk-?%rNjf5]Hp;P(fu%b*iH/*;-@68gT/)uHdDH\
%C$LAkX2.EVe+ktk^;aos%0ZM@Md2nrIUG%$<MWno>m>\_qN#gc$n&rBUb3!V`F.'jZaAR2FT0t^NSke)S;U4#q0;We?lo>0Jc@f_
%5B?m/f^'*:]cfQlr]ri6q0l?fP9=N!^NJ6:bF@S=6SQR8>Fh@lZ)t@:HY4_6rb9D=UI8X`oRCe_J(Ym&o`AXipJ3jMCjU-TqK96S
%PC".2h>ZsX`*[S55(iPp(K?B<";UnDRcXC47^E8CU-F?LU8OZBog.C^*224Q*44J>,J<+MJm`DRmIm4'G5[F#ol^8;@t2\GDRS$c
%+3C*5:gl#ZF[=bN46M)Uq0tO&QfQ7;SPCs%qOi=Ag,Wp9p\uX#4/^%k3SVBO>^6_ecdT?'K)RS)EEiNf`&MoM>MXkn:;e7c7t7*c
%""a=1[&(>4BsVs6&NI2Plh5RuOsYP3Zi>>Xp)N/I@CoKUs5*2C2cusRYI7-.'N*0e%Yj?_\hoFr&5B\V/n)KCOnmQIn\L*G;fsc6
%H0)sn5i'`-,nA>[`-n'@PVnbu&#n]M0N>=eYLI]*n@]=.o#Foj5L5L)@+]rd3uO*9]M`o.AJtNs0s9rks.+r*dc>j`asYKQ-E.os
%^h6sShMG`nTCYscrT(e'f%;tZk<Jtt4`([iIulHEg;"@6`NsSRO]Y4/09@3($$#l=,5bn<?OGut"\!T/Q9"jT;ZC\0Ha5g*5C<6V
%ZL3Sb_(2oXIp?SsN:%dpaE'Mgbe2-9GinpNH]Yc2(k8I.%U6d@flfma_*?UV:8H`qF)ZLJMT\nQTO*srCbRG9*%KIA"8qQ]BCS,)
%\+a+E60ioF?]<b:VX2e0?Y&a-O8lWnH_;<W#-B,;ja-+ZW!iY(Kftt+$I1Llrab"nT@<<-1HtV#p8D>%^=_KH=*fX^;ARiTmsTNh
%7.@FF%2(-r['k[)X99m-FOM`Q@k=:W5RBp2@YUra?V.O0/qf*-VSO(B`aXgD/*CmYA1`$7`_M)p=SATV3c98I4WM1R%Q\=,*<-:+
%q/a5t$Kl-u]U/Z2hLV5Kh(8QZs7MnCPKn4kd8&c;d,W#<IdjWPRfnLb\"=aprg9<`DHE$\61rOm[+kMBJ,NGp4u!YbJ$?B`8\])G
%5]_Hir%JF!/Jdrr@&uB>@?M4&VSTb"EVPmIs3,B*It)6U?BjQ:)5R;mn!Du$=j?fXSqkMh*Ze'VcgBW,_uC/Tc6)U5q9t!WdgD">
%.!q:<-6Z'>;e!bF:uMd_/AV"HG[%A=DX>,5pAa[d:q5cLDMH8>Z&A.e_lEY8nE*ktoI4RqmW;3!];ZZpY+t4BDmQA?4]hUtY#opE
%a#<Fm;/QOO:VPQ;cU<t(*1"=pm']EZ2D8QeDt\J&IE3bsr,e8ZnFiK1\bmOuqnMN!&XMS9*-F_fs6!$#8VX>OP<\FNdun*F\+FqJ
%[<fAa/\Puh-NaK@0]ODD;M9%13g/Xog0KY@nR$gTD*j`aRVTJmBX`=[9._?hC4Ud@WKjm5>*BJ3Il>dLENBR\j!dL<$KF'0aL:7g
%&[&f(Pj]&F"B5LRR80XXe)hgDr+>L+erUN1;^p?)&Sbl&\ZVcc6M^`Sc][HcphZ7J0=eXFARSSQD->OiFZIr#+p7V/MMYOL;S?E#
%?htT(2P`QGIlLj;G'X^_!5a)(h_V-j?<`^MoW1_u.jI]@/oZa.LjXjMk`j2>D>o%m3V-eQ>lnhZ)>)X!QZTEEW5NWd(s;#U@r62]
%4G][<4@OJke0WBQPJfbZ6+0Q<-oGZTLG<rn7m[BJqa<(arm:`%>5Y-p6:EBg;r]^6W7eJbBqHN?Q(&MUJ8sd6M^?pPZO6_naGUV!
%F=%TZMX[Rm]oQZ*)C&$\Ehbla6oLDFOKaOdm`=3Fet\mt_9/t7*d&SZIjXk[Mo!XK<6QVk6RL+"A'l0qSr1Ab=);l>-LDF=>&g9E
%kUR!f+t&:38P.ID1#\fN+3E/W?#&(0bc7leL$>Ql.OI5[6lO<[R]h=.>FoHfh9@W8i"rOLRTt['@FFOn"ju:+.`AF.LqnhF8".5,
%hW^+X^S7unk:"qhJG@UXR>KiQC7YWkFVOFR#f!F^17_d1HW":X8g,s<`E4Po'B'-Mbme`>C\P,A7Qe6"<F@.$BCJ.o*Mn_?7W_[^
%S6ZRnbQ<AE,W:V&6CqbmF4X:1</bm^1-KMpU_Vi[9,$TDZ'E3<%frgI4a9"H*MIF5EL\61$5G6.cll+-:n5TC+5I/&GlY)L%SbXY
%qP/.ZrVR(G*R[8A5<\$"Y_*RpLE`!u8Y$2n+^rlm$,rJ31I4M4)2ecP%/j)0=CN\qSMnYj/29pa/37@@0KnPUr_*H>E++B<Id,F<
%<bn-1TE(((SH7FG?FdlJb#r'4q4Mof+Fi/jca6-.*]N"WfH[L.'Ruhd&]B8\\\[WaUgKHsqk>4,(G'@/[Z!kg)>8Y^SJdih-%B_B
%`/u;h;3!f8W8q).lpZ5*g)qo_,>'QgRhCDRTVO>rR51&+eKQY5'Q&aBWMl&K1BJ(I<HQ6oZltA+aO?)6.74TQ<74pDkEo"6#&D$"
%6TUU]X^]/%"VJ!VWaCdW&<p9iLm4-AKgtlp8a>dJ7i?3EGUif!U]phiq$7&ZZc)>H@HSqeapC/f#:SqXPN,?O&_hKU+')]<Ddii#
%&\GqY#Lm+t"5WrIk2*8u(ai"Tg?8r;.5sIdL2st;^P8"1XRmpHXP_qeBgeBF/EHe\$#Sl;V0l;MNS3ueO@7;4?\/,"R^01-BTjDc
%6=rKm#3[HM0*[KK+GgiVZtCTuT+3F,MZ(J%J>K>]4id_(_54fgG&erX\4CLKR&.)fdQ,,6XT;i4:`E;E'a:L:Uf;kBb7U0[gH?ff
%;?8PQ$>c-)c_5\T1Rng'fKr9N:)ZVH@blm[,i:&>/Y[iZSDlMe,%dDY#W'Ar1_OnJ%@ho7WUqt^rm1hmZ!GD'@mu@1+#R\X2OaO1
%dVch,\rQm.UmYRtH5:plFue^2Gh*'\m3S,O_p[kr@BWBS%5-kZkaU@th_YucF\4UJlJ.eEGC%:UHE,H-YcDSEmZ<reI>gTYgV\e+
%g!BIY+#87m.\0=^ncOU[$XDb[))3Hq+'<"]EF?#1XIq?Y`eIms.'O!)j:@gq,B68M\r7tDCri]60/O*-=ZY+P9HPI_oY4_36^9t_
%n'NRG2d/Wq:c'LJ[k(&piaa`OR\')V)ZRYH)pr(]*BqWM9&R1S>%l-INUtM!,+6rkJF]M@r9"%AUc/41>V+to+TFf<hoJ9gcMeAC
%g<"h/\a^bhhi]rER7-O_H?uDbFD0Y&`m"EIChT-GTR'"$!h#Q<A&4qj\2XT>O*IYBM@!g`!)([TCd`_]j$3<6,F4If=[X]g!RY@i
%L&uM(Ljm^nRDX%8?V`4=8/_K6C\ThGJDsCh\HI)e,5MC1)iK%J9Z]DlnK/BL+<W`O8R#dY2,KmsMNjQ`[Jp9>E83\X^PV2FMFr\/
%%KE<tGcCR#a#m@rFj#`LVn$Ot2:l"kUVb49a:!I=SL.ma$5A?\.&0)Q*je[cUFn6:9/GJ;B7%HOLs%80'f_O^NW@H[5r!>LKX`)c
%:K]90B-N11UD2#ecFkR!OqA(;+\ZF:,0/-];-(uT(9pTU9DJLpX/Ra'nT\=l2oA[/36Jc8e&]Gs#;Ntf55+kjlLX@V5r=dS4eBb+
%At6qT-,m%d58\g^ItAkbDS=jhjm42/j#509=*R-4rB&5o6n-a'Kk=t'^h%4$KIotWL"-!LoQ#Jap-HF3X4,k-<DWesBFa`W^d`h3
%@F#0mZ?U1?)M*tl#KR<!RpCIoq<D)DT(,c^%P(I3ltE0NDk3H+H_Yn.6tP["4J8?$o5CcMmBce@qj]l(QKJ0ddd9>Qq;u?Ikj4k"
%Opk\*9Kmr92chh.VHrMde(l+QIEa3j+7K5gs,>BRATP>-__8b`#K+O)4_D.imnMS#f,4NA4Js?/Nqal5-/\:0IhJc-rEagd/9Uil
%j7`IGB_"k>r"9Cmlh'mZ_IAg"!mU)=8'bj+1FtB;r$mQ_kE-sc,@rc4F>-kU9IF>9Sc4rh_W@3&_r#*>$eY1)+F%.(lYJQGTDScW
%mk6!7LVkHFWhKoUF#Z7XrZ1/+-M4@`k<J8\%hJ[7"mGj@J<LKu7I5NJhTHao]I%o5cJS?K[epqMg@J3W]P"co=b"`(X?V2sAa'a^
%nq[(YAc:$0Vg.!TQf_KN'$CqjR/r4>?F7A?[X6PFnbRX^?XnXN!q"d.mIe;?5!]STq4Ih5m7_;cr90Kp.>V-poZm`DFqnLPIgr4U
%ADJmnO-B:9\I[EF'hlXHoOMk+4."&_1m_oNTHk)[g24=nOVV;:49+fW^#(h3.D9O.qqX%EVj7`ifasmBG\fXQ3]j1BktrCJGM@a.
%4u(.2Kpc34[WL4cKgru*a]UQ,8)*JB2JEXjHi<)7^XVOm?2CmZj0+WdPGc\(rUHRV-rWDQ2E^Af`aR,0`uhV.Z\/5*:>*I2;E1&c
%+N7r(UJs5moh-s-_bkd=PLRDm%$j]\$h5(621*(sLHB3+UUAP5Y.#ZKHg+RE)9VaP[PHV2_L;aW#s?UAHK$>q@(Vo'2K[Y"[m@mq
%e%g7mpM"u!PcUE60gdA<#<;/E>K?]K;<`&H5<F")<KQPGq:XsG>$NbsKnr;:.l5EuH/WHN:1ENbQpbR/8F`<.,Q!RS(MC[0[^!oI
%K9"%2pNC8[rJsfiFh]_ImWH+3;,RK>9_t;BBj8j=iE>cV?/"_=-7Fg.[GQVb6#meIKZ*]DgR(O9[+FY&H`a"dnC__fHb,bS]/5,]
%'hlB@l&abapk(CNF?(a^>u&G*NQ,,1lW<Yg4W)%2_I"t[^X__A;Sgq%q]E&9L[`]1lsq=**V7+@?CWkbOejYTYVii_;nie?hqNc^
%FB&._Fdu:h2U(j$9s8N@_Sd8OQ)jp%V6"c2>Oq4F)G_7cH-*eLm]JK=J>]MuX4]o_3huu!H9fms0[UqXe8oK5J)<[6(l'_Ss&Drf
%Z2u/rl.3Fo+I\Yae$JHrGITH$djh\2kPr3L5L'1I&c\4fY`GJg,/QJn);m'IDXWg]O7-+mIq8qRo5dEf4#sSTc>0kX,BQ-e2]3_'
%U=oCp7gl:+\+$N7<sGOPS98Y8nQ%JGZg.oV4[9YiZ1J:XS6aM#n@3PN#DYJf$Ob\ui4'2Mm69&5R;ItUh[M6/XDaMtn7'6A0cGPJ
%^UMTPka1icRc0X@mtKM]C)4L3HB:dj*Z',DG"*/1]\hK_EgN6T/h_;$j^J[THC1T&A6CZFAq@D[RX&m1a,>!OQCG)R2_!#.^(\';
%1,((8q(#.OMmX)Z.hXKK?\o*5:-lg/j5RtA>qNOT[bP""9^H7-Ie+uJp6Wc:Il7DWIcT:VSdrp0MOnjaYgGXANI0f'F]g#/)op]F
%4TKIMb4aVV3Epg4hEHHim[*YH/CatJTE]Uu%kN1_bN\GY]sl!/Edk(E,`7[OX[jtSOH8J#2;(oP:sN$]0:pX#^YBnNQD[O62=br0
%RAA*fbpZG1dbBHbJ"JWIC3A6IrAfR8\5B:cS;L3X2!T0]rOn:P%o85/_rTM&PX^!J`@kuU)Y?h'bkn%l.dqTQ]2R?qGd`s?9be*q
%/9g]c>u?g!%Na,6EupWom6c1<4M=aqh]'r`n[(bkJ[2.5RUe-_%>RGJ&?tO1F"M3_.VeMS3l>1.c2M]dcE$P*W.7@96;O"4[-4-j
%qA6OV:;[(>fKYjb[uYr^_3kM(!RPi;CJA@Me>h3f-0G/jAf!5`ek)0cbe5LpPY5rKHQXCrJ(lW)SD/>\I/Ds[ddQas<C$kfKDn.a
%3E`Y4'Mq`^S_g`+N(e/n1HK6EV(uId(G\7K=3N[YY)_HE9bV)PO+WLknrs%Qj_FC])*l@I+Li\f'q#\gbt']B0I\=QL08\hV_`:.
%f5MXh-!&Qn14]7#8VMF.O\041VmM/[)IZAI5<,NJ-p$/9(;r@N:h'R6Gd=:3G<e%"W8/TfFS%n+N=LiZk$U.XV((a!*uk:,4d`Go
%cYku3T?c;<OB2uGC<k[Wmt3X0rCM'L4<0jd%'A!Hcd4X5o,4"[AmQmqEXP#L[_Zu3'7/A(B$#?[39^+6Sp6E0-cei5(Q\oYWV1"!
%"Hc5*@f1ibc9uu(;:EFNQl(]3k$b#VZb3dkH_2pR,5G_U.!f%M31FD;S2*(oGkN2d:B$d+4O]UE:4VZ+Ul1!sfs:+YZet1(4RMS<
%Y;oB\U'IAd2FuC).N!.bl?\A?fR#AcEPL/][EAj9.;_lT;*K/MZd7WQ3jZf&b\P[n`LHp%L!C!D`/FFgdP<u5e*SW&SNYEMXXe:]
%44@,EV*=!H]%C1)Dc`kMm'hb@_d8YZ(MO_CY@c,:jA#$*>%X%cW=>=a<_Edj3>MS1H0uZC]!Sg:J3>VmhYE."U,0NLc2M&6q'i%N
%=NXm\>\(^tI11`!FLk69\2siZUbt+KI%Q!6f<,9*+,qFVUN]t[!9l%8'(<uQkBNnk+SW`eJ&l1".V4c]bfiJ4Rj'>kl]!QF*J9b%
%8RL6)LY_/6FJem@rO:O_#B06<0LPV[]AN!$p?aEKU1:eoEnt!9p\^@8<,ZLs)CEIop>%_RcLUqQG9Shj39@H@ciUku<R3\#$XEDZ
%T_W4PeI:4:MJ"L2S<9"2n\"u/,&SMnXR,V00C[?M^Rjg"Yum,:*kTM8H1%Sj5gEO'3S+)o2j<A:6U0i-p1H]LI<Z@,BDm-cb2LjR
%TD!X1.78k,I+gV"oM=2[M_7turPtG0YQ8*4#,=EZKB'(5l5(tHPJ^-uo]=)AH',C^m[(Oa4_+IIIj\K8%JkFrd8okbG%.+MDS0^b
%-b4mh`cmg,VR"\L@^^V9c8.OFbM"b($noS.#.<SB?]B9`e,@1UM7XHoIqC#j[sJ86Q^WPM#o)ll;bB]eZ4T6Bro9s5.h.u_A"V"P
%#q'_Z^@O)p,seLj`':i=bk4F<dSMR0)H+WFmuY<-Fo5nPXE4f^\-/n-c&8<1E2SJY=Kg36mn0#@5:F@`8I%C4!_]:PG1:8n3cr'c
%/9RH[h4GN\d6'Pq3Q3O`Gh+pm$#fJ$Uai74n]5T1TI;KL9DsKb6ChQLXETU0]uoM:#pC45D@JY)(Kbamp$MhBf=lbNI(t1V>";?Y
%8j/0;U,:MV"_?,r95-94QZ-qd`4=(E))Zd<p_%M28S-KPCq=!'IfZoH9)!5Sh*2o[,R_V2FV/AHRJ0-R`MNCGR$c$D23$9J5TGCg
%rOUJWA!Vu1/iH5eh4q<?]jA%oSa$CM?R9-$;m%Iq<T%.J-Pt0OETa<c36ug4S*phJ-Vp4aj#>Yl[:r:ra`imjJE^:R4'`^t[8q?S
%^RT9b8MJ*lS*CeMqsNO`SsZN!m%!I:aR&Xj0Cc9k0HC]TA$\1f*19gnAcg4hpkhVWRe+Wr&XVR\_$TM+0r%[^!0qCGocg$78KmUH
%kAs>!=+IS#:eQbf8Y^a4q0VufLt*!*gWEW/a?m;pXk1]jD.=gAFg,9J.5U%enF?,)+7:eq=h_5pI/@;Mh0qOp>oB`7*'HFN?/'1#
%HSBZAenLG*2pJDr<HI3Zb,_p?:W(3`[m&Yo\hZ6\7?(=C1qk9Qn4!rtlegu_%t^9$MkA2e<gFes%TeB\j8oarZFG$oi*1&YWe]mn
%[T8^2p.h`rr2<UKQgYnhN4$(n%L.mWNEZpgpM6Q#[nkQDrVV;j8UkL].io_eIq3Ge2<s/F2q;j&4)\MoqE_?r=4l9Pa<!aQ?[VWN
%fr^NHT0I)!h8<#=9?3#f.h@EsPPb"X\'>n5C\n>j%,n8W'r4t1i7"0og0NsWI<\RO)V'kBpEGBTYIEgLZ1WNVl1(<'g_!5+=SmL@
%\IUp\ra+L7hmc^XO2'MPm*+ANnKcsLpWm4aqebbMCUL!Gbgh`j08iJg>O(q\lE^_&n#t7/]P>sMBD3I\hRmj8fP3:)nYa\2eUstK
%*a/[Sc"PJ7q=S1ZoB(M0HgC3mq8*#jB9fTigYZuOG?5P=Nt`"4(12PpWUsA<:@9c"?!N1\4t_&RBOQ.Y.YH<,\:=EQ,[IkDS&<j.
%\`cdMHD?)jLRm-c'/iuU?(RO8d&qPem1WgD]<,9f[>h"%DcRr^N@@$V)^!:`7o?Dgq>Sh.r=9G#hMk=\n"\_k=OJF8mfm[Q#P5sJ
%kTQrI<KHU;Gt4O2pU:4ol,M3K6?DC7j4aJ+"!#>=+$NUVe-(L4p9&=eoZR2'N@">Jd[Sc7gqNJiodfb`hoQ>#i4$Q$7up[maSOr7
%A_5>!je]rpDpLVrDC./orgm3!*sPnK2j5\<8uEfoQ="+%G"=<8X]k`kkQ^G6EG43uDlq0"rS.;I_8;E)X3KdtRoQfhlG_1trQCtY
%mSRb!ftQ-c>1o/J8Y?]EH?THTg4-m6p?UbF"A;G$3GSM?SG!_BbCarPC%(okK:UP@67MQ]]R0\+NQ!ih9@u$/Zhd,GIpEN@DDkN"
%K;2N,_l%Dodk8VN1GH%cpE&+np?h$_D!%(U7D22+D_?2:_^sYO5+??;]:p3[lA+lT>0u5g*gs_@b2VjQH=_;AF>f!#Z/*WshXCHu
%_)6o5,#A)BmSq2'FnX7l)frJan(*NCbP/&a_:$#CHSB[U['uA<PF4*o&p.rl<PE8VU:I,rY73V":Wi?iDc+u'!T)@OkPNAbb4Es0
%ViBEHAfQUSHi&fVrlI7]U]pY"<pc@;2ehGe['fhG]"WN$H#+*I%*YLF]Y8Q:WsrRP=@-VpJqJhsqNLLkDqBT5*fSZFYO>V@Ikc=/
%L6KT9@K3"O)0QFncM8"*o'VKsolOJtm>&/Hi(UnuMa[:2rpo4K9g@q%8)S(grd&AGhV.2:r^g\alXkR='4,&-%M%p.S'(0Jro)#c
%h2Q#V21G'2L3`Rd^<H5#qk1X$H.ckY\U3_bI3*bF<a3gdLUcKpK6NC..adEp_b0F^/5"[!mO`gr=kS8np]F;(fea+)S3#D4^AE$:
%_2Zapb3n]b#8q5$K"\M@42("lakiQC?[_lrh$]Ts\*F86e]nGPjKD)UY/0C#I<0Arlf@4>5++@k-W0hMG@9^*GMhhih-/PAK>tqH
%Kn&KB0KVC4<*C@Ri2#gkLF1@)!=_3;r"W<)Yk%?G5oOgqgg-J#E"LU$:N+Q*%.!o1Ku*&^kiJ^j$adRP!rpbNnK0l(NJd`b_S=YC
%+`&G0CLEm)gdg-Vq6F$o^8.C0l(d>2Ug55@Vq/Y5?K+1lh^#Ki9Ofq=(:D;,7)RM%qadWWI^*/Pe)<=;W#%Bd2-K1=A6M&9`kBoc
%@C?QJ<&nmH-,P[0)Ko81SGR[;)_<4M3UNT)1gW`bq'(Rs7d77TQV(jIg"i+*^U%jufM8qbd`klen5W+hNtPFR0uE6KJ#t%*DN%<,
%%?kVlfP5$N(Aa>HC?.n0r5unkPK1YLZ'ANp8hUjBbJTj.0?/8pLQTf\GL"*Arcm!4)1nG^WW.d(9)9Bo:1K6i+6?"hr`7h2U_mf>
%DCqWeQHXA,-pBDFHMhS>3?(Y]N=6,4^GDX37\V'-5B=YX-QaYHTD<0@J,'2b8>KP5P!CT:rH[t_:9kG"r\N,$*Zkj;=:gM$2P.)\
%7^l])G0Xu2cc_A5W;4=koDW:n"P#fbN]%]6qR9/&\ba!oSGup/<ND[@7UA4^=kqCBlU+dY5+Y`u*Dk\^^;st;]:3I-ZSF5hmM2aS
%c)**OUU"(Qo)"Bm9?\WD7V!X7[J0a_q"poCP(FW'YOB[YZ`3D;[lu\7qRmjf-<bf3eYq\sKids?\_`=gPBT+%gg?Nmc/?S;cH=R_
%FM5D6s+\f:Kj]G*hDM1cK'AZA9m,p/hS-J1Q!8#n"1\s9b3o#Hp;YpLofY!.$T_Z7RC$ZFL?F:,QQGj,<a"`.SX*X<J,HnRh5e)+
%o4QQXdQ3qrMnSM.:@c%U>(+/8lVN%9H<b+-!nH\7Y=jlO%r1Mh9VT0IKM%/D\uo08=E!oahOq`4gfP;!/FF?*"4=k(6q92iJ/2Y_
%-#1o=iB^bc0Wql:;f+(fIOllC9R42M2QQM)>t$G@o]fBP8c@SdE+blNrLrKd%k_,/lQ<"YPVX2ADn_nkm3q#FX^gOsaBK5M:D^c(
%jpmuI/&B[%H[5AJk9[;<Al2PmSA4rgWT8d0hQK%eoCaLNU\dGHX14VB5"rFG1,AscTM_\tPB6`Om0KEXc167.%d\348WB+^e,B0'
%Y?r@(H?JQ0EPYW%N&gg_\@^R&Ugop@"!2@&q73bZ;fa1k24PPli!-=e+'/-rf&pH4\@F6,0&G@&^BP5C:V$S2:9dAaCte^=NE-ge
%]XnY3cdB.R"Rs5KH9e''G1QB%!Mq@YjN=N=Q4M,jRgU=(kK[TW%'\Ikr.fsfac[DMk%Zem)3,ZYMo"GmY;ArAFY,SW[12;13.#kM
%o),l+?4G5\JU$[!QlOsYARM5S5$.+1PPO8M]A@d\oJMMLn$Remp$7NdnFHOs]n])i%?:@oK$gcJBG,)C\tdJhLQ$V1I%tlWn_1nX
%O4M$ma`Up=;E]JTs5s8MgBZt?I#+9]\U#fnYGH`!@1jrEXLGCHGZO4?X.n1Up>HK8f]nB@E:^$6g,f4^Rs)`!)q[X?o>0^_7chSn
%nGBU0C^1-l<,Od(rH>LS<mmRFGl$u@"aa91n),JI<.o2d9bm:Yj"Xl\1lI2i]\k'iDPM\8b;%;f`0pB[9]?KmCUGPGnLh<&]<AOg
%DP>d`*IXm&M)S5F:A-d':64rD8+/Xto6V.l8)I*m'c^Oaq>RnSp3V)JX:jum*gXeAlN]rh]4fL)WumS0Bh%@Xk$T$BHrsTF"P2kU
%c/r?#g$'aQ/:b!Kn#nBo$t\9]/D!,CWU/3-n'oN6pZGU!5!/2.+tTQSG/E*BJ,'jSk7=U(qG5EeG+j79mE2sKdDVZ(hV0>hb5;"<
%+Lq,O60Bhfb&c1Ag'9+\;.&WbT(Eh7?]V62kSWH-IA:rb"i,;8dgt7/%r-kiNHn@Tk,u`dMl6#FpD/?J<&sXfhKL#)4'_-Rmd8m1
%Sl]h=He*@YhqVpn\T.LXj3)UWKMLsKioqQA3eff)f?n*>%fNNpC,^HY+$"GCorrg!962V9H$`S;ENagfSU]9U*?4[FLp&sWgjQXp
%!i8NU-\'d[^\m0GIXV775"LH`(!b&IV)9a3hnX5<$?L^/F0oo9rqt=@dE_Y)p2KC;*7+T0/)RC:&NGucYr[B:CrR9XZpPIVVN2c>
%<1Z34[hUgS0]*Z^j[>=#cE5*Q@lT_-+#Z?d[N=>Wod:^1G3nq)DiL%@k12K[\TQ,.P*TjRlSjebNt5<#'%PG9irnAE3#7NT?6?h[
%i\mE@eOJ.*m`jI`kjCc+YCG9IX06F8j%d"mqRIbV<F.5j\Wp$Rh+$,/qW;`9!shSGmFL"309tDJX(GjU:!BG>3Bcb^UV66tMEUf<
%l,%GC5HVTR?2:'lbMCqh5d0"T=,B*nelEj+q;-tb.+PKe<r*J_-h[$(WkN7FLT^:#msT+*2-Rm+aZN`bb4U\[^$82(Ia!qsj,ILt
%0fQ8Q,he#(VLK8mK@LdIqI[J9?oLrhQ;qMjp#G(tV+7H0.^'VZ/?S?rdH<E5%<CFq&;=U?iCo'Poc&lojjPCN1]IXWC%^kkEjCbb
%K9cH6mQ)>Z`M;t`EUI"o$\`CM+6jqfR&*g]%++t:.,B.+cqeh#7s_OJ?heqnYPN*Xd`H\3AiU!FnT)-cs.26lC@:T;r99R5kEXXX
%8#(088-6t1^7O$Fc1dhcCIXVkDRE55MXJCt^I@LuZ8;@(W?9o%n&B[XpkGqm(>GIjNs^[I.1ITW#-a_H[i;`T]n\Z(1JmirK@T,9
%%s-E0D69>Y%rZiC#I_`ZCUIaA/ldKnRjV]9@'TZ&[d'>X?bHW_\ipY#rF$.tQ9.YKaaM@4=6o7[".8o<#dhmd?gF3)9!3Vl^A"UU
%YhL\+rSgPo@kp;8/j.p2pLdl)UtjDQ2pg;\>C#(DS_@`Qb9h$umj0BUX1OY<^-'U]b&=@%_,!RXhM!!*33K4-]mAdOmqI2mn)2B0
%i@rV.S?pO-[KJ6a>AmR%n\Z+N+1sQ$?f#RMH?87dOh`[&)c(D4-Ih=Mf+*E(L=,J9StFo\UK?Dh76`ugC<ShDZPh5,b)phrT+!OC
%!$m$jp[)-sq/K(E-J;%qq.n#Bj*RG"%-Qpq)lOK'<4hhsdc]r;Cpm]`Ig4%nok@G8g<'_8$u^#E9>b%M^9?niSK@9kP$Dm+1Mb81
%.eN:YoB>.SS_ElQPa2pCd.r=3b3n]"2jp3`l,eF"oaNM%HY7"g!kk[_gM2*Rh)Iq?W8*);.W8u;T[o02iUc_@+T(WX#n:Ehk87#1
%h?5J'n[S,"s3.Y6bu`3B$I#9oI:SnQ[#H#''oedW)_W;PTEO]?T%\&uc_EbG6>m=?b]5bO-\6A]qtuG"MZhj,'_JZe5,8F&I'"f)
%C<orJf1Q),q7ZZdL@8urdu]uLl;bR14SRk']BY=AQ"LJq)\895e")pa^2t/"W,ecI'"pG5Xi,"m&`0D22s*$]?e<5sP@8coPoUd-
%=uLBlHEGY4`g#40Vr>@'Y/C84K>iJLp:st0-d9,NYJ-+o+upEV29("[FpH7USOR,NE2<r,[_)!IA"LG1$0pLI_9sIf]OYXg-MW2Y
%Oa/0[YEth]Frm`8>&eejQQ$-IeF'EHcE;Yr`:N*Vp!(%ZAo)COf"/P<2*BaQ2m6S:H6#M:C[4M,f,[*2>$hMdr\WN2]Y$.q^ju=l
%]=Q`q0WhQ^dI6qV977k[HSD(u(GF[_VS.;kr$ZW]#>OEpA0"sV&,5g&]A-AFeGH'In%QN=G3?j4g:K#9?h9f31U2U_-*ie=Q?1[I
%G-$g'G\91<IQQuR`*o7e2rF&)jLg?(n"\^BX)goEc9?EqU[Rpm='I?G0'?K.e7=!$;*V,>[H=q7T^^g+Y?/1S]hZhNmG%B%/'m[3
%>+ISaaPGe2FlF/+bHoo$q!%<C:r7NRD96u.BBd[=qNK0"hha^tSC)K5q-6:N)8.#*U[S),'+G0C0669';Q[kJ2O<ZaWj\K;eq@X;
%Apo1%rj*EM_%a$<-SA]Af38gd'oK=XeE/f3^6RpYad\&]n#HtDZ[2!?lmEb5@m44(?Z!JlIopO$l$o`eXF@e3=H-\YS@hK0I/pCl
%o-`iu1,7bC]TSqh/B.;\Z^'.-Ic\@Uej,5(Dj]-_6EJt"GAm3!=QdEgl95W/(B(_^QUd;Ok\+-MEdTso?Q\-W8Xqi^DjCN4JElm9
%EG+Z>"4U73<D1ShK/S&0D14?67oB2Y^G@4ZEuiN??Wh\[4_rgnCoh1pSTFi:D]/=IpN@D[AH(E'eT].C3Y0ug2bju"4Nn_u00\6C
%'3'stG15Ti@:Q^JUT/S^(Xo&o&%ZP3@#*:h+mXOHk0l[&526&@;R,q(9VM^]CilHOUq1knp%,FJ=rEhfmaN2h05p0K%R1-=m-[\'
%9/ZV7"RPKc3F30a3O1dahX3"8DoatY=23;?%5jKeEHntFB\n3,`_&++YAKieYM?X2,jQE7WN>"Tn1\N_gKrI_CA.jEl0H7,]t4eA
%@(U@)>$G-UYhrY*h;27'OoHjMLAeT@qWRn&b0)scS]>fD^>;ihn'Q'qK<kD2[lU@^jDaiM7\.Hjn83KDgPr*bb'$Vnk)XFe`ZF'/
%2LA$dNQ$M$BUNn`@mrS!@@7\nj0q^]'mf#X"X^Q5^`m""JkhI9L2)BZmJZa.F4@cHmZt;-'N\BSN/A6)^Y5WQ*gX>/(MM&!$belI
%ps\&@U0k.k%[E0*qo<XTGF&&S/l6tQ&n.-+7'00d@P@<s&nR'1rD!nBQ6Rs##LK\+PVjb\AQa[U,=l=L491)D/7O5C;[ug'93@c!
%o*f+T.=anL&1bR(V93dk"nuU4X?oJ&5KjKKQ^&>`<.f)i)TjI;W)bT(QpfWm=>S$+2'W5).RF>.(gp+r.]aQ15V#/ug-VG`/$)p1
%:]^o\'q90Q7[GEeMA/?]Q=5:d=AKe"YU"lQ7h-eP:`Ig)KIR4/8!9N3>+c6'Kn'[:@4=K:&6PuAL_Tj;W#TT*T.5KDB,+i?`O&\0
%%=VbK.32UqR;r_WU2O%62C_Z3NQNU!J3Ba&4%g"`:\^b8gK7QaK7lZ)8eeF%,Eaq9M^B,<<2]f[U4pK5JgB_8J0H8Ff=7#0F')ii
%TWiGf?n+K7-&3@K6NO\(6U*C?9cOP<!goufoW?,/!*:(KaX&ftfb.]n9jqa2"MmjQQG8-G74`,5,\@n6L-R"ddL&6i8ZRpoM/X\8
%\04ee,WQZki(tD`G@p"@CiX?.Qsie@C8D+#j(1HAF2T/(W^]I3[5?*m$?]OfLiN)`I?c=R'LGNp8.#Aci&4J"MpTo:!u`qg,sm6t
%a--_pF:^LG#6r?q"2+rj7#[rb!(nSI&QlM?o4"]%2',9h#D,_nX:4:tW!8/1,7(_T_PX^8ci]AiWPhujLc`D\1s'_<C.8QXMGCk$
%El(*,[,7=0d.-75%6jmFJ<ML&K$XmQ%o\LmY$&hV.r<#n/V3go9SX(;YVnaYE*V<DKRAT-d+D4sVHR'3MtbLLa's$P!\:S*Hm7@A
%'8B+1eOE@K+mJ")K-5=N`uQ[499"58pnA-m1PnI[knCQZfT=4GUD&9D&]BM@*"Ra-XFW%OY]/;q/:^:nD,:C[TFEH;V^-a"F:tU8
%.7O;pBTPIaMFgGk@'p0f<b"-E:6l(%4%\Nk7Pg]Bno7K'88L5BM&YBiER+u8W)gEH>?=BdU/]0!!*`R'R0F7*U6:="QDGeI(a@6O
%8df0te.<0BYi[Zt/:mJ'BuR>E[),^m.Uj(nZO,ku#Kf$j.q5Ocd5KuYJlP9Z>%s0'm_=t"&b7'_)Z8-+G?!]8pKWO,D(m\\a%gKi
%dMEaHL]U>8BX0`b)ei=^U`kJP=nl"X2V=>#=<[5.5S;b-TUdu7V*QX88IligG/+5gniZ"FCMt-2$Lf4^&s!2V$l2=B>)C*\1b9G3
%jA#cHNsH,nP7.VC7BmmVYXl#4h+$=SiOB%Z66Q3C+HC+k8D6lbkZT[VKJ7,WF6JGn5_.%F5rR;6WF3b^Klh:1`-1V"Pcd=VMmB[4
%7;?G*$@rC`bo,h'b/dbh23(\[WUONd.h!pXNgZ1O-D!b`Q#n*/XP.ulR$CrP8MXHp!`#-iSd=-'SQ6a\#F/>'C)H3fitREZ,KRmU
%WDZ-f2(r1!k2XHo#52;c2"QS0*\7t<GM7ShZUb/G!Au]W]EtViP8^2uP6AaR"%?b(,dCGrW#@W;R0Z60bTbN83C$\uAqGUl-ERT"
%U.om,NkOj3D!8p!K]@n9Yb!5:pm=J@Q&<G"M(3#\^eYpB0-GGPS7BsBC!L-!Q/8H<l#rL_)#S)pFO]1i[sLB=mf3!1VDNM+o_)#!
%kfK'"(66C$^^$Jp3*\22&8=fV.RMF-%>\Zj+B]<Z+4)DK@BW,<8hr(,jM\tj:phR"Kj7IgHBfe-W0*^HqBZ6a.h(\KmR%SQiuiO4
%@]XaroVG[P!gc2I#)'08_QgDf;5ON"7eD3V'Gs2BhZ/VSH3gQ$=D7(oeQ/hHN`))kh.kol`"nSm/jLFd>ljb(m4>/#`\El8TSQ,s
%3Ks['LTF]a(=m0_KT&'J@bPRpT,;)qYS/2E0Q:tfnHlu3Cb8!35iNKKTdPYe,Sln<T$Br[Ea!5:NYUsJq!Jq2aVF(G^m,>O2IKkm
%l:35'qh[:EeW5UZiW;e="u;&V78AX_MC>-f!qIff6Y&hVoCda[C5=SH;_^B;<DkH:n@sq:`)jfmCmN7p.4h_jZX>culETn+M$*-;
%8rE\G?D@-0D'/&<g?Am/PmM"#`4'ad!`XYW'*>;KI\DEh7%@[?V90t44Q_CB]-=6c:4!l`bZ`q/lPWO?g,J@S8/4i-Lbp:uAn,+J
%=1@^$bCHg!3#-?:Hl:?YK#e'M?Re23oqpOU]Er)h+:/&27BjA&d&%.QPIB30Q6Ehmn-DTSM?et%:c]%')L<tTpk$HO6\UZ)2M2Yg
%A*f),^r07gD!0l^?f_JsP4g8cGJZPU(ds'F*[t*^K,\YJW_>\7$8;lr0\0B+TH^S@!uiIk%TF5mG)J@L+4Vb+2XO,55f)"e&3pi(
%r+jqkFL>rRnu`IE_$1K-!in`+o>iZ1Xq%c9;<'R>CT%:P3@5r'B-PWk"]>Rm$^mak`BcpDL^EUqo*hYS@u<VfH,UqcKX:VcDQ%!:
%LK$<I,8k9qLVU-G[nh9VLI,!rXA.'oNM:hjcY;J(/W(b6k`%0!,WP#o%ShcOL'"A7d!aS<lWc/A&@"A_L8nE#!riV"K4=GfR7_G$
%:F;cD=IK6CdQ;+Z=LLn*QP8SlJJA:L/Y>cl!SR+,BGcpJ6k1;_(-uY3-0Hq=\KNul$)FC)$*ATJ%!"OE/J/41*!3:F_D+<V"L<%8
%?h2b*#&@WeNrcgi#pi^Bic;W-JW90;&`Y<1;!e)k?qP_)&>@<ncs_Xb@g&3UR4TgqOm<La>2utmiN.?Z-AE.l.NP:!L2*pOHN5nh
%Pbhq.@,=T(@*>B**2.Q,/*Pk&nbjRQ[ucL*n0()m>:B.?KYX')0=EHXksJ\^q7+ef&3?'XQDl4>=1N5sTYIKSi`0;Po8X,<Yp9L'
%":SVNSFBMZm"?%\kU])6:LmQhT#Y[S1pA,.<R0QUN^#3Skh8W?nH"HLWcB5&_UeM::llV)jaF4pmkKO=(d2<kMIUj^5jL];fgj-&
%83]V$04F=sdK_0\^^(;)j(q%X)@/[<6bWRe(II=*NYMpUP+]/p4F!"MX"K%-W6d:V$IM4Qd#Ea(OEc5:bG(aU,(/?`$seWRZX/=F
%K`u.l>O9e!S^5NSXOS@aXFM_T(r7!sTL1aJK`&HXb/VSPMfWiD]f6@h)AKD3%"WNr76klco2Q^$:$q?lOPmNe7idT-)Ge?0=s6H?
%N!GFmJramS</cYBh5(nn\r`U?3b(_Q`56e2a:jLTSoo])KX4WF]JUnY%m)%&]^WS-76h2"Co(*nnkcA3G=`.9;"OXQ$Ck$QZq?L"
%4q("I6B<[D/'2c6RqZ"Y6']f9NuEGDrkag<<*N&jJRORSQnZn[.KnS;!=1M#5p1%Cm>XH3m`:/:?;VOHhJ7WZb?(^bo^SXV5b[aD
%>ld>nRQQ1#<MFcsU8ZNEQT4g(H\11+_,2QX":2rMc73Z^aZ;uB<>-<2n#4j7joR"WQAC;Sg9P6W)`ltOBfIaXkWiE9Q[&%;V*G!q
%gCl!gkLoG;gEZj+gjlFm?\[:oX_H]H1$IJh><%D;r:d42#K11F[g0glYaYkl,E$GGDe_j^C1SDMG_s>8.-a%6h..(]X<-<(7`J+i
%PITAY"R[6I9$KKBTWan^o]."k(>OI5I<l&6`7o+IQY@T^GUJLmfQXDo3HQ6"j?%MD_rUb>UnG"G1Zlh\@BY/.4i'g3,(PXq$3P32
%7UYjKq[p1i9b$Tl)jE"m"O(3j$=ppuTl>,:cp_Jq-AH`<Qc-gQYC?p,#T4K]\V*,"GF$+6_D5LL)IP</gc[$l(N`4rikXfpFT4ZM
%G0(j4(qm[tUDm?6HDSLZ$Z31YnCg=L*3V`Z9-/i/6jsFEDltCUA1`"H(FaR]7Nhd<!r3C?)H'68R,\U4]m5?P+d/Qm:g-7^Q_<YS
%mB0(@Qu5\r[pdN'<id8h@[W+@_1f7d>`=n7%1TD%-m8QjI?c-UqKE:D9C.%>]_[?F(N"sAL=-5/>;m=X$\Ik-Z2%#DU'*7*?1Gt`
%`QB<f6`]_5a_G]a0a2Ci>%n6VC#Zr7EXjKSRR5kBY^G@So1n6Y]hr@.&5D.)6*?/9'nZ2^)/jQc:q$.'0HpD9J`Yf/0_M62T>6/R
%"rDr110Oitb[JGR$lj"1Y\/lf;$*LCDW@:N#U2E>&ugBZmUqND0nVpm+BJj=-A#qK3BF*H6lUY#c,=Oj0-<&jA:An>Bda_sN\_7J
%Wd^X`+ZTS%RhYgd`9o&>6f$+GJThD73TBrYJo)=uD5;9targ*];.>5\3ZFU,jMKCH7n7,AIHXaCl-:&I1V#p$V%=:<_72PW[T'Kd
%WRhLKBI69S[f2Ss/9F0ll!0&\`+sBg'jXZ=6:5itUR[JJ,8?)3]E0EE=3.DPo8pB4.S2do1.(=VN+YghU'a9KE.:RF,BV99m(\OS
%ctrst!HXO=($oeQM&>qR"7m9WG6llNK`9%8UVK"P0>,-N[AAK*?L:ce3@mpY?K.K*qTP69&0i+LjG_$E,`Eci+BU4mA7ESX)$3;0
%2TSFr?Kaa%:fo$l4LoLJHK;"@@Wpi'Yng=r;*mRf%S%JD;[YcWl&*LL4IGPQJ>"sPUn'p!h2gN[Ht":A0/-_Gj99'uF=okc,h<aE
%B1O9bFi3&]J:Jt8_#\)jBu^N2ll0+%X:1c^*CpP9hF>"'+cKU?'`t?aE`PU`Rd"eubS"@+di)@)$YZSUEYJM,bS9h+MYo%M!2YE+
%)kk*l;+!)8-";`EELik-%c>5Kcl\B-oK_Oo?mss$"(mAMA+]V<OI0H'"Wpp)f++r$7F>7sZgja-5n!j)eJuP?4EM/H_m(UM#c"XI
%A]CIg+l,,t%F`r?7FM;<=VpB=<j4GJgIeVtBT4JVd=OcW*,-ukM`d]@RO>m%OIN4(8=iAMSg`*#@1t<1gO;7Ua""Ib&^)o/l$S&=
%\1ltlLbPb=E#6Re&OQhLLtmg-/]Js$2h>s]%(WWPoPDF0OM-ch5?@,86V\C'(Od-m#(XXNj?h-hU3S^h(krl3G:p\@1j&.FWX$3l
%f$Juu_Q0"_005[+e/6U<D2a@H`025M+qe\7:,e"e\l<.q>`(U2.LAY)`eNY6M4,sN27dtIgK_u5ML`qt"!Esp#@GDknVL^([31#>
%\DmYrM0K9lQprAeC<(h^:a#lB6`8B;aRp-1qDSEDH:nnD,6"rRZp5]HWq1u$'r]n2,:g_0jRu8`@GstF[jc@aJ?E.-6HHdXr!,5)
%`YM/ZXFPPrfL:k&O/#0qZm7CfPYRC[*`=-K0J^;&mKI'qK%RRFSSp&+HN?)K"cgIg.(3Pq"s#ngq#cEVk3bF^MYMCS$8f%e]TFQ/
%(?<pK?lRW99e'/%='\-Q>,M1/qN)aU(q`'U:1d@(!_L4`FQpo:A!q=6>blI,NI!fq26o^ic6$F>/kp6_Q."`)Xs)'??:0`g!gh77
%/7'6W.*'p_kXdo\`hl(3eefce(WS9,/J31>YH<=39=V<M1E[tJe^4"5j0E?eJr0sR"u@[If,qM*;P7S.7gQX1h[!DmIb?FqA'bI[
%>S\V?qh8Om=!GO6`\RT=&cS^\2+)'a`+(NP;1!$gSM\4,DX"[3"\^%giX9W,(si9`TTf]"&`4f9W899G"9';"AQaPtCXTt+$:Io=
%+>q[_,VfW$2FQ(TjAjUP(kR:YP>KaGXMWkH%)iq^g*=u2q-/j(M9%,@pbW(=3Y"]I_YjMd!:0`GI?K5]6a4i^"N;0J`il8??MFOh
%(82`.gIp1RY52S):kD:t/HRUE.#L:<lPU+c7.i1,M>4-Z8a<5hOj$7#+rEuWQO0PaEKR?9N?$udM'ZrT,2]2e!$K:*+Z2p@-=as@
%/Arb9D]cM!OI@EWc_8T=Uspeheete22[_3H,@dTp,F)3@@cZI#D(RKd2DC/%nF0Q?*_HSK#tml98_t&`9u9H4NMC:ZJ0MrEU>-J#
%:e!]I]M]#Y>LB@s3O=fR/;5&E-rT+k5c"th;a=V.;#l7g_;@B&6Z^5F+T'>c([)Ikdht,pP;p7sVRbK2TDbR>3JeBU0E\u.2XY*P
%n1nHOZW;s-]bD2!TUR/O&73`jG39"%HRV7m'*IJA$,n;5Z(4;DOWpkYpCBsK3;o6tf`2;A7@&X0\+Ha2cRhuuFrsZL,drRtkNtY!
%5^/M"jh#:2iFXjd'^blgrgCqN4YXfN<h^s*#YBG"E5JFpLkZcjngT(tIo,oikmtEIj(*>M"R9G`/NuNeY6BM7?"$nnZQl>Md%-",
%_EkHTZQ$JG"e]:9%EFgmAcQ%&(84SB7E!R;6]A^WdJ9&j3ORu4p))*j)/q8;ADMs[IY'Qks6p8D]J,%0@cH;[*3R.GG_I)])'q]N
%"X0P*:ctP3o>GL2G\;i&)V5r!`Y.CNNgY^"*eknjL5-NKauOu[!2+?J8V@U3#pqB?"gnc8@O?mjJ=QiL#[+tTY;W-#)ESe(a"]W5
%*<??]8dYQ.RJQD>+:K9I_uUMohDi?/;'p#nfLRha@mnO,CttAoh$;k'67=bo>pTXG<_U)-T\C#D/;S;K5pZE,B[SRKD/"[-P8NK!
%ml(=Bn;Pa.0M*K4L2:KAHoR#[%ntCp*tTEY-F`#M3Qjj_h]KE3O=n2'j=g<L:,o[;<2a@S:^XrE@cEkj@9@sp))>Eia+DT>9@$%l
%P6Zg`Oo>=(]uuEU8WkY$"ns*R4THGpI]VQ\\NL&e3e:EkQ[OD[qs3fLcXaVNX<<^,4dZ70<Y65;AnkrS&/CmK[:kd1j<nA%[2+N5
%/K1`F3d@$nW@$?Fre#VgL8_=>B1=*_]"a@4+M:ajo4*T9_CrdSf#eX=UG2"-T>CR67Xi9[]"Qldr9=h;lKnhc4Cj3D]e21\FEM":
%?\9S]3DqgMaTnJ2"Vn$!iN*RM4lLt#?1p0mhR,h&ipQ)A#N1PX5BLf_qj`3@j/8!f@GA/1ZXJI+1S^\h-6AJ]E<.,pq'Mhi0"c)]
%1TT91m`FM>OC:X24Yr#lC',8^H/+jMSCq7bhEnG?"$*6iF>qdDAj70"+N)6BcU5tG$os@JQj%Y7)a)D0m-,<06mmEXbh-a1`K$&n
%SO;C#JU/Bd;j6-c^'IRq(K5(r'antc*qW$1LQFfgpOQ"Hg/5Ii%7C[3PMX?(gE$i!L`[mS1f'`(`$f\(1'#o9CW'2&ek;8aE;OMG
%AfUEWR4g]sOKc;46Q)G+9^6["[_]2:A+n^+H^SJOVSDCm?Jjq(@#h5O!]_$+ZU4u!%(`!+$Y5=OnK`6;9M=#L&,erJ(-&o3'Y(Vr
%ZXjr'3cJscF`[O>mpodASq#dEFgE6,LVM,RQ(Mf>SA2%H:lKQ7.>PM&];Eg$c+?/Us1dt.?ItM7R%i`O&:su%"hR=4q89c]8)lJI
%Ar+a5Fe9\Ra'%iCEWlFQ\Gkt&@%p50NMEfu]92<\B;>(>H-,k$8BbOVq&i2VGQ7C1]@j+7c+V/8L9#f>O10jjA);G,i.%>>kh=qZ
%d%M=BFZCfI9=442a(i`fbp[1f>EVW;M)"1EV(@*o9B_:1\m-X9jNd$"50iojV+"sO*tl$B(h+B;?X87UD(ZNP_Y(lXKJ4nL$e5q5
%3dlO/E8k#&Fl@I(Q61%M)NVM:bFDCmaX:`>Wd6j:V9()_!fhlr&=$NfA9ish]>lLMhRb\14n[\9I,;+9a95@^2"6Wa)Lp.0l`5>$
%Wt(MG\h,Z*f*-JRNIAHX#5>GoY)?TJ?Pnt!'YBfd8.a52a(^XNXg#U:U21;.PKGG^QI;P=+9+[GVXt;%lTfs;RP`K0S[9[_ms7Z\
%+j=1n-G#E\L;-Wur8qLco:$nm6L471k:0k,gGCEcFr[3`$n(k=8`OP06(WMKjdnjr_@/Gq,9]F:XBWlf0mD]0,&oS2o7CM-EWbL;
%Bn"+WWI3LHqS-@?`*YaV&+_],"[KrdY4Po)-g36:odgfj1F$\439WlEo#n`[VbM<3@Rc`S6-S.p\$.Oef2NGBLBl'9<CTn$fpLc)
%aK0BHEQY#Pq\WI?-"BX/i[o-EW_)<*Q0_C]/5LJ5O?k,Z,Bas/*.5tdq](VHVlGc4/$/'"dR>su;`<5FH3o)laUU%iX')YQLQ>6[
%Jk@'RBn2iA#"NC()#\GtinlluogQ'jEB@m8`_f5IP%0hd7*$]K"kW/>i]%?,Md-BXSVj%lg]6nK77aeQMnOD`n3DH6WUVt39&Suk
%qthR%\-m-aE$RKsGXckJruF$mDVo]-lVh0JluiGt1%#'26pQ?5Qhj.%7RQJO1(;AeYbMdJK*N'H`p'3,$]RSGj84/d#]N?:o_puq
%5A+aL\.1tELns1S-eZFA61g;FS=V?;"51U`j8Kp6T(VqH\*qSJP34!&[LQpV.3\H*!T,T%N`/:J_#<Qsh(+M-K$d`#!K8G;)jj#W
%fD#2S;aUjrVc*ahaqVLFhE$.t,$*V*Z_D6A,&UTW)io&gm-C_.cTi:k7Xkkr#5fGqh69<U?L.9(T6E*WDf@L0j/qr)G0c,ONrs.G
%C<,9h'E;=ibn!R#!CY-,O'kt4GN=2JV'B4$Qr:Td0;@K0cqb?"MaIsL.S&D`K]b]+#rGcJY3Y`T'@I\s8M7i!J[!KeHapN%h:$)1
%R3af6i?i]lE)'h1mZ7,Bq$A+"Ri/j6\a)W=4o9tLQOJ=N/fh[.H61JIJHFO0PdQthM_iVESjMrRU,=s55[c8%Bl^!;&*@6/&-(ga
%'BSrA]m648;r>;0?27p=-=`U+#.J%sVi6FYDq,D@>*c)l_3YMO^ssG'#f9f!q78e<J)R,Kg5'Wbg<3u4?f`61S:[2kfUAZ>Md/]C
%"Ih%s*%`nUiAuk]kn1'3Tg203@#,:(;U@`3AgsUW/-`+(d&]C*[YEI#Qn1VW]%2/oO@nLO\*YtABDHm!F<DQ^-qg;2;g$km'*jRW
%>pj:)Z+i*9V#Wd8U*lK=aWEot9J\a2Hk,>:R&93eaK780>A9O.N?+,WSq:Z#(/\@+=`)MJd9-hC&NnR.rPbA@QP*tf%&9>+dnmr#
%@-!\f?nuF#]+bP<m(4?pPBX)(!g'$2(BQk6@lW_;$jUFYfAA_L7-n^^2ksr[RR:"!#J<L6=]jK=_.HPs1T0423J4[qVAl#r\gfoo
%]qfatWW&Hb(T_^.c?$?F*eRs&NW?e,OSo_(6*8QY`qt@q<akM&8?=T>J(tR1Kj`>G'6Cg]#(]_ll@-cd9(hftK:H;qla;r!oPf%&
%Wp\]Fnq>t`@^5\Qa$E+7(gF8MT]Q6aIHKHrMfHa<2<(n0FW&W"O@l%9iY/RJEWVFnj=ui9fXPp#+tP5J_%8X7:c&kW[P=KsE,F>8
%l8CP,$,*]\2fW[9`>XgBnf14PGl6!%=0eDS8j<+\ahY96o\-Hd%%L"u]1.Bm+?;"b/tn`N0IO^14u5s*69,)+bQ=KkHSpE)m!nV:
%Ag[VgEC".u#?MEo2l]"[[B588c_lK_l[1/k$)^Va!>%Z9@&*S;I>giNgAbOPK5(bN<QR(^rhl8ATMU]1d5K_udsTeSl^P0&^itWO
%Z01DWZ@BI5j]C^X"<_Mb!,4:(&.I0:o6nPMIBo,(G9uS_c1.X!9Tk[\([dAfK,Jdj^5%d(L*;j'44LD#)u'>D.WQikX%^\JPe:%=
%cXS3[^1Ih%]%kEPrk]?FE8Z_)-QX=E\#Oee/(S8ZJbdqhd74]M\Z^9t;M)MiTDbf">lfBQELiF<@4.XNZY.BbN]C6:_=6tW9i3\n
%8l\n%DW12R(N/qPDr0LtN7umeHSZt7R1ma)3l18$iNcJpSPV]0)-P9Z"E/;8_L=o>&lDGG]2_$EX@#G?m0_@JZ0U71e/-Kg=0ob`
%rQb&<[WsUd#B(>306Hk3_E/>6R13t&KQ:@Sa5-%Y#c7<d[?)gA5@WXB0'qX8JkD,<eR/R:*")+W^U)f3LKo]h9CX\VB<q(Olibu-
%RAaH#TmVFl"+cXn$PU1VRCl&u'X%lsK$s#$[T>J$b6*MQ_V8!kQ`\)m&]#aEdBS_K]cfaFI5A@7_\<:S<d("`M3ijO+r8rV,\`:>
%=TksB/c^bp%\/r?5gY&h#:rfer4p/onqYoAa[6U0&@_eVfNY^n-1PX+aq-*3h*D%&i=8iA$[OgQGq@0R&=<)758'9SVoaSE14r<$
%ej-CuPYHS>ZB)WZr`GZd%e\#oJ*S=]BXo5*\K<,2^jCk!m>Ha$du'W//femecF7(BkJqK4G%?Hr(c`'YZ\n1N<S0m=_<?Pp7M(OZ
%@d9@rA-Z^.o8DOR6[oet7!3>g<YW&Yd)*0Nibh>QOS)4jU!>S;`Fc_K/_X6_*2N9]mQ(CZPCS0M[@l<jo.?%4"<>.g5Msi(a<Rip
%Nju9ioOBPZB;3fO=#8-rAuB=EG@bR>0X\5kR->[/a'7;hQ<YaX30?Th;oN$!mVK9V#o9\;Q;'qo"EY*Zm5-u[:#$21(t3jE;o"5M
%"'sBHSk#DZ$;SEI!?uKj7ga\c`!V$^2D_Q9EIGG@`c9?#Pg<lPY#D3sNiGM]T-C@<I6d#g_Ku?PUR$c<5/n2(0M*U%-FqqXRTJ\V
%jMGmA9Tu3U=dSN@%sIa4C-jQm^g/(=kn-`(d;lukQ_h>IpT7GCi-aR(:idAs0`ZYZKl_A-M)OQ#+MM"-JfgM>>=82.<3DPZ/VE(p
%,hf3([uR]\)ebs(I!s/Pmm'Ho4/qT6R_d)_i>.L^LRrUK];Hp>RC[8jP\5@SZs(^8#Cmg&!VF.KopQ^dP,M?*eKo5rG'EYQ-j;id
%65&:RdR,\)#;5`U+#6&d$G4U&(X@^qA40/J3#C=S=A.>:`If[fY:jn%ZAL;EOt:'c*8;sl*7k6HFru+C?P_m<+n+"Z6YHEjF2(D>
%*4.VG&0HZZUU.kY%S@,EBn9A2DGb&Z%O_=2g\/J0%WT9edW.s:ne<0m`a9PSZKSd+nb8Pkj^SSmJ!rHBX[pSWmS2PF.jVe^R$D8?
%BH/7tjS)0!;P6Q(MVk'Ylu;)+XH%hn@pi7"$C(LsRD??Tik[Su[\TK$,9c<"_mN!/7s?h\r"=!sG:F>7>RZ55a`Y2<YR`HaqbiqF
%X.T[(!KsXfZZD\u5)K*7GE_X.S$Ck7!Z3)H;\@W/n_!&D"uR"qV1U-2S_$f1[p9.C"T0EpTn/0bp60^?nNONfQ+cSmL7+mpjt!5i
%#I<G91>JQ02j"Xm?76$2bh/s[Oi3iILu-*ir61$dJI#'I6gDJ0F^!aYZk3#GT]0?TK;/'I6:?%o:j,qBB1R3I,%%<K$deDj<\c58
%&ra;uV!^#RJhmfi+#:nf(j11LStH:6%!7hL]gAK\C=TiY_'b)O?OT/Y?++1l,>2=>ldf,V==b?JEgN&?goUL)DF38eaTol4(=DFq
%<*MW_rl#9g3:gYH1Xe7?!65oa&G.?C.KD4M])hUW;HI#l6!0EVKKF'UUpqO0#B]#Sf[F:'E.-^4TO0eH9#,SnQ>b]0;-*!1$3S@=
%!*_bcJlPTN/[#]T^o2F,6!U&WRYhgs8K)%;2Fl1nmM(>Sim*9t+lJtP.)\WGgsLg:0sA_:35,W8U!D.S$s'X.n.2e2<)MCYOV;]Z
%U;U2/_6JO,-"8K8G;XO`e*RZ2_.g/7M<^rX7OH\V=##b#"gO%^BrgT`#Xqpa=[9kTg;4s617>Sl7<q6`_^_C_9e)%PiAUmH4;J4Q
%E\W^tJ)Qba5'oBWRsLTbO-/^d,88$Kd(:c3#[G@`?S^i_/)R7NTki1RkM9(WEQY%@@L%)u:F(<BRU&KsLRKYq0EdPoqh83LSSmAE
%!ISh^IGT@MAb/94UqJ7_Yq_nnGjB+ujKEFYI7PPdX;Jb64?0+3PDG"pRI:C&KT%<EN<Jl(VfdOfqJb+Q2mhT3o'sTP*_AB8:E_M!
%@W3nTG[ldFiR5u_^(*7r&ed4)``<QY[baF_Nq0d7hn^c^\Ir8sN*Iij.EB\A<ae0MN`Z<!@mgStPOP.cS$D7O2P`GH\dOj6Vu<W\
%QF"<@a\q_G!>kG`DXE7%e-Zf[ouH]APM3p%l7f2cV\0BUA2;>ae\Z"J\81obd)3OTL&?b1+'_Q3iZCF8Od'\l)^WT,n5VT96/Ylc
%NRIf98t8]279$_V@0()kc%h?8YH.oP,2g09d'$*k#>Ln/Mi`?\*DC"J0X;Nd$B:0TMZ_[aBSQTV0Se::7j=O1".DJ)Lelr_6>$g3
%j\_9A";DV/4)l1CTKMg1S5(I-"6lS#J601B(/rEIN)tr$=*MRBH<oa;qlg#=RHA/Q;_W^4'KC2<@@TMrd#Sre.Yh`/T?:WR7`K`D
%'0/\tn`AE6--GFcC"gp@Tti6m.I9@&JDMo3".Nnrp2CcSqRDOf#s3U(YacG[b>Z-fU?S;.eG/,#Hub>`$o^'?rPZSEFpdsBj7P3S
%#4^bR:o@8Ul1'8r&"Kb2TIa$+4,7[/Z@u!W\i%j7+M\,qi9@bV6".Ns?]g"aa._&5,S(:t:'CTiKEOPgJNXE),^$\/b1CNYd67KL
%/(-T!l'PEoj<.GZ5r-E3-YKd!?)Hau?rd">3MT4sqnIRa)fp<63N4QUX>I.$PG*(,K#^`"9S0,"lWfDGnReD<#CL0FKT//dLNIA*
%(8o_9@^+!pV_9]rMHMZc>HgOn3!O.3P`%asQ-A!rPej,-G@VraJf[iJb+*DJIU4'SF/:[HOk$Mq[E65YKoT4L\XLR3+/)o.>r0M%
%#6-%Ap-m/>dq*V0G4F%F2a`TA]J0p;/gB)R4m6Xt0EEXTdH3*-'"Ke%,pR7Mh@]Z0SKpo8W_`DK.e)@#8\1;90YP,<)u]$:DGN9!
%85SIFG"Fge&80Z9D[4+/-!_TP?@\Uk3Pmk8GUqKB0d-S&TC?hcn27gH%>`+2;`u@NG_/jk3]Mh9o4Gma_9'*NrCZcnTb(RVM.+qt
%/jSWEeDd<u,6BXR<r2,k]jK.,FcCn88jQ7meiY[$oL5r.JKfmiou'dD[?,65>QQfa6,[.mq"+qI#CB,uADI')31cgNKg/#hZP]Bu
%:uHOO;WY;5(:FciMd$h:$XeV!4QoSu.f;q]=P,i!)8bnKZ\;**)96@s9o<HHo"ge9dST)AHV3l9mOhVFTS20d35SBTs*I=FU4G9M
%FZ[lC]aen8%M1J`_E>`SEQdtdVN07-/=nIN_!IG4@`O$'(,',7l>(q.Y.Ubi`6%W/(X9XQ-,b_WOqVd%Jce<gM-j'&bL:[Xa(Rni
%baeeRdo#K9ODIb]6PZ[c"sF/C]M'2@q7,)2_Zo[s7:(rHf!K@=^h&j;2\Sm'qJ9j&jrT2^RGYa'p&,qU0E($VGk3!h:5\q$&>>9E
%$mM@2"EYO2KnQq&L`XTV>"A?V'G4;K%-)Pb"ecB#_EnBt,0RbVD5sOEcldX*hB!FBjWet5<V1_TLT(0rLh"q4f%2!b5lZ"<#n:7\
%eY];s4iEg-bVGsM7QbCZnI%kj6(">k4XbZBJ`IIcD[+]IBkJ9IeC;;%BMD9Uq"h[4X=Dh0e0?4_\+P23n^jU^go\p"Zi(\N8BNVj
%2O^;$j*%b)8IYO4UISpL7URsSjt7!jBf6_'1X""VlirR8D/EbEV0On\%CXUi0.:>/D]#/CQ@l'RkS'?9/CN]"$<AtDbj]Mj*S[q7
%do%+F`P_iM-8l(;FQsg-F!/UtkZPF.luriMBN`[Ac_JDXrG.Q9HoT(&I(9#b-'Uj98o1O<.4`6"=KrLtO=\jdZm*4OD9pGIIu2mN
%Z$Ms6)I[Ed!"b]<%)I:H_F'3l8XF*]M*7'Y>7KA`$ra/9aPRdk6TKd$81I'U'P_<Vql[(\c!P/YO%pYPK92cmUNUO\&7Q)'U5%:C
%"?h5HI10?Da';#K&48;MM>c+n`^?@#p-jpK*[D09(3V$NhHTO1(UiZtQ6NV3[<JHUI6*c"%c,2<[8;P:ORl+;YFM5;_]e_b7+.je
%me4[Sluo8EAjG`L?]rL`K177b*+bSr:[d=]cJRE0rf;t_oNp-/g\AK$r9S#I9&[`3Ibj-IKH91oYbFG;'e^63VO1^^6Jc+c#g1Y]
%%OB@jF(1a>;@i_8WsT6(Utd\8]KV]e68CCBj]agE=JK@R[cWEYdZ!No@dlgM+7t%sGtKO:WmLD^cBW;#3YXlh29[l:YKA3Sop'B=
%aSE``$I0.`lD)N9Rm1-5D"t`C6b*\oA65#A`mZ7,2?nM#1,\2)_/\ME*?bCO=&hecTQ!f,l=BTI"n`U6p;"n,[E1u>pf5:r$^07T
%V=2FBlab4UCNt6E7)$C-J%gVfJnL+TW(?SMm.ndC<$U-F3VF/+O@bel:'%1oLcNSM8>JXtPlPsod:0SN78thF])i@R5g46V&PJt0
%&=Y%]8M6^.&_+:e,C6UfT:DK_#PCRk64PGBL*3->ec9F.2K0r[jTQ@.QiMK,9.n(t?qt@2#(kSt'/6-#*H@L:\'a*ZF,hQ>>`e(7
%&ml301K-$0b(9?hBF9:)57uRhX9CHgL9A5#=&?"I#=0O+9a\h#hlbDb@u)dk)^M>GWPT%3H5soNN`-\bKk^]t!pj,aHnbcVMV:F3
%/#hFOg<JE91n]-j;$Xj=,I0btZ6q,5Z>isJb7e,,U^hW.REm6+5F>^I=g/0&;pkH#V=4,=OWbtHR`BY6K69GC;teI2E-:1=Nk*hD
%QgOMY$-rErHF'(o-Lp"%'_gLjQP>.$LT%/b+U*aTeYqfYaFaqKUqqL#KQPG&P[4u3o3t@RDq`XoXaICM#H:Q53AT`YJg]dF#Am%r
%r-fe1f<omFRD8a!WiK<nW+:jHTk,BJRP3<mfL<uH&"DOQ\sQV##M&cPC5&eeT>WpP9QE<;RAtq2_S%3#$9DeHdu36>R]X\Wqe"PF
%U,l^J/E:4rW;I6niWla6(=iMN+"aZ,OcN2dXbh$SVe+<aSPm*kj+q#ljm%"qeKpfQ\iukLX%jLgZ"[raPid'W_YV&@DC-)&n;"Ug
%Xgs<QO[$XrccT.3;lugI!$]3'Eaj#d-nLHSV(?hC0dFRqn@"*6PYk+B+4&6l-rE#i<qg&(NuP.p\4CpD,XS)<7`+O#CWn=X(JA&,
%V+4abih`*NC3&!7TA_lS7\(P=bX1r4"Zf[ZTdC@4d6l&[-se<kNf+#X/6(]:rUkkb'##qIWIgqf5/0Sl917.f1)dg%RT>Kf\!M;c
%F4'u/_#(5?diip"A#8).fIOBBo)[2i`-S4P&A[g=GkaiL0"VMUq!3p"<-KmF``a[&+B4*0U^93AjSUAO86uSOXP30sAV2!.mkKa=
%q@E;jG[<aIT'3fmahSr"!$=AV4Od@'NN%Bh_Ydg4_IkMqR#aM=@">V'!'9oj-Z\_O$NRI]n,\@hpAX1(+$[/c*o'%cF?iADDRSg_
%5s(sJ,-Qfa(jXK3Aj5\.`sOfRN.P9,;g?(K*^@4,<$3Z#7X5ii\5CS`V5N`BR?+rtIWP&L5H59N7]FOYV/NFoK:`lJ#a#aP\?gMP
%mk_G"4H]L_o/XGLhcH(g8Ri]6ZkD1G7@E)o1TG5aL-CL\BKEFjGRWp`[)2Gai&`(#LQ&2$6i]JP_1FAU-[q.":>Er\KeB<j'4.nB
%$YSj.i(*cp%1Wun%%Jt"+S/g#CgdSjOk%!T-3aJ\9$TkDjG3i,SH0O5:+7h%S1SAJiq2H*pE!':=RaN8fqNf(_Y]aQnd!sMBG*:r
%b?Q7Si`m8mEOXZ:<;.o#^m2M8-af[C!rE-iK+J1<Ydb"=&!KFD>D*]b#J0Mp)rg::hm^cJ>$!O,;'2=L"lJ#b@D/&@##"`JVdo+Y
%@Nt%rAd.tMBoFUK3%d!rh+MgGR4[6ukcqFH?+I],j(I\30^Q^I_B`Y8TtUY*0C$SkMl\1._U`&9!n"?!2cmo4,p`/J6eGiejcN&;
%Kr@?g_;uAP>Yg5$2.n/W"O$olO",?Fq7-/0WcnXtiBWYGNL7dBI<!$HOupZAGHc,pOp>?cPjO\\'VMHL_,YlFQF731To1B$BP3FC
%1Q/dk:l9>_f7(1sK4RZ-._1LlCH]5V"=1\%9)4g(c\)&<ilocVcmUkl\uhtJ@3Et0ddS_sj#SeX1,.^l,<,MYDd?u9q5a7B$/M25
%<S\3[JD)^;(=X"Z#ri/=RDYQO/FrbBgG&3)?glRhLAp>L-R'Rs]0s=j6u,33>p=o=;`=.c;<U@WZuZWVk:62=#gU$;_:OZqEu;PS
%1)-J1VE^2R$-JCLW5Y.(bCi&s-M_N.H2b8uANE8NK^k[E.mP2s+/g<cL3J6KJ2T\nUHiM'IY)>CfJ[K.eGDAF:hm'Fb^tfe$"kDO
%XF?M*n&69jE?m9r*&/rD9!s4(GHf&V4cB4_`-,64WpT2tCZ+0B(odN0ctr0b20C.XrK`kB3JRFD3oc3,#JM"6WPVk@Z`NDo;]a?)
%FGn#*,P(*[`d"nlF3(7p(M)b&K.-7>9p)8aa$2YKK2:Km*\(h@rJ/dh7#[HY@`Y8:eOIXMSr@5,m-s.I#3[?Kp;E2<p]fSAoVPm=
%Bdrr(fY^FPCo)IirKHdoT4/u]+TE]6-b]b@]tn>JWU+Zb<md"c3W[$dS2fToElnDoe`DLN(\FRr`bad=e%OE.j2U4g4ciL2r]`Ur
%1<F5F`E0ka:?r-aaW/I8>ZIi8I(Kg3-ZTocge]Dcc0pY`5Su$`e>4_$2JK(P-Bs>B'g-'/K.0V$S^c;pOqGT$8&Z"UYWrn`mdJFt
%S8MrR#4I_:TN+!,+uiOK"(St,Y:jhkKDK[O52DimUjAap$"$%N'8PVoC60n./Ou3tc,R4l5@PdGfH@XI/(K"Vf'YZj>C,ioa$LY$
%*9rKH=K4lW5-9Vd1?%LU(^[[5-C@>o=\QZc5OP]Bk9qjbnmaFB">V/HbZ+oh4M!RLnZfAf`r#18Ik^C-U<7sl):s2_LI^%^EmMYm
%46d?sc%Ojro"7J;2OR`@P>/q4n>$!ZO'!.X>P+Rr*"Pe=G?j;S78L5bNTTR0-^eF(C3Dto3*)#j,T4EX[8_V;*3_CLP2\')J@`@Z
%Kr*K>jVo)84+N%Q=>nJ.LFPs=&6Y6$!$9:U9(!A_+G)@h05V_BEO['8lapa(G:>lQiq.S!=s+JETI1Vc,k`ccbWs;8P*D1)7a1.J
%/=^Jf+%fY!o/MIEm<@%Wi]I-B@;pHV.lm&QJbf=TWoG+-MC$jO'[<;i)N/sRS#KL>m6r)E*ldNN"q$K'AYP%^AD>j8Mc(6/T`n6W
%g.8Zf%fuiDn[:DPD'l"o0-!;sCZp8:N=*a5eD%f@CV)'ZT")MnNt*a@YPpAWk/6o<[c&\X[p7P>+a/d!8&mLJ.s/pHb7<m8rcGt)
%Q846jCV$nc`G\K[9*dSgd)?I/CrXRf4Y&*lF@rdnLi&Va1s.,$k`CHnO^I'9s,\&MZp$rKJ5FB;a">>F;iAL!-*fJDYQNCc$n)FD
%,e(r)&:D#7Z3e,^$h]*'1_tmYZ_*K()>P:6S<l.cF]-!.-s,,k)7n!V0n:Y:Mc<MOF]*;]FNKDqr[;dFHaoOJ;IeX'PAQaO&dK@(
%pee,2?4th"8ZK4h?"HatKr*SQ8r8J$MsID8kT)tJ*Ig\00UW?bp"TsQdf:[+(#<Hs<S<u0lhtKMlm(GYcgHK73o,S`MMsNe`?ZLM
%TCDcme.YNC1\r@UhlN+2+?Ur)Tl@-'RjZn/]3h$d\#pZ<l-bGt)ebhOH%Ih9M-5(ZnW9clp_X$qBOn6g-Oo2)?c`&h,-md]MF3;;
%i8]Th]'C;aGKQnnG<!S'cZc6rcKVIqje8W=f*i)p[8l3D)Wg.ZODsK!5^OWID<!IC]gb7-<GI2d-kZN1akmj10/"Tq-I?tqd9ooB
%^d(ZW\Cku3X$JF:HX,EG'ce8/D:A<],1o3*6d6_F.Z$\K'kOLchXs,)6s!E?2g8_DLXdj#'?t\<'GUl7Udj_He3tQV&A0VNLdl;a
%:mH`M1=b*E->5rg'QC.9V*78'+R26s3"r3c)tIFRNVU/f]9XNa>ald7M>$(@\jDEp"c@g<-RmD:&Z];XjY<j#Ps%N$\/2^:]</Dt
%Am3nb`RYGIk9=l3anjE'R%.hYPKWG?42WjAg'aMIY3V.<=oSC<cefYR0W?SV$uA?/VuBB!XuCQZp5ce%KL,4r-S*pOaenc<["os-
%A,2sL/sF40R-EYg@O72p21e/q$lWZfN*ZO*DX+i(TXH[Vo8,n:i`:jV!\^%K'A@&of>#&chgFFaD3aAB-2b[t)/"!9^'QB6Kib/r
%VVM0]X'^QijGoiVlS-ki8g2JG2hPgRP)$MsRSl"ck4ih/rWQ>&C$>1li+CLjP\05L;GQ0P?=Z?t5fR2K;teBV`s@kSfD#42`+.2U
%M1>*K^G0UA.s:(eVDK!<NM&LD&Ns2jB:>jg_(21o"e1qA1+'p(E;EYTDGrTNoHpU<('Qb*A18PD&^&5!_H:(IS>ActP)gki'aY*R
%m2BtblFFpW0F,nXBCdLjktXPCKX'=o<I\E2)7Yj-`6+]2Dfjo<<hka.REP2OZFe%'ccDOaJ%$ga%bL'59K$\"..%a$22"EgjBKn^
%dEeNGb`9-$jb<lW[EEeoQD+]J'<?`]F.B/lc'@0E,'!l2lZ?UJYrs/"k/rhP?FH4F/:CY6l[.#jO`kdfI=lmj!2-gbm@peEm6.Ho
%`=NYn4<O(Nfns$nj")5i,%CoYRTj**O$blSi`*_5PPF(EB!U,5Rj96g*@XuG6D),1`O*k=-!Y-[h1?2f958K]3miEqS)_$X%61->
%h_@c&ZruQY?S1:-9eF(tY\@!9K/F9tnf$PtS4EkP9<#(ikhm+fM3/D4m/p.:eE]`YYpqYqW[8%=3n4D3ZEJ@,:`IV\"d4Z.O@h_G
%V[sH\IUb'&'.=;I#.R1]L/!4d>7*s;(Ie#?D;h$sC5G`BEkhb])BWpW@t;,WLBsr*=<S5lAAp2(n^ei1H_IHPEIE%r8-Q4Ep5,mI
%R9E4._r^r$,Kp"jE]h(mNBLMZ-2p<\CPBl0iVnM7(FbIGARN>Zo^P*,Aj36u/8PA7CG!X8dU,A5,'4$c>n8o7mA=CO]BNg9>\!Sf
%S!P#oa&2TG=sW)n^_Mm(4FaZ;[1c>*a^e40&@8Z:(@t=iKlR)G[O+GZ\$klqpA5'\_peA,'7?W)2"Q"(aF"\21RUjY$P8qKe'NLe
%2'^J5?%c])0ZXQ`92L^=[BG1.&GcUdU>Td,mQrBFTX<!)ndV!@SqTR[P9'b<i.Zi2UNXLT.1:@WNo6@#O"g;g'jQZI)@U:mI(6i?
%O&E??o="X?MO'hU'4Op*krH]&8/[#7@/D%*c4=>6"@l/;lS9$";1<GImh3T#^q?U>JfNupol4mX[k9)q.`=[(!QqtJ[>k>uZfnB$
%@VZ1SKE^f+@\GB&/8%>tc[pmQ]BIbW]\F%[XrdnoTD+W-dU@RihuA/s^X(g6IFNag?"Lt"TKe^i,3jHCar57j=_]A:!$@+PN_q>s
%g64.bc5Pni#KoNiF/PO+$i[C7i'F-/)MuX,(=\cl-nVcp6jXn!P`@8+!%JQN_2u%;amF-PB_lV',T_9p!NPsSd4A*AYtGe*`@.Bh
%V43[>m%0adWl)&!KZM1F10*)]ZO/]E6=F&nh!qb'<A`)gEeq@dLG+I<5J@Hp%4[H^>c5`hTFmSDkNI*CC=*%k-@V<Z>=NgI!Dn,k
%A[0sP\a5Qh(]4T00MN8dqD55A@T"]N1m/Z<IKEl+8/suSI/nUS1kKt)Xc!.<%rSgMW"oZ(DTjK7EU#(/;_)D84dqIsE'$nEUY5Aj
%\5Ra\A#M^\"l(&TU1Og7\CBZn!R9FJ=L"NA2]HkUeF$j+DuGH95k1mXh%/skq>L?nh>79gIn)&YrsJ:\Y)o=04qK5Rh]]Pa]1N#n
%K@('ACsh4tC'ESJF>khA%^K'44.*3@a9?Nip:fon&R@#DKC!V9eX\!1Lfp/k.#++CkbJT-igc5e*?Fi@SnfLCY(!dlBmusULQ0r_
%3X'U<Z=t>(J@Q(TW7,9?"]ah"GgfBISZ_lP=g8/r.5s'Uh#mB(<I>PdK]f&)"eUPZ(100RXoPg5isat#/(N7/\eT/?"\*k1dPk*G
%SO9#qmjJ!E8Zlk'co.q%l!sHM<dj[t3YM"&4O-ZQ0Z:rMIHGo2/V]/&(_XmFnK:f;]\49RoP0RKQ?tK/I(-W38XBY8^H.Y1:6>r!
%UMgq3EP$&EjhQ8pN(!Ai3%IYH`AaN8Fbo/g!=CpN121Dp7i\^;-C9?<(Mf9%-h=mb#'S,uKP`Pjl'QggKs`=+)J>acc@D/\W0fpu
%!bU;Opo:1#H.!D1Du,6m%1maBK'5SH`N4PD7FfM+10qj;_1mNdRMK!.P/_]Bm"dg4J1Z<G5B)M9<%&]-ir![,jc;%!k)62GZ\TYa
%*2FT%VtSgKW0!U\$t73\`W@YBDE>0%jr,i$&Dk<9D;>Usq;H#+Z<>fh*"'NDPFY=rXc=k4L:VX2WG6mgi/_(upeY2l%c&TQRDB:$
%=3@_ZhlM*[j5b@ZE,f=FhHb&=>Ate[I%H/-`b%*6]7KB)AU]_gE?*+kW2QE@%;;XUa6tXW'L#+:XqpF`[]-3b!Ni1X2q*lJ:)4uK
%7:q%f>Xm5*G,1$2;q=Weo\n$j!%Y5uT`!I/d9)4S(#@nV,1hM[5ptZ<GPgAf'J-/NNBnq$NtW,RFZ5N^U"A395hu/i5hm^i=aDg1
%M.dFHiBdo>H8QQtan.*DL9-q969&p=+pXu7"gm,>FTKC*2IT9bVLnq\F0V=a\s-,J<:.XLI]R^mM^02uRWpj];fR1VP)t_Kn.3h9
%e7K\!C6Bf+-]hTc-mnPf>DuN?n,)lVch3]ja3=a9;*^j>!h(n6OdOUp:7u>E+QAHfVS*&*LE?jR7'TFY0tdM2K=?-X;K)r9L6>q\
%ekG?M_0=/RL_(/(1Y<V!qXQE?cEc9-n'qb_c/mu_*f$%3W"]5L=Y9b:/TihC5D&VD_2^PkcjtPC'XuY7@q58QR*T_u^)k\B$04pr
%mj\S?h%Tg*-dV5m-@V7'omZji':3T=(-aL.\kWP5k2lTo&:,D2gWc*`%[Q^;nfbYqa(&e/K<N0CCe#QeC?KT(Uhu$%bm=bP?79(m
%a:s-ng4/HTo[>QJf*UDq^auaF)H/(f5f?GrZdg36_+#.Z^h6#53L(c/0o@-b)c2O^j0r7t2iDgbUc1sHO\>3)#.RFd(T!@V1Xn%!
%T#_b#QR7J$GF\%p8%OB?YQL!KIOI^q&oeMCHAbBOD0t>%b271Z>h8XY"*_cUpDeT'UOr6hh+rp#@k-,?j)_EmjJ\NO&Ic4;a^t3<
%-t!o'&ZM?U80Uh50/u?,%.%$bh7E]ZPQS0d#=<Z0=PN&iSd)fQ49(*R*NNq"YRSceikh5:DJ8j1eP*"@,8^[m/_mGO0kY&=Beq"g
%N8IW_cs3lq2*IK?[U/.A<'>+Hn966&fH'o:7dKC(Eo>ZsTu2*RVo!!hf9eptOd='$[-KCVCi&0_:$&lNh`K+h>WiV!13KbnG*7L&
%?l5oG":)]&6.>s8fZ'?"F/#U%Le\E6N0,#4YS)WQH1]RL'Zkd*iqfGo\.q%4YD6\!+DA2I8*Lb&\&bL8nqY5NRBZj7!!/IW`pHt+
%n,q9@^m3/:3:h,!LbU"5OYS]@pf%*en<L?F_n?bX)4d[USYDid)kY.tg<(r,f">Qt.VD5F-tA%g[TL!%d6,47"G4[p%:!od*;r[X
%8R+nm8PH-p2K_Lm[0=8m',a3i9^25<U\QVNbNV;)/8o<Y@t_F8X>Me?k8.RX+iMDhQtbgd0W:2"Fr5;D(CH2(KV=Tdh-ECI4,gE=
%NKMYi94QmF=;oC7C\29U7;p;n/@.on@?-PDW.PhU-p;\$\dJq!FY"!%+On"oFI2fa0p#P2UT1(+l]JS2[m%EaMooRCBa2[m?tqY^
%UPB,30A:.[6->,BQ\'T134#o:?`'Vq*\Ik3B1^a_oiZq0P5q^(MDhCHPp"Z]@$&-2:?89KaE^U;N!)%bX\&#_6XcsPh4qp<oCRPL
%LpJFH7p"bn@tnQTi$+#B.B7sU9bn<%9Uj=)\Y?*G?AE?TRS#iC!/s#%]@ZBtJ@$R=R]9rh!40_`'Q,hA.9lADP6AG,KLZOLcSCsI
%86NM_\._K-W0Auk]b.M>go20:?7f.c$$1duWaT"gl<.KO;H3hA#[CIjg[2VecR5sI*0^+jAc(42TV&+h6ER!kh>1>ZVI-]6&a=46
%K`?a9+UOB#r!IPUrhTqYRBf[gs7i[!aT>_,BFH"urahj(?+Y^%U$.PD+5fY(>9>nG5>)lIpMOXQ@p:cN20liPf>)t")1%Y8[!hr&
%e)ir:0&WC>Bq/Q1qUbb18IGgNY>/A]Lp&5Fa4-gJiKS:Y\!#(e,GHki[6YqjDf;!EagY<@#@IM]^XA,PpB.Lpi$+Z/Fu)+JC+_tp
%=HD_+#>io62F5tlce6Q<a"")'J.Tn@F%]ZhB4p5pBE+-oGfA,o9nX&2"N)t*_N?Jmp"ed(#o;6QF]$NMTrPea[7L;;ePq.p82tPT
%RXR^YBY4MV*/>ep5k,iLZ-\ofrPq*%FUiOdeC?e=9T<4/8fK#P-=;9V@Ye3RqJ+OE3cR(o@j=+oZUS"L/gZen#H+3=8Dq':-=MiU
%C7fiB#t/lgS-@mn^r_\)X4W?Ed</4aarBT5`Qo-$_1f]@raNo`72>IaP6?ADo-3!4AgTL%:DW1=/1O-VG(GW3`HTKZ0qpd['P*\'
%-uj$0ULeX)ZJkSb$XL/c<8%[eH!3'h\EUr/LoCDF:-iN]UNBOAM<5'!N*0cAJ?-ZUcg9b8YPbsY_tpH3Mk$aOV"$mT"cK&`a7D?i
%^OPdg"1ZN=HS0EV1)47"YOFuUDSlM@`8W4bQ5NiS#LEf[!'0;oYj<1<m_YM^+9<od#b9*=O<*)_af.1TrBeE1^H-0La>u4OU*+*X
%]KJh.N*d<H]Hhg!/r%D^h>;LVHb-E!&]^Bk5Ajg$]9S"EU^0!KS%f)W"g;68.6JS<0tq>N&s$E9D+$&>'=:iZ+bAjNQPmYPnBPB_
%T`s'kP9((IN=Ra/0Igf;8?M':Y!SXnYabjsMM^PBB?oEM:[h$HX38(I6d=%C`^<FQ:l.WqfioI.;kuK6Du6e4nXZfQ4=%>Z)O,\a
%5h^6')M35(O:VnO(fmCci//[++?$GI9%<qBq5!/s2G+r[,kd"r'nfn9)Js8E2"Fdi8$LfR(M,rd9GFkl^-\*hiA=H`JRlt>haK,Z
%=_85EA[+ld&D@JW&lRd"I!HtsVXQV$!Bc7!@[Q5BcO?`s+\Rnq9DIp/BrI8^0a#5QM@471.>M9,C'pT:lUYp?5M(;obsfuT2ir':
%a:mo28a+>UQUPB"YD7bEXV@H]aaB/-V6(B)l_G7q94.iQIHqDEBu;gDg%>tc&j*f6U0q[PA*T5-$uOTT'?]B>");-Ke*6:g#%Tl`
%B6O59^Uc`]#;fu$p+TIqg^E[0Zu=p(:-o%4^Z.hRQlD/'6:fm4-t?d[A)Qb;M;nkOI,(0hL@TKNX&&Zo*M/;?ld$gAIg*:086%fi
%&>KT@_`;G"c)/A=i>tCj)YmQF&8/BlI5aN<c8O!D?t^u2g\%er0#)s)'FquT1]oBjNU5T1_meBirRl_G+OQ*qZB_*%?NGj.pEt6s
%W7[]k&W3,,%66PBp@0RaMZt*8'Q>UJrR$JN[gi$6h&X\pW-='X6$?/uGW-</To8^7T-SAj+B$b@>&]<$beUTrK+t3u5ZSj;m.Ar'
%A8oA/ebo]+h6j@:>U(tF]R'km"3rP\UU-u`mTW>'ZW>Zm]jH)UJtfFP5or@ZL2>G")(0o9K,U,:E(Z]?:CMtT!NP9[mL:LUdK8'5
%Bf[G<,<SF$[e.lU.6l*(*$]p@Wuan`go8%h(";ZjCUt*#2^Ko<"]#Q!6UdX%#)=Ke!XuW,Jekd<rf/n"&q4(,L/s:A=u&FGTt%,M
%)<]+p(#*6=-F"(TZ%M(1')ZT(+_bjGi^5<jR<iH@fQuY+TAg`,!b<epM>b:dIAtY'=-ElGUHHG=2,U3]+?^16(0k4H@21Q*kg3uI
%es:")`"9o7NhJ!]B-&Y3=*2WfX<"`]\-(JS[*KQmNd'2(->`hO?qQH\7&43X]=,(O?t$9E?=Cq:f!%5<+GQsKN?K>CB^FlHNY**F
%*(P$NkZ>)o>W_d4V7=#dldaCn-W[p?r]2ndpGA,TiS.oTOC6.@GFY"AP7tp"I$kTck3k(unYq%nSn5_PHu10(bJg`-(oCO\9f*:*
%KX:jAerlSbA=!f(fje]Y72[1F5`%AQ8/:`/d6:dF\6TR@G[7TP?mt&q^Tj%o=AXE-HLnt&rfA(1*='YmF1'?8g42&+LW*=8,ojm,
%^6.%.H-C_(C]W&"-DLm/?^]*3;2.6"&Xo]_TZ-`E8MBWH)BqoDM."iM*[=f!2\ZQ#Z.-(W;QBR<YVNj^NhI/go2nC<f5b"#JL+_B
%V`^GQWDh#p^R@nN[%gDsT*$GN$>ru1RYfHIh%;grc;N:P4)DPWS>5$^U55++8>o+D#BQHl+2q.(/cEG60s\Jd$3FG[r6:t,_f"S-
%X?"H!A7og.o,mm^Or^GEDZd!X$M&.ei8DM=84n)RYR*bul=&]hlHZ;OhQmtLC"b963(K"jfs04#fL\j/rZ?HIc:/%t11oGU]akSR
%m!*g/+/O[_h1c$prt:SlUCT8u=uSFh_3^P9\I/ZXYZ1Cif7.Hs/uJ>2UZQaS9k@63R87:1h'Xm]\`5!hMt2/CU"=7B_IMdhO0V<]
%NhLpW/-p223\.bEnD,D%<fC3tG`roSEUtqfj.j]3^HDd=c3p3mXDd)l@0h"f4g*Q'G-B_=aq%b%-QJMYIfn9o)5dXpKC8Ef.us,7
%-t&:R$C6PeULU7E$&=ijN!Y6[h;MJ6Z9o#^^u@8#'EVSJWF`BL>M#;^,)^ud/%q[oQ@IsWeg.d48(cW-b7a\,L*F`q7je0H+,9Fb
%]K9ij0OL!jn:2jL!5E;U;iIaPQTkNY5b(:0LXVGt*a7BB!BtOIT5J[2'1]n-JIu=%0LBX^rO"OH;d"8Rb9WFOk'kC$,!6eT9`".G
%p%d6mk=>@3T.3O=&W@50(=9Wl)b5LB7.fYUB1#a8)CcKD>[YI*=ho`]L(n>.8Rc,&&;aA@)Q]=t_"ETpNffkIP-1#1OeZ[K=JeXe
%*#L'"WLV;O0DDUp6<=s[YjbSjf'0b#*X5%InZ>MYCnO9DVp](2ZLBI:D_^l.kce!8k6KDRTXM6Q6=e0ZL&pH3(-:!Hk($X;XA7at
%"%ij'0o;.D[GMl?'!['g!()PZ@F3d@[#Oii_qWc)KjY/4@"<t$;m:NS0tdj3VnQqK+Rs$6]b>D=<qeVRAl)/jjDU3[6EAk"Hm=O=
%eHE%`o!l(M<FUHWJZONVba`EVTN.jF=^\!*5i%9q,@Y(5M_/MOIZ4-";1`Xd8N\B#Ld?`X.=E5@Q/h=sc%e)B(Q2l:<=E"jMHc`.
%:rj4n5S7F#n;jh!e[%<M'p@"`7%f^@$Km._MuZIg?0LuRBa:g2E7%gh`DBRK.Oh'B\KA.=\u1n5-f,Ji?uSW=lV7UY)=CHkmraLp
%?H"pR_:?34%DguOjU>8RiLqhu+qI6d$9VQ"h535,+n&(M!O8c7CK1Z-jK9i#$N*?`J`+IE1?eXOhSNtUMJTNt7GZ(si4uKi0IXb9
%pf&=-r)l>U0j6u_&<M&F%0K2Z^$`ehs6F"NF`lMP23cGg,Rc:ZMGQWtJqn$fVJ<%2+rr@l4(=OsqQq];#h`6ra+/2YSK$cPj-kDA
%Pg?3@-h7kd-(b,:Bf)^rflH`0c1c[NE[srSACUNqc10A$YJu"&$_EOp)=)56mI9gdV64C^\DqtpW=@i,75&FNgZufe"<1sLQ3<YG
%@?6,Lik.-7p]RKCgI(-0jk'8N-=/H=ga2OiVT!2+RuKs]VgP-;`L_DLS43r5/q<Gb'#G0="D"i`NTsIH.o.4$U+hIh3]#&(Tij(M
%9K*)q_N<kn_#Bh8=uVC5KbD7?^2P%&LV)n9c_*M%a[:F`Zk2lhjO4EA?pg#g5,!7'XZ=#,SbDCG4MJp`p<,W;gdh%M,F63Sou.f8
%ol^lq7e%u[PL6$16QS!padZ4>LUR;X9(V!5jBu8nbnOs5jM6gq=+(]bd>8N2Klf=%;e5b)P1,%V9J7Hl&\%r_*s6+]COtauna'r)
%:lTAZf*l1I?C:32Gd-obd6i?s//E/+G]9&q?fCWRA/hSR6_3cPUV3'Oc0]m?NK;g3s4?RJp]1U['Jt[t,R^d1(YPna8jpX?@RW&_
%bV;ZG=\UURWjadK0g&iJH`+i*^is1O@i8-5CWI""^jr8!"&s/89uTr\WBHaGi\72#-Hiim>OSF;YK>gl7+H*sWPd#l)g"p*iAQ<<
%eK/@)gs0a7(rKb_/h&[/U-aq;pruLGKJWF/:E$AsQ&p;RV&OAP\=os!'r?/GWc8<W-L@eJIK&PjhFtsKjp_`RC3%3r&K?6D<JN7K
%>/9aA_gT4gF4:'YBm<%hF62gYDZH43DdGBXOIpHhKEgLphFY(>RDU2Ii!q`hi/N-X"99:G&_c#(cHUFf]\PNDJI/#YNBl>cJ/4MK
%$RNnNhk2HKkIu(Vm-laZAIFShi\anmJP]Pan&"Df5(:fL88HOd9BFpQTR7'/OX]rGS<I*QLYdX!&EN7&DP$RaS\FXbCC:;5V@-9K
%,QAC((e()m-1.K7[C(`O(6b=a%4ipGLb]]>'XNTUjk[!:ZIpD'UI0r[`QbC0!TDV4dEEB*'RIk\1XOQhs"nq\rRH8N^H6um6@r0p
%-21s.,(K/CbN9m*:]%fj3Ic\I$"<$iG@NFA%r`n;#XB!/6'QPd5T/;+#*9_c5BLIB%`'g5G)2':Ng/MGh7[?;;QaM(Bh*-3k^!<@
%lHJE0]%71%*K_k\$94Q)Um\JOjR_D[8$i7T:X[''X9K`VZsX93Y4LMBq>^%;0?3sdh>H($R;SW;Bi2jQ^d,0.U(QTi4PsNb`lQTh
%5gU:qbpb_D75dE^-c^P(_XNsQ1-!DM#PHDMPQ,]"eoH*Th`T3WU$pm!'-lUB@,klu$@.JI!C)0'Sj@77UZrF\m[0@g-Cpa(6cb07
%B+kqYeEXeg&HBW7pTu[2hnM+2HLjJ\Gk2nRfdIY7\;OVB!?SbNi8e53VOg(Tb-TIH+;fb"NPfohe,W?<@>jCXp+LMe_)<Bq#0&Fa
%"Z%XL-(?Zq;:ascQgZ`nkkKKlpgbRYmU1&m),gV*_4t:9P+e?aC#ptGLcRY<5`dnr+\YIm$kEIk&S*WSP<RU"8qlh7/C"ff,n)op
%.!Fh-dBWL-F.l?UX`17sJj@Hk<o86a=uHAfl:F1R*s>$PXc/I/+G#qa_7WT0N+EhV:Ff`g],L6?`@G+Z&JKM=fCdi_SW%B]^b^bA
%U+i&((u6atB+Bj@hN`X6%>q&'.]f.`j9fhVk==X%P`EiN:NK&+M,_9?rS(WR:Zhl=go6("9m'APJRrF)O(eUKe-#`hLPjS-4q0dV
%!:apgIND-q$Y&F(3gi_=,t._aepYAr:0Kn*-s)+"OeKGh0pn3JrBt%pr,grV6g&M7NIW0F&Q:2jo8>FH>_A[qneY%#S!05Z3L$=t
%`,61r&4r]!</UIq&Ks;b63O[3BqQ'&*F!m@BhJ`JZr-*B7YR!VGe8]@C@7C*Th8c=]:bC?Rc+2?/d2Z,kT;^*4>h<NEr/*6O7tH`
%>*_%k%Qdr9$N289RRI@0;;_']d)(h+d'd6ao)S^V(fk9[<e]Ge-c[FRAVcE*[s%?WE$I6I,qj=MN3&S*6&Y4T(Bcn'7KU5>ScWe!
%%(Sc,Xa@t]4#n8=3lCSDV</n4)oD+F%I39oN';sSq;!KFF#k2gX_]BlkjkG?*>=*KF.D#O"]B1g.0'Mg7FsGQ`8u[rCi9`m)&GYG
%jb/A8F4,gigM+r$Y\qiiTJ$eZ#XUE1?o/5u4H.$^eN=YlQ=EJCbUU26^aN:PR,r6eJPttcPI!#VUcV(E0`cfP^,<SB<a5)o5ZH9;
%8#B7'FOqFlTun\#q/5F;1mpD`O1T#([go2o2(^#bbQZa+[)F'IiY]`J]@W?8ZW2XujN,4G?7PU.aaGS[=1*3h82+>MLS.)G9sl>D
%%hfrOe''FQG.g=uJgqkNZEDu3Yh=V6SXICIm[I9Vm*me^2UJV<a>sK2JOLf?$Q>n2\SD_FlTmIm#ra)[j3"BkVQNBIG)'T@dMX'n
%S,B@CC4';l#>cb_Y$on-;`k(#$<]d1eApDol:!.VRSh9P'pJGKBVIO-/itoae"Sd5YFcja;;0LtOlVAZBti\''-Y2Y)-2nu,k%N9
%S#V%P"sakAbSVdj^:IQ(O.0qJ]1o^^iM&O0$q#i\7\=[ZJU(SU^h&<8q2<sPggeZ&;H=<fGqGKY2_L2h/caf5?"Ib.+Dqm.#1Iju
%8Q=gbj2(!9=?J)tSYo0eLMZ%_1F7>JR3*`EJ7_-qrT8sO$Y"F**e/dK:,?ksooAE7!K6Pg_M25Mb/r>^o+(4uFdXCjdMMQ_R.CTb
%458AJpt7/DcoHYTAuA$1d)VZl,5rT?EeDs]GKjgWSA/$HB^K=u`DM4Wj0,3Ub9ESn>(C7JLW)Ue;EM=8oUA+:c(adA"Df#W8-o\B
%?r)d5]`,F/V!kmRc`Z"Y_9L$i**sW7s8&,b'eWP<*&LZ]S:fGD`BaPj"faP$c()u%7;(8t(::RHDQDX]kK>dS=5E7IfN;1"T9h1E
%F&X;s(g6?VPE?Y!+*aZ)nWT%@f/LP[iJ>:g#IW9(m!S"D[;=[K,:Ye#<$6LApCDsFDJ&0R4+A>uXtmr2Nsm>)Z^#4=aQ#-.I4h5o
%`t!4D%a]+uE*#Z$hFGg]+,lKuib%8lZH"KR2`7ESY(@hk\7Ou3@`V0#R&q!B3!B[*oh\k5[b9=]4gkKW_06&Pbm'@-i1P8'\8aPS
%%;@n'hl-laglh`1@#HEFf!2O5Q-n^/k0<Rr(RASFm'g]&U.+@gLMiNQH=e+Z>+"*3!E]\MF@_NGnU(>C^)U#;BUd:8D`+t3R>d;a
%'-'e-QL;XDoS":ER$n\Z%!4:0%7(a<Z(^^!if@;*peSE<g#<a(CuC'DU/!*a64,fiRUSPJaoQ4?o]CF5e"T:\GZ57E.<4,K/o(kC
%gnb6C!'UQf]dL+0V(ZZtWS(co7V8O%/[53tT"@2UhgU:>M:SY@Q[FK_#8;Q.[&`3ZeATE%S"9gRWL/EP",41Aj8m&,Kun/]D4:qj
%87'I^9dq+01lUN(Fe1An[XXO0:,*'n#,%/K1KkPj#E51R]$YR'TjBTc*U\S+?cu?@"W+dsFgAOVFagQ7\sX2,+dISk2bVMqOA4kL
%U-<\dT"2j*L9pK(Y&Tsq`ES7okSKdf4Y?PT:mb4GVJ<;BK`L,u\f2]!H=--0bKd]VJ9O*J\t?/F5LMc:.$3U_9tg<s*0h\@^[&Kq
%mO$jN>f4W7.'J>b18GVuaE&p?3P^p](&:=n;3A\&#GLb!Ps@O.]""8u"5BXdWKH*]#lqDt8fr4t0V_!WOgsh6'>sKZN]g^^+_cZ7
%Bd1Ua;?b'o@3q(SI;rU=WV6*,i/eok/J3ap+AW%@WTD4f/X7luWACeN9m[=9<^^$QWYPH1)<Sg%(=bZAN"'nhP/fh=7aYq(eltKD
%=EngL&c$%D+Abgd/g\Zf_ZE\o0Q'qSEP#htl,ro-;EM+*;eZlPZW.(8YLF4@3as(7Nq/TbbumkS1F/]JPG\.FcH:$=Jn,En=fX(2
%9G$mlD`V--W&A2p&#8q8?)oC:ZlKbOSBH.C)'nkFVNc)R]t(5;8KM9&"g\jFh'<]DHN0j,34obtEUWPL`V]6`Dg]"YBA9Vj5X1=1
%Ye:>(FV2%t5ofi.KK]Gj^/m(N')bgX=)Gm7H!594WS$[1B*t^(Au!NUm$UtZota<[JLV[#<@1XBc1XR:SC<cL-p)^YId4LRWt)]f
%:]k0Z!/3D-*1C+u,3rU!G+JEFfJlUiJTipB[p?Zhdsh9N="d1BC0\`"2E,0@:R3T34%[bP-$"<BSD^u]S)No/g]!m`+'N!k:+T'*
%#U(\1Ui4/R(KTY^5E-P[g*CSKOYBHG%hah+cpQ+=m_jAJr/"i5Pk)hUaN[lD77uHS7lo8TIG@Qma'\Pi*b-uUntsksE::e1]8FqX
%#r']eSoq#p@dTLNWOQ7K)kK&rSockml+U9`F<ML3Af``&gQmDo>$JbS*9so,L.j^>BhlqFA9`nm5FfRGA8tG@9\h1*dWL0O$>DdL
%a/P(-CN?.3"d/X0bgt6#_su,'7G45O+_f^N+\Mn4XZ$G:Ch8flY[Q]Fl:=73+BcG2Og.XQ&u(1WaV,npPTlVgfXV%(8E]._omk+f
%1o7#CZR7mZH3gP`*[3NJg6dj1W"RT*[aPqj/(mWB>#J*L3R9,DRte0E?Wk8+hE$+DU[dpr4`o7QAE)g+0imc2*@3ul_`JK(.B3Ng
%+LZF8V_DnKFhO`U@g]2kN*1c&eK4)\`F#>8K!VXL=gAjQegZtRb9g#UmD:^AW"FPf0a-`.!GkOf73lO>_#Aoh!<OGkN\LH/i32Lj
%KOZL92&L74h`@+iKG3'8/e0_cZbUsZV;I@Wq"]Y*oNm?]*/REB+c'[-HN<2LE5I0rMG-Mj3UDe"8s](*^;km,5U#JXdd1,pF"\VN
%a4/6hl]"GrHXMp8.-"CFZ;!;7H3bc0OK$r]D_sE(,o[giOpJ8]IMqS)Mi6<NWDrMugopZE*!I\sN+6RZ&k8TgW4:A(m+tfbqf`b]
%q?JsX5H>&62Ls%ti3E/JYUK>=".WffrDcMU,^--ACfgKMn$ht4mpFBHf7Mm%-9"H?e]]'9M\?IEq#ooFOiB_tok)ll@"sB8To)[k
%-NdV]Cs>c\SAAp"]++;JNJ0R1A"d6M3u89QBJYOdI"HSZBlEJi0Zp#AY/"US*]Im-)c@bk=<R\K@)16ZO6(]BVjR[Y`l;&d*OL-P
%Y[P8/]p4@J@::$mT?b8(O)dknLTf"u50rR4[M\[n7"@0VCHN`<#0oP'!(^.faouX5%YGo"SgOfV.q?q"$NL`k/&P3C6@GE7aq8)4
%^p-(t$Xc#FKj#4=Us,Teie0gd:N,GSkJJP>&`)L%KYJ.t7%:/<CX`gsNsk1X((02-@JWY(d>f'$iQmol)pj*]:k_nl;Gp_13:ncL
%TK<Xb#b<Xqe/2T]dc2c+aAP6sKP-8rJ.aB@pm;9Q&lo>t[S[2iq:ZT*G6[U[QY(dt\cE:S/"Aq5[*d]\7UI!8W)rggX;-r^$i7n*
%YdE6!UFT<+61G=t2Pd]Rc3d<En-7h'0S:[)Rc.>^W;8n;$^tS^?s+Da[Qmu/P0DkmgR3(s$brW4WlTb@lD'7be0n/s&Zi?FhtH*$
%R%I-^HuCV!qT`9;rqN%l(tKoU&N.*o`OLQ',$Z!FTE8pn,^o=36+1tc,8"RA7S=OI;']kCA9+C3^bX,K?Ha*uY(\1C9d@`9a].p(
%P">mJ+NuHAG?lX>&k!@QE&'S+2Rot&S`aoua(Kd_%rSItg*a]?Cih'rDFL!McG!p*W)M.Bcb@`h2r2d=itqFg,OA.(odhLMY&Dp3
%4%eH#2o'05P1qWl+6LEnV;4-]C>*+EHPpF=1AotEnbDp4_c?#$`E7P#,6ppXF1"Q6?RGSg2tOf#`>D-!ouLmA@f.NAgY:-%EWdp/
%5_:a723j*@DF>]8;^at!%JkrBn<,SCZ3>k)G19h<k:_N;&:kIKS"b/)S1a<t"muTuf&\Pml@F[8g80QmhD,&t>de(5KIK!cOh`Sd
%$P(;1;FMk,+$B?d]obZ"G2=u(MB-mAGqNN=XGjZgdMRabC3$()9<c6!1Fn"jh#I]jaY7DdH,QC)D<r0#_g.-?6c5/DPOk$>cU7*(
%[dSADQ/#,F?aU(Qnm+$>GO,4;[=\DaLdNmaeu:lPgK`aA+:T^N\DXB*;[]oZNdT\&:t.ag<n#53#>".Da3*B(_8dp_4?@\*jhU&R
%4+W<%(FPo,h`P@ZJZ++^LX1*fZpiKcW`PkGSeNmm[,9p`:p6H-RHc%OS()@_n3\GXT@)Xe)O\AeYh^'&_M+-WAC+pu]!Ap\#iZJ?
%9RSec]/Z]iUtN^Q8rb*P/<)VSgq'96jpK[WU#<Pr-ct^SP`]/!0/Q8SogqAimL\B6TH+J4:uV>HA;7M=6$0Hb1n/?%83MK?-WR`=
%3g3^)*r>;&fSTh1Y`igNHN^hIP\:X1Fi,DN@t&8TWOjHE/don(W4g,<N$\>Q(DZ.:-O/Fu4n=g[A#MI*&bA@aE1\Q/kGW5A(!GGK
%FGOj@mQqqE&tq!\q0mel2@&K!gOGi=OHr=-EGc<p`4!'kW!1tNP!jUGekWZE14Slo^nKjscDBj[orTI!9]$h[#cj*#B.FEFnuJ`V
%;,mNC8jGiiK+MSslY.iQR4%F;Q9N''<8AO.2ojePe+"U&OrB9+rm@"L&Ei%@_b(RAmFUt+\=;jBi"LYiL2&gV.@-ZM@"s6mM4K1H
%$LVKnD8k@'[k4FbYe(/aZg/j0`0HQ<7NR:IMTE]b$J#C=^tNhc^jE:[[lc@7WSeIVVi8.\OItPQNI8mGK(dKG?9"<)/Td8CkTA&[
%a'qb1dq9_V-SQiUQc\"e*6gO/>j9[5ohbE4.o;Oa3n=5t*,%W*Mk]U9$NX#dPH[YMj7IGJAJ,M";%Cr".%QQ/0%dX)H:<brP"jDb
%O/,&_^-?oWa<E?r"J`+LF'W(A*!mW`llm'tF-):KLh2Yni^f1fZ(8X<%a<I4:+jQ9B/87T#u[EC`Glpk]:M.H<$lO'o4`]Ko6G!g
%X6s/C]a)u9aO*0#r[up(Q/pLnb#SgV>T<$YDl,$(eEb3'ZU.ht1pS)O/_L;*T+/#\09O\3D<d0Dqu:VJ0Vk<>cVNg_YR6iTPCQ,9
%F"<KRZQB-B@<U!<E^<,#':OO*<FrsQ>SS$h>2>&PEAkE0SBs=PbolrtJIPa%XNuJJ\uMEfT&8ZDO>m<!PNjS8B5^2cC&=X;+#DHk
%2)Z3HeR++^cZ3+9="jE&>P@RVNr\Ci1GM+l<c/5r9\0%YX=WLA@d=Qj[f+-J2dmY&A/@L#&9jgM:uI4#9[pt7=R4^$6fVtqr(u*_
%U'u8YJ('XP"W%]Z*cPA?O;rsHd.H95LlPuuSqfZa[o*TA:.I>YcTG4':Um6U,fefUmgnQp*O0>Xo5egVVo'VFN-sbroH!&6_uK$A
%qdDf_B/6`<`2mLkb&suqm=/eX\r$G@TA=mWGTfdb;Nd8Ze^fICd<"TTl'3?/]u<,U*f'm!$siU93Gl$#k@/ShHt$9Ar1$gD_BZ"0
%K=.lq*MD,BH@IZiPU;LA#Pq\_>#K]&'r_*S'G^;WD(g*-;Gt_0!9)7TIHs=d'M5[;1qp6*oK38He0Eu_S=](C*Br.9l#q2*Wp)p!
%J15;<=3>*75LeH4cc^TrP&IjW@6k3b?K[>d1LbYYd^2>UM>/+2-f]#161j<(.Z)p0#"2i*9+J'7T;\Qk5dW=CL!(0Ci-O.amI]4n
%A/e\5OlHKs8*upF*GBGA(,9"XbUZ_nZJ9hjd)N[VrQuL-3%"5mitjpr+-Q+ang"pt0ZO/!)F^u"@p5&NlJh"0HBSe>W0!<VoG7,e
%*a7WH2MA=_)':\N'2rf:4s'-C)=hu6YO6@ab%PN>+iWCI>#8s-QuQ5V9#KKDl]b&mFqUEqOTGlu;e#lET;nh\\@[k8r'Fk[!5%nX
%<MBhLA28_R$e@':(tjR"07)G#W$_0d9\*.g^:"'En!e%j*II=n_8C_/2=Qf:U$%7'7,brC`A*/l3dp9bg0%)0-L?[,V`@P([^.(P
%Ghl(`]XSTDpisnV0B+,P\MVTGhJP$R=<TkA/cdX_X=Y7Bbs/]NZ/T11@X!>r80?;p1klbg"=E1-omM<Dcc8p'Mu2kTHR@+"5Zj@p
%EBUr>3hF:/9fX*_#Gl=L5Qn_L"_"?6?4D'+oHm)U080SS!ph$EMnCm!AHFpO's>5F6^M[u.MdtnKS)fAiK(1=159lF\BKIdi.7<h
%Vth[ID:R7ng66Jbo?U_!pBN3f*6?/e4_O"iAgM(PQtbH>'[$;I=U3Cp&hYRNM>O<?OWBSe6,/G\6CLO)NPd3^qc#P";#TjYqp])4
%,`uDVb\@-\?b)CeV_f,-Zf-P$].>u1/lnS\T`BeA7`CF)a:SJ@LpECup?cYpB3ldL;]VJQkQ8HQ(CfX4"\'4449?q!6bqH<1_aBf
%p;h6'm"gX,T1DGBG7(6L=Y8qh4ToH.(<;*ZQr.r'68)mt&\blZ*9\QKCc<(=rn?l\oehGg4=]t7DAP%RP;$d.G<p(hJD&q:Hr2kc
%]Lg(CN-^UN7O:&\jC]Q(R'sXoVnaL?M=PtW,`k&99GfR7S_Lp?iXcF(o,+RKHkG(4F?1Oo(5#\3h_'_Wd>:+NZ1'bFMIbRN,Zs#P
%&`AVEU0[pd\8(?,ok,HL.ar1'P8ctI;<B2l]EkaiOGW=',_nSane.a@?3:"/3C`'>)9GFj"&B,WQg6a4c$'>:e/=iCG,ImOO]JEP
%N8pN;9AP'5,l4sp),4Wi2s[-VkuK`a,2SD$)E&NG;\[Yh?=CH+qF.K(ijV?k.Q9djF/p<ioK=4+(4i'<F"l`\32ZqRVkOnA3WIe_
%DI25h]+Y[1g>R#<?aaN"26"bM;pJJJNO`3&3a:,M1E/_\\3Qo.@nd]"_(QJ1<J#<1;dZTV+NqX\$R_D)iS$go"Hl_Dk$EY,Z:0ku
%`)r<L!SnU$>VJp<LRXCK2D$j*G.(\LN;O;S=J@-7E,<(i/oUUhZS!OGB?kR1%J6-'B3,a+`i)\n`/8ejUh&#0/O"c+_.KN.#57*r
%d_/RMYYS211jhP[@86rM8Ha>PQ(@@=I5.f7g(=$ha4#-^EC_PTB`XKgWECe'L"4M`2n1V(Bi#*=M]nMZ(hO=&RH0D8_Rb/77$'\N
%?ir;aQ1-0?'1mY-!Z(H7_d`k&P5R!:<61LT_Fq]GJQITC1p1+VWA,n,T=C:BCPRZ#FrhACg9a[U#,^[8jl_ORC6SLQQo]PI.V'k`
%G#<pP6qI7D&u4r*XFf%u/p'oD)kdtu`OCP^e0VD&RqqjtcrG'IUM4YIab?s4A44utf2m[Y>_p4VgZ+q+T;9i$3%+1$\1>>&VuQ^h
%@-J8?4FK%K;94M!Juos2bcBC-><6L"Gp!\%')pWS7QL%,D)VBEFF@<k%VHoXS<sJ73LCoRo>33'HE`p1^`;uFX_X;QG`c?7%+s'V
%J;M$5E%sicQ0[\MPZj&=^`UUd;AlR,j&7L)?XN=nahm(>k+>Ba1)%I3^gg<[>LX'bk_%[qjP8Z!QTdoI2]WSRcdc3AkV?DLAqYa+
%ctW-6S1Dg,7lk=WVpb?3lpGe0/bH\P<4*Rd"DK=[Nqsr3)9DiC]P3l5H.Mj`&;=cDYnRb@b<,]2$;nIYJ(d?+Le9es;P72>^eS`U
%Ipgf8SBS/-+/*@8mukItamuf(s0N-#:^u4hkL*PhoAu7'Y":2`2jKXq!(6l3e3its#bnpM]\1>+K$gc#eg6Mj3uIp>ONSBhDoma#
%OeMTP52p%.$T+=e*C/'YX6B2S;S%HM$@pdBJpgWnlg.14/qm(dFrqho8Uj52h!2%bmV<H@Rc@i`nF+!1SM(F];\TX!WLJ5-b7ZnA
%M;ut7es;_I!J=e:(O_Yn_PQ1c;UlN=<gQA5:uFZJpcM]b/JWiJC$h'Z9.Ql/gcpeth^`#q["86oIq1,I2EUNme]/4pL5hh,q5@m8
%U8/N51FKdFaSDL["@lfmaWQcg(:T+nqdZu"I#:oa8Ij;oF:49,<C"LFA%MR]j)(^a#3"q#UF#q[A**aZqjun=-#rnZP1)'@dQsW)
%Ccb`)QG+dE/9]j@<R+tVc7BE<E13de,RN=MLfB]s=^`.%Lo*IjM<R-S'ADhQOe$$r27_%e46jdJ1;d'B7*AC48'F?q,>1T5-UYt^
%(j.M$$8PYaXCKFMU;Tf`.J69"3<n:s%f^LoQl2k\_^<t@?MMO7:]KHeU4*Xp4L^-m6Y*(ZT\T?R.egdd*C_UBoM$qdAm=!%2m;e6
%-+n`jS!gf^U!M#.F+(MAf;3hmmVLZ7GW""Znk/q>*a+qiCPb;BCp?i9S12r<-;+.TC!k%hg$F-p["ii"H]u)sgoH,nSDb.a$FU#3
%CXm0u#)]L\rFUI!\#]4.+Mb<aA?\dpk9WUMG&D"-O.rb7TP9]#L&ni5Oehq,4*>0_*_NmYCY\IJA:-pFk<uqF,gWK"4@seYd\CHD
%4^I,F@CnB,6#eQ!h9%R(7.r2uN6XfSK<AE#-TFb\D#`+$OB,Eb;]AE[<4FUGjEHqA2d(i=;5:I9DF+fDdq(99aW;<OjqZCr7O?#a
%?$Lr=')JXI[E3*0BJ*"Kg]1A"O>glcPPCK<)Bmdoj6e2s!NC&Bbs<"EYunQYlY.9dA>^iuMmsO[je0o9ns7qg9I!kFr,H?R+)5Qj
%oh@Olr5a':]RSWMs7_@Sq3>ROE-8]mZdGV^[`3T0%B0ZK\_D.pL[@27bu'6nE?W5\@bD2XWYC&cP6@W'8M0=^TK$7T8a;NF*A11:
%QGLOdQMZqW"@;j,p4d5;E\H;^5j12/,*']P-8Lg_*2F!jRo'4D[A*rO))g`%`ECi/V$Bf1hVl`(Mt9aJZ->UVn'AlqnA)Xrrm3ar
%)<R1_H^I`,ifopA,lhc7',UBp;Nltj5i'dh&mgl8`_^)fE=,GZ*J+KhV&Cnk\8\e1l6S;0n8qS[2k>J2p>QpDQ;?TkBQ)g.J1d]Y
%._uffeLEt:U_8dZmi5u).r*nG$4Ip);%MYA`9Ps`I=/!:qFn'PB)86Y>F,sK>)VO#+i[a5fnf$;GUB6EIMc!^_M]Rk(aHYah+kiJ
%AI<0G&;QNIrRj4>36J<FGJtmZ-\cToHt1QA(AGfOmVM"FAtJgd)2I&<YTmftHC^b?_DVt$%aV$3g@r<?MHf,O0sQ(0b\pHp;I`qW
%1rg$>9DO5+,QDW$:AYKH/l,A]IWGN9X8lr7Bt@]*4fGlYR"/AX#W<5jLH5WMY!bF2'EYh]M1eD8Ehc5L0fSrE*C;c`XJR,.<jg#Y
%\^4%Y9!e<NQ2fKHkbf`cDW]u;;U]4jT`SO8gJ"a&T`Om):BtH'0YQ6%6:e(HB`@K4$JI[(A3ZfhSc-$&#Og70Akh_0s!*lhac<Ce
%"Bpj^I1kILKl>8*U0Cic3PA8hP#O;m>?\Q7oOao,U"iujb(Z%uI+iML&8mg.`X&`uo(SZ'p$Zc+R\@(Ch#6N5:Gk3<:.RKFL,1b=
%P"hqfj!6WBb%C90K11KE,>tBq_;k5;%d[:QTar=>'`&BdH),`&hR@PI5X\7E#2pY7UgP5ZI0-VLPYM`<-@8,i^!nI1B'1(W"2?WO
%PFh>Z=N3`9RS@e3Wmq=X6Xj3aAuZo]'DS'F&,$XE.W9ke;gpl!h[KU,o1oNc;c52@`"Sh,,b1O!@%9H_BF=gj/_]30Fg8MRKj\3W
%)4iH*e'#9dVqO/$__RIE$c#(p&LeML9I5*a2D<Ol.W"ma5?SuO"+JC?p--)/[ci@3qsV[]ce!nHS/,g"lUfA9.Z6?1%<h"c5;k*[
%7*%J,*i4+4.])>J4j#8*GY$a)>/K#[$JAfP4=dnsWe":^CgnHLj\qCK6X@(2XJ_j4M1sf==*nj7#9*pZ]:-oGMQa/?EGHNnWC_rU
%`N9hBMTTH17uC!"[1@[CAiB2iiDs]DF,<S%XJ26olGDa2We!59FWfb[E.EU$!:&cJ:"AN9+nnqo4),(53mq5U$29nbj*4>Yl)tWq
%pm)b/C=Yh)OpNlt?ec0$_ST2Mq`7jr,Qf*\)NlPNFE1Q.,FtTS_C+V\3c''Z9VlIXC(>5!In7$]5>dAEW?e"N@r->&n5_Ks@r))/
%l^`qbF+Vn>l=,P/:n>1'^OFFK6Cs$'EU'PkP;e$]3r",?g!]Q3CiIb_!e=Zj!U?0\BI;i&;Ee_%eFJ=^\.&J$`7.Zto%iau6B6*$
%dIt12s-pgar82.ii(Es@5GWQ4.>fbq")eI+B=.@Ws'G4>RC8)i2U8@\2c_0BQ:0$'CmA,@C_9tF$!,i6npng(FWA[aXlqj7<%l+H
%f5t%f0o2I*5f\`q#HV4P"]r.E8F!M[_k$93^uW22@`d]sB8rA8EuINad2%3'=DEDgT[m"><+B"`3/2CAL-hjhXr+LZ(`9bJgJN$L
%/d5K$Yg&&PXI.\#^in!1cMnYpA]Lr<AhT_&gm0uC-WE8!IJq';YfcB+Ah?kemTbYn@<7=;Ok$NS(/uPt!'1YW@E_@fZPbu`a5d&l
%ToqS'GrXp,+`ZFL#]Sc&esDs(*`Jkj(!Or=;E(F59Z7&jTN^+84G-Ln>t>>)#HOR/5eSp$P%LWuep;Kg!8h2.GX_0n@\tPnUO0M6
%H(Gcs#d]IJLXiDMoO>q/JKJ9I3oZ8d%KH<j+t\bLSr1%W9#DN._"f8:Clc3=_Ja,Y!_HSt)besG@gK%1U-E;g__`GdbtI4/J3SQk
%_JJSSTIZk>=TJmiFK#7D"=.?.UI!-#'$G1sRpi3^5.?\Xrh`]&8TffB!m.pi'5!EHj$4/B%R0>>\L0:gKBPcR#b2Rq,X=aLjc>m&
%q>o71\HR@==Q.PKM=Ggbbh3elQ5!-:@"gu!)'1!Y]m1Drm.HW^VWBR_gtC;9^0-K^\oF>N"*8`1cc3Y4#7$q=&2LYbOAP:(MsoX*
%0^&Y$g5PKd'D[49[;@F=B4u\RX$tmtmFB!t^pA;Y)hDQYm$3us'df!R<ce1VI3,kup4H--kH'IO;PaG2EnZj-)>E_:EV1][@/b^-
%WD4fMW;MItQu*OsjAeW8r4Ptlr"-qq//IS;gtc'DG":S-;!*D#j?8NNiYf:t8Tp+_F*X'>0nT_+RC^rb\Bf><6n;7F6p>a`"=c!c
%EX<M=EkQ9.d'`*G)!+e\.EjCb'c<#E:X`JKGS$!Ni'M%Lp7Vl9%Go-Z>gTiS_<7tM5dJl74CdQA6q(@ka(Q,_W7sn]'aG/^cs+?!
%=nC=F"aq1D,%6MNE<g5-CR8FJ(4?nt!IrD=GKo[-c#Q$dNSm/Um5q!QH&7UDq((d;g8VC5Td8k=mF:!5>ZmFYhJ/1K-;Hk)@6RIS
%Dt89*1,eBI<i5DqR8MX`#&c9#p^eB)4nYUFiJNtf$@fMPci[mpF[[+QE$!KtGrf%bU'a.fVgT:MA&pFaDT@k6*qF?X3:6]U77=fm
%?jIai+sR*=L/7C.30]cIdu[-dSq_>6F#[De%=A!4Ar]+J$@IRok[T;7T;^(:oW-(i!VZu3$GJL8E1N[PWPYtb)pCVkF"OTdaA_r/
%&"O)_T*,NFpU`8RO->=&,$==MgG=S70^oN.eLH:AU:e<8C%7(VS5n*9n17=_b17H?;-2j/&WS=$MEplZo=EgR$U=$^4qeUe9]-_(
%Q)'^>`$,0ri2APL`Q3Wsi*%n0"QY]Bn"gYk0OS5g.g<@:'c#u;E+*]))PR4X/\mJi\juWoI'R*(_^s,G\5D9*lZTVM2eI#E0-<.I
%f\1m+!%:D:.lEs9THMICl\HU+APf:dI.qf(CHtrW]=5g;NQOX`C\s(!.`ZNO:C+Si4S%BQoR%'(jB$*'hcdf.3MP(Ff(4?Z0a+1J
%%+RQ/(Q@>*SGDTGESmVVZsSQN"4!"!?s&!:bAe:8)6SZ7?"oEaMac#/1Dh4EoH/DmrH+1q3ZVQa.+oJK9sSgomTbCs-X9G"$bn^%
%,gbRZ(78hn]68-47*IIRe,G(0iF]L#97")>+1V['mXWIhH3^N@5V4hMJ[)?,pSC17U^$l;LR#F$T\d1!_r_Tbjp>*</%oAc'1<,Y
%*l$Z+\67f16b'Ok^ZYOl@#W8"M2roO4(3u/aSpF7C&+2T4>CB62k9JoghP+X!o&Yjk0j!3I"8p3dUK_</J?&'Y:VgKo5l7bno-Q6
%lc<UJ`TN-.@-AmM,mfo7]Qc,bd2X-YiESK0YX:)j0[a!35I_t3S>FC,dc0OS;\2ZKj.T4/7.Wfo.trn&nn+mC[hJO`EY,)XJi?P)
%Nl*TD5nuoI%iqP=:V>R8eM>9QaQ&rM,4m=-<7au,=Zr;N2$h5?-U&;bM?A."]h%51/H/Z3o!:faS*l,Q;?PU"'[ph=;74BB0XkPA
%7JWT(0C/6YL[]^o@`3r(%FZAN_A-'V-HaCOaIV/AN:^6fP'YXI>/sb^W(_^3X0^JT,]3EGq=lQ\/au@bSGW(a?9f_q;,4=)qbA?7
%S[0'QBrnC#NK'TC6'_mV)r<tEZp/R[i@[*T%hpb0i-@VI1P;CbpgO>d>Kce;9hbKB91=baMMcTnRMl%+i.QVtUFW$+^s(LEZ9Mk!
%6hh)ZmrpX"?na?.6Q.It1=It#FV11!+fX7)W+Rtrf6P5pWmKat2(7/[C0'B9_+7RE8Pr38hlOhQP)0-,hb:$R_4QKA<mbD0.9OBj
%n.WhQ8gI%Sl=d8\S^&r:Y'Z+-13B+_Fe"_,+Onb]KqYIR%R4]p:'DI<7pBe[pkrh>;XtDULudT/V>,de$AR4R=lkd2O06c7AGo1@
%3'&#/SWdlLAQiX>:q(Tk.]QTDkUR(lWS3Rc9e^*K#nl(FB1+)o1etB6)!/(:#(,l.5_Cd*/3R`>0@0h%=&c/S\"!I`b]@jHm=8m#
%`9TXPCuDJs<g:SuNa:GZZ[b6cA-2oUS?R6/cU.#R6)BT(p."YFP(k6'lBY]5FR(nmL%LY&PuofIKH9Pta/I9L+=k:GJ->8fN30'N
%7f@.ZUB/L7ThY[U+Nq*d_mF],=pn.H-3A2g'h:Z,I[l[Cra'g+G?pn<a&F%0pAWOj-3*^dH(gjse`"2->=@(m';uJ#O;..k&s!F_
%O+1RSXcT1XY;;"70`&?eX+Zs+^YOQCS\b>hSS[s4XfA\p^[?RN]>s>0:YX2Fi7(oTAs]A%5NZgQh(q#0dAd*?G2>F_fm2Tp;p%1N
%C8jULI=T(Cie"Ss(T.dJ;OooQ>?-pp5n]c7^'rImI!2(9/d@,OFc<"\0q,Qj3U/fcrn5'7RLU,9?.EI>6JJGJ`[NBH`/M`NfD,F]
%\W?'A;h9s,3@u@N5go+Z?J6#GA"K(,B;X\bBE+-oG\'9f<f%],4CrAi-dF+,V904iUT?t)856N09#X014;V8<2mk\TLZjTl36,^a
%=@Q,>JS))I92Yp\@[Z-cYa$m#$03*]%l"jK"BKW_H)"BAN.,m9dtocj0ck<10!=.iJJ]aDrNJ._<`[`\YI5s0mU[+,Ml&p^0FWO_
%NmfB#4o@1O`FVC9at)_EQ-[8l0u74bH2t&%Ilbid^nFp06,!rGCR>f<GLo"Z)oZr";EJ=*:&mngg""\"1akRg'aV/l?10o3,/W/X
%bfsb)CJK!m@)to5Lj9PQ`)#V./jU@]oEXbt*i!8=`K3[RaDHOi)u?/)A?8R`\5gVDV3`,LhL5+@d3(-qS*$R9*>>r>lab7(mpH!:
%TY16*HfH!m^u\(R:"&ldOfrR<0?>bK$m1T8!Fa5`G,%?/D^k0aV>`oTN=+BAh1a'/7ar/3]CI-?Wb%l9;ab>]R02VT>YTat0)59r
%`&BCo.2\i]iQ@m.iK=L@!/`A<<a%pQN"E&-JmVmY]@DR1ps?:MJ"Bp9=3t&\7jgI`]\j`U,t,'>*Zr7lTTGi/-)_6F@iNm26l\n4
%)8ZSJ?Zfti4#'k]j\K];i2KRIMoZ+01hk!&\C5>Ik*A4n,Jo(C,W*H&PSjE?A#C+\PaN-G&>pe.bl9F7Od7pZqlq[ASW32&T26Du
%2FSghJ5J09=&Yd@JMu:n&C&RO*:IB8XHF!c/0/1(0K9Oo!Tf?/_$*MkP1uY:A\N]sUcf3r6MWZNBXT<GnD26IC0($[k_Po^BEPE;
%@hf@CVC0&f:rG6]r"LmnZoGCS2_-$<C!"s\f+L=Fp.cG&8jOJZd37QjER>kOrf9/d\OQ&"oF_GTBc^EkD>VA!PS=[gA"o?C<J6=>
%JqD@_FPjoF8&/3"L9Z!ri-mh4GCc'=WpC:2!?kK0#"=BsA^Y=@'mEKC^&[BRQ&-:+i@AL_>>fFF'H^Al+]dgu%.>..]*]*aT"-;5
%h1GF70,lUq/GW:j+lQ]<BSrKIq;#UCTAs1\Lb'b>DT$7?D^bu$:iPAE.tBAA8rG1YBVHrMA&P7c9C-Dcmm#rsY<MQ16>?^.l\Uho
%k:o)Do2/Xp#&RRG;2<=kWXk)?%!R8-T.3l_$P$:s-n>0$g9`,A8f>oW1/),g$I$j[&8R*oY>>K^H26V7&uW)K@QW3B:^Ousftp_9
%O#_ZtOed=#X$@2ALG^f,/9LF+X:I(cL5h`igfD""NObuuI%e5K!L5W:;(u+t;#:$5$*lkPbg_ENikKt@j99VUjW/ll*&r;H@-^^i
%i[FD_(fG6&B^G6=+]YsfrZG<b.tIcWY$,4hoc5&oD:EL,_KE8(QLo@fqoSPk",Fo)Jq%q<XX^=CK(c@S*Vo4T`$9JIRWH$"m=k]T
%r;s7ufmHl"r?`5(;j4qFQc4/t([b4q@PYW-AF^)Q8?,NE6c@&Mc`\D17ceVY%SkXrNb7h.02$U*;71LoQNA>#WPuHWB,PIQG`oAr
%eWOU[nZS(EL*ICMoN)Kj"_0aI*d>Q](qX/8E4=F@2g4_bpA.JYnq3E*h`DS!\.bNX6HQO[bn>Ju:h19hI+Wu_S]<a*Q`H2\]k-&/
%$XH]'n>C]\0rP&N+T'3K)?/=-eQ9'8::s+%UFYoAW`9(L/-R5apWR7j6o^ZITGcR03/O!ki,D$1d>TSl03u.lcmrIQL.,Pc%V/_.
%2<5#Ug:S!;n/[q/r:^8q=JmV,al?pam_e%JYaq\B1gWnVcr2kX3(?tAmL#\V@n=)biH@g[V*O3>(BCs(g[srX&Kr4YDAF4dO;F?5
%nP[S0:?%+^Ngt'O6)h+uSe\DYop,5Wd)8C95l(^agSMC\M*D?V&A\])J?!R",O8ZQ'Ec$;=#5-Wg!9>U::QXOj5EdT`r=[TNjGdr
%TJ=ZO>Y&M=h0IO^eZt;\fIFNfG3-iDF^kXbOUOWa0-&[O[&Ka#d-0*W9h?*8!]">?'g>pTPS4@%G4[[/f'VFKDPOk*U!/emMV9f*
%o$MnTdYs<gG#t'OZ#ej'PQ':]23'e\jjRt#!5Xa"&b<A4>hLKhGUKIqn@R<kh2Mp[i_BZTZteAEM4huZAp/Y<1-N,=s8KG$ok%O7
%qB2a%gREk!&kqQ[C-8ej03O+OYe@OHP;-'A0>)5sn/C7TK/%M'8K`i0-')c&=<Du7eF!^E.SSfcbTg7P/;(Bq6\L3b8172.9_Qef
%hW$ThMFUP0j/\H6rG&:^gq<%KZTlcS`.:&4@\Q(EH<^P3Lr#462FLf:aSk-@('!n%&$<plg:kX+7?Gc`44,U;Rt:;Lp`!j!3NsAQ
%&4@+c&!]otTb[2jPGH&4b:Z7H'*Z-JrEWB<+*MV8Npa#OMp^.^Wr\=8[gn#5JUo&Ba&YI:j*l()m@p)`G.T1fE%.FL;T`nXR6KZ!
%^cSAO!BQ#P-[7E$*Cb1[0hJDbZ&?koiAE%>\a9$*B6PpI@hkO:E^b]b,)/SZ6^e53>5BH#":Y6(Lu8WZcq)nO&n6K,C./>0"UB;"
%o<P1-LEh?s/=/I(L"[fm&PidQ\bcVtmW=Cg+N>+u0aug1=2LRu%3Iq_);l(r8p3Qi.U+=4+tk4HF1>'>F4U,%hH5G8K_NCU"k,(/
%.tCqC@c-CoidC*To:q!1:K8HV&A-qVVHDdniPsP,Fq+Qo,Vh\k]rXm/X#5"QOE7r<\AGeI\cIWOX!pHBE:jjq8JmkW)5.l9crZ!)
%8C?gVoYG2?5uir,MT!8[bqods0JGdbngX;:"*X0f;/>=BXAP^B01^4r%99eQR*7:>?IT3h[-.8$P(Jl&Gu?QU5se*,R6XI(#]jbT
%m$-SMaX"JJ]-.lDe8CBVN*=K_d:YjrEB;)A&.8OZJI/1]4OR:!Uo8!hN<moE,]1#l*[tbFlmeeZpf52';0bG0-j`ar76;k**lq4G
%=<[LY]JJNMDbT(u.Z[d9P/mGm?"<LqK\V,&cZ#fC%_Nc::0_t(5H.H[cq-)+>CH\o'V.&`9%!3WTKn&]JKFin\Z)[$Z<NR8r'FOo
%,I)8f6.KQWlt;a/:q[l9W%P]#dXdHa]>BQ/LVd+1MWfrSbhP/Q7EYO&*R-8h!QD:]A<nKeW'h:N?.]+k\M%[%/5=IF$hPNUdi1S2
%h`NIWM[Y=AH!q)f&k/bK2CMb'g9T)?pN_Mf6tY3f*>OtSS[BtCh4&E12nm0c@.^LYrX`_q7?Y_<1Xcb",*o[UdP_%&DNK"EIUf$r
%nNN!8;jO*nn%rhk:g)s`d(527,a[Q"!Z.VWV5[:s):/QC9s<l?EZ!3a>RBRXp)koi</#SIFRkHuED!n%aF-KH:OELuEPVQF09$Sr
%5mMdZQ>#79Gk%pqYPrGM%km)=;/dZoH$GD^f0fb($>R)aC=c+)\tMc#7LNt#CohW>BYZ@H3t<(d5H0j?#4T&pa%[Mo+L#]K9C+Lq
%lTj`iP/Bq^mp_Vm0/"tB0(eK&Ge%cHQM8onpuf-*G58biG,,bTG)VhsUWR3j\a`Hka]EF7.`pBMP9]`s4JF53LV6j:YqU1c4S$!Q
%274hgnj>`[5s%nC(]8W5GOQcfRKt-Dftg5bj>1\A;<(%,rN@mDDcRRSFHPjo!kE7U`\1s<Uu'V5o;ua#/.uu2)Xtgm#<\G\O+n@^
%\!OG9)[h*%RE6s\W+kT!T!W-[($1.S:,*Xn]9Hh3!Wgn0?[`pdqrtZ1$@DNG$jg;4gMFRTUS;l<cLDnk"GKZFbXT*9dT[(c$G7W2
%eC@g<K=9$0etFG_&1P-R#5*d[\&pDE-3FiZ?#tdr*U.0hn-g$6<,TXp$4?a$WqJ@E#Y-WiabACg"9Q$-#i(LGVe2A%9$E/r7U(]m
%TaS!6%m^UtV)`>7?HcXo>Ya,\BCcnhMd<q2+:`H.)u&i'M$)</P6M^'I(LBlIsEVt5Ot?BX)6#YrI$:&aFFSa9]1U!D)h(9gHo0R
%VU&eT88\u6=c.Kf3m2n=pj!Ro3bK/']ZO4R3%=,q*!7pde\,)pUh<0BPm'Z!p0Rg'LQC'M+'`:1j3^EN*H1cchpatT:(^R"7r.+;
%GZA4$&p0+@=q5cW38#46K.m?j5ta:Z4dIfLU;bsueZ5O!2biMjq/JL5cr$DPU*uYU7fjBn`Ifha#H*B90+>bsG[69n$c>b>8@$#H
%'+5d7DJRMXe=96N1RcmPRH$[74MlMc/X=*jP\F!eB.s-s6N"jNs*BQ9O5pdY&$2Nr`CK8;MHr]5)tG.$0FXTjYXC-Oli-Q1`oq_"
%d5+s87i!l=$c-lsVPS$AAf]4/4hthYpGASI_dX'D1NBh]5$-3h!guuRfs>mNmqI%,-3u\Cd[@-,"6cHbj[iM2(.U3;djDe8^WZR;
%?OY.O,7(Vh!bXSq#]&'EcAVtdNiH-pH1VYb0gA?#fOD^(<_XirH6s,/iK=$8D1=(*!;AV["aNC49_D7W(@sLnlEe&WjW^3*O@q*2
%^XU6G?OY=TA!t3']ijcjm03@k6/WP*[ejG0^?>;rdY7;oklQr;Pqh8FFr^W[%&*dnBS4\-_S.M]APdS2s!'j_B:$Qs2r0aXa\-#0
%3a8K7nHBLJ\4a@3nf/6ToF^Ja,'U!Q;?s\-k`bM2KFT+S^Kb<^Xd2A@&Pj<9KUsHZQ>m`Q?7l9neTNQ``:r%j5J0Prj`9SRJ+gk)
%>n=eU%\KY1q[;4eX,4%`I:G[q#QeLhQL>kZqgm"f?pGu@G$r=U)X.VGg"-HRmlU/c69gg1e,=&f]_i/4K[o;T2H=/4CGNI6Ua$G4
%$@OpMfL@4`>7k+JNVO.'UQo9O22FDAI9h7gR.9!5pN=8nn]LS.F$5+kdVNp:O=)ZiEQNUp84\W#!HSD^g0g.;Zt6Sr)L3p1j,7Eo
%UA19"rUM#%fecWt?Dma""m?/9C<QpYmrJF&R->%r:#"R7kD5UQ)':t88n+tsg]Fud6Yd9BCsU"I)Y/=WI[XR:%N7BGhuh&L6Mm_E
%Ldqr"_%'lQ%k$.;!V;jg2#%ke`rL?)^AqD1?JTjL<86r=Xm5Tk1XV]'Nh["uZZWD#.5moFZ,#i!?u*Y&lr/RjKqiP9@4&Na\WZ_O
%*^Oe!%@r]);mRDgV+U>RLUMlVE:+N@EV=9r<(r*^&tQP3K(;l#ANpAS`78DR-N1aW)1$_5[Q!t\In58$8rQ>!goV4HUVN$KccB^T
%%>Ck'Xo[8[@02M$V=KLW@miFG+ShOMFT(^TKn^CKX9\a8*T!*(kET9SSq_=6dUL+hA94#IPhtpP]-es@X!N63P_jC;neCYkn9&7)
%iQX&F?N_aMDuOe:9N,B&2e:'6KMs6DY;A<kXW4RE@8CtP,h>gp_/h-"YlW#qri;$13&U1uIISHH7?hunCSb+%'Xto)?r@HLpV+gb
%TFQgh$g%eGm]pNSQ<u:2?7T/iQ7,bn8W$Y>KuN3s<P^fc)`%pP\q<M$X5]4`1B5$['-Rfo(HN]gGH_m>^]XD/BX9=J5eGSr:N#\&
%_:9Y5Tc,1MFTsN7EY9,&Ya#Foe&;o-;jOqhId/M'gNR?$k0Fk4m;bd*4SlDLd[s'10>HAGi0s^Ta*t%(LS5u>!62S#lkLeI-@"83
%e9h:IH1Y#_!`K]<RI55>=l)_XC;2rmAsa6n>I1pj,K+1YLiKcE#Z9:8RnuiDa_;!4""81H2:/u3Tq(E_T0$)h:8$lGB#9:hF(l5[
%Ue\_H.\(QM*@jc1$`46$CY$FF%RCO`#@3;:CFSH$VXU]K94XsmnFnK9qEdAG953QH<.EmRUe$:"eG[SG"NJ'#lhdrt+2jWqi,5pj
%kN%*_DPG*H^Q,EiU*FVn#,ZXGpf"E8C@U#Nh9&HnV'Q@gJ=<lC6'*Td7WZi00=I?&RCcIE[rh)*\1=H=g-U(sE(E8-BpP-XnF!fR
%U"e\A]`nppgHqXK'8qlrg]$T-]G9DZL`;&D3!N8tfbg]$mcnuLM4LXt)!<5888+Ub7UFp2Vb>Q8l_:.8]7QJGU@K,YiTNjB5%[t&
%plI"WOcMcua<f27N;L+:6iQR.A$)hq/7Vu45UfY48CfgE!1o,6]VIjjLVlhHDQ5imO>JaH"D/>8.MEKAl%Sb&1$t8#%hCm%0F$<9
%R7m[&^n>M.;`0MU-s9;1_?,CP+-!cH^7P4XlnW[)6aVU[#N!JCrkL=+*d[&8C\>QVWWoPS4=M+oYs"TGgZ:28ho5;%e=8]7h)F62
%CALu%C$jMidI^jQ1L49:a440X(!Im:iR-<-U"I9%kWBRD'()U78ELd;/A3Dj*B_*P_)Yg^.a$gPle(=+;<c#&:?:8@YDm(45uo<R
%]OSl"7L%D3cGMY9.2"p\"<iAt^,mtd$1KhlWpCrYiauDqqqUQ"]R9%&o?^</r)llYGTLapLFp+n1'+ep(uY/%#N([VYJ7He[+ISm
%<\24b6(R5Y(+TqH&N<]1mc"O?"Ka]&>fYYj%>NgPML7[?X70[J0Sr;)>qSM:/ZCHGEI1eTN.bY4@s6%B$*leA['RYRer(3h[PCVa
%m&7\.6,4qp?cW5WJ(rR1au>'WD^dhT$m<#;C8&U=6X,h+WJ&omU1WWW<NHp9G@96*Gb:"-:cr>5KjYuY*5nMpilUfas2,)2#_EmG
%-<"<Y9"C[#(@1(=HTo=`lelg"]]82`N6`aS3HLAP(UM6O+rC\04Pj%TmS2+Zf.5lr$!f-ilP6tk*Mo6?Z9qTdIY1T9b.JNTq>6^H
%o=GB)^GLRK`?a89mTU_o_C:#fF,3AA-8gW1F)rt@_InbS+p`7MCWs%9ab1o@W6YR8dPT6*,tU6$2bB$ugo3aQ52J@sr];2l?f+2`
%*ta8KV2+EKBb_qWZ/4"5.o_j@5$sV/CO&;R$iiX%`5=Q-XD?=^R.^R4_Ynjf9^:0p^[!_hE>RC>i1ibMFH%'13<]3jV414bWA&m2
%`gm=pT^#i,`=T9_T<"Mc8![bgWeG*pIDi7,5JQrNi+fNEVt9A*4?gJ_BGtNK/&Lp%/S>)0!rEFp1u2NG"&rZ(m^7:Qk>=!]FB[j:
%Ib[ZH_!-%_#u1.LFm^,?aBWC@nK5-iLC9h-:_K!AMY<,f'!!98HE&,(NE&Lc,T.FJi6.gFIRKD7SBuj</J_UcJnpM,iJ9ciP6DlH
%*^JB:=N!F/%+X`c!'dCp@<nb_`N[C-R`]8=IoHCk+r9)^AAVh8cBX>j(#L&frPFN"O#U@>5#kpHONCiFYW2pAS#*p>%$-9,$h3Rd
%lV*d;O//=p!?M]%Qr'7fl.aj&o:T^NZFa48^rn>=n5*OhITjLXn6+baH?8+oN"b[APmT<8jTrZ0`)jqR6niC:1kY+"<M,:`e^$M>
%]1_@8b5<01fdHCE0h?-NS.FlLiE4$E66Tf>?Pg)+@uhd5?cT4-ZOYC&Z>2>0Z&1&:L,d1EQ,RCBICi_d^YLZ`Z^)Ae,pA`(d=]h3
%ZM9k0Q?_&8qTA]A-iY=a$Vf)6+krC8'iI,Xo=h4QP8j6K0As.r5+ql`H`#HJ3!rKpr.L);*U5.K\;#Id(,WP#LqY>s_B)1%U]3dZ
%I0R4aduR"5F*WCm;k?UUr.k*4)K1j&R4TJr3Lu4ON^qL\6"NJq4Rcn.M(SAHA*>?3Sof/,B"F9Ji8M;0.ocg)Q/<hLWW7K(&:mfu
%7$.WWaHLs!Tq1QH0,SI;g.sP\<Oo4_;k'EY0MIe?"bC.#f*f7P<$J-%[T7[)niWl`Yht(>(EQGnj`gp*9B255&;qJ$EnS:$36iAP
%)E0)q(79uZ=]Oh$aENpC'Y&8m@LF?&af`W7;AQidF-K<2cNTAG+:EUNi[hM\;Wh=OffZ@?6K&9ClsPqd4VAE1h8FbkfC%ZQ^FR)B
%JN_Z&S=TrW"^F>KApL:TT3l+?%Muu;?Oc:-qg>^B-nL7aZiTr%31`)qJS$8dBoYcne[gJF7:MbU6"_^ZXPi:W@gePNT\a%^YECoM
%nF.n"q0:qh(>hJ_$[6/06lf`%@S$PTMA-3fX?C<l$<M;.c"Lgr^+E;NKurbOY1/?+l1R.tHQ&"^/+*h&*[E[9aEX@PlZ0IY]/Br)
%QfAYk\fc5#1f.UBZ8b1Kjs:KS(@Ljp4@e=k/]`f1IA^.3[ms,E:tI2J)#"Tfejf]T<quKt7]K](:HDm(=0"5ER%=Ni45A%%2:Q5/
%7Kq;j@ZSG[X)A?kqGB9AD^^`Hr/i[/RQIn:FXG]M-!f!^,KIli47t6jSl2%S>@fJPa''?:_m9Ak2OK_@VT!7AJrG2f=>2\e72K!h
%63/A7:@tL]&Wq;:VV$L@iB)Q<VYDJIrW%[EBpq;?k_0p=7b5B]C*7X!lD*&^6O#D=%kGcMcYo?.eM[!!W6CaH8:U6GU&t@l\f;?F
%_0nRi`*q?<'EE]IeSIVcqZokM!AH1&-6h$<H;0K26./++7h2OXj9T^*i>aR%!=Ki9)Ps$k%,_l_m]-K((bR&+'oa1fM%+)?A-af:
%o)%F%^S[=7TjV5m6fD2Y`_8NuNnIH4qq9'YRf,E4h"<l!VP!]o\=!>na*j0[o:?#N$#]@'_S?2*_BuHY%\oP35f]\3&gT&_Pec0F
%L-[gnEp2IM(B>Fs!S'[`C^Jp`NZabH)tL#2<'#*p$lJOel9FCe*$0Vh>,?"8V)CskXI=XK(om%[b'P5B\[rp$hg?0-$Fd\gZ*6kp
%'rFs/A7r/E)F>?c"5*]IkeQn8[2%MKID0?tG4sa@1(\&.C,+WJWDN.O,W_@<5uDD!^!t=B?FndA2]VpqT:lb5(2sC-JJRg@kL3'o
%5ZS`?VegYp1),YA3`8L$`p._-K("'+.OT*]=9)%Mk.Qct:nU:4W/cLeUXr(nR#18or$Eu>3KA0oJ<\kj'F#f$dm)L0IOQ\&<.C"8
%BT*@"a\)&;E9pHkA*/Xk+0:Ae`=JRTiq),-Eh^Gd<ZI@A\ljjh/En9*h:aflFB:dH&$jjt'oTXI!>,PQ%s\B[pMm"Z>E9VG+YH\\
%]KCH\'`t6Q6'EcjrRr=5jO21fMpVWGf'BXqWZ+R"9S\<S4t#Rh15CHg%Td!]L/<.T_Rpj5/3k*>Lm(^QqqPFMp[)u5r$JRfp]5A8
%VLnfWKnR$f`^"B%5q8Y*OrT5upVS&sF*C%E\d^&HcWHf#hp)P6SA!n65[kr0lm4h#SPdGPYe&&t8O8o_7%upnOf;hZ;%;XTpO<.3
%*5?0%jl&.0<P8+U\b#UFO[emFUBj=l3Y"OgT=g;$*,&>QT)c:Z=Oa*VLG+gUnL2%1/I'*Y,S$G()B@[@6'me,Q=OK[I5`W3%E.SM
%F,+pGjfC_MA0gE";Y?1,X<[/r*[oJl"f5rB(pYW/a[4lo("ojVTP5[^pI"Vfe+]/tr-aM;hruJcQ]2=W7F]XRL"^^T6fthCMF+\R
%jC+uEoR'0a@eG/[EA"]OjYjd.Y'6B3DYJ5F[6XC#I+Q2=C(WW@Q#lK$\'#riLo\%pi;/)q,f^@'a<g#qZ43(qh#o;r1#m\Cml#qQ
%:D]Y(nb=aKUNeRR&K6e"p]e2Q3sC[DMshF,qb>Ro)a?:T1p21C:Jf``>aFFDcKG""C5JjW+BQ2MAGX5Hj8@8QMR01[/;r%qiJ$nk
%W,T>,52s<f"UEL=g$=g;=LF#:OdttVW(A2\P2FU"^/m)A)4e1WT`/%06u;HqQc=F[A_F]+\Qqq^8)9Wki[$M$/E,,S>h>`MTU'o=
%'L2aX*hE@hgT[BJe[8E>kMBs[9:U[dD'MgG,nZju_3Tg&5drGsPa'4O8+)"/TPPUn<RF7i'AitR'QS3M@[f%W@S-&TZ:RK6kYQ$[
%eF"`NEnsrfgr7J9feXVqee)HklIu6PJ"+7iIpH5Z;_cRsTHMsT;is3V4XQobQjDSO'cbgNB>[H34D]"`TV;uE+nJa,XA>=*St)C7
%i@RT]U^1jX(pb9[MJT`:l%9=Y9BA["PL3a6S0gp#%4!Q=HX)la7k^bFWVmN->jkYo/C]GU'cr:n@[t0i:&I0ni9t_#PE@`1</Sg>
%O&DjSWjmS4fPEfHb`d>gQ%gr9>N>DdkJ5?cY?.nN)K=':BsP6hgpS(ubkSe+n[lj<42ORqf377bY`CA9]/aMTH[P$`*$Vkq5=BBM
%7!:(X]'K!6L'fa^_3@=Cj_gH(Q\5;=0`_317BMTBPE+>G']2']Ff1$l.7qmYC60X!-2:)s7N1a`hJnckM/eXF5#Ui;U\Q&T/EW?o
%0.CY5<Q+0*GgGj*=hrBmC+49P![,L4$pCn=DkY$[5Gq7=F,"P-[@[)B[A2J!R^'!(GrWe<Vbe%YdmN,XWE'#<EiYZ[!WD+$I=uHP
%1e\>.=@VDEW]p+*ltYt-^mhG5j+8#u9U7eiKBWS&Dt*plX/$?BGsR"3l-&]*9a:Pj2IdN*@'%@"P,!#?,jtmg=)'\:Y$-Q%4tH"%
%bdlL2H8^K0EA)s-l&'Sl12\bIQ]Hts^4G\%&Z9\/;D'YA-)VWG%mJf!i!H29$kSXm"-bdR64PhSpC)bukt#m&E0FcdYTg`V`E*L;
%0dMpj[D::m?%PMi$7.%Ap:K"r"r^[E:2K4ss%NM$^a'?UGV3M`<Fd$NR94n@p]`6RTt/3U4G:bKKS1Q2Ec]j,M&/PO&N,8\:dkQ6
%(Hl\-V*X73EoGJ="Y_3pFHYuHEUQ7fU.c__XP\VNa_V&kB9XTRnrO^69q&Rg<;!37BFo3hfSdmJck!o+UqkmC?=_ONHG*Q8/1s.5
%$!;Yi^+]jpZ\9hsX]/5&o(BqrPrc7+a4eFm5f9i9\%Bo6q"_FK^TPF8l\iLm>DLl`$m<pEc<VK8PYAmO#lXMF\(-%,Kd(^ff8JI2
%PNgur?%'-Tmg]YJ=eD<5cOQJ'AVN;ZChL^nNI&E=s%prQ)&#VRPjb3e&@e.+M^?9Xj9->#--]F:0KqW9Bu+l"6>nN\cn>p#k:>'O
%W_AIuW$14Ql16.7mTQs0HgdinFu<>C&L'MY!0j-PKX/-."XWgMhXt\?0.2C3,^:c\Dk#be3rl8Hk-FdgS.U9[i"4<0Wt%L]=?e1,
%^(aW[O3DK1[JngI91MFFc3"B24\@*D]QV^Y%9b]b$4@u5N/s1CBSpQT0:#^S?.4.j:<a9[!!h$3L(OkC3E'uJ)3Qd':tlo)dX$fE
%NHRS*%bV*JMd"NYM-FhjLBL:Kp9&ss$1W1mH4GY$Z_q>2(C:%A(:FtANnn;`31?MEH[CG5L#.jFGmo7i_R:1)N^VpJ1J'k2nVM_+
%72!:dC?H/,6f$sT1#/p4aD\77,A@#GI2C-;^iWRg6T.@01T2P\Bus7.:]]N+:8sc54m9LJ'Pl*O+kO!X^O^89I1suD9#_dE`93&;
%n.i)@&<'c5ji(H9n6%_YU>"@ODt?td:Im)Cq#R[A=KHG4CZs0G.fB3559PRRlC,qhR0Js+^79r.@N%^cE>iT=]/ikEJT^&`$nshQ
%HsfVts2#YEN4K6[a]SJ8oU,ZIaQH&COZ,923>*-=2=N52,dYD?Xrq=dK50+GKDVnRge!=1Ejtb\l5`,`#SI/:B1c#p!3`iF9.][)
%cf84rP'<52IP]dZR(c`*<mjHXi\H`To'%Q&m#!Bb18Y$lo(uk.ID`e6Bu(Z@%]Po9<n<L#P_lXjS<SQ;FBQ-0]Rei211V+2#=N>/
%V:VC(5!(Q<?[HB%`5)kKmn_jYbOU9g/P7n$aP6C@!8fDar?Jm-fUF'DA7X`V/^q>0'[NbP3ri\c<+)]',Kn%G",IFSN]P<r:O3*5
%jikWVQ@5;=fHaPF6F#)&0g,I&'(\#fg)Z$t)c6Yd+eU#FDA6\<Zd"6q?#kE!ps@;](>pL0&dZb5EeID4YN)8_bUSO%r[Jp:\2<!T
%SUpIt6d"_jMsQYk0ZH[4@U%1:egBeH@4WlppE=GrPsu>*,gul-X@^:8U@Saj^oS_C-lf"T!pD1eZ"Cm:D`Z^F#\Ia:0@^\q4!JHh
%86`irgY5@Wrr"P`r<-G.&p$N%9,g9!VHCa_*97Uc9C+@DTF6TMbFlNn-Hn#<D4mP6(e>cWKeO)Hnf0dI,k*moG!UXW(R9VcOm)r_
%h19kN"Srt3.^5X/DDV]=c5]s%eV_a[a.LopP;Z2aG&3#)^3e3#9nC%\9gM8ap6oD%YUqg?T^dmp/>WS3dZQ29;%u9K)Z15#?`a/1
%\5=l55Z*Js\o';X4487=eMIRLgf;UCF=`,Sp.^;4?0Q7%ShO8oJ,Y)XG7:IW75X^]P[Nr5(Y#-8!]NqX`UY:+4XLO4MU8aHE=J;d
%_d&H#<]5sU`sEu,-G*.Zj2taQ^1PbcGWL8`KUUWl7L*Cr-%/d4B*lDG!a@EN%Ae_E$R_b]K@Bp4b;=DD.:sEh#<Qota2$B0G"%)D
%@XqKXb_>n6JA,C;oZlI3Dm/2O4h-`MB0^_`D8Us@JT<$B;'D.bHV-5ko6GQRgqqD#M^.Nd(qW!"d#AmY+VGRlRo#(4eE*E"pDk^G
%J9eJe-%KD52dI8fF\.\2%Aa]E^<;/pnq=V7#G7WT^,s<J_/db"V4tu>%7b>K@f1UmDc\1_+k;sU!ZZXs'P1O.R2r&S\/(N&e,c5Q
%4I#T'NS0^hZ0"&umu08ERdA^oWMUC`%u)Kg&km&&?^pA#JfiHRbpFgUde\n0Es;B)%bXe;=*RVI5#&P6++ANbQ)9QmM^1?BFA"pa
%;8h=9\g:$f>q\?MaIu,QNtfasd5Zb<2fheTBi>(oL=B20a+k]J#KoVca#N%E-?n&keYmH&[-db+K%d.F%0MDV&!mX5?=a5(6/0DN
%8-ZKN5S7)OCdCi7k%jPP?3Y/*6+Q<f;b-#a-+H6K\#6`[;0`d_PldjN2e#jl(a#h3$rOo?[$[:S<05<E5j8Y5C-7Z9*8^cN-TtWp
%/m.^Ld'#o*M[dXf-\7'i0mmDROUkS!WKBVBZWa?X9.C#0-a89g,DAf2S6GPLmoKGT@Q1rLaES]Ps7Xri9,mL-H4],_JrQ9#E`2tK
%W"aeTeE84o/)9^:6Da</k#T[,koaR1D+B1Z4\X=8/.28;R+i?D/u&3hrNbu45[,D$:Vrf:oBQaA(ReuNBp4La:\EIOU)j6K&tnTI
%p#3X\&.Vsf,&q]W5osiqa@:0S-f,YXq?e)'p^+ulo'<\,hVt=gPi;rtG)TpuH^)Au)N[?l/KA?Y$-\g<?(OGd/mSn2#C0KA`F&t<
%J<;USnQ=e?$Ig;jN.>s)Z\4O.\lAGVHqMSJTs>[X',"q*E0irIltZUgppkXFA->&b\,eqOq,P2Ih93MfnAk6<^L$gsBa<S?kY.'"
%Z0",OPQS%;Ckml6H*[(2-=p/:<B&U.p4(#^#^'=VZtCKR0F</\iIMRu*si4(igSj@#S@M1+q!>,FkHg,8:D*SCoa.Z.3JZlS@bT^
%@[3gZ-e(2fk[][ajC[*IR7Nf=)QgP1%S=Dh_Ag6+W<UnJU5r%)I;i!_LR=]rZ3,KrYWj2a9UJ+I,ju[:`!XIcDtI]f95o5XQ>/o@
%<k4NA0lmn"1\=$1,O:-^&UrX4f8&=S[)5s9`o-'rIJ0V;];IW"f%+!RF7mnagP9jo,$b1NV-2gub:/5kF=ot*-hl`k<o!8Q:6>6)
%S]S!d]UilF-l#c%02sYnBR!P1)eudmB!L)q:ZfKP>>_'W9>?mJ6m;7:O5mkHI:Y4#isMArcqSkbc%t70HZ]24*eZ7W$'pVq1AL[.
%]pa<p<Ip-U&]r=;57K=\HuNaUJ6<#kBEN+=]HF2+6.,]MHf`<^=pS(@F/+.V<nbD2)93XVba^-hXlTGVi'HTC#*^FEaU0b*knP#B
%[g3$Po;&YX0HZp-<<j3UVNne>HgJ`s+tC/uHZ4u^V!nUVN*EO"Wh7S9+3Qm9DY+`tr#m$M?EFcQR6goKTD#?a!N(K%eso?i4Q(jW
%]lHH\fR.T!70@j:edC1!mSs8Q2gT*QW+PmY2,tU'l^5s5*VJJs=tEHnhsj"Cmq$`7,*AX7S^FVl?M_uck#>l)Z0\ka8K[p]8LG<m
%qc`3'N'\S(h/mS"B\pjBC$(cufH\N>`*,RLoX^B(5h8rPUfVG53+^H]IaHZ'J,sD9Ko=4&hOLtWn^Sp9%QJ11ISQEPbAl!QWl>.g
%WA5<@%'s-A=:&91-SkEdNQP$LC7@LW-FMqW6IaQ)X1l$^Toi<'Fl9/T:>#[05'Z%jc'u9dFa+96ICdqfLbCUP5+NF!Z=8S\fIeqp
%`]?m`Z(ethIFND\k'[GB72#eadY!1<Y,N\^KjS\;P$uat#21H\"e"4PVo>X1$j;Z-.$ea?Q7h8ppM]r`]LD>=/annf&>WIn_C+rK
%mE-S#dG:`R+LG)gY[2?!L!N5L,arQM]44pm'q#^QJF!lcnIZ?G%f7/=M'LRiXQ;K0_KU>>H6[kG6U^lY4I+/Bq@oUJifW?WYj"%d
%H02YLR]_DN_/,T]E3,?t-`qK6IN^#CKq>]B':'Mn)\7\e\%#_)eLCiK.hRoj[Hi:/s"`13Mr#X$B0]5ps).-C=IQE:p48c214=H-
%D7,XdMABOr8a8-S`?NA]SZr<bLfk[p8J)s(ajF/5Y'nB3MC"L?=QMi7aqd<;8kIZ.,W>MfRQ6&T?Y-ZL`Br`4>[qt2qjm0e_QD9D
%".V?#4,$kI-[FrarDhNEV@cSWkQPLX%%uZo"qdnL!4`#r(D>RBRt3$<a@8j%/)B*ja%;HT48u7]DLcmLe%LtadS6f#4I@cFUG.d+
%i8%-d6M'A>'Y8eG=%7\;G?Ni@Or[(W)RDR&WRE[(^JU$.W'h#8-5R$_cH]k<MK(uN(/aAtOV5((,AN0:UbZN-JYZq/C:EVIIY@i:
%ed<!)LgcCI3(Qih#g\r&GVs3aTeZ5H3+L'+Luc<qg"27H<8aAA-5lP:06:r8eWME_B]25`/Rf37D7XLc83-"IKd&V#(P6<#/I]^I
%Zm#K7L$]]DdHfK&QXsS9V5OqWn9:4t$^K7*\ZIq@^^$bNId;TZ>+.SJaR38V/NQ\Y'R%\.Ie2X.Ooor4M_rpmDb?61Yh(boF@n8T
%rT:8OTM6malV_LtkH%.,SfPM?ZIRY'LikbM#a0>H,H!8lTeu)R&.HBiP!Vmo\g%DOnL<U+&%XKrOGbOJ-Se8.E1*AJf!8?Q2H$7U
%pZn*iRQ7!@oH7!294F&`K6f1O`r#I.YAC=IOFN&3*T^am+@7C&c@]U!!H9UApaj7?:T-fT(i[+%%%K0@9"[t;(bTc/Ou/dVg^E4^
%&7"F?$9[2nb)joTKM21r[SCD3$'bs)`iBF5M'kF+5HQ6^dKemT.BsJc3]UE_<80_--mb_#8*IMYjL@lY"&EWU,NB<QoqENGZJ>^^
%(jP`d@`?bcRZSZ?4(V2&H<B^ZISqUm8JB=J-VPZX#AkH95M0-PY+ednDpsK7_*87dV&%B8ZhR%cTh0978K;M+_8eL8*P<8)+&D*)
%N[LkY$`8VQj$k0*AYCY*O)<:Ts7F\=U`XrTa3N0V4m&_aA@p(S=O>7158_/u+*>S$@ucN\.%B$EW7PjZnhKFq<u5`"$h"O$(JGG&
%9<b?eE^=A#_kLke;M@b1a#iNJAsK-2MR%%4+'`TS!Y)Gb1_A?;9^%/s'^78qDMZ-eD1P<<lYK(]/69eD8S_)RBDHYK!(G!r4?58L
%[^.N$23M88;q9)ufM0SPT>0E%Gu[6'l.:qVQAF:nYk?d-RdN[L4SV6X]\t21=mo'%'c%eOQVW?/p_D0g@u630a0I6O7b4IK.];Wo
%co]8a!`"qo=q$R?mL6On!0dK6!WS=!"dbL@r:c3[GOdH(I_`.M`=bABP(*4n0DN]b[>>RmCBRaHqX5O+lg`[.o&'=/rp:g-l,TFq
%oB0IEI6&GImXP0,LS+V000fE-J,/o,^](8ur9:-Zp[\n[rUGsD.mO'gn\9PJ__47Sl2UbK00fL+VuQ_!s+)QmdeSUSrU+V(m_A_n
%?i>HXgW;n~>
%AI9_PrivateDataEnd
