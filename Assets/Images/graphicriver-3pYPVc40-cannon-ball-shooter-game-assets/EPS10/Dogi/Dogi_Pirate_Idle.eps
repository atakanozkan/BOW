%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Dogi_Pirate_Idle.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: WINDOWS
%%CreationDate: 7/26/2014
%%BoundingBox: 0 0 743 157
%%HiResBoundingBox: 0 0 742.1026 156.9917
%%CropBox: 0 0 742.1026 156.9917
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.1 x399 R agm 4.5189 ct 5.1875%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 28 8%%BeginData: 6270 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD08FF84524B444B4B7DAFFD1AFF7D4B4B686844527DFD1BFF7D52
%446F44527DFD1AFFA84B4B6868444B7DFD10FF844B448CFCBCBCB5684B84
%FD17FFA84B448CFCC3C3BC8C6852FD18FF7D20688CB5BCBC8C6827FD17FF
%A852448CFCC3C3BC8C6827FD0EFF844468B5FCFD04CAB58C4BA8FD15FFA8
%4B68B5FCFD04CABCFC687DFD16FF7D448DFCBCCACACAC3FC6852FD16FF4B
%68B5FCC3FFCACABCFC6852FD0CFFAE27688D8CB5FD04CAFCB56852FD15FF
%52688D8CFCC3CACAFFB5FCFC4BA8FD14FF84208D8CFCBCFFC3FFBCFCFC44
%7DFD14FF52448D8CFCC3FFCAFFB5FCFC44A8FD0BFF7D44B58CB5FCBCCAC3
%B5B5FCB045FD14FFAF44B58CB5FCB5C3C3B5B5FCB544A8FD14FF4B8D8D93
%FCB5BCCABCB5FCB5687DFD14FF44B08CB5FCB5BCCAB5B5FCB5687DFD0BFF
%4B8C8C938CB5FCB5FC8C68444420A8FD13FF52688C8D8CB5FCFC8C8C6844
%204A52FD13FFA8448C938C8DFCB4FCFC8C6E204A27FD13FF7D688C8D8CB5
%FCFCFC8C68444A6E4BFD08FFA884844B8C938C938C8D686F749F26524A27
%FD10FF7D7D7D5268938C938C93686F74C14A284A4A84FD0FFFA8A8848344
%B58C938C93686F6E9F742E512653FD0FFF7D7D7D5268B58C938C93446F74
%C19875744A7DFD06FF20684468208D8C8D8C69F82798C1C1752099207DFD
%0EFF4B44686844698C8D8C68202775C1989F26994A27FD0EFF7D44686844
%688C8D8C8D44F84BC1BAC1264B7420A8FD0DFF5244686844688C8D8C8D20
%7598C1989F4ABB6E27A8FD05FF4B8CB5FC6F8C938C6F74750575C14B7CCE
%C17526FD04FFA17DFD08FF7D44B5B09368B58D6F6E9F274BC17552CEC8C1
%20A8FFFFFFA87DFD08FFA844B5FCB568938C9344994B2E999F27C9C8C120
%7DFD04FF76A8FD07FFA844B5B5B544B58D8D4AC1744B9F7652CEC8C1207D
%FD04FF7CA84B686920698C444AC1984A75CE7C7CC8C86E4484FFA8754476
%FD09FF52446944688C6920BBBA7475CEA07CA6CE744452FFFF7D446FA8FD
%08FF7D448D44448C8D2099C1754AC8A67C7CCE9F4A27FFFFA7446E7DFD08
%FF7D446944448C692099BA7599CEA67C7CCE994452FFFFA14A4AFF842068
%93446F4A6F98C1C1CEA67C75CEA64A20FFFF7D446E76FD0AFF2768B56845
%446F74C1C0C8CEA075CEC86F207DFFA8446F6FFD0AFF5920B5686F444B6E
%C1C1C8CEA651A6CEA02052FFFF4B6E44A8FD09FF5244B56845446F6EC1BA
%C8CEA651C9CE75207DFFFF446F4AFF5268B5FC44206F449998C1C8CEC8CE
%C84AF87DFFA8446E44A8FD09FF7D44B5FC8D206E446F98BBC1CEC8CEC851
%F852FFFF4B6E4476FD0AFF20FCFCB0206F4A4A92BBC1CEC8CECEA020267D
%FF7C4A444BA8FD08FFA844B5FC8D206E446F98BB9FCEC8CEC87C204BA8FF
%76444475FF44B5B0B5446F6E6F6EC1BBC8C8CE7B2728A8FFFF766E447DFD
%0AFF52FCFCB5684B6E6F6EBB98C1A6A67B4B52FFFFFFA84B6875AFFD09FF
%7D68B4B58C4B6E6F4ABBBBC1C8CEA67BF87DAFFFFF756E4BA8FD09FF768C
%FCB5684B6E6F6EBB98C1A0A67C4B27A9FFFFAF6F684BA8A8688C8C442044
%6F4A264A6F4444449352767DFF7D4B4476FD0BFF4B68684427446F6E2620
%4A2044448C445276FFAF76444A7DFD0AFF7D68FC6820206F6E4A446F4A4A
%44686F524BA8FF7D446E7DFD0AFF76688C4427206F6E4A204A2044448C44
%5252FFFF7D444A7DFFFF4B4B52A852446E4B6F6F20BCBCC3FFAF93444B6F
%4A4BA8FD0BFF7D4B52A87D206E4B4BB52093B5BDCAFF6F682775446F7DFD
%0BFF7D214B7D844B686F2793446F94C3C3FF7D8C20754A6E52FD0BFF7D4B
%52A88426684A27B5446FB5BCC3FF9A682775446E76FD04FFAEFFFFA82620
%4BFFA176FD04FFCA6F6E98444A4AFD0DFFAFFFFFFF522721CACA52A8FD04
%FF7044984A4A44A8FD0CFFA8FFFFFF5226F8A1FF777DFD04FFC344984A4A
%4476FD0CFFAFFFFFFF522720CACA52A8FD04FF9A44984A4A44A1FD07FFA8
%FF278DB56F58FFFFCABCB5689F986F4A76FD10FFA9FF5268B5BC52FFFFFF
%C3BC8C99C175446FA8FD0FFFA8FF7E458DB54BFFFFFFC3BCFC6F99994A4A
%7DFD0FFFA9FF7D44B5BC4BFFFFFFC3BC8C75C175446FA1FD06FF76A08476
%6E93206FFCB5FCFC8C4B4A44206E84FD0FFF7D51A87D446E444BB5B5FCFC
%FC44206E204A52FD0FFFA8A07CA84A6F6E448DB5FCFCFC6F204A204A4BFD
%0FFF7D51A8A8446E444BB5B5FCB5FC68206E204A51FD06FFA8A0C87D75C1
%C17568B58C93442720527D767DFD0FFFA8A0C87D5299C17544B5FCB5684B
%2052525276FD10FF7DA6C85299C0C1448D8C93684B20277D7C52FD10FFA1
%C8A15299C19F44B0FCB5684B2727525276FD07FFA8A0CE754A98C14AF820
%27F8272727A8FD12FFA975CE9F4A6EC1742020272027202752FFAFFD11FF
%7CC8C8754AC19826202720FD0427FD13FF7CCEA04A6EC19820204B202720
%2752FD0AFFA8A0C1BB6E99C1750027274B272720FD13FFA9A0C8C16E75C1
%9FF827274B274BF87DFD13FF7D9FC1986F99C12627274B274BF87DFD13FF
%A1C8C19275BBC12027274B274BF87DFD0BFF4B9898994A6E2027F827F827
%F827A8FD13FF7C9898BB4A754AF8F8272027F8F852FD13FF846E92BB6E6E
%4A27F827F827F82027FD13FF7D7498BB4A744A20F8272027F8F852FD0BFF
%AF4B756E752727F8277D7DF827207DFD14FF51756E7527272120277D2027
%2076FD14FF7D756E994B27F82700A84B272027A8FD13FF52756E754B2721
%2727A820272051FD0DFFA8A8A87D2026F8A87D6E98BB6EA8FD14FFFD04A8
%20272076A86F98BB6E7DFD14FFA8A8A8FF4B26F827AF7692999876AFFD13
%FFA8A8A8AF20272051A96F98996E7DFD0FFF7D9898C1767D6EC1C1BA52FD
%17FFA89999C175A86FC1BBC175FD18FF7598C198A176BBBBC16EA8FD16FF
%AF7598C1748475BBBBC16EAFFD0EFF7D6EBBBA9852764A6F4A7DFD17FFA8
%4ABBBABA767D4A6E4A76FD18FF4BBABAC1757D4A6F4A4BA8FD16FFAF4ABB
%BAC0757D4A6E4A76AFFD0EFFA8766E754AA8FFA9A8FD1AFF7C4A754A7DFF
%FFA8AFFD19FFA84B756E76FFFFA8A9FD19FF7D4A754A7CFFFFA8A9FD11FF
%AFA9A8A9FD1FFFAF84A8FD20FFA8A8A8FD1EFFAF84A8AFFD0AFFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Dogi_Pirate_Idle</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:CreateDate>2014-07-26T12:36:21+07:00</xmp:CreateDate>
         <xmp:ModifyDate>2014-07-26T12:36:21+07:00</xmp:ModifyDate>
         <xmp:MetadataDate>2014-07-26T12:36:21+07:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>56</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAOAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q8S/Oz879Q0HUn8qe&#xA;Uyi6xGivqmqyKJFtPUHKOKKNvheZlIY8hxVSNiTtRmzCA83c9kdjz1kv5uMcz+gfjZgPkjyLJ57e&#xA;91LzTrGpajFpoiablJNeTs9yzKoihqURVoSeKUA7U6YGLLkykkyIiO56vtDQaTQRxxjijPJO98kv&#xA;TsN76dduSv5q8r6v+W19YXflXWdQ0t7v1ZFsp5OSgwyFKT24d7eSOSvJdg1PA45c+TCRZsHoebXo&#xA;eytL2ljmBCOPJCvVC+E2L5S7uRHyL3T8rPzBi87+WBqEkS2uq2khtNXs1JKx3CKGrGW3MciMrofA&#xA;06g5s8eQTiJDkXiNZpJ6fLLFP6olmGTcZ2KuxV2Kpf5h17S/L+iXutarMINPsImnuJOp4r2Ud2Y7&#xA;KO52xUC3yd5s/NLzn55v3+tXk+k6G1fQ0SzlaIen2+syx8Xmc7VFeA7Dvmr1OsIHpfQuxvZXGQJa&#xA;j1S/m9B7/Nnukf8AOOXkq60u0WW1uLi+uoYbiW/gjtxaRrcBmqHkUySmPiOYV6moOShhkQPVKz57&#xA;ODqO08EJSAw4BjiZR4ZRvIeGu76b6E9xYz5F/MnWfIGtx2t3qE1/5O9b6vfW1w7zfVEZuAubZ35S&#xA;IiH4njrx41IAOR0msJlwS+bf2/7NY4YfzGAcIAuUefxHu6vqoEEVG4PQ5tHhHYq7FXYq7FXmX5z/&#xA;AJvjyRbW+maVHHdeZtRQyW8UtTFbwA8TcTBSGI5fCi1HI132OV5cggLLn9ndnz1WTgj8T3B4r5W0&#xA;jzD+ZeufVvMuv316pSS6nVpJPTVIuqwWcJjh5E0oAua0ajJkycIPCHt9R2Po9BpvElDxZkgDiNCz&#xA;39AE883flrB5MsIPMXljU9V0iR54okLSG2lk9SL1ldURuLKtCjpLH1rthyzyYgJCRI/pOP2fpdJr&#xA;sksM8cIz4SeLETtUuGv5u/MHcU9N/JT80bzzbaXWj676Y8y6SqPNNGAiXltISqXKxj7DclKyKNg2&#xA;42YAZ+nzjJGw8p2t2XPRZjjluOYPeHp2XOsdirsVdiqD1nWNO0XSbzVtSmFvYWEL3FzM37Mca8m2&#xA;7nbYDrir5O84fmz5x886i6m7uNF8vEn6tpFpI0EjxdjdyxkO7sOqBuC+BO51mp1hA9L33YvstCQE&#xA;tRuT/Dyr3+bNtB/5x38l3ujae89ncXV7qEEN091bpbi2iS4PeSVWeR4x8TANU9sOPDKQBMpWd9js&#xA;0avtHBiyThHDgjjhKUalEmZMfdyEuh+bGfKX5ga5+W+vG3N9NqPlC3na31GwmZ5RDCr8TdWZcu8f&#xA;p/aaKvFlrsGochptYePgmb827tv2bx/lxqNPHh9PFKHPbnt7uvSu7r6rjkjljWSNg8bgMjqQVZSK&#xA;ggjqDm1eCXYq8um/5yS/K9ZFFvPf3kD9Lq30+6MVPGrRoxHuAcqOeANGQc/H2VqpxEo4pmJ68JfL&#xA;janLq13e6xNU3GqXVxeTE1rymlZqb/yiij2Ga3USuZfRewcAx6SAqidz77THTfO975euoZLKa4iv&#xA;qUi+q1LsKgfEPs0qR9rbKIYZ8VwNOZ2l2jpceMQ1I4geQq/7PfYTvzLpvnu70i81i4ukm1BIjLHD&#xA;K8l3M4A5EB6hQ9OgAYZr4azHPKIy4jZ58vwPk63P2tlxYiNPjhjAGwqz9lC/9MyH8h/OMPlbzeIL&#xA;ySS40PzmyWlnqksfoFbuzkkjgLxVYKtwsoXr9qg3Arm/0uWAnLED9P6XiO1MuXUcOfIN5Cj8H1Pm&#xA;e6h2KuxVjXnr8wvLnkmwt7zWmmP1uUwWkFtC88skgUuQqrsKKpNWIGRlIRFnk24ME8shCAMpHoHg&#xA;/wCc3516H5y8rWmhaVaalYvNqMEt4L63WOOWCGOSUKGSSUV9ZYjQ5jZdRGUDwm3oOy+x8+PVYzmh&#xA;KMb6ja6sB5XFM0LiQGnHrXpTNXKNin0iM+E2yDy9r/mTXbeTRtMnmh00NzkW4leK2Ziqk8IxVpDw&#xA;dW+yBQjffKdQThhcieE934p00+29NPMTixxlmA+o0Pl/Efs96C13yzqyarFp095PcWeoItvBJZ2i&#xA;mATPKscwnZpJGT04mMnetKbdQNLqMZxSnXDKO4s8/dy58nT6/tfWTyDHY8OY4Twx2353dn7X0v8A&#xA;kV57/wATeT1069X0vMHlvhpmrwE8qtCvCOcHeqzCM7/zBh2rnRYsoyREhyLw+XEYSMTzD0fLGt2K&#xA;uxV515g/Pz8utE1K602Se8vL2xma3vI7OzuJljlT7aGTgsZK9+LHK5ZoRNEgOZg7O1GaPFjxzlHv&#xA;ESXzb5/81W3mzz9ruu2rSNZyyxW9l6yPEywQQRgD05KMtXZ2oe5zA1U+KQrlT3XsxpTiwy4omM+K&#xA;jfPYCvvSu38ytoYW6E0kDxkmKWAsJFNCTx4b9K1zD8Eylcdi9Dqddhw4j4+8Pdf2MvlXzz5sthqd&#xA;9fBTKpe1+vO8zcj0UxIVWIV2IDVHda5g6nWRjPhnxSI59Pv/AFOow9pwhj/wTHCETyJ6+8R/4ony&#xA;Sr8svN915P8AM1h5uv2uLjToF/RfmMvB6DQLecWbiFLcxbzRLy7nbuc3eDLjx5BCJHqFh47tLV6j&#xA;WYxPLzxkjlXP9T7PjkjljWSNg8bgMjqQVZSKggjqDmydAuxV2Kse88efPL3krSodS1t5hDcTi1to&#xA;7eJ55JJmRpAiqg/ljY1NBtglIAWW3DhnlkIwBlI9A8G/OT88tD83eT08v6VY6lZveXtsbs31uscb&#xA;QRMZioeOSXf1Y49jmNPUQlE8J3d5oOxtRj1GM5scow4hzGzyiOVonEi9V8c1ZjYp9MjPhNsl8vat&#xA;5v1eyk07S/rUGkSEu8s0kkNnIfsngACZfoXj75iZ80cIoy/zRz+Pd+NnVZe1sE8nHDEJ5B/GRQ+B&#xA;qz8Pm1qHk6+NyLaa+uLyO4X0hFp9qixo1aO08szuoAUii8wx3oMox6wVxCIjX84/cA67U9q6nJLh&#xA;MtiK4Yx2/wA4kn7/AIPfvyC87jWfKg8t3yCDX/KaRabfRfERLDEvpwXKFtyJFj3/AMoHsRnVYM0c&#xA;kBIci+fZ8JxzMT0en5c0vkP83fKVt5S89SaT5ZuUltb+NtQm0+RSq6cJnPFFkAIdJGDskdAVA8KH&#xA;NXrseMHiPM/a977Ka/VzicMAJQj1P8N/A35D7XnFby2uJdO2acOZPXCkII5DyLUJO/IsAtcpsECX&#xA;R2mo1U9MTi5zsm62qW99etgC2feWdA0zVfLEFtHLNYahHMJ21C1fhc/WoOUTv6nWm7cR2U7UzUZt&#xA;Xkw5+Mb7culHd0uTTR1GL13xXuetjb+zy5PVtQ/LcWNtoEOh2C3d1o8ccUF7c3s0MY4cByuYIgBO&#xA;nwB+IIqygH4ScGDUVxkmuPnQ533Ho6HNIyodI8vJg3/OQV9YX+s2HljR4hda2x9SS3thWUXMiNHa&#xA;oAv+7GMvPxUAE7EZkdl6eXHxj3fbZ+5vnmBxGM+Qv7qH335fF6v+dP5kaj5O8v6fY2EyjzDqWxmA&#xA;VvSiiUerMoZStTIyqvJe5P7OdHqMvBHbm6zQaXxslH6RzUP+cdLzW9Q8sapqOpzT3P1q/Yw3Fw7y&#xA;FykSI5VnLEgFeNfEU7ZHSmRjcu9l2jGEclQ5APWMyXAYn+aXlPy75m8mX1trtwbG1slN/HqibvZy&#xA;WyM31hag14ry5DupIwSiCKLbhzTxTE4GpR5PjGePWbvTvrUjr6cTCW2jaPhLKitVGdQzLEzr1WrU&#xA;r1zSXjjPhj831aI1mfTRy5BGJFSEeprf/Nvu359OSpockF1qdlcXcYk06SRFS3cbN6nwxyOO/wC8&#xA;KjgdqGp36V6ixAiJ9X4v7OrptVrznkP9Svl33yJ+NbfE78u3+RvJGhX3m2TX3kmZlQynTzJ/o3rs&#xA;iwtL6VPtcFCnenTbNINVkOPwTXCPm6vXYI4p+LG+M7Mi0TR7Tyhb65qGqWtjo/lz0zLKq3NxfSMQ&#xA;8jvI8twsfBTzqsSKfjZj1OZObIcwjEEyly5AfYPvdPjuBMuTE/8AnGsanq/5g+YfNFvDJHoc1q8E&#xA;kh+w07zRPbR8hVWeKBHL8SeJf3zo+z8Jx4+E9PwWvtLLGcgRz6/oCD/Mn84fMuueZ7nRvL17Lb6T&#xA;HcfU7IWTGOW5lUiMN6kf7xuc1RGqtxZabE4M2eRnwxcnS6LGMJyT50f2Pp3Ng6R2Kvmn/nI3ypY6&#xA;H5is9e0WcLqnmOUre6MwPCQwRgSXqybiLiOCuOJ5Eim9a4OtxQMeKW1PV+y/aGqhl8HEOOMtyDsB&#xA;53vXy35c3it2b6xvnWYLPNegPH6YKoHUcW5MS37IG/t0zCgYyjtsA9bq82TSzJnUpZNxWw4hsbO/&#xA;St/Lky/yVpGl6jpeo2N+K3lyDBNep8MgR6PH6VeXBQdqdCy71zWa7POE4yjyjvX6/wAdXRSB1AkM&#xA;huXL4HlXcP0jd6zb/lvAnkizgjjutc1F7r9IS3kuoSWl00zyNKZDOgPI83+Ku/7VeQGV4tYZZTlJ&#xA;EZEd1/j8dHQ6iPCPCG8YlJfzv1PS9L8l6Vo9+LVPMFylv9YgtVPopFBxaZkVvj9PmnCLl8R+hqS0&#xA;uAzy8cboX79+X7WzBmqJjI+nb7DbNrfzTqn5e/kJoc+poV14WcFlYWk4PNZZFJiSRT3ggWrKf5KZ&#xA;1eSfBCy6bBh8XKIjkT9iTf8AOPuveZfMPmbW9U1W7uL1VgWOWaViY1kd1ZEVRSNdgx4ooA8BXfH0&#xA;k5yJMvL9Lndp4cePhjAb7339Ob3XM11LG/zD8qaD5o8p32ma3J9Ws1X6yt8pCvayQfGtwjHYGOm/&#xA;iKg7HBKIIotmLLLHITialHcPiq4h1a9sJJRcJJbRuZLF2iMck8cb8oZHTkREZFAPGrUrmkJxwyVH&#xA;3PquH87qdIMmThidpAdTRsddr+PwdpMsV5fWdxdRhtNaRAbdxTmJDwV3HgHZTxO3GtfaOe4xIH1O&#xA;p1XaBzkVtivl1N9T5X07ufl3fyf5W0XWfMkeqXnOd7SIG3tnkb0YmX4TwiFFqeW7Gp6DpnOwySAM&#xA;OnXvPvLga+PAOMc+Q8vcyHRNCh8sXGtajfWtjo/l5kkmuT9anvGkcyGRpXe4WNYUoSfTQGrMd+lc&#xA;7Lk8WMY2ZEctgPhs6GFxkZcmF/8AOPb3mu/mtrvmjT4Xj0Q2s0E8/wCwxke3FrDWprII7cyNT7Na&#xA;ftZ0PZuCWKHCen7SfvYdpZYzIP8AF1+wD7lP82/zi8x6l5ivvL/l+7mtdLtZzZIbMsk9zOpEb/Gn&#xA;7z+95IioaMN96ih1GeXFwxcjRaLH4fiZP2I38x/ym/MzWvzO1zUdF0yBtM1N7V4NTubqOONVis4Y&#xA;WVkHqTDjJGx2j75PUaTxZAk7Ob2L7Qx0OGUBDinKV38Hln5h+RNa/L3XxHr10tzDfWkU8V/DE6W/&#xA;NGkE0KMeXJoyQd9yCDQZXm0xAAiGOPtg58kp5iAaFe7f9aZ6Z5b/ADQsfLdrr9lp1u2k6xd20NgJ&#xA;WHqhrqSO1iZgJUZebUanHau5G9MWfZoyEXfLmCPNuj2hGAlchGXH9JhK62HFfLzrm9a0j8svzwvQ&#xA;INZ82ppen04NFYonqhfBXKvJ9ImU4cfZUR0HxJP2bBoy6vRD1EzyS7oxGOPxNyl8mGaPrl5+WHn3&#xA;U9K0zSofMCWEUjX1xIInvubryS4jvePrUnaRfWhcuQwk9PpxOZk1kMJ4ZbR5D393l+hwf5N48Mck&#xA;SeORNxrlHpId9/bRrkk63t9+bn5n24vJhYx3hjtS6hwsNtBEZCsJlG7yHmy9aM3cDKhLxpji28rc&#xA;gVpsMuC5G+dfI/jq+s9K0rT9J0220zToVt7GzjWK3hXoqKKDruT4k7nNmA6Em9yisUMa/MvQNT8w&#xA;+QNe0TTHVL/ULOWC35miszL9gntz+zX3xKYmi8CT/nHP8ztT067fULyx0orbytbWkDtczyTBT6cZ&#xA;bjFFGrNQcuT08MwMOgjE2d3r+0Pa/NmiY448APxPweX6T5e80ajqVp5a0vTLmDzBKF9O2uomgEPo&#xA;FS7yGYItEIp13NB3yr8rIyN8t/i4Z1+M4wImuXT6fM+5n/l7yr+ek/mLUdLsZIrO60n0PrU8awxu&#xA;vrpzUfHM6/ZNeh2zF/kuNXwG/OTnS1enMjHJnBgKojGd/ndUyXzV+VXnjTtBfzf5l80XN5c6ETeR&#xA;2aSRtGtEK+rwlRbXlETyK+i3NOS/aZaZun03ggyqI936y63Uz0eaUceET3PqnLu6kRjtsPsv3gHN&#xA;/wA5FeYLfyENPk0SPTtQuIZYbfVrWsVq0LHil1bQoJCrhOchViAKBhyBoJfn4y2j9XXyP42cWXZn&#xA;DMgy9AOx/nC+Y+G6c/8AON35eWcofzhfBHe1d7XSrP8AagdVAkmkU7q5VuMan9k8v2lpLR4xXFdk&#xA;p7U1BMvDAqI/HyfQOZrqHYq8L/PL8uvzB8xed9N1Py7pyX9kmnfU3kkuYoVgl+sNI5ZZGDUZSm6K&#xA;32flmNqdP4oAt3vYXa8dDOczHiMo0Hk35iflT5u8lRaXrWuzxXcF39YhufqMcj29nIDEYfUnYKWM&#xA;q8xuigcab1yjJpeGFR3czJ2/LVZryVGIBr9pQnlfRPPVz5c1fzjoFpDPoFjbubiW4IUuLNZZ3eNS&#xA;8b8QHI6GprQZiz0HiAWDz6EbcmcdfCMpS4hH0jhuMjx/VyI5e87PV/LPkD8+r2ztjJ5gttE0+VFk&#xA;MMKJI6q4rRTILrffxX55GHZMRyHzP6BTVl1mkl6pylKXdCAj85SJ+5j2u6bffll+Y9gbT0/NerXp&#xA;F1cvqXozzzxLQsY5JiZbOaEB+LB/TZDGCCysczp5o6eIBrhHPy+A73Bjo46iE8kbgb9EefF/O9Rr&#xA;6dvs70j/ADA/MPWPzG8x6bYSQDTYrekUFvKJVSKS4lCySzsV6Rp6YYgbCpX7VMpnm8Ygco33/Jv0&#xA;2EaeMpbylw9x+Py6l9ReSvKGl+UfLttounjkkI5T3DAB55m/vJXp3Y9uwoo2AzZRiIig6LJkM5GU&#xA;uZTzJMEi8+6Nf635I8waNp7Kl9qWnXVpbF9l9SaFo1DHsCWoT2xSOb59sP8AnHP8y9Tgcald2OiQ&#xA;LG3pwwu11OzKPhTZY4kDdOXJqfynMDFoIxNnd7HW+2GXJHhxR4B8/wAfa8p03y75pnv7Pypa6XcQ&#xA;+Y7hDbx2l1G8AjaNKSO7yhF4x9dia7AdRlZ00jPflbgfnoeCADvQHXbzPueg6J5S/PWTzNe6PaNF&#xA;aXumwW89xPGsMbhbkyKoHKd0P90ex+XSuJ/JcavgN93E58tZgMzCecHHQ3GM787G5NVt82WeYPyj&#xA;88xaJJ5n81+Zrq9m0P8A0+LT4ZlC/uviLhTGtt6kW7Ipifn9iu9Rm6bS+FcqiPx3l1usyaPIY48A&#xA;mSZbzl3eUI/j70th/wCcifMWn+RBZyaLDbX8kdxDZ61a0htXRfgS4it41l4yg83ZDRTxBWob4JDX&#xA;xOw+rqO5xsvZXBkkOK4A7S/nAHeufv8A2Jh/zjj+Xlre3Unm7UAHGnSG30y0bcrNwBaeRTvUK9Iw&#xA;3u38pw6OAI4+ZT2pqDYxgVEfb+x9B395FZWNzezf3VtE80lOvGNSx/AZnOneEfmHf6qv5fvDr13P&#xA;f23mW1gW+RZABb3huIZ1eBQFZYArMhArTinIGrtmjw9pmRmD58P6nZw0Z4okDkRxfPm8m8z6fL5U&#xA;ttD1i01CZxBqEMirIkb0kjjkljaiooajp3GYnZ2qlkyyAAEuH9Ies1+p4hCGoleHi32F8iRyA6pj&#xA;rP57+btRgMMurXk6MKFbdEtAQf5iiwkj782Hh6mexNfjybhq+xdMeLHj45e4n/dnZA/lv5f89+c9&#xA;U1mHy/NbWs6WkbTmZ5I0VRN+7USokjeowMvElR3O1MnLsyEgAd+Eug1/tDkzZTMxABFUOgBvn83u&#xA;P5M/krqXlbVJNf8AMZt5dW4OlusMjzkPKT6s7ySJH8XH4EABopYliXOZWn0/hkn5eQdNq9X4tACu&#xA;/wA/7P1972PMpwnYq7FWI+dNS1g6tpWh6XqD6VJewXd7LexRxSycLNoIxGonSWMB3u1LfDWgoCOo&#xA;we0NVLDASAs3TdgxiZovBvPnPzf+YyXE8smnazpukWdrqCxgPCLsT3ZmERavKPZWQow60YBwwGt7&#xA;R7Qj4cZR9QN/Dk9L2CMuCUyNj6eYsEb/AB+1jHl380fMfkjWfMWnR6hxnlvFaWdrb1ndUhRIzy4y&#xA;0+Cm3bL8OXLLFE4xsR+ObnYh2fly5Jaw1k4uQ4gKoV9P60u82/mp5k8xKY7m8uLuv2XnpHAlR9pI&#xA;BxHL/Yj+GTjpsuQ3kO3c5GXtvQ6SBjo8Y4jtxV+v1H3HZl2lfk/+aPmLy/5dukFrcaHc2NrJFGbp&#xA;4iU4VQzK0dQXVxUpz+Hp1wjswRlKUauRJ91vMR7VFASB2AHPnX630j5D8oWnlLyvZaNBxaWJFa9u&#xA;FDfv7kqBJKeRZtyKCpNFAHbNnCAiKDqMmQzkSebIMkwdirsVeS615i1VbLUPMNxdzTaW93f6fdaX&#xA;Ew4Gwjaazja3VeLer6kSzlg3Mguq1+FRqD2jw6kwl9HL4ubDSmcPSLlzfPOq+WLay/Lma/tr64aE&#xA;28IeICMgxyNGrUIQNTg1fH3zW4tXKWqESBzPf5vX5dVkhpODjPh8MQdh9JoGtu5P7r/nIHzjc2ax&#xA;HV7kgqBwtoI7dhtSgkVYjt/rZs5R1MjV0G6GXsTCBIQ45f5x+yRpIfJzeb/Nvn2wtNJkjhvrgXR5&#xA;3TMy0FvJIXnkVZG3dEGykVO9cP8AJsZwMZGyXVdp+0csso8ERHHC6Hwr8B7F+Wv5AeY9P812+uec&#xA;JbS5+oS+vEI5pbp55EjMcQcyxxURGPqb1JZU2AXMnBpOCV7V3V9v483R6nXeJGgK87+z9fw7nvuZ&#xA;jrnYq7FWL+dLzWPX03S9Lvn0yS9aaW4voUhklWK3QfBGtxHNFVpJUqWQ/CDTcgjC1+qOHHxDndN2&#xA;DGJmi8G/MTn5s892X1yR7LXNJ0uG1vpYgDA86zzl2iUlxwaiuvFuQ5BX3Wg1mv7RBxxlHcHmO7k9&#xA;H2FDJgnKQ2NCrGxH482JaJ+Y+v8AkPzP5isotR/0m4ktxJcPb+s7Rx26mPfjJQfvTtl2mzZZYYyx&#xA;jnf3nvdhAaDLmyS1hqdigBICqH8349UF5r/NnzL5gUx3N7cXndfWAit1O/xCBeFW/wBiPnkxpsuQ&#xA;/vDt+Pg5U+2tBo4kaPGOP+dX6T6j7mS6F+Uf5o+ZPK3l+eBbaXQJ7aL04vrJgk9JHYI0qmMU5Jxp&#xA;xLUXcbmgl/JoEpTjXFI3v5vLR7VFCMhsNtvx8PJ9I/l55MtfKHla10iMI1zT1b+ePlSW4YAOwLVb&#xA;ioARK/sgZsscBGIAdTlyGcjIsimhinhkhlUPFKpSRD0KsKEH6Mm1vnnzP+W/5hIZdLutOn1/TljN&#xA;rbalbSwAvb8SqCSN5IpEkC/a4qVr0bsOfzdlZBk4sZFXb0ml7VwjFwZARtvXV47+acHnXSWstB8w&#xA;xiz4JHfwRzLEZmVzNCjSmCaaNSeDUoQSa7DpmXo9BHDLjO0iO/8AYHE1mvOePCN4jrW/XzP6EHa+&#xA;RfMFz5FtvM9jPFcm41T9EiwCFXUi1e6Mhd3RKcVAHzzOyZYwiZyOw/scHFjnOYhEeo/qt61/zjD+&#xA;kvLHmTULLXYjZx+YIo1tppWRg9zbMTHFVCyKXSaThvvQjrStOn12LLIxibLZqtDlxREpj8fB9O5m&#xA;uA7FXYq7FWIfmN5f17ULG31Dy6UOtWHqIkMjBBNbXHH14ldvhVyY0ZS21VoaV5DE1ul8bHw8jzDk&#xA;6TMMeQSkLHV4fe+RPzKkv49StdCure8jVxcy3T23omM/GxldZ+VUYVBTkdz8Jrmmx9lZCDGVcPve&#xA;gy9sYRUoXYFVXT59HhSy6trvmcNI8MV7qtxGJOYdEjMnGMFhRm4qoFTTN1p8cMeMRidg6TPOc5mR&#xA;G53T/wAx/lz5wsPMOo6FFEl7+j5Rbz3FsyorOYklIHqsr0pIP2chn1uLEamaLZg0ebNHigNveH2H&#xA;+UWrxX/kDSLcml9pNtFpuown7SXFrEqGoouzqFkXbdWBzIw5o5ICUTYLhZsMsczGXMMyy1qdirsV&#xA;dirxDzz5C89QavctptpLrWhT3E15apDLCs1s93IZrhJEmeLmvrMzIULUUhaDjU6TX9mSyT44Vvzd&#xA;72Z2njwx4Zg+8PFvzG0Pzv5Z8tpp1/Ztp2i6g7JbJdLC83CFlfivozyUjSoALoppQbnfJYNBw5Bk&#xA;yfV7+vy/SnU9oCcDjx/T5jkL9/6GOeTvJereYfL3mPVre7hiTy/FbSmAxszXBupHjURnmqjiYzUk&#xA;+GbWUgAT3OpAlYHezP8AI6HXvKf5h2Wta3bm10mRZLO+vWeMpFHMh4GkbPxT1lj5s3QbnYbYePtH&#xA;DKYiJbly8/Z2eEDKUdh7v0PsjNg6x2KuxV2KsV/MPQdc1LTILvy+6LrenO0lvHIQqTRSIUmgLEEK&#xA;WFGU9OSrX4a5javTDNjMW/TZhjmCRY6vDbryB+Zl3qVvd2ug3kOooWjd7l7UxFJCC/quLjsUBDKS&#xA;fAGuaTH2Vl3jKuE+f7Ho8vbGHaULsdK6fN4Ld6hqeta+97M8K3OoPGzVWRFReCoppRmKhF6kfdm5&#xA;02KGLGIROw/W6PUZZ5JmZG53+xkfmj8t/OWleZdS8vRxpevpskUNxc2rKqs81tFc0X1WRwAs4FeP&#xA;ywZ9Ziwmpmiz0+ky5o8UBtdcw+ufyW1dLz8vtK0+Skeo6HBHpt/a/tRG3X04idhVZIlV1buD41GX&#xA;YM0ckBKJsFxNRhljmYyFEM6y5pdirsVeR/mx5I8133mmLzBo+n/pW2axgs5rWKSKOdGt5p5edJ3i&#xA;R0YXPZ+Qp0Nc1faWhlnA4TuHb9ldoR0/EJA1KuSReX/yy81a82pW2oWcvlqwZYLm3lm9KXlqMJ4p&#xA;KLeKU1X6u7xyElSwKgE8dq9FoJxxSx5TcT9jLW9oQOaOXF9Q531TrTPyR8xLqFm+qeYoJLCyure7&#xA;EVpaSRSubWZZo19R7iQR/FGtfhbbpTrlmn7Jx4sgmCbDDU9r5MsDAiIBev5tHUuxV2KuxV2KofUb&#xA;Nb7T7qyZzGt1DJCXXqokUrUfKuKvnQfl75/020XSr3ypJqiCMQNPay2ksEgVQpK+rLFIqn/LRc5r&#xA;N2Pm4+KEhzt6nH21hOMRmDyostP5L+ary3tNWOtx2eu3Vpa/piC7gN3W7ht47dnE0U0O5SJQ+zAs&#xA;CQd82mq7OhnoyPqro6nS9pzwAxiAYk3uzT8u/IV55WW/nv8AU11K+1H0RK0UJt4kWAPxVUaSZiay&#xA;tVi2+2wzI0mljghwx5c3G1erlnnxSAG1bMyzJcV2KuxV2KuxV5v+cXkzX9eGj6hotuL2fSzcLLZe&#xA;okUjx3Kx/FG0pWMsrQjZmXr1zD12mObHwg0bc/s7VxwZeKQsVTCNC/L7zfq+rLZX+iXGiaXdWt1a&#xA;axeO9vvDJC4hVESSXnIl0IpVJBA4nfehwOzdBlwylxn0EcnO7T1+LNGJhfGCm0n5EeapUks5PM9o&#xA;NPmUpKyafKJeDCjBQbplBp3+mnbJjsXEJCVnb3MZ9uZZRIMY7+/9b2OxtI7Oyt7SNmeO2jSJHc1c&#xA;hFCgsdqnbfNw6RWxV2KuxV2KuxV82R/lx590WzTSLryw+sW8US2v1q2ktJIJkVeFQk0scihh1Dp7&#xA;VOc3qOx8pyGUJDnb1GDtnD4YjMHYV3hlcX5Mebb7T7HU5dZTT9dktoU1G1u4mvR6kK+lGfXjnjPq&#xA;C3VEkPxhmWoO9c2eo7OjnAMz6gK2dVpu05YOIQA4Cb3Zl+XX5eXnla41G+1HU11LUNSjt4XMMLW8&#xA;McdsZWVQrSTFm5TtVifkBvW/SaSOCPDHvtx9ZrJZ5cUgBQrZm2ZTiP8A/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:EAA8D89E8514E411846E9A58BC82E63C</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:EAA8D89E8514E411846E9A58BC82E63C</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:E9A8D89E8514E411846E9A58BC82E63C</stRef:instanceID>
            <stRef:documentID>xmp.did:E9A8D89E8514E411846E9A58BC82E63C</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:62874799FF12E4119767B49514B84AF3</stEvt:instanceID>
                  <stEvt:when>2014-07-26T01:04:05+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:E9A8D89E8514E411846E9A58BC82E63C</stEvt:instanceID>
                  <stEvt:when>2014-07-26T12:36:11+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EAA8D89E8514E411846E9A58BC82E63C</stEvt:instanceID>
                  <stEvt:when>2014-07-26T12:36:21+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>900.000000</stDim:w>
            <stDim:h>300.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=63 G=169 B=245</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>63</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>245</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=122 G=201 B=67</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>122</xmpG:red>
                           <xmpG:green>201</xmpG:green>
                           <xmpG:blue>67</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=29 B=37</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>29</xmpG:green>
                           <xmpG:blue>37</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=123 B=172</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>123</xmpG:green>
                           <xmpG:blue>172</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=189 G=204 B=212</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>189</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -156.992 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 156.992 li
742.103 156.992 li
742.103 0 li
cp
clp
[1 0 0 1 0 0 ]ct
525.854 102.476 mo
524.346 105.101 521.778 106.895 518.818 107.398 cv
513.1 108.37 503.482 105.874 495.545 99.313 cv
495.061 99.4937 494.591 99.6177 494.136 99.686 cv
492.86 99.8745 li
491.952 98.9595 li
489.187 96.1792 477.872 80.4458 482.373 72.6201 cv
482.677 72.0908 483.051 71.606 483.482 71.1802 cv
487.49 67.2207 495.021 72.3481 502.991 77.7778 cv
504.268 78.6455 505.492 79.481 506.615 80.209 cv
507.878 81.0278 li
507.878 81.0278 507.764 82.6177 507.76 82.6626 cv
510.348 84.0313 512.512 84.9028 514.615 85.7495 cv
517.326 86.8394 519.886 87.8696 522.617 89.7495 cv
527.814 93.3267 527.938 98.854 525.856 102.474 cv
525.854 102.476 525.854 102.476 525.854 102.476 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.75021 .679683 .670222 .90164 cmyk
f
484.993 73.4854 mo
483.282 75.6069 485.138 84.0293 492.729 92.9683 cv
501.092 102.81 512.824 105.83 518.391 104.883 cv
524.211 103.894 527.459 96.1812 521.171 91.8491 cv
514.881 87.519 509.585 88.1255 497.595 79.1509 cv
491.001 74.2168 486.992 71.0073 484.993 73.4854 cv
cp
.0250248 .567285 .998169 0 cmyk
f
483.725 73.0894 mo
481.87 76.313 484.413 85.146 491.757 93.7925 cv
500.417 103.985 512.669 107.15 518.604 106.141 cv
521.19 105.702 523.431 104.134 524.75 101.84 cv
526.611 98.605 526.45 93.936 521.895 90.7983 cv
519.28 88.9985 516.897 88.0415 514.141 86.9341 cv
510.068 85.2964 505.453 83.4404 498.357 78.1309 cv
497.418 77.4258 li
490.948 72.5747 486.675 69.3691 484 72.6851 cv
483.898 72.8091 483.808 72.9463 483.725 73.0894 cv
483.725 73.0894 li
cp
484.83 73.7251 mo
484.88 73.6377 484.934 73.5571 484.993 73.4854 cv
486.992 71.0073 491.001 74.2168 497.595 79.1509 cv
509.585 88.1255 514.881 87.519 521.171 91.8491 cv
524.984 94.4751 525.292 98.3423 523.645 101.205 cv
522.575 103.062 520.683 104.495 518.391 104.883 cv
512.824 105.83 501.092 102.81 492.729 92.9683 cv
485.396 84.3335 483.416 76.1831 484.83 73.7251 cv
484.83 73.7251 li
cp
.75021 .679683 .670222 .90164 cmyk
f
492.732 92.9663 mo
485.138 84.0259 483.284 75.6045 484.993 73.4888 cv
485.177 73.252 485.392 73.0703 485.622 72.939 cv
484.986 75.9863 487.194 83.9448 500.238 93.8618 cv
515.911 105.773 525.473 98.0171 521.961 92.4644 cv
527.162 96.8696 523.947 103.943 518.392 104.886 cv
512.827 105.832 501.093 102.806 492.732 92.9663 cv
cp
.101595 .727993 1 .0109865 cmyk
f
494.098 75.0508 mo
495.948 76.126 497.904 77.417 499.805 78.6978 cv
497.933 84.7104 493.024 89.936 489.675 91.7163 cv
488.441 89.7905 487.196 87.5747 486.169 85.3345 cv
488.967 83.2676 492.266 79.459 494.098 75.0508 cv
cp
0 0 0 0 cmyk
f
499.805 78.6978 mo
501.729 79.9897 503.583 81.2822 505.227 82.3457 cv
504.862 87.5298 498.05 96.5249 493.759 97.1655 cv
492.777 96.1792 491.25 94.1812 489.675 91.7163 cv
493.024 89.936 497.933 84.7104 499.805 78.6978 cv
cp
0 .970642 .96051 0 cmyk
f
485.276 72.9946 mo
486.82 71.4702 490.235 72.7988 494.098 75.0508 cv
492.266 79.459 488.967 83.2676 486.169 85.3345 cv
483.944 80.4575 482.795 75.4507 485.276 72.9946 cv
cp
f
485.276 72.9946 mo
485.398 72.8691 485.534 72.7695 485.687 72.6924 cv
485.196 74.3813 485.69 77.9702 489.039 82.75 cv
488.076 83.7749 487.093 84.6509 486.169 85.3345 cv
483.944 80.4575 482.795 75.4507 485.276 72.9946 cv
cp
.132235 1 1 .0386358 cmyk
f
489.039 82.75 mo
490.247 84.4849 491.828 86.3745 493.865 88.3892 cv
492.414 89.8892 490.933 91.0474 489.675 91.7163 cv
488.441 89.7905 487.196 87.5747 486.169 85.3345 cv
487.093 84.6509 488.076 83.7749 489.039 82.75 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
493.865 88.3892 mo
495.442 89.9448 497.292 91.5688 499.454 93.2651 cv
497.531 95.3638 495.453 96.9146 493.759 97.1655 cv
492.777 96.1792 491.25 94.1812 489.675 91.7163 cv
490.933 91.0474 492.414 89.8892 493.865 88.3892 cv
cp
.132235 1 1 .0386358 cmyk
f
483.479 73.2539 mo
483.479 73.2549 483.479 73.2554 483.479 73.2554 cv
479.614 79.9746 489.784 94.9722 492.857 98.062 cv
493.143 98.3491 493.547 98.4839 493.947 98.4233 cv
497.532 97.8911 501.748 93.1587 504.149 88.9868 cv
505.131 87.2827 506.334 84.7622 506.498 82.439 cv
506.532 81.9756 506.31 81.5317 505.921 81.2788 cv
504.795 80.5488 503.57 79.7144 502.273 78.832 cv
495.078 73.9312 487.64 68.8647 484.379 72.0859 cv
484.029 72.4326 483.728 72.8247 483.479 73.2539 cv
483.479 73.2539 li
cp
484.583 73.8921 mo
484.772 73.5625 485.001 73.2637 485.273 72.9937 cv
488.306 69.998 498.562 78.0229 505.227 82.3486 cv
505.104 84.0747 504.266 86.2261 503.044 88.3511 cv
500.6 92.6001 496.621 96.7388 493.76 97.1636 cv
490.528 93.9116 481.263 79.668 484.583 73.8921 cv
484.583 73.8921 li
cp
.75021 .679683 .670222 .90164 cmyk
f
531.259 89.5903 mo
528.264 87.7925 li
545.723 64.0137 li
545.938 63.7222 546.052 63.3696 546.052 63.0073 cv
546.052 49.8438 li
546.052 49.2461 545.738 48.6934 545.226 48.3862 cv
544.714 48.0791 544.078 48.0625 543.552 48.3442 cv
531.938 54.54 li
531.617 54.71 531.361 54.978 531.204 55.3042 cv
518.443 81.9014 li
515.448 80.105 li
514.644 79.6221 513.599 79.8833 513.116 80.6885 cv
510.503 85.0444 li
510.02 85.8491 510.281 86.894 511.087 87.3765 cv
514.76 89.5796 li
508.81 101.983 li
508.43 102.775 508.715 103.724 509.467 104.176 cv
511.152 105.187 li
512.837 106.198 li
513.591 106.649 514.563 106.454 515.082 105.746 cv
523.223 94.6577 li
526.896 96.8618 li
527.702 97.3442 528.746 97.0835 529.229 96.2778 cv
531.843 91.9224 li
532.325 91.1177 532.064 90.0728 531.259 89.5903 cv
cp
f
512.027 103.729 mo
513.712 104.74 li
544.352 63.0083 li
544.352 49.8438 li
532.736 56.04 li
510.342 102.718 li
512.027 103.729 li
cp
.280522 .914061 1 .298253 cmyk
f
543.189 51.7788 mo
543.191 64.5894 li
544.352 63.0083 li
544.352 49.8438 li
532.736 56.04 li
531.888 57.8086 li
543.189 51.7788 li
cp
.215396 .82446 1 .119539 cmyk
f
527.771 95.4038 mo
511.961 85.9194 li
514.573 81.5625 li
530.385 91.0474 li
527.771 95.4038 li
cp
f
529.997 91.6929 mo
514.187 82.209 li
514.573 81.5625 li
530.385 91.0474 li
529.997 91.6929 li
cp
.144869 .807401 1 .0376593 cmyk
f
522.945 93.1685 mo
522.874 93.1245 522.813 93.0601 522.776 92.9771 cv
518.876 84.1938 li
518.78 83.9795 518.878 83.7285 519.092 83.6338 cv
519.307 83.5386 519.558 83.6343 519.653 83.8486 cv
523.554 92.6313 li
523.648 92.8452 523.552 93.0972 523.338 93.1929 cv
523.206 93.2505 523.061 93.2368 522.945 93.1685 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
516.204 89.1235 mo
516.089 89.0552 516.01 88.9331 515.998 88.7896 cv
515.981 88.5552 516.157 88.353 516.392 88.3354 cv
525.977 87.6421 li
526.211 87.6255 526.414 87.8022 526.431 88.0356 cv
526.448 88.27 526.271 88.4722 526.037 88.4907 cv
516.453 89.1831 li
516.363 89.1899 516.277 89.1665 516.204 89.1235 cv
cp
f
517.934 95.4067 mo
517.187 97.2661 514.72 98.0259 512.424 97.104 cv
510.128 96.1812 508.873 93.9243 509.62 92.0649 cv
510.368 90.2046 512.835 89.4458 515.131 90.3687 cv
517.427 91.2915 518.682 93.5474 517.934 95.4067 cv
cp
f
516.686 94.9048 mo
516.072 96.4292 513.833 96.9644 511.682 96.1001 cv
509.531 95.2358 508.285 93.2983 508.897 91.7749 cv
509.51 90.2505 511.75 89.7144 513.901 90.5796 cv
516.051 91.4438 517.298 93.3813 516.686 94.9048 cv
cp
.0250248 .567285 .998169 0 cmyk
f
439.589 133.808 mo
437.804 133.745 435.983 133.535 434.178 133.183 cv
428.804 132.136 424.756 129.093 422.47 124.383 cv
418.568 116.345 420.715 105.675 422.732 101.75 cv
424.251 98.7925 426.402 97.1401 428.634 97.2173 cv
431.3 97.3101 433.182 99.5317 434.229 103.821 cv
435.707 109.875 441.342 111.333 445.809 111.488 cv
447.493 111.545 449.274 111.415 450.961 111.106 cv
454.959 110.376 457.491 110.094 459.432 110.162 cv
462.465 110.267 464.475 111.35 465.404 113.385 cv
466.6 115.998 466.009 119.41 463.786 122.742 cv
460.205 128.111 451.719 134.23 439.591 133.808 cv
439.589 133.808 439.59 133.808 439.589 133.808 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
463.086 114.446 mo
462.051 112.184 458.267 112.365 451.42 113.614 cv
444.41 114.894 434.037 113.789 431.752 104.426 cv
430.076 97.564 426.824 99.3638 425 102.915 cv
422.302 108.167 419.438 127.712 434.666 130.68 cv
453.252 134.304 465.852 120.496 463.086 114.446 cv
cp
.101595 .727993 1 .0109865 cmyk
f
425.41 117.532 mo
424.45 117.015 424.082 120.046 424.405 122.464 cv
421.483 115.491 423.275 106.284 425 102.915 cv
426.824 99.3638 430.076 97.564 431.752 104.426 cv
432.667 108.182 434.88 110.607 437.66 112.09 cv
437.141 113.323 433.996 111.538 433.258 111.989 cv
431.979 112.786 434.529 116.286 433.24 116.666 cv
431.951 117.045 429.767 114.563 429.026 115.533 cv
427.922 116.965 429.555 120.654 428.28 120.609 cv
427.005 120.565 426.662 118.214 425.41 117.532 cv
cp
.00985733 .0806592 .600977 0 cmyk
f
467.525 156.76 mo
462.974 156.265 458.748 155.098 456.223 153.644 cv
452.628 151.572 452.377 143.942 455.261 124.486 cv
455.4 123.537 li
456.529 115.823 461.231 112.561 465.388 112.752 cv
465.586 112.761 465.776 112.777 465.967 112.797 cv
470.199 113.257 472.848 116.405 473.833 122.152 cv
474.2 124.29 474.369 126.865 474.549 129.589 cv
474.813 133.617 475.213 139.702 476.518 141.065 cv
479.688 144.374 482.458 149.771 479.838 154.093 cv
477.955 157.198 472.104 157.256 467.525 156.76 cv
467.524 156.76 467.525 156.76 467.525 156.76 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
465.271 115.3 mo
461.849 115.144 458.755 118.225 457.924 123.906 cv
457.093 129.587 453.955 149.394 457.496 151.434 cv
462.524 154.333 475.834 155.779 477.656 152.77 cv
479.479 149.762 477.276 145.543 474.677 142.828 cv
471.776 139.801 472.367 128.687 471.32 122.583 cv
470.534 118.01 468.675 115.457 465.271 115.3 cv
cp
.101595 .727993 1 .0109865 cmyk
f
474.677 142.828 mo
475.958 144.165 477.149 145.875 477.798 147.623 cv
473.729 152.797 461.918 147.084 464.448 144.495 cv
466.566 142.323 471.551 141.703 474.524 142.659 cv
474.578 142.715 474.624 142.771 474.677 142.828 cv
cp
.0250248 .567285 .998169 0 cmyk
f
471.32 122.583 mo
471.933 126.147 471.982 131.428 472.499 135.802 cv
467.574 138.798 459.605 137.539 456.366 135.792 cv
456.854 130.92 457.585 126.229 457.924 123.906 cv
458.755 118.225 461.852 115.141 465.271 115.3 cv
468.675 115.457 470.534 118.01 471.32 122.583 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
462.398 138.089 mo
459.737 137.801 457.309 137.074 455.695 136.184 cv
455.381 136.011 455.267 135.616 455.44 135.3 cv
455.614 134.988 456.01 134.874 456.323 135.045 cv
459.435 136.763 467.483 138.224 472.441 135.023 cv
472.744 134.83 473.146 134.916 473.34 135.217 cv
473.534 135.519 473.448 135.92 473.146 136.116 cv
470.131 138.063 466.047 138.487 462.398 138.089 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
498.646 151.042 mo
494.068 151.042 489.742 150.34 487.073 149.167 cv
483.276 147.497 482.201 139.937 482.966 120.284 cv
483.002 119.325 li
483.29 111.535 487.611 107.785 491.767 107.525 cv
491.962 107.512 492.155 107.506 492.346 107.506 cv
496.604 107.506 499.576 110.349 501.178 115.957 cv
501.773 118.041 502.219 120.583 502.691 123.273 cv
503.391 127.248 504.445 133.252 505.891 134.467 cv
509.398 137.414 512.735 142.481 510.6 147.061 cv
509.063 150.352 503.251 151.042 498.646 151.042 cv
498.646 151.042 li
cp
f
491.926 110.07 mo
488.506 110.284 485.764 113.682 485.551 119.419 cv
485.338 125.157 484.358 145.187 488.101 146.833 cv
493.413 149.169 506.801 149.169 508.288 145.982 cv
509.775 142.794 507.13 138.838 504.251 136.419 cv
501.04 133.723 500.427 122.611 498.726 116.657 cv
497.451 112.195 495.326 109.857 491.926 110.07 cv
cp
.101595 .727993 1 .0109865 cmyk
f
504.251 136.419 mo
505.67 137.61 507.038 139.182 507.871 140.849 cv
504.387 146.434 492.027 142.029 494.264 139.182 cv
496.133 136.794 501.021 135.637 504.08 136.267 cv
504.14 136.318 504.191 136.37 504.251 136.419 cv
cp
.0250248 .567285 .998169 0 cmyk
f
498.726 116.657 mo
499.72 120.133 500.34 125.377 501.326 129.67 cv
496.754 133.181 488.695 132.791 485.287 131.404 cv
485.244 126.508 485.465 121.765 485.551 119.419 cv
485.764 113.682 488.509 110.282 491.926 110.07 cv
495.326 109.857 497.451 112.195 498.726 116.657 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
491.531 133.036 mo
488.854 133.036 486.361 132.577 484.662 131.867 cv
484.33 131.728 484.175 131.347 484.313 131.016 cv
484.452 130.685 484.834 130.53 485.164 130.667 cv
488.442 132.038 496.601 132.62 501.185 128.903 cv
501.464 128.676 501.873 128.719 502.1 128.998 cv
502.325 129.277 502.282 129.686 502.004 129.912 cv
499.217 132.173 495.201 133.036 491.531 133.036 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
473.987 128.439 mo
457.137 128.439 452.343 119.018 451.289 111.115 cv
447.829 85.1567 461.679 66.4517 470.374 64.9165 cv
471.202 64.7705 472.051 64.6958 472.898 64.6958 cv
488.09 64.6958 502.782 89.0522 503.959 104.348 cv
505.095 119.111 493.63 126.117 482.521 127.75 cv
479.369 128.214 476.577 128.439 473.989 128.439 cv
473.987 128.439 li
cp
f
501.413 104.547 mo
502.442 117.85 491.783 123.808 482.152 125.228 cv
473.67 126.477 456.083 127.778 453.813 110.778 cv
453.695 109.911 453.601 109.061 453.524 108.219 cv
460.707 111.662 487.789 114.594 500.504 99.1499 cv
500.972 101.045 501.286 102.865 501.413 104.547 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
496.85 89.145 mo
498.456 92.519 499.705 95.9448 500.504 99.1499 cv
487.789 114.594 460.707 111.662 453.524 108.219 cv
453.185 104.497 453.211 100.977 453.524 97.6792 cv
463.836 99.5659 484.354 99.2944 496.85 89.145 cv
cp
.132235 1 1 .0386358 cmyk
f
490.84 79.1406 mo
493.144 82.2178 495.183 85.6519 496.85 89.145 cv
484.354 99.2944 463.836 99.5659 453.524 97.6792 cv
453.958 93.0806 454.944 88.9243 456.271 85.269 cv
466.19 86.2554 480.325 85.396 490.84 79.1406 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
482.067 70.4365 mo
485.222 72.5615 488.205 75.6211 490.84 79.1406 cv
480.325 85.396 466.19 86.2554 456.271 85.269 cv
457.791 81.0278 459.771 77.4575 461.847 74.6528 cv
468.051 75.0352 475.633 74.1255 482.067 70.4365 cv
cp
.132235 1 1 .0386358 cmyk
f
470.813 67.4277 mo
474.613 66.7559 478.455 67.9888 482.067 70.4365 cv
475.633 74.1255 468.051 75.0352 461.847 74.6528 cv
465.017 70.3687 468.416 67.8525 470.813 67.4277 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
500.504 99.1499 mo
500.972 101.045 501.286 102.865 501.413 104.547 cv
502.332 116.456 493.892 122.482 485.195 124.625 cv
475.438 125.508 470.296 119.193 468.154 110.93 cv
478.965 111.279 492.548 108.815 500.504 99.1499 cv
cp
.574731 .695186 .633936 .604669 cmyk
f
500.504 99.1499 mo
492.548 108.815 478.965 111.279 468.154 110.93 cv
467.133 107.055 466.784 102.737 466.938 98.5464 cv
476.908 98.2319 488.621 95.8267 496.85 89.145 cv
498.456 92.519 499.705 95.9448 500.504 99.1499 cv
cp
0 .970642 .96051 0 cmyk
f
496.85 89.145 mo
488.621 95.8267 476.908 98.2319 466.938 98.5464 cv
467.1 93.7271 467.915 89.0688 469.122 85.3882 cv
476.518 84.8022 484.363 82.9907 490.84 79.1406 cv
493.144 82.2178 495.183 85.6519 496.85 89.145 cv
cp
0 0 0 0 cmyk
f
490.84 79.1406 mo
484.363 82.9907 476.518 84.8022 469.122 85.3882 cv
469.938 82.9146 470.925 80.8833 472.021 79.54 cv
477.248 73.1226 482.79 72.7822 486.649 74.2617 cv
488.12 75.7407 489.521 77.3809 490.84 79.1406 cv
cp
0 .970642 .96051 0 cmyk
f
470.156 111.62 mo
462.373 111.611 455.689 110.112 452.731 108.66 cv
452.411 108.5 452.279 108.106 452.44 107.776 cv
452.602 107.448 452.993 107.309 453.313 107.467 cv
459.904 110.705 487.636 114.182 500.412 98.3345 cv
500.639 98.0562 501.045 98.0171 501.324 98.2466 cv
501.603 98.4761 501.646 98.8882 501.422 99.1685 cv
493.663 108.801 480.894 111.629 470.156 111.62 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
452.235 127.413 mo
449.209 127.304 446.424 125.875 444.595 123.494 cv
441.062 118.892 438.772 109.223 440.864 99.1392 cv
440.479 98.7954 440.148 98.439 439.875 98.0679 cv
439.113 97.0288 li
439.496 95.7993 li
440.662 92.0532 449.281 74.6982 458.303 75.0181 cv
458.913 75.0396 459.517 75.1426 460.094 75.3252 cv
465.469 77.0166 464.455 86.0708 463.382 95.6558 cv
463.21 97.189 463.046 98.6626 462.926 99.9956 cv
462.792 101.495 li
462.792 101.495 461.334 102.136 461.293 102.154 cv
461.293 105.082 461.533 107.402 461.769 109.657 cv
462.072 112.564 462.358 115.308 461.974 118.601 cv
461.237 124.869 456.412 127.562 452.236 127.413 cv
452.236 127.413 452.236 127.413 452.235 127.413 cv
cp
f
458.763 77.7378 mo
456.088 77.2178 449.51 82.7939 445.156 93.6851 cv
440.364 105.677 443.18 117.461 446.617 121.94 cv
450.213 126.623 458.552 125.888 459.439 118.305 cv
460.328 110.719 457.316 106.321 459.644 91.5269 cv
460.924 83.3916 461.888 78.3467 458.763 77.7378 cv
cp
.0250248 .567285 .998169 0 cmyk
f
458.521 76.4316 mo
454.803 76.2988 448.184 82.6768 443.973 93.2104 cv
439.01 105.63 441.94 117.941 445.605 122.716 cv
447.204 124.796 449.637 126.044 452.281 126.139 cv
456.011 126.272 460.063 123.948 460.706 118.453 cv
461.076 115.3 460.81 112.748 460.5 109.792 cv
460.044 105.427 459.526 100.479 460.904 91.7241 cv
461.087 90.564 li
462.352 82.5771 463.188 77.3008 459.007 76.4863 cv
458.851 76.4556 458.687 76.438 458.521 76.4316 cv
458.521 76.4316 li
cp
458.476 77.7065 mo
458.575 77.71 458.671 77.7197 458.763 77.7378 cv
461.888 78.3467 460.924 83.3916 459.644 91.5269 cv
457.316 106.321 460.328 110.719 459.439 118.305 cv
458.902 122.903 455.625 124.982 452.327 124.864 cv
450.185 124.788 448.033 123.784 446.617 121.94 cv
443.18 117.461 440.364 105.677 445.156 93.6851 cv
449.361 83.1665 455.641 77.605 458.476 77.7065 cv
458.476 77.7065 li
cp
.75021 .679683 .670222 .90164 cmyk
f
445.159 93.686 mo
449.512 82.793 456.091 77.2183 458.76 77.7397 cv
459.057 77.792 459.315 77.8955 459.539 78.0396 cv
456.55 78.9019 450.546 84.5737 447.876 100.741 cv
444.673 120.164 456 124.991 459.266 119.291 cv
457.803 125.948 450.047 126.412 446.617 121.942 cv
443.18 117.464 440.368 105.677 445.159 93.686 cv
cp
.101595 .727993 1 .0109865 cmyk
f
461.636 86.519 mo
461.551 88.6577 461.322 90.9897 461.08 93.269 cv
454.89 94.4253 447.974 92.5278 444.835 90.3989 cv
445.961 88.4077 447.338 86.271 448.837 84.3169 cv
451.973 85.8237 456.883 86.9604 461.636 86.519 cv
cp
0 0 0 0 cmyk
f
461.08 93.269 mo
460.836 95.5728 460.561 97.8179 460.389 99.7671 cv
455.635 101.869 444.498 100.05 441.927 96.5562 cv
442.34 95.2271 443.391 92.9438 444.835 90.3989 cv
447.974 92.5278 454.89 94.4253 461.08 93.269 cv
cp
0 .970642 .96051 0 cmyk
f
459.328 77.7598 mo
461.398 78.4121 461.82 82.0513 461.636 86.519 cv
456.883 86.9604 451.973 85.8237 448.837 84.3169 cv
452.11 80.0703 455.998 76.7139 459.328 77.7598 cv
cp
f
459.328 77.7598 mo
459.498 77.8086 459.647 77.8818 459.788 77.9805 cv
458.066 78.3364 455.125 80.4507 452.464 85.646 cv
451.107 85.2739 449.874 84.814 448.837 84.3169 cv
452.11 80.0703 455.998 76.7139 459.328 77.7598 cv
cp
.132235 1 1 .0386358 cmyk
f
452.464 85.646 mo
451.496 87.5259 450.563 89.8062 449.733 92.5483 cv
447.73 91.9663 446.014 91.1997 444.835 90.3989 cv
445.961 88.4077 447.338 86.271 448.837 84.3169 cv
449.874 84.814 451.107 85.2739 452.464 85.646 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
449.733 92.5483 mo
449.097 94.6704 448.526 97.064 448.038 99.7681 cv
445.283 99.0493 442.941 97.936 441.927 96.5562 cv
442.34 95.2271 443.391 92.9438 444.835 90.3989 cv
446.014 91.1997 447.73 91.9663 449.733 92.5483 cv
cp
.132235 1 1 .0386358 cmyk
f
458.26 76.292 mo
458.259 76.293 li
450.513 76.0171 442.009 92.0181 440.713 96.1782 cv
440.592 96.5649 440.663 96.9858 440.902 97.311 cv
443.049 100.232 449.203 101.747 454.015 101.919 cv
455.98 101.989 458.77 101.875 460.9 100.935 cv
461.326 100.747 461.614 100.343 461.656 99.8823 cv
461.774 98.5464 461.94 97.0718 462.114 95.5142 cv
463.084 86.8618 464.085 77.918 459.712 76.541 cv
459.244 76.394 458.756 76.3101 458.26 76.292 cv
458.26 76.292 li
cp
458.213 77.5664 mo
458.592 77.5796 458.963 77.6426 459.328 77.7573 cv
463.395 79.0371 461.094 91.854 460.386 99.7681 cv
458.803 100.467 456.508 100.732 454.06 100.644 cv
449.162 100.47 443.642 98.8872 441.93 96.5571 cv
443.293 92.1802 451.554 77.3306 458.213 77.5664 cv
458.213 77.5664 li
cp
.75021 .679683 .670222 .90164 cmyk
f
466.465 .925293 mo
466.464 .925293 466.462 .925293 466.462 .925293 cv
460.459 .925293 451.505 1.87891 442.93 6.4209 cv
434.217 11.0356 428.02 18.2046 424.508 27.729 cv
423.029 31.7393 422.332 36.1729 422.423 40.9541 cv
422.357 40.9341 422.292 40.9141 422.228 40.896 cv
419.405 40.0767 416.296 39.6606 412.985 39.6606 cv
408.883 39.6606 404.549 40.29 400.101 41.5317 cv
399.878 41.5933 li
399.216 41.7739 398.654 42.2148 398.321 42.8159 cv
397.987 43.416 397.909 44.1255 398.107 44.7837 cv
400.454 52.6323 405.986 57.6973 411.531 60.4077 cv
411.422 60.499 411.313 60.5913 411.206 60.6841 cv
403.065 67.729 403.554 80.1782 404.429 84.3813 cv
404.676 85.5708 405.726 86.4116 406.924 86.4116 cv
406.985 86.4116 407.049 86.4087 407.111 86.4048 cv
415.279 85.8052 423.226 83.0664 428.855 79.1377 cv
428.798 80.7222 428.883 82.3125 429.219 83.9478 cv
430.25 88.9761 433.701 91.9771 438.452 91.9771 cv
444.059 91.9771 450.83 87.3335 452.562 80.4766 cv
455.509 81.3042 458.678 81.7222 462.024 81.7222 cv
464.591 81.7222 467.313 81.4761 470.119 80.9902 cv
481.545 79.0107 490.679 75.5864 497.306 70.8037 cv
498.47 71.3604 499.749 71.6484 501.087 71.6484 cv
504.358 71.6484 507.761 69.9644 510.419 67.0269 cv
513.399 63.7354 514.872 59.4863 514.462 55.3701 cv
513.726 47.9673 507.228 38.2603 502.313 32.562 cv
502.403 32.2432 502.432 31.9067 502.391 31.5698 cv
500.888 18.8687 492.87 7.82617 481.969 3.4375 cv
478.003 1.84131 472.352 .925781 466.465 .925293 cv
466.465 .925293 li
cp
f
430.3 57.6533 mo
432.997 55.2261 430.3 45.8945 421.517 43.3447 cv
412.094 40.6084 402.108 43.6284 400.55 44.0532 cv
405.083 59.2114 423.217 64.0283 430.3 57.6533 cv
cp
0 .970642 .96051 0 cmyk
f
421.514 43.3472 mo
430.303 45.897 432.997 55.2305 430.303 57.6528 cv
423.308 63.9429 405.576 59.3359 400.748 44.6646 cv
403.979 49.918 411.918 57.7549 420.086 51.7026 cv
423.248 49.3569 421.964 45.7524 419.933 42.9478 cv
420.459 43.0581 420.987 43.1943 421.514 43.3472 cv
cp
.132235 1 1 .0386358 cmyk
f
412.985 40.9355 mo
408.999 40.9355 404.779 41.5493 400.442 42.7603 cv
400.215 42.8232 li
399.884 42.9136 399.602 43.1338 399.436 43.4341 cv
399.27 43.7349 399.23 44.0898 399.329 44.4185 cv
402.716 55.7461 413.309 61.6719 422.021 61.6719 cv
425.71 61.6719 428.953 60.5811 431.152 58.6016 cv
432.483 57.4043 432.909 55.2471 432.321 52.6831 cv
431.47 48.9624 428.223 43.9639 421.872 42.1201 cv
419.165 41.334 416.176 40.9355 412.985 40.9355 cv
412.985 40.9355 li
cp
412.985 42.2104 mo
415.711 42.2104 418.641 42.5093 421.517 43.3447 cv
430.3 45.8945 432.997 55.2261 430.3 57.6533 cv
428.261 59.4897 425.305 60.397 422.021 60.397 cv
413.901 60.397 403.778 54.8472 400.55 44.0532 cv
401.633 43.7578 406.782 42.2104 412.985 42.2104 cv
412.985 42.2104 li
cp
.75021 .679683 .670222 .90164 cmyk
f
433.842 60.9116 mo
431.433 54.9614 420.475 56.0356 412.876 62.6113 cv
405.508 68.9863 406.217 80.4614 406.926 83.8613 cv
422.367 82.7285 438.856 73.3003 433.842 60.9116 cv
cp
0 .970642 .96051 0 cmyk
f
433.839 60.9082 mo
438.854 73.3013 422.363 82.7275 406.928 83.8584 cv
406.75 83.0249 406.579 81.7075 406.52 80.1011 cv
415.113 78.002 424.6 75.418 426.308 68.0229 cv
427.625 62.311 424.106 58.5024 421.225 57.9072 cv
426.878 56.1055 432.241 56.9556 433.839 60.9082 cv
cp
.132235 1 1 .0386358 cmyk
f
426.597 55.7319 mo
421.835 55.7319 416.258 57.9985 412.041 61.647 cv
404.364 68.29 404.844 80.123 405.678 84.1211 cv
405.801 84.7163 406.325 85.1362 406.924 85.1362 cv
406.956 85.1362 406.987 85.1353 407.019 85.1333 cv
416.893 84.4087 429.067 80.1211 434.01 72.1763 cv
436.296 68.502 436.646 64.4409 435.023 60.4336 cv
433.814 57.4453 430.742 55.7319 426.597 55.7319 cv
426.597 55.7319 li
cp
426.597 57.0068 mo
430.005 57.0068 432.771 58.2642 433.842 60.9116 cv
438.856 73.3003 422.367 82.7285 406.926 83.8613 cv
406.217 80.4614 405.508 68.9863 412.876 62.6113 cv
417.093 58.9614 422.346 57.0068 426.597 57.0068 cv
426.597 57.0068 li
cp
.75021 .679683 .670222 .90164 cmyk
f
496.131 29.9927 mo
500.838 33.6377 511.063 46.9585 511.926 55.623 cv
512.948 65.8984 499.481 74.8359 494.841 64.5547 cv
491.876 57.9829 494.249 50.5166 490.054 40.729 cv
485.769 30.7305 491.117 26.1123 496.131 29.9927 cv
cp
.280522 .914061 1 .298253 cmyk
f
496.127 29.9937 mo
500.836 33.6401 511.062 46.9595 511.929 55.6216 cv
512.523 61.6304 508.163 67.1895 503.514 68.7026 cv
514.869 62.4556 509.251 50.564 503.361 40.2617 cv
499.884 34.1836 496.493 30.2485 493.892 28.8125 cv
494.622 29.0249 495.379 29.416 496.127 29.9937 cv
cp
.215396 .82446 1 .119539 cmyk
f
492.618 27.3491 mo
492.618 27.3491 li
490.878 27.3491 489.379 28.1709 488.396 29.6626 cv
486.673 32.2744 486.851 36.4912 488.882 41.231 cv
491.072 46.3403 491.411 50.8975 491.711 54.9185 cv
491.978 58.4902 492.228 61.8638 493.679 65.0791 cv
495.223 68.5 497.851 70.3833 501.08 70.3833 cv
503.948 70.3833 507.086 68.8115 509.471 66.1777 cv
512.211 63.1494 513.568 59.2563 513.194 55.4971 cv
512.26 46.1211 501.426 32.4805 496.911 28.9849 cv
495.529 27.915 494.044 27.3491 492.618 27.3491 cv
492.618 27.3491 li
cp
492.618 28.624 mo
493.718 28.624 494.934 29.0664 496.131 29.9927 cv
500.838 33.6377 511.063 46.9585 511.926 55.623 cv
512.628 62.6812 506.493 69.1084 501.08 69.1084 cv
498.611 69.1084 496.294 67.7739 494.841 64.5547 cv
491.876 57.9829 494.249 50.5166 490.054 40.729 cv
486.792 33.1182 489.112 28.625 492.618 28.624 cv
492.618 28.624 li
cp
.75021 .679683 .670222 .90164 cmyk
f
432.07 54.8901 mo
435.124 63.1021 442.695 83.1528 469.683 78.4775 cv
496.671 73.8027 505.596 61.6899 506.021 52.5527 cv
506.417 44.0195 502.511 43.4551 496.458 26.6274 cv
487.745 2.40283 462.245 3.25244 446.733 11.7524 cv
429.702 21.0845 425.908 38.3149 432.07 54.8901 cv
cp
.0250248 .567285 .998169 0 cmyk
f
477.341 7.68945 mo
463.58 6.46582 449.811 13.2822 449.029 34.6089 cv
448.51 49 456.534 75.7407 479.136 76.3525 cv
476.262 77.1685 473.118 77.8823 469.683 78.4775 cv
442.695 83.1528 435.122 63.1011 432.07 54.8901 cv
425.908 38.3149 429.7 21.0859 446.733 11.7524 cv
455.377 7.01807 467.133 4.65527 477.341 7.68945 cv
cp
.101595 .727993 1 .0109865 cmyk
f
467.618 5.05615 mo
460.319 5.05615 452.686 7.03711 446.12 10.6343 cv
429.793 19.5811 423.95 36.709 430.876 55.334 cv
433.671 62.8496 440.215 80.4497 461.996 80.4497 cv
464.497 80.4497 467.157 80.209 469.9 79.7334 cv
482.41 77.5669 492.077 73.6748 498.633 68.1646 cv
503.96 63.688 507.036 58.1646 507.295 52.6113 cv
507.538 47.3853 506.21 44.832 504.009 40.6011 cv
502.409 37.5259 500.218 33.312 497.658 26.1958 cv
491.043 7.80225 475.996 5.05615 467.618 5.05615 cv
467.618 5.05615 li
cp
467.618 6.33154 mo
479.427 6.33154 491.109 11.7534 496.458 26.6274 cv
502.511 43.4551 506.417 44.0195 506.021 52.5527 cv
505.596 61.6899 496.671 73.8027 469.683 78.4775 cv
466.922 78.9556 464.367 79.1748 461.996 79.1748 cv
441.195 79.1748 434.812 62.2622 432.07 54.8901 cv
425.908 38.3149 429.702 21.0845 446.733 11.7524 cv
452.721 8.47217 460.193 6.33154 467.618 6.33154 cv
467.618 6.33154 li
cp
.75021 .679683 .670222 .90164 cmyk
f
440.57 50.0024 mo
444.362 54.5928 451.408 69.8354 450.346 78.4775 cv
449.085 88.7271 433.983 94.4858 431.717 83.4355 cv
430.269 76.3735 434.225 69.6108 432.283 59.1401 cv
430.301 48.4443 436.533 45.1152 440.57 50.0024 cv
cp
.280522 .914061 1 .298253 cmyk
f
440.57 50.0024 mo
444.362 54.5928 451.408 69.833 450.346 78.4775 cv
449.733 83.459 445.866 87.3687 441.777 88.8218 cv
451.375 84.0532 448.314 72.2813 444.752 61.8003 cv
441.965 53.5811 438.684 48.6172 436.092 47.8438 cv
437.563 47.6226 439.194 48.3364 440.57 50.0024 cv
cp
.215396 .82446 1 .119539 cmyk
f
436.598 46.5244 mo
436.598 46.5244 li
435.09 46.5244 433.684 47.2188 432.637 48.4775 cv
430.724 50.7769 430.153 54.647 431.029 59.3726 cv
432.043 64.8379 431.372 69.3594 430.78 73.3477 cv
430.256 76.8906 429.76 80.2363 430.469 83.6924 cv
431.368 88.0815 434.354 90.7026 438.452 90.7026 cv
443.974 90.7026 450.737 85.7456 451.611 78.6328 cv
452.761 69.2813 445.19 53.5928 441.554 49.1909 cv
440.134 47.4707 438.374 46.5244 436.598 46.5244 cv
436.598 46.5244 li
cp
436.598 47.7998 mo
437.931 47.7988 439.351 48.5259 440.57 50.0024 cv
444.362 54.5928 451.408 69.8354 450.346 78.4775 cv
449.567 84.8091 443.506 89.4272 438.452 89.4272 cv
435.324 89.4272 432.583 87.6597 431.717 83.4355 cv
430.269 76.3735 434.225 69.6108 432.283 59.1401 cv
430.9 51.6768 433.518 47.7998 436.598 47.7998 cv
436.598 47.7998 li
cp
.75021 .679683 .670222 .90164 cmyk
f
432 65.8696 mo
434.99 60.6367 468.408 27.7617 499.858 31.8696 cv
498.583 21.1025 491.926 10.1943 481.017 5.80322 cv
470.014 1.37402 437.242 .561523 426.9 28.6113 cv
421.457 43.376 428.883 60.6284 432 65.8696 cv
cp
0 .970642 .96051 0 cmyk
f
497.556 22.9644 mo
498.728 25.8457 499.501 28.8628 499.858 31.8721 cv
496.118 31.3789 492.353 31.4131 488.613 31.8638 cv
493.475 29.6533 496.466 26.7896 497.556 22.9644 cv
cp
.132235 1 1 .0386358 cmyk
f
446.895 27.231 mo
451.11 37.6177 461.149 38.3232 471.511 36.5728 cv
450.882 45.209 434.077 62.2256 432.002 65.8721 cv
428.883 60.6274 421.454 43.3726 426.902 28.6084 cv
432.002 14.7617 442.568 7.95313 453.287 5.13086 cv
447.379 9.66162 443.164 18.0337 446.895 27.231 cv
cp
f
466.464 2.2002 mo
460.606 2.2002 451.873 3.12793 443.528 7.54639 cv
435.101 12.0098 429.104 18.9487 425.704 28.1709 cv
419.043 46.2363 430.785 66.3203 430.904 66.521 cv
431.134 66.9082 431.551 67.1445 432 67.1445 cv
432.004 67.1445 432.008 67.1445 432.011 67.1445 cv
432.464 67.1406 432.882 66.8965 433.106 66.502 cv
435.746 61.8833 464.993 32.79 494.322 32.79 cv
496.141 32.79 497.949 32.9063 499.693 33.1338 cv
499.748 33.1411 499.803 33.1445 499.858 33.1445 cv
500.191 33.1445 500.514 33.0142 500.755 32.7769 cv
501.034 32.5005 501.171 32.1104 501.125 31.7192 cv
499.675 19.4746 491.969 8.8374 481.493 4.62061 cv
477.729 3.10498 472.11 2.2002 466.464 2.2002 cv
466.464 2.2002 li
cp
466.464 3.4751 mo
472.475 3.4751 477.723 4.47803 481.017 5.80322 cv
491.926 10.1943 498.583 21.1025 499.858 31.8696 cv
498.016 31.6289 496.173 31.5151 494.322 31.5151 cv
464.603 31.5151 434.814 60.9429 432 65.8696 cv
428.883 60.6284 421.457 43.376 426.9 28.6113 cv
434.146 8.95947 452.399 3.4751 466.464 3.4751 cv
466.464 3.4751 li
cp
.75021 .679683 .670222 .90164 cmyk
f
499.894 53.1479 mo
502.994 59.394 498.503 67.9321 489.862 72.2222 cv
481.221 76.5122 471.702 74.9258 468.604 68.6802 cv
465.503 62.4341 469.994 53.895 478.636 49.605 cv
487.275 45.3149 496.793 46.9023 499.894 53.1479 cv
cp
.00985733 .0806592 .600977 0 cmyk
f
488.556 48.0791 mo
489.168 50.0176 487.335 52.3262 484.463 53.2314 cv
481.59 54.1382 478.765 53.2998 478.153 51.3599 cv
477.54 49.4209 479.373 47.1123 482.246 46.2065 cv
485.119 45.3003 487.944 46.1387 488.556 48.0791 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
487.849 48.3027 mo
487.789 48.1143 487.697 47.9424 487.593 47.7788 cv
487.274 49.0986 485.911 50.3896 484.028 50.9829 cv
481.824 51.6777 479.662 51.1812 478.833 49.8896 cv
478.73 50.3091 478.734 50.7324 478.861 51.1367 cv
479.39 52.8125 481.829 53.5361 484.313 52.7534 cv
486.793 51.9707 488.376 49.9771 487.849 48.3027 cv
cp
.636561 .700954 .654597 .746487 cmyk
f
469.514 47.5938 mo
470.831 50.646 469.802 54.0269 467.216 55.1416 cv
464.63 56.2563 461.465 54.686 460.148 51.6313 cv
458.831 48.5781 459.86 45.1997 462.446 44.084 cv
465.033 42.9692 468.197 44.5391 469.514 47.5938 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
468.805 47.8994 mo
468.665 47.5762 468.503 47.2725 468.318 46.9912 cv
468.755 49.2075 467.859 51.3813 466.006 52.1797 cv
464.083 53.0083 461.786 52.0913 460.494 50.1104 cv
460.573 50.5166 460.684 50.9238 460.856 51.3257 cv
461.974 53.9189 464.659 55.251 466.855 54.3047 cv
469.05 53.3594 469.924 50.4897 468.805 47.8994 cv
cp
.636561 .700954 .654597 .746487 cmyk
f
466.85 46.3643 mo
467.436 47.4478 467.153 48.7349 466.217 49.2412 cv
465.282 49.7485 464.048 49.2822 463.461 48.1987 cv
462.875 47.1157 463.158 45.8281 464.094 45.3208 cv
465.029 44.8145 466.263 45.2813 466.85 46.3643 cv
cp
0 0 0 0 cmyk
f
456.141 43.9678 mo
458.832 43.1694 461.945 42.3096 466.058 42.8193 cv
468.808 43.1602 468.883 40.875 466.351 40.0723 cv
464.319 39.4272 459.474 40.4409 455.972 42.8813 cv
454.478 43.9224 455.03 44.2983 456.141 43.9678 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
496.808 37.4292 mo
498.071 40.4541 497.084 43.8042 494.603 44.9092 cv
492.121 46.0142 489.084 44.4575 487.82 41.4302 cv
486.557 38.4048 487.545 35.0571 490.026 33.9512 cv
492.508 32.8467 495.544 34.4023 496.808 37.4292 cv
cp
f
496.167 37.8867 mo
496.032 37.5723 495.875 37.2773 495.697 37.0034 cv
496.117 39.1587 495.254 41.272 493.468 42.0479 cv
491.615 42.853 489.4 41.9614 488.154 40.0356 cv
488.231 40.4312 488.337 40.8271 488.504 41.2173 cv
489.582 43.7378 492.17 45.0327 494.286 44.1133 cv
496.401 43.1943 497.245 40.4043 496.167 37.8867 cv
cp
.636561 .700954 .654597 .746487 cmyk
f
494.298 36.1851 mo
494.876 37.2891 494.597 38.6016 493.672 39.1172 cv
492.75 39.6348 491.532 39.1592 490.953 38.0552 cv
490.375 36.9507 490.654 35.6382 491.577 35.1216 cv
492.502 34.6064 493.719 35.0811 494.298 36.1851 cv
cp
0 0 0 0 cmyk
f
492.865 30.3711 mo
490.728 31.814 488.307 33.5205 486.427 36.7598 cv
485.171 38.9253 483.297 37.6138 484.062 35.3276 cv
484.676 33.4922 488.184 30.6421 492.089 29.6011 cv
493.754 29.1577 493.747 29.7769 492.865 30.3711 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
486.345 47.8203 mo
486.405 48.4419 485.71 49.0205 484.79 49.1128 cv
483.869 49.2051 483.072 48.7764 483.009 48.1548 cv
482.947 47.5332 483.643 46.9536 484.563 46.8618 cv
485.484 46.7686 486.281 47.1978 486.345 47.8203 cv
cp
0 0 0 0 cmyk
f
482.471 62.0894 mo
480.713 62.0894 479.064 61.4277 478.254 59.8574 cv
478.094 59.5444 478.216 59.1602 478.528 58.999 cv
478.841 58.8354 479.226 58.9609 479.388 59.2729 cv
480.399 61.2354 483.213 60.9927 484.858 60.3521 cv
487.728 59.2349 488.787 57.8594 488.297 55.8945 cv
488.21 55.5532 488.419 55.207 488.76 55.1216 cv
489.102 55.0352 489.448 55.2446 489.533 55.5859 cv
490.516 59.5161 486.605 61.0396 485.321 61.5405 cv
484.417 61.8926 483.428 62.0894 482.471 62.0894 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
476.475 20.5205 mo
478.322 19.5313 479.65 16.9263 477.026 13.418 cv
474.402 9.90967 467.74 9.00342 463.65 10.2202 cv
459.561 11.438 455.585 15.106 456.042 19.5908 cv
456.45 23.5918 459.544 25.0488 463.061 24.8711 cv
463.406 26.8525 463.896 27.8828 464.325 27.793 cv
465.053 27.6421 467.827 26.6582 468.366 26.4673 cv
468.29 25.7202 468.039 24.0088 468.039 24.0088 cv
469.236 25.9712 li
470.091 25.8989 473.278 24.646 473.605 24.4463 cv
473.405 24.1191 472.522 22.2764 472.522 22.2764 cv
474.506 24.0928 li
475.364 23.9141 478.03 22.8159 478.03 22.8159 cv
478.379 22.0854 476.475 20.5205 476.475 20.5205 cv
cp
0 0 0 0 cmyk
f
466.685 17.5356 mo
467.182 18.8223 466.608 20.2427 465.404 20.7075 cv
464.2 21.1733 462.821 20.5083 462.323 19.2217 cv
461.827 17.9351 462.399 16.5146 463.604 16.0498 cv
464.809 15.5845 466.188 16.25 466.685 17.5356 cv
cp
0 .970642 .96051 0 cmyk
f
472.955 15.0356 mo
473.729 16.1763 473.551 17.646 472.559 18.3184 cv
471.566 18.9917 470.135 18.6113 469.361 17.4692 cv
468.587 16.3286 468.766 14.8569 469.758 14.1846 cv
470.75 13.5122 472.182 13.8926 472.955 15.0356 cv
cp
f
326.855 103.25 mo
325.345 105.875 322.779 107.67 319.819 108.173 cv
314.1 109.144 304.482 106.649 296.545 100.087 cv
296.061 100.268 295.591 100.392 295.135 100.461 cv
293.861 100.65 li
292.953 99.7349 li
290.187 96.9536 278.873 81.2207 283.373 73.395 cv
283.678 72.8657 284.05 72.3809 284.482 71.9556 cv
288.49 67.9961 296.021 73.123 303.992 78.5527 cv
305.267 79.4204 306.493 80.2559 307.615 80.9839 cv
308.878 81.8027 li
308.878 81.8027 308.763 83.3926 308.76 83.4375 cv
311.348 84.8062 313.511 85.6772 315.615 86.5239 cv
318.327 87.6138 320.886 88.645 323.617 90.5239 cv
328.814 94.1021 328.938 99.6284 326.856 103.25 cv
326.855 103.25 326.855 103.25 326.855 103.25 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
285.993 74.2603 mo
284.282 76.3818 286.137 84.8042 293.729 93.7437 cv
302.092 103.584 313.824 106.604 319.391 105.658 cv
325.211 104.668 328.459 96.9556 322.171 92.6245 cv
315.88 88.2935 310.584 88.9009 298.594 79.9258 cv
292.001 74.9917 287.992 71.7822 285.993 74.2603 cv
cp
.0250248 .567285 .998169 0 cmyk
f
284.724 73.8643 mo
282.87 77.0879 285.414 85.9204 292.757 94.5679 cv
301.417 104.76 313.669 107.925 319.605 106.916 cv
322.19 106.477 324.431 104.91 325.751 102.615 cv
327.611 99.3804 327.451 94.7114 322.894 91.5737 cv
320.28 89.7739 317.898 88.8169 315.14 87.7085 cv
311.069 86.0718 306.453 84.2153 299.357 78.9058 cv
298.418 78.2007 li
291.948 73.3496 287.675 70.144 285 73.46 cv
284.899 73.584 284.808 73.7212 284.724 73.8643 cv
284.724 73.8643 li
cp
285.831 74.5 mo
285.88 74.4126 285.934 74.332 285.993 74.2603 cv
287.992 71.7822 292.001 74.9917 298.594 79.9258 cv
310.584 88.9009 315.88 88.2935 322.171 92.6245 cv
325.984 95.2495 326.292 99.1167 324.645 101.979 cv
323.576 103.837 321.683 105.27 319.391 105.658 cv
313.824 106.604 302.092 103.584 293.729 93.7437 cv
286.397 85.1089 284.416 76.958 285.831 74.5 cv
285.831 74.5 li
cp
.75021 .679683 .670222 .90164 cmyk
f
293.733 93.7417 mo
286.138 84.8013 284.284 76.3794 285.993 74.2637 cv
286.177 74.0269 286.391 73.8452 286.623 73.7139 cv
285.986 76.7612 288.195 84.7202 301.238 94.6362 cv
316.911 106.548 326.473 98.7915 322.96 93.2397 cv
328.163 97.645 324.947 104.717 319.393 105.662 cv
313.828 106.606 302.094 103.582 293.733 93.7417 cv
cp
.101595 .727993 1 .0109865 cmyk
f
295.098 75.8257 mo
296.949 76.9009 298.904 78.1919 300.805 79.4727 cv
298.933 85.4858 294.024 90.7114 290.675 92.4917 cv
289.441 90.5659 288.196 88.3491 287.169 86.1099 cv
289.967 84.0425 293.266 80.2339 295.098 75.8257 cv
cp
0 0 0 0 cmyk
f
300.805 79.4727 mo
302.728 80.7646 304.584 82.0571 306.227 83.1206 cv
305.863 88.3042 299.05 97.3003 294.759 97.9399 cv
293.777 96.9536 292.25 94.9556 290.675 92.4917 cv
294.024 90.7114 298.933 85.4858 300.805 79.4727 cv
cp
0 .970642 .96051 0 cmyk
f
286.276 73.7695 mo
287.821 72.2451 291.235 73.5737 295.098 75.8257 cv
293.266 80.2339 289.967 84.0425 287.169 86.1099 cv
284.945 81.2324 283.795 76.2256 286.276 73.7695 cv
cp
f
286.276 73.7695 mo
286.398 73.644 286.534 73.5444 286.686 73.4673 cv
286.196 75.1563 286.69 78.7456 290.039 83.5249 cv
289.076 84.5493 288.093 85.4263 287.169 86.1099 cv
284.945 81.2324 283.795 76.2256 286.276 73.7695 cv
cp
.132235 1 1 .0386358 cmyk
f
290.039 83.5249 mo
291.248 85.2603 292.828 87.1489 294.865 89.1646 cv
293.414 90.6646 291.934 91.8228 290.675 92.4917 cv
289.441 90.5659 288.196 88.3491 287.169 86.1099 cv
288.093 85.4263 289.076 84.5493 290.039 83.5249 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
294.865 89.1646 mo
296.443 90.7202 298.292 92.3433 300.455 94.0396 cv
298.531 96.1392 296.453 97.689 294.759 97.9399 cv
293.777 96.9536 292.25 94.9556 290.675 92.4917 cv
291.934 91.8228 293.414 90.6646 294.865 89.1646 cv
cp
.132235 1 1 .0386358 cmyk
f
284.48 74.0288 mo
284.479 74.0298 284.479 74.0308 284.479 74.0308 cv
280.615 80.7495 290.785 95.7466 293.857 98.8364 cv
294.143 99.1235 294.547 99.2593 294.947 99.1987 cv
298.532 98.6655 302.748 93.9331 305.149 89.7622 cv
306.13 88.0571 307.334 85.5366 307.498 83.2139 cv
307.532 82.7505 307.309 82.3066 306.921 82.0537 cv
305.796 81.3237 304.57 80.4893 303.273 79.6069 cv
296.078 74.7061 288.64 69.6396 285.378 72.8608 cv
285.029 73.2075 284.727 73.5996 284.48 74.0288 cv
284.48 74.0288 li
cp
285.583 74.667 mo
285.772 74.3374 286.002 74.0386 286.274 73.7686 cv
289.306 70.7729 299.562 78.7979 306.227 83.1235 cv
306.104 84.8501 305.266 87.0015 304.044 89.1255 cv
301.6 93.3745 297.621 97.5132 294.761 97.938 cv
291.528 94.686 282.262 80.4429 285.583 74.667 cv
285.583 74.667 li
cp
.75021 .679683 .670222 .90164 cmyk
f
332.259 90.3647 mo
329.264 88.5679 li
346.723 64.7886 li
346.937 64.4971 347.052 64.1445 347.052 63.7822 cv
347.052 50.6187 li
347.052 50.021 346.738 49.4683 346.226 49.1611 cv
345.714 48.8545 345.079 48.8379 344.552 49.1191 cv
332.937 55.3149 li
332.618 55.4849 332.361 55.7529 332.204 56.0791 cv
319.443 82.6763 li
316.448 80.8799 li
315.644 80.3975 314.599 80.6582 314.116 81.4634 cv
311.503 85.8188 li
311.021 86.6245 311.281 87.6685 312.086 88.1519 cv
315.759 90.355 li
309.809 102.758 li
309.429 103.549 309.715 104.5 310.467 104.951 cv
312.152 105.962 li
313.837 106.973 li
314.59 107.423 315.563 107.229 316.082 106.521 cv
324.224 95.4321 li
327.897 97.6362 li
328.702 98.1196 329.747 97.8579 330.229 97.0532 cv
332.843 92.6978 li
333.325 91.8921 333.064 90.8481 332.259 90.3647 cv
cp
f
313.027 104.504 mo
314.712 105.514 li
345.353 63.7832 li
345.352 50.6187 li
333.737 56.8149 li
311.342 103.494 li
313.027 104.504 li
cp
.280522 .914061 1 .298253 cmyk
f
344.19 52.5537 mo
344.191 65.3647 li
345.353 63.7832 li
345.352 50.6187 li
333.737 56.8149 li
332.888 58.5835 li
344.19 52.5537 li
cp
.215396 .82446 1 .119539 cmyk
f
328.771 96.1782 mo
312.96 86.6938 li
315.574 82.3374 li
331.385 91.8228 li
328.771 96.1782 li
cp
f
330.998 92.4683 mo
315.187 82.9839 li
315.574 82.3374 li
331.385 91.8228 li
330.998 92.4683 li
cp
.144869 .807401 1 .0376593 cmyk
f
323.946 93.9429 mo
323.874 93.8989 323.813 93.8345 323.776 93.7515 cv
319.876 84.9683 li
319.781 84.7544 319.877 84.5024 320.092 84.4077 cv
320.307 84.314 320.558 84.4087 320.653 84.6235 cv
324.554 93.4058 li
324.648 93.6206 324.552 93.8716 324.338 93.9673 cv
324.207 94.0259 324.061 94.0122 323.946 93.9429 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
317.205 89.8979 mo
317.089 89.8306 317.009 89.7085 316.999 89.5649 cv
316.982 89.3306 317.158 89.1284 317.392 89.1108 cv
326.977 88.4165 li
327.21 88.3999 327.415 88.5767 327.431 88.811 cv
327.448 89.0454 327.272 89.2476 327.038 89.2661 cv
317.453 89.9585 li
317.363 89.9644 317.277 89.9419 317.205 89.8979 cv
cp
f
318.934 96.1821 mo
318.187 98.0415 315.72 98.8013 313.424 97.8784 cv
311.128 96.9556 309.873 94.6997 310.621 92.8403 cv
311.369 90.98 313.835 90.2202 316.131 91.1431 cv
318.427 92.0669 319.682 94.3218 318.934 96.1821 cv
cp
f
317.686 95.6802 mo
317.073 97.2036 314.833 97.7388 312.682 96.8755 cv
310.531 96.0112 309.285 94.0737 309.897 92.5493 cv
310.51 91.0259 312.75 90.4897 314.901 91.354 cv
317.052 92.2192 318.298 94.1558 317.686 95.6802 cv
cp
.0250248 .567285 .998169 0 cmyk
f
242.703 134.021 mo
240.922 134.167 239.089 134.168 237.255 134.03 cv
231.796 133.614 227.421 131.062 224.604 126.65 cv
219.795 119.119 220.688 108.272 222.235 104.139 cv
223.4 101.024 225.346 99.1333 227.57 98.9507 cv
230.229 98.7339 232.356 100.722 233.895 104.86 cv
236.066 110.702 241.832 111.495 246.286 111.129 cv
247.966 110.992 249.721 110.654 251.36 110.152 cv
255.245 108.962 257.729 108.388 259.664 108.23 cv
262.688 107.982 264.81 108.825 265.97 110.738 cv
267.46 113.195 267.271 116.651 265.45 120.218 cv
262.517 125.967 254.799 133.031 242.704 134.021 cv
242.703 134.021 242.703 134.021 242.703 134.021 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
263.79 112.061 mo
262.5 109.934 258.762 110.553 252.106 112.59 cv
245.294 114.675 234.862 114.783 231.504 105.749 cv
229.043 99.1274 226.022 101.293 224.623 105.033 cv
222.554 110.562 221.98 130.308 237.449 131.487 cv
256.33 132.926 267.24 117.748 263.79 112.061 cv
cp
.101595 .727993 1 .0109865 cmyk
f
226.729 119.503 mo
225.715 119.1 225.701 122.155 226.304 124.518 cv
222.592 117.932 223.301 108.579 224.623 105.033 cv
226.022 101.293 229.043 99.1274 231.504 105.749 cv
232.85 109.374 235.329 111.524 238.263 112.674 cv
237.891 113.958 234.56 112.551 233.879 113.084 cv
232.702 114.025 235.641 117.205 234.404 117.733 cv
233.168 118.26 230.71 116.047 230.088 117.096 cv
229.157 118.648 231.208 122.122 229.937 122.226 cv
228.666 122.331 228.052 120.035 226.729 119.503 cv
cp
.00985733 .0806592 .600977 0 cmyk
f
268.526 156.685 mo
263.974 156.19 259.749 155.023 257.223 153.569 cv
253.628 151.497 253.377 143.867 256.261 124.411 cv
256.401 123.461 li
257.529 115.748 262.231 112.487 266.389 112.677 cv
266.585 112.686 266.777 112.702 266.967 112.722 cv
271.2 113.182 273.847 116.33 274.833 122.077 cv
275.2 124.214 275.369 126.79 275.549 129.514 cv
275.813 133.542 276.213 139.626 277.519 140.99 cv
280.687 144.298 283.458 149.696 280.838 154.018 cv
278.955 157.123 273.104 157.181 268.526 156.685 cv
268.525 156.685 268.526 156.685 268.526 156.685 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
266.272 115.225 mo
262.849 115.069 259.755 118.15 258.924 123.832 cv
258.092 129.512 254.955 149.319 258.496 151.359 cv
263.524 154.257 276.833 155.704 278.657 152.696 cv
280.48 149.687 278.277 145.468 275.677 142.752 cv
272.776 139.726 273.368 128.612 272.32 122.508 cv
271.535 117.935 269.675 115.381 266.272 115.225 cv
cp
.101595 .727993 1 .0109865 cmyk
f
275.677 142.752 mo
276.959 144.089 278.149 145.8 278.797 147.547 cv
274.729 152.722 262.919 147.009 265.449 144.419 cv
267.566 142.248 272.55 141.627 275.524 142.583 cv
275.578 142.64 275.624 142.696 275.677 142.752 cv
cp
.0250248 .567285 .998169 0 cmyk
f
272.32 122.508 mo
272.933 126.073 272.983 131.353 273.5 135.727 cv
268.574 138.723 260.605 137.463 257.366 135.717 cv
257.854 130.845 258.586 126.154 258.924 123.832 cv
259.755 118.15 262.852 115.066 266.272 115.225 cv
269.675 115.381 271.535 117.935 272.32 122.508 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
263.398 138.014 mo
260.737 137.726 258.308 136.999 256.695 136.109 cv
256.381 135.936 256.267 135.541 256.44 135.225 cv
256.614 134.913 257.01 134.799 257.324 134.97 cv
260.436 136.688 268.483 138.149 273.441 134.949 cv
273.744 134.754 274.146 134.84 274.34 135.142 cv
274.535 135.444 274.448 135.845 274.146 136.041 cv
271.131 137.988 267.046 138.412 263.398 138.014 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
299.647 150.967 mo
295.068 150.967 290.742 150.265 288.074 149.091 cv
284.276 147.421 283.202 139.863 283.966 120.208 cv
284.002 119.25 li
284.291 111.459 288.611 107.709 292.766 107.45 cv
292.963 107.437 293.155 107.431 293.346 107.431 cv
297.604 107.431 300.576 110.274 302.178 115.881 cv
302.773 117.965 303.219 120.507 303.692 123.198 cv
304.391 127.172 305.445 133.178 306.891 134.392 cv
310.398 137.339 313.736 142.406 311.599 146.986 cv
310.063 150.277 304.252 150.967 299.647 150.967 cv
299.647 150.967 li
cp
f
292.925 109.995 mo
289.505 110.208 286.763 113.607 286.55 119.344 cv
286.338 125.082 285.359 145.112 289.101 146.757 cv
294.413 149.094 307.8 149.094 309.288 145.907 cv
310.775 142.719 308.129 138.763 305.25 136.344 cv
302.04 133.648 301.427 122.536 299.726 116.582 cv
298.451 112.12 296.326 109.782 292.925 109.995 cv
cp
.101595 .727993 1 .0109865 cmyk
f
305.25 136.344 mo
306.67 137.535 308.038 139.107 308.871 140.774 cv
305.387 146.359 293.027 141.955 295.263 139.107 cv
297.133 136.719 302.021 135.563 305.08 136.192 cv
305.14 136.244 305.191 136.294 305.25 136.344 cv
cp
.0250248 .567285 .998169 0 cmyk
f
299.726 116.582 mo
300.72 120.058 301.34 125.303 302.327 129.595 cv
297.753 133.106 289.696 132.715 286.287 131.33 cv
286.245 126.433 286.465 121.69 286.55 119.344 cv
286.763 113.607 289.508 110.207 292.925 109.995 cv
296.326 109.782 298.451 112.12 299.726 116.582 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
292.532 132.96 mo
289.854 132.96 287.361 132.501 285.662 131.792 cv
285.331 131.653 285.175 131.272 285.313 130.941 cv
285.452 130.61 285.833 130.455 286.164 130.591 cv
289.443 131.962 297.601 132.544 302.185 128.828 cv
302.464 128.601 302.874 128.644 303.099 128.922 cv
303.325 129.202 303.282 129.611 303.004 129.836 cv
300.216 132.098 296.201 132.96 292.532 132.96 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
274.988 129.214 mo
258.136 129.214 253.343 119.792 252.29 111.889 cv
248.829 85.9312 262.679 67.2266 271.374 65.6914 cv
272.202 65.5454 273.051 65.4707 273.899 65.4707 cv
289.09 65.4707 303.782 89.8267 304.959 105.123 cv
306.095 119.885 294.63 126.891 283.521 128.525 cv
280.369 128.989 277.578 129.214 274.99 129.214 cv
274.988 129.214 li
cp
f
302.414 105.322 mo
303.442 118.625 292.784 124.583 283.153 126.002 cv
274.67 127.251 257.083 128.552 254.814 111.552 cv
254.695 110.686 254.602 109.836 254.525 108.995 cv
261.708 112.437 288.789 115.37 301.504 99.9253 cv
301.972 101.82 302.287 103.639 302.414 105.322 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
297.85 89.9194 mo
299.456 93.2944 300.706 96.7202 301.504 99.9253 cv
288.789 115.37 261.708 112.437 254.525 108.995 cv
254.185 105.271 254.21 101.751 254.525 98.4536 cv
264.835 100.34 285.354 100.069 297.85 89.9194 cv
cp
.132235 1 1 .0386358 cmyk
f
291.84 79.916 mo
294.144 82.9927 296.184 86.4272 297.85 89.9194 cv
285.354 100.069 264.835 100.34 254.525 98.4536 cv
254.958 93.855 255.945 89.6987 257.271 86.0444 cv
267.19 87.0308 281.326 86.1714 291.84 79.916 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
283.068 71.2114 mo
286.221 73.3364 289.205 76.3965 291.84 79.916 cv
281.326 86.1714 267.19 87.0308 257.271 86.0444 cv
258.792 81.8027 260.772 78.2324 262.846 75.4277 cv
269.052 75.8101 276.633 74.9004 283.068 71.2114 cv
cp
.132235 1 1 .0386358 cmyk
f
271.814 68.2026 mo
275.613 67.5313 279.456 68.7637 283.068 71.2114 cv
276.633 74.9004 269.052 75.8101 262.846 75.4277 cv
266.017 71.1436 269.417 68.6274 271.814 68.2026 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
301.504 99.9253 mo
301.972 101.82 302.287 103.639 302.414 105.322 cv
303.332 117.23 294.892 123.256 286.196 125.399 cv
276.438 126.283 271.296 119.968 269.154 111.706 cv
279.965 112.054 293.548 109.589 301.504 99.9253 cv
cp
.574731 .695186 .633936 .604669 cmyk
f
301.504 99.9253 mo
293.548 109.589 279.965 112.054 269.154 111.706 cv
268.133 107.83 267.785 103.511 267.938 99.3218 cv
277.909 99.0063 289.621 96.6011 297.85 89.9194 cv
299.456 93.2944 300.706 96.7202 301.504 99.9253 cv
cp
0 .970642 .96051 0 cmyk
f
297.85 89.9194 mo
289.621 96.6011 277.909 99.0063 267.938 99.3218 cv
268.1 94.5015 268.916 89.8433 270.123 86.1626 cv
277.518 85.5767 285.363 83.7656 291.84 79.916 cv
294.144 82.9927 296.184 86.4272 297.85 89.9194 cv
cp
0 0 0 0 cmyk
f
291.84 79.916 mo
285.363 83.7656 277.518 85.5767 270.123 86.1626 cv
270.938 83.6895 271.924 81.6582 273.021 80.3149 cv
278.249 73.8979 283.791 73.5576 287.649 75.0366 cv
289.12 76.5156 290.522 78.1563 291.84 79.916 cv
cp
0 .970642 .96051 0 cmyk
f
271.156 112.394 mo
263.374 112.386 256.69 110.887 253.731 109.434 cv
253.411 109.274 253.28 108.88 253.441 108.551 cv
253.602 108.222 253.994 108.083 254.314 108.243 cv
260.904 111.48 288.636 114.957 301.413 99.1099 cv
301.638 98.8306 302.045 98.7915 302.324 99.022 cv
302.603 99.2505 302.646 99.6636 302.422 99.9429 cv
294.663 109.576 281.894 112.404 271.156 112.394 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
253.236 128.187 mo
250.209 128.08 247.424 126.65 245.595 124.268 cv
242.063 119.667 239.773 109.998 241.864 99.9136 cv
241.479 99.5708 241.148 99.2134 240.875 98.8423 cv
240.113 97.8042 li
240.496 96.5737 li
241.662 92.8286 250.282 75.4731 259.303 75.793 cv
259.914 75.8145 260.516 75.9175 261.094 76.1001 cv
266.469 77.7915 265.455 86.8462 264.382 96.4312 cv
264.21 97.9644 264.045 99.438 263.925 100.771 cv
263.792 102.27 li
263.792 102.27 262.334 102.912 262.292 102.929 cv
262.292 105.857 262.534 108.176 262.769 110.432 cv
263.072 113.339 263.358 116.083 262.973 119.376 cv
262.238 125.643 257.412 128.336 253.237 128.187 cv
253.236 128.187 253.236 128.187 253.236 128.187 cv
cp
f
259.763 78.5132 mo
257.088 77.9927 250.51 83.5688 246.157 94.4595 cv
241.364 106.452 244.18 118.237 247.618 122.714 cv
251.212 127.397 259.552 126.664 260.44 119.08 cv
261.329 111.495 258.316 107.096 260.645 92.3013 cv
261.924 84.1665 262.888 79.1216 259.763 78.5132 cv
cp
.0250248 .567285 .998169 0 cmyk
f
259.521 77.2065 mo
255.803 77.0737 249.184 83.4521 244.973 93.9858 cv
240.01 106.405 242.94 118.716 246.606 123.492 cv
248.204 125.572 250.636 126.82 253.281 126.914 cv
257.011 127.046 261.063 124.722 261.707 119.227 cv
262.076 116.076 261.809 113.522 261.5 110.567 cv
261.044 106.202 260.526 101.253 261.904 92.4985 cv
262.087 91.3394 li
263.352 83.3525 264.188 78.0757 260.007 77.2612 cv
259.851 77.2305 259.687 77.2129 259.521 77.2065 cv
259.521 77.2065 li
cp
259.475 78.4814 mo
259.575 78.4849 259.672 78.4946 259.763 78.5132 cv
262.888 79.1216 261.924 84.1665 260.645 92.3013 cv
258.316 107.096 261.329 111.495 260.44 119.08 cv
259.902 123.677 256.625 125.757 253.327 125.639 cv
251.185 125.563 249.033 124.559 247.618 122.714 cv
244.18 118.237 241.364 106.452 246.157 94.4595 cv
250.361 83.9419 256.641 78.3804 259.475 78.4814 cv
259.475 78.4814 li
cp
.75021 .679683 .670222 .90164 cmyk
f
246.16 94.4614 mo
250.513 83.5684 257.091 77.9932 259.76 78.5146 cv
260.056 78.5669 260.316 78.6709 260.54 78.8145 cv
257.549 79.6768 251.546 85.3491 248.876 101.515 cv
245.673 120.938 257 125.765 260.266 120.065 cv
258.803 126.723 251.047 127.186 247.617 122.717 cv
244.18 118.24 241.368 106.453 246.16 94.4614 cv
cp
.101595 .727993 1 .0109865 cmyk
f
262.636 87.2935 mo
262.551 89.4331 262.323 91.7642 262.08 94.0435 cv
255.889 95.1997 248.974 93.3022 245.835 91.1743 cv
246.961 89.1831 248.338 87.0464 249.837 85.0923 cv
252.973 86.5991 257.882 87.7349 262.636 87.2935 cv
cp
0 0 0 0 cmyk
f
262.08 94.0435 mo
261.836 96.3481 261.56 98.5923 261.389 100.542 cv
256.635 102.643 245.499 100.826 242.927 97.3306 cv
243.341 96.0015 244.392 93.7183 245.835 91.1743 cv
248.974 93.3022 255.889 95.1997 262.08 94.0435 cv
cp
0 .970642 .96051 0 cmyk
f
260.329 78.5347 mo
262.398 79.187 262.821 82.8262 262.636 87.2935 cv
257.882 87.7349 252.973 86.5991 249.837 85.0923 cv
253.11 80.8457 256.999 77.4888 260.329 78.5347 cv
cp
f
260.329 78.5347 mo
260.498 78.5835 260.648 78.6567 260.789 78.7554 cv
259.066 79.1113 256.125 81.2256 253.464 86.4214 cv
252.108 86.0483 250.874 85.5884 249.837 85.0923 cv
253.11 80.8457 256.999 77.4888 260.329 78.5347 cv
cp
.132235 1 1 .0386358 cmyk
f
253.464 86.4214 mo
252.496 88.3003 251.564 90.5806 250.734 93.3228 cv
248.73 92.7417 247.014 91.9741 245.835 91.1743 cv
246.961 89.1831 248.338 87.0464 249.837 85.0923 cv
250.874 85.5884 252.108 86.0483 253.464 86.4214 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
250.734 93.3228 mo
250.097 95.4448 249.526 97.8384 249.039 100.543 cv
246.283 99.8247 243.941 98.7114 242.927 97.3306 cv
243.341 96.0015 244.392 93.7183 245.835 91.1743 cv
247.014 91.9741 248.73 92.7417 250.734 93.3228 cv
cp
.132235 1 1 .0386358 cmyk
f
259.26 77.0669 mo
259.259 77.0679 li
251.512 76.792 243.009 92.7925 241.713 96.9536 cv
241.592 97.3403 241.663 97.7612 241.903 98.0864 cv
244.049 101.006 250.204 102.521 255.014 102.694 cv
256.98 102.764 259.77 102.65 261.9 101.709 cv
262.326 101.522 262.615 101.119 262.656 100.657 cv
262.775 99.3218 262.94 97.8472 263.115 96.2896 cv
264.083 87.6372 265.085 78.6929 260.712 77.3159 cv
260.244 77.1689 259.755 77.0854 259.26 77.0669 cv
259.26 77.0669 li
cp
259.213 78.3413 mo
259.591 78.3545 259.963 78.4175 260.329 78.5322 cv
264.395 79.812 262.094 92.6294 261.386 100.543 cv
259.802 101.242 257.508 101.507 255.06 101.419 cv
250.162 101.245 244.642 99.6616 242.93 97.3325 cv
244.293 92.9546 252.553 78.1055 259.213 78.3413 cv
259.213 78.3413 li
cp
.75021 .679683 .670222 .90164 cmyk
f
267.465 0 mo
267.464 0 267.461 0 267.461 0 cv
261.459 0 252.505 .953613 243.93 5.49609 cv
235.218 10.1104 229.02 17.2798 225.508 26.8042 cv
224.029 30.814 223.332 35.2476 223.423 40.0288 cv
223.358 40.0088 223.292 39.9893 223.228 39.9707 cv
220.406 39.1514 217.296 38.7358 213.986 38.7358 cv
209.883 38.7358 205.548 39.3647 201.101 40.6064 cv
200.879 40.668 li
200.216 40.8491 199.654 41.2896 199.321 41.8906 cv
198.987 42.4907 198.91 43.2007 199.107 43.8589 cv
201.454 51.707 206.986 56.7725 212.531 59.4824 cv
212.422 59.5737 212.313 59.666 212.207 59.7588 cv
204.065 66.8037 204.554 79.2534 205.429 83.4561 cv
205.677 84.646 206.726 85.4868 207.924 85.4868 cv
207.986 85.4868 208.049 85.4839 208.112 85.48 cv
216.279 84.8804 224.225 82.1411 229.855 78.2124 cv
229.799 79.7969 229.883 81.3877 230.219 83.0229 cv
231.25 88.0503 234.702 91.0522 239.452 91.0522 cv
245.059 91.0522 251.831 86.4087 253.562 79.5513 cv
256.508 80.3789 259.678 80.7974 263.025 80.7974 cv
265.59 80.7974 268.313 80.5508 271.119 80.0654 cv
282.544 78.0854 291.679 74.6616 298.306 69.8784 cv
299.47 70.4355 300.75 70.7236 302.087 70.7236 cv
305.358 70.7236 308.76 69.0391 311.419 66.1016 cv
314.399 62.8105 315.873 58.561 315.463 54.4448 cv
314.726 47.042 308.228 37.3354 303.313 31.6367 cv
303.403 31.3179 303.431 30.9819 303.391 30.645 cv
301.887 17.9438 293.871 6.90137 282.969 2.5127 cv
279.003 .916504 273.352 .000976563 267.465 0 cv
267.465 0 li
cp
f
231.3 56.7285 mo
233.997 54.3013 231.3 44.9697 222.517 42.4194 cv
213.094 39.6836 203.108 42.7036 201.55 43.1284 cv
206.083 58.2866 224.217 63.1035 231.3 56.7285 cv
cp
0 .970642 .96051 0 cmyk
f
222.514 42.4219 mo
231.303 44.9722 233.998 54.3052 231.303 56.7275 cv
224.308 63.0181 206.577 58.4111 201.749 43.7393 cv
204.979 48.9927 212.917 56.8296 221.086 50.7773 cv
224.248 48.4316 222.964 44.8276 220.933 42.0229 cv
221.46 42.1333 221.987 42.269 222.514 42.4219 cv
cp
.132235 1 1 .0386358 cmyk
f
213.986 40.0107 mo
209.999 40.0107 205.779 40.624 201.443 41.835 cv
201.215 41.8984 li
200.883 41.9888 200.602 42.2085 200.435 42.5093 cv
200.269 42.8096 200.23 43.165 200.329 43.4937 cv
203.716 54.8208 214.308 60.7466 223.021 60.7466 cv
226.709 60.7466 229.953 59.6563 232.153 57.6763 cv
233.483 56.4795 233.909 54.3218 233.322 51.7578 cv
232.47 48.0376 229.222 43.0386 222.873 41.1953 cv
220.166 40.4092 217.175 40.0107 213.986 40.0107 cv
213.986 40.0107 li
cp
213.986 41.2856 mo
216.711 41.2856 219.641 41.5845 222.517 42.4194 cv
231.3 44.9697 233.997 54.3013 231.3 56.7285 cv
229.261 58.5645 226.305 59.4717 223.021 59.4717 cv
214.901 59.4717 204.778 53.9219 201.55 43.1284 cv
202.632 42.833 207.782 41.2856 213.986 41.2856 cv
213.986 41.2856 li
cp
.75021 .679683 .670222 .90164 cmyk
f
234.842 59.9863 mo
232.434 54.0366 221.475 55.1104 213.875 61.6865 cv
206.508 68.0615 207.217 79.5366 207.925 82.9365 cv
223.367 81.8032 239.856 72.3755 234.842 59.9863 cv
cp
0 .970642 .96051 0 cmyk
f
234.839 59.9829 mo
239.854 72.376 223.364 81.8027 207.928 82.9331 cv
207.75 82.0996 207.579 80.7822 207.52 79.1763 cv
216.113 77.0771 225.6 74.4927 227.308 67.0977 cv
228.625 61.3857 225.106 57.5776 222.225 56.9824 cv
227.877 55.1802 233.241 56.0303 234.839 59.9829 cv
cp
.132235 1 1 .0386358 cmyk
f
227.597 54.8066 mo
222.835 54.8066 217.258 57.0737 213.041 60.7217 cv
205.365 67.3652 205.844 79.1978 206.677 83.1963 cv
206.801 83.7915 207.325 84.2114 207.925 84.2114 cv
207.956 84.2114 207.987 84.2104 208.019 84.2085 cv
217.893 83.4834 230.067 79.1963 235.01 71.2515 cv
237.295 67.5767 237.646 63.5161 236.024 59.5083 cv
234.814 56.52 231.743 54.8066 227.597 54.8066 cv
227.597 54.8066 li
cp
227.597 56.0815 mo
231.004 56.0815 233.771 57.3394 234.842 59.9863 cv
239.856 72.3755 223.367 81.8032 207.925 82.9365 cv
207.217 79.5366 206.508 68.0615 213.875 61.6865 cv
218.093 58.0366 223.345 56.0815 227.597 56.0815 cv
227.597 56.0815 li
cp
.75021 .679683 .670222 .90164 cmyk
f
297.131 29.0679 mo
301.838 32.7124 312.062 46.0337 312.925 54.6982 cv
313.949 64.9736 300.481 73.9111 295.841 63.6299 cv
292.876 57.0581 295.249 49.5913 291.054 39.8037 cv
286.769 29.8057 292.118 25.187 297.131 29.0679 cv
cp
.280522 .914061 1 .298253 cmyk
f
297.127 29.0684 mo
301.836 32.7148 312.062 46.0347 312.929 54.6963 cv
313.523 60.7051 309.163 66.2642 304.513 67.7773 cv
315.87 61.5303 310.251 49.6387 304.361 39.3364 cv
300.884 33.2588 297.493 29.3232 294.892 27.8872 cv
295.623 28.0996 296.379 28.4907 297.127 29.0684 cv
cp
.215396 .82446 1 .119539 cmyk
f
293.619 26.4238 mo
293.619 26.4238 li
291.879 26.4238 290.379 27.2456 289.396 28.7373 cv
287.673 31.3496 287.851 35.5664 289.882 40.3062 cv
292.072 45.415 292.412 49.9722 292.711 53.9932 cv
292.977 57.5649 293.229 60.9385 294.679 64.1543 cv
296.223 67.5752 298.851 69.4585 302.08 69.4585 cv
304.949 69.4585 308.085 67.8862 310.47 65.2524 cv
313.211 62.2241 314.568 58.3311 314.194 54.5718 cv
313.26 45.1963 302.426 31.5557 297.911 28.0601 cv
296.529 26.9902 295.044 26.4238 293.619 26.4238 cv
293.619 26.4238 li
cp
293.618 27.6987 mo
294.718 27.6987 295.934 28.1411 297.131 29.0679 cv
301.838 32.7124 312.062 46.0337 312.925 54.6982 cv
313.628 61.7563 307.493 68.1836 302.08 68.1836 cv
299.612 68.1836 297.294 66.8486 295.841 63.6299 cv
292.876 57.0581 295.249 49.5913 291.054 39.8037 cv
287.792 32.1929 290.113 27.6997 293.618 27.6987 cv
293.618 27.6987 li
cp
.75021 .679683 .670222 .90164 cmyk
f
233.071 53.9648 mo
236.125 62.1772 243.696 82.2275 270.684 77.5527 cv
297.671 72.8774 306.596 60.7651 307.021 51.6274 cv
307.418 43.0942 303.511 42.5298 297.458 25.7026 cv
288.746 1.47754 263.246 2.32764 247.733 10.8276 cv
230.702 20.1592 226.909 37.3901 233.071 53.9648 cv
cp
.0250248 .567285 .998169 0 cmyk
f
278.342 6.76416 mo
264.581 5.54102 250.811 12.3574 250.029 33.6836 cv
249.51 48.0747 257.534 74.8159 280.136 75.4277 cv
277.263 76.2437 274.118 76.9575 270.684 77.5527 cv
243.696 82.2275 236.123 62.1763 233.071 53.9648 cv
226.909 37.3901 230.7 20.1611 247.733 10.8276 cv
256.378 6.09277 268.133 3.73047 278.342 6.76416 cv
cp
.101595 .727993 1 .0109865 cmyk
f
268.618 4.13135 mo
261.32 4.13135 253.686 6.11182 247.121 9.70947 cv
230.792 18.6563 224.951 35.7837 231.876 54.4092 cv
234.67 61.9248 241.215 79.5249 262.997 79.5249 cv
265.498 79.5249 268.157 79.2842 270.901 78.8086 cv
283.41 76.6421 293.077 72.7495 299.633 67.2397 cv
304.96 62.7632 308.036 57.2397 308.295 51.6865 cv
308.538 46.4604 307.209 43.9072 305.009 39.6763 cv
303.409 36.6006 301.218 32.3872 298.658 25.271 cv
292.043 6.87744 276.997 4.13135 268.618 4.13135 cv
268.618 4.13135 li
cp
268.618 5.40625 mo
280.427 5.40625 292.109 10.8286 297.458 25.7026 cv
303.511 42.5298 307.418 43.0942 307.021 51.6274 cv
306.596 60.7651 297.671 72.8774 270.684 77.5527 cv
267.923 78.0308 265.367 78.25 262.997 78.25 cv
242.196 78.25 235.812 61.3369 233.071 53.9648 cv
226.909 37.3901 230.702 20.1592 247.733 10.8276 cv
253.721 7.54688 261.193 5.40625 268.618 5.40625 cv
268.618 5.40625 li
cp
.75021 .679683 .670222 .90164 cmyk
f
241.571 49.0776 mo
245.363 53.668 252.409 68.9106 251.346 77.5527 cv
250.086 87.8013 234.983 93.561 232.717 82.5107 cv
231.269 75.4482 235.225 68.6855 233.284 58.2148 cv
231.3 47.5195 237.534 44.1899 241.571 49.0776 cv
cp
.280522 .914061 1 .298253 cmyk
f
241.571 49.0776 mo
245.362 53.668 252.409 68.9082 251.346 77.5527 cv
250.734 82.5337 246.867 86.4438 242.778 87.897 cv
252.375 83.1284 249.314 71.356 245.753 60.8755 cv
242.965 52.6563 239.684 47.6924 237.091 46.9185 cv
238.562 46.6978 240.194 47.4116 241.571 49.0776 cv
cp
.215396 .82446 1 .119539 cmyk
f
237.598 45.5996 mo
237.598 45.5996 li
236.09 45.5996 234.684 46.2935 233.636 47.5527 cv
231.724 49.8521 231.153 53.7217 232.03 58.4473 cv
233.043 63.9126 232.373 68.4341 231.781 72.4229 cv
231.256 75.9653 230.759 79.3115 231.468 82.7671 cv
232.368 87.1567 235.353 89.7769 239.452 89.7769 cv
244.974 89.7769 251.737 84.8208 252.611 77.708 cv
253.761 68.356 246.19 52.6675 242.554 48.2656 cv
241.134 46.5459 239.374 45.5996 237.598 45.5996 cv
237.598 45.5996 li
cp
237.598 46.8745 mo
238.931 46.8735 240.351 47.6011 241.571 49.0776 cv
245.363 53.668 252.409 68.9106 251.346 77.5527 cv
250.568 83.8838 244.506 88.5024 239.452 88.5024 cv
236.325 88.5024 233.583 86.7349 232.717 82.5107 cv
231.269 75.4482 235.225 68.6855 233.284 58.2148 cv
231.9 50.752 234.518 46.8745 237.598 46.8745 cv
237.598 46.8745 li
cp
.75021 .679683 .670222 .90164 cmyk
f
233 64.9443 mo
235.99 59.7119 269.409 26.8364 300.858 30.9443 cv
299.583 20.1777 292.925 9.26953 282.017 4.87842 cv
271.014 .449219 238.242 -.36377 227.9 27.6865 cv
222.457 42.4512 229.883 59.7036 233 64.9443 cv
cp
0 .970642 .96051 0 cmyk
f
298.555 22.0396 mo
299.728 24.9204 300.501 27.938 300.858 30.9468 cv
297.119 30.4541 293.353 30.4878 289.613 30.9385 cv
294.475 28.728 297.467 25.8643 298.555 22.0396 cv
cp
.132235 1 1 .0386358 cmyk
f
247.895 26.3062 mo
252.111 36.6929 262.149 37.3984 272.511 35.6479 cv
251.881 44.2837 235.077 61.3003 233.003 64.9468 cv
229.883 59.7026 222.454 42.4478 227.903 27.6831 cv
233.003 13.8364 243.568 7.02832 254.287 4.20605 cv
248.379 8.73682 244.164 17.1089 247.895 26.3062 cv
cp
f
267.464 1.2749 mo
261.606 1.2749 252.873 2.20313 244.528 6.62158 cv
236.101 11.085 230.104 18.0234 226.704 27.2456 cv
220.044 45.3115 231.785 65.395 231.904 65.5962 cv
232.134 65.9829 232.551 66.2197 233 66.2197 cv
233.004 66.2197 233.007 66.2197 233.011 66.2197 cv
233.464 66.2153 233.882 65.9712 234.107 65.5771 cv
236.746 60.9585 265.993 31.8652 295.322 31.8652 cv
297.142 31.8652 298.949 31.9814 300.693 32.2085 cv
300.749 32.2163 300.804 32.2197 300.858 32.2197 cv
301.192 32.2197 301.514 32.0894 301.754 31.8516 cv
302.034 31.5752 302.171 31.1851 302.125 30.7944 cv
300.675 18.5498 292.969 7.91211 282.493 3.69531 cv
278.728 2.17969 273.11 1.2749 267.464 1.2749 cv
267.464 1.2749 li
cp
267.464 2.5498 mo
273.475 2.5498 278.723 3.55273 282.017 4.87842 cv
292.925 9.26953 299.583 20.1777 300.858 30.9443 cv
299.016 30.7036 297.172 30.5898 295.322 30.5898 cv
265.603 30.5898 235.815 60.0181 233 64.9443 cv
229.883 59.7036 222.457 42.4512 227.9 27.6865 cv
235.146 8.03418 253.399 2.5498 267.464 2.5498 cv
267.464 2.5498 li
cp
.75021 .679683 .670222 .90164 cmyk
f
300.894 52.2227 mo
303.994 58.4692 299.503 67.0073 290.862 71.2969 cv
282.222 75.5869 272.703 74.0005 269.603 67.7554 cv
266.502 61.5088 270.994 52.9697 279.635 48.6802 cv
288.276 44.3901 297.794 45.9771 300.894 52.2227 cv
cp
.00985733 .0806592 .600977 0 cmyk
f
289.556 47.1543 mo
290.168 49.0923 288.335 51.4009 285.462 52.3066 cv
282.589 53.2129 279.765 52.3745 279.153 50.4346 cv
278.541 48.4956 280.374 46.187 283.246 45.2817 cv
286.12 44.375 288.944 45.2134 289.556 47.1543 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
288.848 47.3774 mo
288.789 47.189 288.697 47.0171 288.592 46.854 cv
288.274 48.1738 286.911 49.4644 285.028 50.0581 cv
282.825 50.7524 280.662 50.2563 279.833 48.9648 cv
279.731 49.3838 279.734 49.8071 279.861 50.2114 cv
280.39 51.8872 282.83 52.6113 285.312 51.8286 cv
287.793 51.0459 289.376 49.0518 288.848 47.3774 cv
cp
.636561 .700954 .654597 .746487 cmyk
f
270.514 46.6685 mo
271.831 49.7207 270.802 53.1016 268.216 54.2168 cv
265.629 55.3315 262.465 53.7607 261.148 50.7061 cv
259.832 47.6533 260.861 44.2749 263.447 43.1592 cv
266.033 42.0444 269.197 43.6138 270.514 46.6685 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
269.805 46.9741 mo
269.666 46.6514 269.502 46.3477 269.318 46.0659 cv
269.755 48.2822 268.859 50.4565 267.005 51.2549 cv
265.084 52.0835 262.787 51.166 261.494 49.1855 cv
261.574 49.5913 261.684 49.999 261.857 50.4009 cv
262.974 52.9937 265.66 54.3262 267.855 53.3799 cv
270.05 52.4346 270.923 49.5649 269.805 46.9741 cv
cp
.636561 .700954 .654597 .746487 cmyk
f
267.85 45.4395 mo
268.436 46.5225 268.153 47.8101 267.217 48.3164 cv
266.282 48.8237 265.048 48.3569 264.461 47.2739 cv
263.875 46.1904 264.159 44.9033 265.094 44.396 cv
266.03 43.8896 267.264 44.356 267.85 45.4395 cv
cp
0 0 0 0 cmyk
f
257.141 43.043 mo
259.832 42.2441 262.945 41.3843 267.058 41.894 cv
269.808 42.2354 269.883 39.9502 267.352 39.1475 cv
265.319 38.5024 260.474 39.5161 256.972 41.9565 cv
255.478 42.9971 256.031 43.373 257.141 43.043 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
297.808 36.5044 mo
299.072 39.5293 298.084 42.8794 295.603 43.9844 cv
293.121 45.0889 290.084 43.5327 288.821 40.5054 cv
287.557 37.4795 288.545 34.1318 291.026 33.0264 cv
293.508 31.9214 296.544 33.4771 297.808 36.5044 cv
cp
f
297.167 36.9619 mo
297.032 36.647 296.875 36.3525 296.697 36.0786 cv
297.118 38.2334 296.255 40.3467 294.468 41.123 cv
292.615 41.9282 290.4 41.0366 289.154 39.1108 cv
289.232 39.5059 289.337 39.9019 289.504 40.292 cv
290.582 42.813 293.17 44.1079 295.287 43.188 cv
297.402 42.269 298.245 39.4795 297.167 36.9619 cv
cp
.636561 .700954 .654597 .746487 cmyk
f
295.298 35.2603 mo
295.876 36.3643 295.597 37.6763 294.673 38.1919 cv
293.75 38.71 292.532 38.2344 291.954 37.1304 cv
291.375 36.0254 291.655 34.7129 292.578 34.1968 cv
293.501 33.6812 294.719 34.1563 295.298 35.2603 cv
cp
0 0 0 0 cmyk
f
293.865 29.4463 mo
291.728 30.8887 289.306 32.5957 287.427 35.8345 cv
286.171 38 284.297 36.6885 285.062 34.4028 cv
285.676 32.5674 289.184 29.7168 293.088 28.6758 cv
294.754 28.2324 294.748 28.8521 293.865 29.4463 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
287.344 46.8955 mo
287.406 47.5171 286.71 48.0957 285.79 48.1875 cv
284.869 48.2798 284.072 47.8516 284.009 47.23 cv
283.947 46.6079 284.643 46.0288 285.563 45.9365 cv
286.484 45.8438 287.282 46.2729 287.344 46.8955 cv
cp
0 0 0 0 cmyk
f
283.47 61.1646 mo
281.713 61.1646 280.064 60.5029 279.254 58.9321 cv
279.093 58.6191 279.216 58.2349 279.529 58.0737 cv
279.841 57.9106 280.226 58.0356 280.388 58.3477 cv
281.4 60.3101 284.214 60.0679 285.858 59.4268 cv
288.727 58.3096 289.787 56.9341 289.296 54.9692 cv
289.211 54.6284 289.419 54.2822 289.76 54.1968 cv
290.102 54.1104 290.448 54.3193 290.533 54.6606 cv
291.516 58.5913 287.606 60.1143 286.321 60.6157 cv
285.417 60.9678 284.428 61.1646 283.47 61.1646 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
277.475 19.5957 mo
279.323 18.6064 280.65 16.0015 278.027 12.4927 cv
275.403 8.98486 268.741 8.07813 264.651 9.29541 cv
260.561 10.5132 256.585 14.1812 257.042 18.666 cv
257.45 22.667 260.544 24.1235 264.061 23.9463 cv
264.406 25.9277 264.896 26.9575 265.325 26.8682 cv
266.053 26.7168 268.827 25.7334 269.366 25.5425 cv
269.29 24.7954 269.04 23.0835 269.04 23.0835 cv
270.237 25.0459 li
271.091 24.9736 274.278 23.7212 274.605 23.521 cv
274.406 23.1938 273.523 21.3511 273.523 21.3511 cv
275.506 23.1675 li
276.364 22.9893 279.031 21.8906 279.031 21.8906 cv
279.379 21.1602 277.475 19.5957 277.475 19.5957 cv
cp
0 0 0 0 cmyk
f
267.685 16.6108 mo
268.182 17.8975 267.608 19.3174 266.404 19.7822 cv
265.2 20.248 263.821 19.583 263.324 18.2964 cv
262.827 17.0098 263.4 15.5898 264.604 15.125 cv
265.809 14.6592 267.188 15.3247 267.685 16.6108 cv
cp
0 .970642 .96051 0 cmyk
f
273.956 14.1104 mo
274.729 15.251 274.551 16.7212 273.559 17.3936 cv
272.566 18.0669 271.135 17.6865 270.361 16.5444 cv
269.588 15.4038 269.766 13.9321 270.758 13.2598 cv
271.75 12.5874 273.182 12.9673 273.956 14.1104 cv
cp
f
127.855 102.476 mo
126.345 105.101 123.779 106.895 120.819 107.398 cv
115.1 108.37 105.482 105.874 97.5449 99.313 cv
97.0605 99.4937 96.5913 99.6177 96.1353 99.686 cv
94.8608 99.8745 li
93.9526 98.9595 li
91.187 96.1792 79.873 80.4458 84.373 72.6201 cv
84.6772 72.0908 85.0503 71.606 85.4824 71.1802 cv
89.4893 67.2207 97.0205 72.3481 104.992 77.7778 cv
106.267 78.6455 107.493 79.481 108.615 80.209 cv
109.878 81.0278 li
109.878 81.0278 109.763 82.6177 109.759 82.6626 cv
112.348 84.0313 114.511 84.9028 116.615 85.7495 cv
119.327 86.8394 121.886 87.8696 124.617 89.7495 cv
129.814 93.3267 129.938 98.854 127.855 102.474 cv
127.855 102.476 127.855 102.476 127.855 102.476 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
86.9927 73.4854 mo
85.2822 75.6069 87.1372 84.0293 94.7295 92.9683 cv
103.091 102.81 114.824 105.83 120.391 104.883 cv
126.211 103.894 129.459 96.1812 123.171 91.8491 cv
116.88 87.519 111.584 88.1255 99.5942 79.1509 cv
93.001 74.2168 88.9912 71.0073 86.9927 73.4854 cv
cp
.0250248 .567285 .998169 0 cmyk
f
85.7241 73.0894 mo
83.8696 76.313 86.4141 85.146 93.7573 93.7925 cv
102.417 103.985 114.669 107.15 120.605 106.141 cv
123.19 105.702 125.431 104.134 126.751 101.84 cv
128.611 98.605 128.451 93.936 123.894 90.7983 cv
121.28 88.9985 118.898 88.0415 116.14 86.9341 cv
112.069 85.2964 107.453 83.4404 100.357 78.1309 cv
99.418 77.4258 li
92.9482 72.5747 88.6748 69.3691 86 72.6851 cv
85.8994 72.8091 85.8076 72.9463 85.7241 73.0894 cv
85.7241 73.0894 li
cp
86.8301 73.7251 mo
86.8799 73.6377 86.9336 73.5571 86.9927 73.4854 cv
88.9912 71.0073 93.001 74.2168 99.5942 79.1509 cv
111.584 88.1255 116.88 87.519 123.171 91.8491 cv
126.984 94.4751 127.291 98.3423 125.645 101.205 cv
124.576 103.062 122.683 104.495 120.391 104.883 cv
114.824 105.83 103.091 102.81 94.7295 92.9683 cv
87.397 84.3335 85.4155 76.1831 86.8301 73.7251 cv
86.8301 73.7251 li
cp
.75021 .679683 .670222 .90164 cmyk
f
94.7324 92.9663 mo
87.1372 84.0259 85.2842 75.6045 86.9927 73.4888 cv
87.1768 73.252 87.3911 73.0703 87.6226 72.939 cv
86.9863 75.9863 89.1948 83.9448 102.238 93.8618 cv
117.911 105.773 127.473 98.0171 123.96 92.4644 cv
129.163 96.8696 125.946 103.943 120.393 104.886 cv
114.828 105.832 103.094 102.806 94.7324 92.9663 cv
cp
.101595 .727993 1 .0109865 cmyk
f
96.0977 75.0508 mo
97.9487 76.126 99.9038 77.417 101.805 78.6978 cv
99.9331 84.7104 95.0239 89.936 91.6748 91.7163 cv
90.4409 89.7905 89.1958 87.5747 88.1689 85.3345 cv
90.9663 83.2676 94.2661 79.459 96.0977 75.0508 cv
cp
0 0 0 0 cmyk
f
101.805 78.6978 mo
103.728 79.9897 105.584 81.2822 107.227 82.3457 cv
106.862 87.5298 100.05 96.5249 95.7588 97.1655 cv
94.7769 96.1792 93.2495 94.1812 91.6748 91.7163 cv
95.0239 89.936 99.9331 84.7104 101.805 78.6978 cv
cp
0 .970642 .96051 0 cmyk
f
87.2764 72.9946 mo
88.8208 71.4702 92.2349 72.7988 96.0977 75.0508 cv
94.2661 79.459 90.9663 83.2676 88.1689 85.3345 cv
85.9443 80.4575 84.7954 75.4507 87.2764 72.9946 cv
cp
f
87.2764 72.9946 mo
87.3984 72.8691 87.5337 72.7695 87.686 72.6924 cv
87.1963 74.3813 87.6899 77.9702 91.0391 82.75 cv
90.0762 83.7749 89.0928 84.6509 88.1689 85.3345 cv
85.9443 80.4575 84.7954 75.4507 87.2764 72.9946 cv
cp
.132235 1 1 .0386358 cmyk
f
91.0391 82.75 mo
92.2476 84.4849 93.8281 86.3745 95.8643 88.3892 cv
94.4141 89.8892 92.9336 91.0474 91.6748 91.7163 cv
90.4409 89.7905 89.1958 87.5747 88.1689 85.3345 cv
89.0928 84.6509 90.0762 83.7749 91.0391 82.75 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
95.8643 88.3892 mo
97.4429 89.9448 99.292 91.5688 101.455 93.2651 cv
99.5313 95.3638 97.4526 96.9146 95.7588 97.1655 cv
94.7769 96.1792 93.2495 94.1812 91.6748 91.7163 cv
92.9336 91.0474 94.4141 89.8892 95.8643 88.3892 cv
cp
.132235 1 1 .0386358 cmyk
f
85.4795 73.2539 mo
85.4795 73.2549 85.4795 73.2554 85.4795 73.2554 cv
81.6143 79.9746 91.7847 94.9722 94.8569 98.062 cv
95.1421 98.3491 95.5469 98.4839 95.9468 98.4233 cv
99.5322 97.8911 103.748 93.1587 106.149 88.9868 cv
107.13 87.2827 108.334 84.7622 108.498 82.439 cv
108.531 81.9756 108.309 81.5317 107.921 81.2788 cv
106.796 80.5488 105.57 79.7144 104.273 78.832 cv
97.0781 73.9312 89.6396 68.8647 86.3784 72.0859 cv
86.0293 72.4326 85.7271 72.8247 85.4795 73.2539 cv
85.4795 73.2539 li
cp
86.5835 73.8921 mo
86.7725 73.5625 87.0015 73.2637 87.2739 72.9937 cv
90.3057 69.998 100.562 78.0229 107.227 82.3486 cv
107.104 84.0747 106.266 86.2261 105.044 88.3511 cv
102.6 92.6001 98.6206 96.7388 95.7607 97.1636 cv
92.5278 93.9116 83.2622 79.668 86.5835 73.8921 cv
86.5835 73.8921 li
cp
.75021 .679683 .670222 .90164 cmyk
f
133.259 89.5903 mo
130.264 87.7925 li
147.723 64.0137 li
147.937 63.7222 148.052 63.3696 148.052 63.0073 cv
148.051 49.8438 li
148.051 49.2461 147.738 48.6934 147.226 48.3862 cv
146.714 48.0791 146.078 48.0625 145.552 48.3442 cv
133.937 54.54 li
133.618 54.71 133.361 54.978 133.204 55.3042 cv
120.443 81.9014 li
117.448 80.105 li
116.644 79.6221 115.599 79.8833 115.116 80.6885 cv
112.503 85.0444 li
112.02 85.8491 112.281 86.894 113.086 87.3765 cv
116.759 89.5796 li
110.809 101.983 li
110.429 102.775 110.714 103.724 111.467 104.176 cv
113.152 105.187 li
114.837 106.198 li
115.59 106.649 116.563 106.454 117.082 105.746 cv
125.224 94.6577 li
128.897 96.8618 li
129.702 97.3442 130.747 97.0835 131.229 96.2778 cv
133.843 91.9224 li
134.325 91.1177 134.064 90.0728 133.259 89.5903 cv
cp
f
114.026 103.729 mo
115.712 104.74 li
146.352 63.0083 li
146.352 49.8438 li
134.736 56.04 li
112.341 102.718 li
114.026 103.729 li
cp
.280522 .914061 1 .298253 cmyk
f
145.19 51.7788 mo
145.191 64.5894 li
146.352 63.0083 li
146.352 49.8438 li
134.736 56.04 li
133.888 57.8086 li
145.19 51.7788 li
cp
.215396 .82446 1 .119539 cmyk
f
129.771 95.4038 mo
113.96 85.9194 li
116.574 81.5625 li
132.385 91.0474 li
129.771 95.4038 li
cp
f
131.997 91.6929 mo
116.187 82.209 li
116.574 81.5625 li
132.385 91.0474 li
131.997 91.6929 li
cp
.144869 .807401 1 .0376593 cmyk
f
124.946 93.1685 mo
124.874 93.1245 124.813 93.0601 124.776 92.9771 cv
120.876 84.1938 li
120.781 83.9795 120.877 83.7285 121.092 83.6338 cv
121.307 83.5386 121.558 83.6343 121.653 83.8486 cv
125.553 92.6313 li
125.648 92.8452 125.552 93.0972 125.337 93.1929 cv
125.207 93.2505 125.061 93.2368 124.946 93.1685 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
118.204 89.1235 mo
118.089 89.0552 118.009 88.9331 117.999 88.7896 cv
117.982 88.5552 118.158 88.353 118.392 88.3354 cv
127.977 87.6421 li
128.21 87.6255 128.414 87.8022 128.431 88.0356 cv
128.448 88.27 128.272 88.4722 128.038 88.4907 cv
118.453 89.1831 li
118.363 89.1899 118.276 89.1665 118.204 89.1235 cv
cp
f
119.934 95.4067 mo
119.187 97.2661 116.72 98.0259 114.424 97.104 cv
112.128 96.1812 110.873 93.9243 111.621 92.0649 cv
112.369 90.2046 114.835 89.4458 117.13 90.3687 cv
119.427 91.2915 120.682 93.5474 119.934 95.4067 cv
cp
f
118.686 94.9048 mo
118.073 96.4292 115.833 96.9644 113.682 96.1001 cv
111.531 95.2358 110.285 93.2983 110.897 91.7749 cv
111.51 90.2505 113.75 89.7144 115.901 90.5796 cv
118.052 91.4438 119.298 93.3813 118.686 94.9048 cv
cp
.0250248 .567285 .998169 0 cmyk
f
41.5513 133.8 mo
39.7661 133.734 37.9463 133.52 36.1416 133.164 cv
30.7695 132.106 26.7275 129.055 24.4521 124.34 cv
20.5669 116.292 22.7368 105.628 24.7617 101.708 cv
26.2881 98.7505 28.4424 97.105 30.6738 97.187 cv
33.3389 97.2856 35.2168 99.5112 36.2554 103.801 cv
37.7197 109.86 43.3506 111.329 47.8169 111.494 cv
49.502 111.555 51.2847 111.427 52.9717 111.123 cv
56.9707 110.402 59.5039 110.125 61.4434 110.196 cv
64.4761 110.309 66.4839 111.396 67.4092 113.431 cv
68.5986 116.048 68.0024 119.458 65.772 122.787 cv
62.1792 128.146 53.6792 134.249 41.5527 133.8 cv
41.5518 133.8 41.5518 133.8 41.5513 133.8 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
65.0879 114.488 mo
64.0581 112.224 60.2749 112.396 53.4243 113.632 cv
46.4131 114.897 36.041 113.769 33.7759 104.402 cv
32.1157 97.5366 28.8594 99.3296 27.0269 102.876 cv
24.3179 108.123 21.4141 127.664 36.6353 130.663 cv
55.2124 134.325 67.8413 120.543 65.0879 114.488 cv
cp
.101595 .727993 1 .0109865 cmyk
f
27.4067 117.496 mo
26.4482 116.975 26.0728 120.005 26.3911 122.424 cv
23.4854 115.445 25.2964 106.242 27.0269 102.876 cv
28.8594 99.3296 32.1157 97.5366 33.7759 104.402 cv
34.6836 108.161 36.8901 110.589 39.6675 112.079 cv
39.146 113.31 36.0054 111.518 35.2666 111.967 cv
33.9868 112.762 36.5278 116.267 35.2383 116.644 cv
33.9482 117.022 31.769 114.535 31.0264 115.502 cv
29.9199 116.933 31.5439 120.625 30.27 120.578 cv
28.9956 120.531 28.6577 118.179 27.4067 117.496 cv
cp
.00985733 .0806592 .600977 0 cmyk
f
69.5254 156.76 mo
64.9736 156.265 60.7485 155.098 58.2227 153.644 cv
54.6284 151.572 54.3765 143.942 57.2607 124.486 cv
57.4009 123.537 li
58.5293 115.823 63.231 112.561 67.3887 112.752 cv
67.5854 112.761 67.7769 112.777 67.9668 112.797 cv
72.1997 113.257 74.8467 116.405 75.8335 122.152 cv
76.2002 124.29 76.3691 126.865 76.5483 129.589 cv
76.8135 133.617 77.2129 139.702 78.5181 141.065 cv
81.687 144.374 84.4575 149.771 81.8379 154.093 cv
79.9551 157.198 74.1035 157.256 69.5254 156.76 cv
69.5254 156.76 li
cp
.75021 .679683 .670222 .90164 cmyk
f
67.272 115.3 mo
63.8491 115.144 60.7549 118.225 59.9238 123.906 cv
59.0918 129.587 55.9546 149.394 59.4956 151.434 cv
64.5244 154.333 77.8335 155.779 79.6567 152.77 cv
81.48 149.762 79.2769 145.543 76.6768 142.828 cv
73.7764 139.801 74.3677 128.687 73.3198 122.583 cv
72.5352 118.01 70.6748 115.457 67.272 115.3 cv
cp
.101595 .727993 1 .0109865 cmyk
f
76.6768 142.828 mo
77.959 144.165 79.1494 145.875 79.7974 147.623 cv
75.7295 152.797 63.9189 147.084 66.4487 144.495 cv
68.5664 142.323 73.5503 141.703 76.5239 142.659 cv
76.5781 142.715 76.623 142.771 76.6768 142.828 cv
cp
.0250248 .567285 .998169 0 cmyk
f
73.3198 122.583 mo
73.9331 126.147 73.9829 131.428 74.4995 135.802 cv
69.5737 138.798 61.605 137.539 58.3662 135.792 cv
58.8535 130.92 59.5859 126.229 59.9238 123.906 cv
60.7549 118.225 63.8521 115.141 67.272 115.3 cv
70.6748 115.457 72.5352 118.01 73.3198 122.583 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
64.3984 138.089 mo
61.7368 137.801 59.3081 137.074 57.6953 136.184 cv
57.3813 136.011 57.2666 135.616 57.4399 135.3 cv
57.6138 134.988 58.0098 134.874 58.3237 135.045 cv
61.4351 136.763 69.4829 138.224 74.4414 135.023 cv
74.7441 134.83 75.146 134.916 75.3398 135.217 cv
75.5347 135.519 75.4478 135.92 75.1465 136.116 cv
72.1309 138.063 68.0464 138.487 64.3984 138.089 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
100.647 151.042 mo
96.0684 151.042 91.7417 150.34 89.0737 149.167 cv
85.2764 147.497 84.2012 139.937 84.9653 120.284 cv
85.002 119.325 li
85.2905 111.535 89.6113 107.785 93.7661 107.525 cv
93.9629 107.512 94.1548 107.506 94.3452 107.506 cv
98.6035 107.506 101.575 110.349 103.177 115.957 cv
103.773 118.041 104.219 120.583 104.692 123.273 cv
105.391 127.248 106.445 133.252 107.891 134.467 cv
111.398 137.414 114.736 142.481 112.599 147.061 cv
111.063 150.352 105.252 151.042 100.647 151.042 cv
100.647 151.042 li
cp
f
93.9253 110.07 mo
90.5054 110.284 87.7627 113.682 87.5503 119.419 cv
87.3379 125.157 86.3594 145.187 90.1006 146.833 cv
95.4131 149.169 108.8 149.169 110.288 145.982 cv
111.775 142.794 109.129 138.838 106.25 136.419 cv
103.04 133.723 102.427 122.611 100.726 116.657 cv
99.4502 112.195 97.3252 109.857 93.9253 110.07 cv
cp
.101595 .727993 1 .0109865 cmyk
f
106.25 136.419 mo
107.67 137.61 109.038 139.182 109.871 140.849 cv
106.387 146.434 94.0273 142.029 96.2627 139.182 cv
98.1328 136.794 103.021 135.637 106.08 136.267 cv
106.14 136.318 106.191 136.37 106.25 136.419 cv
cp
.0250248 .567285 .998169 0 cmyk
f
100.726 116.657 mo
101.72 120.133 102.34 125.377 103.326 129.67 cv
98.7534 133.181 90.6953 132.791 87.2866 131.404 cv
87.2446 126.508 87.4653 121.765 87.5503 119.419 cv
87.7627 113.682 90.5083 110.282 93.9253 110.07 cv
97.3252 109.857 99.4502 112.195 100.726 116.657 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
93.5313 133.036 mo
90.8545 133.036 88.3613 132.577 86.6621 131.867 cv
86.3311 131.728 86.1743 131.347 86.313 131.016 cv
86.4517 130.685 86.833 130.53 87.1636 130.667 cv
90.4429 132.038 98.6011 132.62 103.185 128.903 cv
103.464 128.676 103.874 128.719 104.099 128.998 cv
104.325 129.277 104.282 129.686 104.004 129.912 cv
101.216 132.173 97.2012 133.036 93.5313 133.036 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
75.9883 128.439 mo
59.1362 128.439 54.3433 119.018 53.2891 111.115 cv
49.8281 85.1567 63.6787 66.4517 72.3735 64.9165 cv
73.2017 64.7705 74.0513 64.6958 74.8989 64.6958 cv
90.0898 64.6958 104.782 89.0522 105.959 104.348 cv
107.095 119.111 95.6299 126.117 84.5215 127.75 cv
81.3691 128.214 78.5781 128.439 75.9893 128.439 cv
75.9883 128.439 li
cp
f
103.414 104.547 mo
104.442 117.85 93.7832 123.808 84.1528 125.228 cv
75.6699 126.477 58.0835 127.778 55.814 110.778 cv
55.6948 109.911 55.6016 109.061 55.5249 108.219 cv
62.7075 111.662 89.7881 114.594 102.504 99.1499 cv
102.972 101.045 103.287 102.865 103.414 104.547 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
98.8496 89.145 mo
100.456 92.519 101.705 95.9448 102.504 99.1499 cv
89.7881 114.594 62.7075 111.662 55.5249 108.219 cv
55.1846 104.497 55.2104 100.977 55.5249 97.6792 cv
65.8354 99.5659 86.354 99.2944 98.8496 89.145 cv
cp
.132235 1 1 .0386358 cmyk
f
92.8398 79.1406 mo
95.1436 82.2178 97.1836 85.6519 98.8496 89.145 cv
86.354 99.2944 65.8354 99.5659 55.5249 97.6792 cv
55.9585 93.0806 56.9443 88.9243 58.2705 85.269 cv
68.1899 86.2554 82.3252 85.396 92.8398 79.1406 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
84.0679 70.4365 mo
87.2212 72.5615 90.2051 75.6211 92.8398 79.1406 cv
82.3252 85.396 68.1899 86.2554 58.2705 85.269 cv
59.7915 81.0278 61.7725 77.4575 63.8462 74.6528 cv
70.0513 75.0352 77.6333 74.1255 84.0679 70.4365 cv
cp
.132235 1 1 .0386358 cmyk
f
72.814 67.4277 mo
76.6133 66.7559 80.4551 67.9888 84.0679 70.4365 cv
77.6333 74.1255 70.0513 75.0352 63.8462 74.6528 cv
67.0166 70.3687 70.4165 67.8525 72.814 67.4277 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
102.504 99.1499 mo
102.972 101.045 103.287 102.865 103.414 104.547 cv
104.332 116.456 95.8916 122.482 87.1958 124.625 cv
77.438 125.508 72.2954 119.193 70.1538 110.93 cv
80.9653 111.279 94.5483 108.815 102.504 99.1499 cv
cp
.574731 .695186 .633936 .604669 cmyk
f
102.504 99.1499 mo
94.5483 108.815 80.9653 111.279 70.1538 110.93 cv
69.1333 107.055 68.7847 102.737 68.938 98.5464 cv
78.9082 98.2319 90.6211 95.8267 98.8496 89.145 cv
100.456 92.519 101.705 95.9448 102.504 99.1499 cv
cp
0 .970642 .96051 0 cmyk
f
98.8496 89.145 mo
90.6211 95.8267 78.9082 98.2319 68.938 98.5464 cv
69.0996 93.7271 69.9155 89.0688 71.1221 85.3882 cv
78.5176 84.8022 86.3628 82.9907 92.8398 79.1406 cv
95.1436 82.2178 97.1836 85.6519 98.8496 89.145 cv
cp
0 0 0 0 cmyk
f
92.8398 79.1406 mo
86.3628 82.9907 78.5176 84.8022 71.1221 85.3882 cv
71.9385 82.9146 72.9243 80.8833 74.021 79.54 cv
79.2485 73.1226 84.7905 72.7822 88.6494 74.2617 cv
90.1196 75.7407 91.5225 77.3809 92.8398 79.1406 cv
cp
0 .970642 .96051 0 cmyk
f
72.1558 111.62 mo
64.3735 111.611 57.6899 110.112 54.7314 108.66 cv
54.4106 108.5 54.2798 108.106 54.4404 107.776 cv
54.6011 107.448 54.9937 107.309 55.3145 107.467 cv
61.9043 110.705 89.6357 114.182 102.413 98.3345 cv
102.638 98.0562 103.045 98.0171 103.324 98.2466 cv
103.603 98.4761 103.646 98.8882 103.422 99.1685 cv
95.6631 108.801 82.8936 111.629 72.1558 111.62 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
54.2354 127.413 mo
51.209 127.304 48.4243 125.875 46.5947 123.494 cv
43.0625 118.892 40.7729 109.223 42.8638 99.1392 cv
42.4785 98.7954 42.1479 98.439 41.8755 98.0679 cv
41.1123 97.0288 li
41.4961 95.7993 li
42.6616 92.0532 51.2817 74.6982 60.3032 75.0181 cv
60.9136 75.0396 61.5161 75.1426 62.0942 75.3252 cv
67.4688 77.0166 66.4551 86.0708 65.3818 95.6558 cv
65.2104 97.189 65.0454 98.6626 64.9253 99.9956 cv
64.7915 101.495 li
64.7915 101.495 63.3335 102.136 63.2925 102.154 cv
63.292 105.082 63.5337 107.402 63.769 109.657 cv
64.0718 112.564 64.3579 115.308 63.9727 118.601 cv
63.2383 124.869 58.4116 127.562 54.2368 127.413 cv
54.2358 127.413 54.2358 127.413 54.2354 127.413 cv
cp
f
60.7627 77.7378 mo
58.0874 77.2178 51.5098 82.7939 47.1567 93.6851 cv
42.3643 105.677 45.1792 117.461 48.6177 121.94 cv
52.2124 126.623 60.5518 125.888 61.4399 118.305 cv
62.3286 110.719 59.3164 106.321 61.6445 91.5269 cv
62.9243 83.3916 63.8877 78.3467 60.7627 77.7378 cv
cp
.0250248 .567285 .998169 0 cmyk
f
60.5205 76.4316 mo
56.8027 76.2988 50.1836 82.6768 45.9731 93.2104 cv
41.0098 105.63 43.9399 117.941 47.606 122.716 cv
49.2036 124.796 51.6362 126.044 54.2813 126.139 cv
58.0107 126.272 62.063 123.948 62.7065 118.453 cv
63.0757 115.3 62.8091 112.748 62.5 109.792 cv
62.0439 105.427 61.5264 100.479 62.9043 91.7241 cv
63.0869 90.564 li
64.3521 82.5771 65.1875 77.3008 61.0063 76.4863 cv
60.8506 76.4556 60.6865 76.438 60.5205 76.4316 cv
60.5205 76.4316 li
cp
60.4751 77.7065 mo
60.5752 77.71 60.6714 77.7197 60.7627 77.7378 cv
63.8877 78.3467 62.9243 83.3916 61.6445 91.5269 cv
59.3164 106.321 62.3286 110.719 61.4399 118.305 cv
60.9014 122.903 57.625 124.982 54.3267 124.864 cv
52.1851 124.788 50.0327 123.784 48.6177 121.94 cv
45.1792 117.461 42.3643 105.677 47.1567 93.6851 cv
51.3608 83.1665 57.6406 77.605 60.4751 77.7065 cv
60.4751 77.7065 li
cp
.75021 .679683 .670222 .90164 cmyk
f
47.1597 93.686 mo
51.5127 82.793 58.0908 77.2183 60.7598 77.7397 cv
61.0562 77.792 61.3159 77.8955 61.54 78.0396 cv
58.5493 78.9019 52.5459 84.5737 49.876 100.741 cv
46.6733 120.164 57.9995 124.991 61.2656 119.291 cv
59.8027 125.948 52.0469 126.412 48.6167 121.942 cv
45.1792 117.464 42.3682 105.677 47.1597 93.686 cv
cp
.101595 .727993 1 .0109865 cmyk
f
63.6357 86.519 mo
63.5508 88.6577 63.3228 90.9897 63.0796 93.269 cv
56.8892 94.4253 49.9741 92.5278 46.8354 90.3989 cv
47.9604 88.4077 49.3379 86.271 50.8374 84.3169 cv
53.9727 85.8237 58.8823 86.9604 63.6357 86.519 cv
cp
0 0 0 0 cmyk
f
63.0796 93.269 mo
62.8354 95.5728 62.5601 97.8179 62.3887 99.7671 cv
57.6353 101.869 46.4985 100.05 43.9272 96.5562 cv
44.3408 95.2271 45.3916 92.9438 46.8354 90.3989 cv
49.9741 92.5278 56.8892 94.4253 63.0796 93.269 cv
cp
0 .970642 .96051 0 cmyk
f
61.3291 77.7598 mo
63.3979 78.4121 63.8203 82.0513 63.6357 86.519 cv
58.8823 86.9604 53.9727 85.8237 50.8374 84.3169 cv
54.1104 80.0703 57.9985 76.7139 61.3291 77.7598 cv
cp
f
61.3291 77.7598 mo
61.4976 77.8086 61.6479 77.8818 61.7886 77.9805 cv
60.0664 78.3364 57.1245 80.4507 54.4639 85.646 cv
53.1079 85.2739 51.874 84.814 50.8374 84.3169 cv
54.1104 80.0703 57.9985 76.7139 61.3291 77.7598 cv
cp
.132235 1 1 .0386358 cmyk
f
54.4639 85.646 mo
53.4956 87.5259 52.564 89.8062 51.7339 92.5483 cv
49.7305 91.9663 48.0142 91.1997 46.8354 90.3989 cv
47.9604 88.4077 49.3379 86.271 50.8374 84.3169 cv
51.874 84.814 53.1079 85.2739 54.4639 85.646 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
51.7339 92.5483 mo
51.0972 94.6704 50.5259 97.064 50.0381 99.7681 cv
47.2827 99.0493 44.9414 97.936 43.9272 96.5562 cv
44.3408 95.2271 45.3916 92.9438 46.8354 90.3989 cv
48.0142 91.1997 49.7305 91.9663 51.7339 92.5483 cv
cp
.132235 1 1 .0386358 cmyk
f
60.2598 76.292 mo
60.2593 76.292 60.2588 76.293 60.2588 76.293 cv
52.5122 76.0171 44.0088 92.0181 42.7129 96.1782 cv
42.5923 96.5649 42.6626 96.9858 42.9023 97.311 cv
45.0493 100.232 51.2031 101.747 56.0142 101.919 cv
57.9795 101.989 60.77 101.875 62.9004 100.935 cv
63.3252 100.747 63.6147 100.343 63.6563 99.8823 cv
63.7749 98.5464 63.9399 97.0718 64.1147 95.5142 cv
65.0835 86.8618 66.085 77.918 61.7119 76.541 cv
61.2441 76.394 60.7554 76.3101 60.2598 76.292 cv
60.2598 76.292 li
cp
60.2124 77.5664 mo
60.5913 77.5796 60.9629 77.6426 61.3291 77.7573 cv
65.3945 79.0371 63.0938 91.854 62.3857 99.7681 cv
60.8018 100.467 58.5083 100.732 56.0591 100.644 cv
51.1616 100.47 45.6421 98.8872 43.9302 96.5571 cv
45.2935 92.1802 53.5532 77.3306 60.2124 77.5664 cv
60.2124 77.5664 li
cp
.75021 .679683 .670222 .90164 cmyk
f
68.4648 .925293 mo
68.4644 .925293 68.4614 .925293 68.4614 .925293 cv
62.4595 .925293 53.5049 1.87891 44.9302 6.4209 cv
36.2173 11.0356 30.0195 18.2046 26.5078 27.729 cv
25.0293 31.7393 24.332 36.1729 24.4229 40.9541 cv
24.3579 40.9341 24.2925 40.9141 24.2275 40.896 cv
21.4058 40.0767 18.2959 39.6606 14.9858 39.6606 cv
10.8833 39.6606 6.54785 40.29 2.10107 41.5317 cv
1.87891 41.5933 li
1.21582 41.7739 .653809 42.2148 .320801 42.8159 cv
-.0126953 43.416 -.090332 44.1255 .106934 44.7837 cv
2.4541 52.6323 7.98584 57.6973 13.5308 60.4077 cv
13.4219 60.499 13.3135 60.5913 13.2065 60.6841 cv
5.06494 67.729 5.55371 80.1782 6.42871 84.3813 cv
6.67676 85.5708 7.72559 86.4116 8.92383 86.4116 cv
8.98584 86.4116 9.04883 86.4087 9.11182 86.4048 cv
17.2793 85.8052 25.2251 83.0664 30.8555 79.1377 cv
30.7988 80.7222 30.8833 82.3125 31.2188 83.9478 cv
32.25 88.9761 35.7017 91.9771 40.4521 91.9771 cv
46.0591 91.9771 52.8301 87.3335 54.5615 80.4766 cv
57.5083 81.3042 60.6782 81.7222 64.0249 81.7222 cv
66.5903 81.7222 69.3135 81.4761 72.1187 80.9902 cv
83.5444 79.0107 92.6792 75.5864 99.3057 70.8037 cv
100.47 71.3604 101.749 71.6484 103.087 71.6484 cv
106.358 71.6484 109.76 69.9644 112.419 67.0269 cv
115.399 63.7354 116.873 59.4863 116.463 55.3701 cv
115.725 47.9673 109.228 38.2603 104.313 32.562 cv
104.403 32.2432 104.431 31.9067 104.391 31.5698 cv
102.887 18.8687 94.8706 7.82617 83.9688 3.4375 cv
80.0029 1.84131 74.3516 .925781 68.4648 .925293 cv
68.4648 .925293 li
cp
f
32.2998 57.6533 mo
34.9971 55.2261 32.2998 45.8945 23.5171 43.3447 cv
14.0942 40.6084 4.10791 43.6284 2.5498 44.0532 cv
7.0835 59.2114 25.2168 64.0283 32.2998 57.6533 cv
cp
0 .970642 .96051 0 cmyk
f
23.5142 43.3472 mo
32.3027 45.897 34.9971 55.2305 32.3027 57.6528 cv
25.3071 63.9429 7.57666 59.3359 2.74854 44.6646 cv
5.97852 49.918 13.9175 57.7549 22.0859 51.7026 cv
25.248 49.3569 23.9644 45.7524 21.9331 42.9478 cv
22.46 43.0581 22.9868 43.1943 23.5142 43.3472 cv
cp
.132235 1 1 .0386358 cmyk
f
14.9858 40.9355 mo
10.999 40.9355 6.7793 41.5493 2.44336 42.7603 cv
2.21436 42.8232 li
1.88281 42.9136 1.60205 43.1338 1.43506 43.4341 cv
1.26855 43.7349 1.22998 44.0898 1.32861 44.4185 cv
4.71582 55.7461 15.3081 61.6719 24.0205 61.6719 cv
27.7095 61.6719 30.9526 60.5811 33.1528 58.6016 cv
34.4829 57.4043 34.9087 55.2471 34.3218 52.6831 cv
33.4697 48.9624 30.2217 43.9639 23.8726 42.1201 cv
21.165 41.334 18.1753 40.9355 14.9858 40.9355 cv
14.9858 40.9355 li
cp
14.9858 42.2104 mo
17.7114 42.2104 20.6406 42.5093 23.5171 43.3447 cv
32.2998 45.8945 34.9971 55.2261 32.2998 57.6533 cv
30.2603 59.4897 27.3047 60.397 24.0205 60.397 cv
15.9014 60.397 5.77832 54.8472 2.5498 44.0532 cv
3.63232 43.7578 8.78223 42.2104 14.9858 42.2104 cv
14.9858 42.2104 li
cp
.75021 .679683 .670222 .90164 cmyk
f
35.8418 60.9116 mo
33.4336 54.9614 22.4741 56.0356 14.8755 62.6113 cv
7.5083 68.9863 8.21729 80.4614 8.92529 83.8613 cv
24.3667 82.7285 40.8564 73.3003 35.8418 60.9116 cv
cp
0 .970642 .96051 0 cmyk
f
35.8389 60.9082 mo
40.854 73.3013 24.3638 82.7275 8.92773 83.8584 cv
8.74951 83.0249 8.5791 81.7075 8.52002 80.1011 cv
17.1133 78.002 26.5996 75.418 28.3081 68.0229 cv
29.6255 62.311 26.1064 58.5024 23.2251 57.9072 cv
28.8774 56.1055 34.2412 56.9556 35.8389 60.9082 cv
cp
.132235 1 1 .0386358 cmyk
f
28.5967 55.7319 mo
23.835 55.7319 18.2573 57.9985 14.041 61.647 cv
6.36475 68.29 6.84424 80.123 7.67725 84.1211 cv
7.80078 84.7163 8.3252 85.1362 8.92432 85.1362 cv
8.95557 85.1362 8.9873 85.1353 9.01855 85.1333 cv
18.8926 84.4087 31.0674 80.1211 36.0098 72.1763 cv
38.2954 68.502 38.646 64.4409 37.0239 60.4336 cv
35.8145 57.4453 32.7427 55.7319 28.5967 55.7319 cv
28.5967 55.7319 li
cp
28.5967 57.0068 mo
32.0044 57.0068 34.77 58.2642 35.8418 60.9116 cv
40.8564 73.3003 24.3667 82.7285 8.92529 83.8613 cv
8.21729 80.4614 7.5083 68.9863 14.8755 62.6113 cv
19.0928 58.9614 24.3447 57.0068 28.5967 57.0068 cv
28.5967 57.0068 li
cp
.75021 .679683 .670222 .90164 cmyk
f
98.1304 29.9927 mo
102.838 33.6377 113.062 46.9585 113.925 55.623 cv
114.949 65.8984 101.481 74.8359 96.8413 64.5547 cv
93.876 57.9829 96.249 50.5166 92.0537 40.729 cv
87.7686 30.7305 93.1177 26.1123 98.1304 29.9927 cv
cp
.280522 .914061 1 .298253 cmyk
f
98.127 29.9937 mo
102.836 33.6401 113.062 46.9595 113.929 55.6216 cv
114.523 61.6304 110.163 67.1895 105.513 68.7026 cv
116.87 62.4556 111.251 50.564 105.36 40.2617 cv
101.884 34.1836 98.4927 30.2485 95.8916 28.8125 cv
96.6221 29.0249 97.3789 29.416 98.127 29.9937 cv
cp
.215396 .82446 1 .119539 cmyk
f
94.6187 27.3491 mo
94.6187 27.3491 li
92.8784 27.3491 91.3789 28.1709 90.3955 29.6626 cv
88.6729 32.2744 88.8506 36.4912 90.8818 41.231 cv
93.0723 46.3403 93.4116 50.8975 93.7109 54.9185 cv
93.9771 58.4902 94.2285 61.8638 95.6792 65.0791 cv
97.2227 68.5 99.8511 70.3833 103.08 70.3833 cv
105.949 70.3833 109.085 68.8115 111.47 66.1777 cv
114.211 63.1494 115.568 59.2563 115.194 55.4971 cv
114.26 46.1211 103.426 32.4805 98.9111 28.9849 cv
97.5293 27.915 96.0444 27.3491 94.6187 27.3491 cv
94.6187 27.3491 li
cp
94.6182 28.624 mo
95.7178 28.624 96.9336 29.0664 98.1304 29.9927 cv
102.838 33.6377 113.062 46.9585 113.925 55.623 cv
114.628 62.6812 108.493 69.1084 103.08 69.1084 cv
100.612 69.1084 98.2939 67.7739 96.8413 64.5547 cv
93.876 57.9829 96.249 50.5166 92.0537 40.729 cv
88.7915 33.1182 91.1128 28.625 94.6182 28.624 cv
94.6182 28.624 li
cp
.75021 .679683 .670222 .90164 cmyk
f
34.0708 54.8901 mo
37.1245 63.1021 44.6958 83.1528 71.6836 78.4775 cv
98.6709 73.8027 107.596 61.6899 108.021 52.5527 cv
108.417 44.0195 104.511 43.4551 98.4585 26.6274 cv
89.7461 2.40283 64.2461 3.25244 48.7334 11.7524 cv
31.7021 21.0845 27.9082 38.3149 34.0708 54.8901 cv
cp
.0250248 .567285 .998169 0 cmyk
f
79.3418 7.68945 mo
65.5801 6.46582 51.8105 13.2822 51.0288 34.6089 cv
50.5098 49 58.5337 75.7407 81.1357 76.3525 cv
78.2627 77.1685 75.1177 77.8823 71.6836 78.4775 cv
44.6958 83.1528 37.1221 63.1011 34.0708 54.8901 cv
27.9082 38.3149 31.6992 21.0859 48.7334 11.7524 cv
57.3779 7.01807 69.1333 4.65527 79.3418 7.68945 cv
cp
.101595 .727993 1 .0109865 cmyk
f
69.6172 5.05615 mo
62.3198 5.05615 54.6855 7.03711 48.1206 10.6343 cv
31.7925 19.5811 25.9512 36.709 32.876 55.334 cv
35.6704 62.8496 42.2148 80.4497 63.9966 80.4497 cv
66.4976 80.4497 69.1572 80.209 71.9009 79.7334 cv
84.4097 77.5669 94.0767 73.6748 100.633 68.1646 cv
105.96 63.688 109.036 58.1646 109.294 52.6113 cv
109.538 47.3853 108.209 44.832 106.009 40.6011 cv
104.409 37.5259 102.218 33.312 99.6582 26.1958 cv
93.043 7.80225 77.9971 5.05615 69.6172 5.05615 cv
69.6172 5.05615 li
cp
69.6172 6.33154 mo
81.4268 6.33154 93.1089 11.7534 98.4585 26.6274 cv
104.511 43.4551 108.417 44.0195 108.021 52.5527 cv
107.596 61.6899 98.6709 73.8027 71.6836 78.4775 cv
68.9224 78.9556 66.3667 79.1748 63.9966 79.1748 cv
43.1953 79.1748 36.812 62.2622 34.0708 54.8901 cv
27.9082 38.3149 31.7021 21.0845 48.7334 11.7524 cv
54.7212 8.47217 62.1934 6.33154 69.6172 6.33154 cv
69.6172 6.33154 li
cp
.75021 .679683 .670222 .90164 cmyk
f
42.5708 50.0024 mo
46.3628 54.5928 53.4082 69.8354 52.3457 78.4775 cv
51.0859 88.7271 35.9834 94.4858 33.7168 83.4355 cv
32.2686 76.3735 36.2246 69.6108 34.2832 59.1401 cv
32.3003 48.4443 38.5332 45.1152 42.5708 50.0024 cv
cp
.280522 .914061 1 .298253 cmyk
f
42.5708 50.0024 mo
46.3618 54.5928 53.4082 69.833 52.3457 78.4775 cv
51.7339 83.459 47.8662 87.3687 43.7778 88.8218 cv
53.3745 84.0532 50.3145 72.2813 46.7529 61.8003 cv
43.9648 53.5811 40.6836 48.6172 38.0913 47.8438 cv
39.562 47.6226 41.1938 48.3364 42.5708 50.0024 cv
cp
.215396 .82446 1 .119539 cmyk
f
38.5981 46.5244 mo
38.5977 46.5244 li
37.0903 46.5244 35.6831 47.2188 34.6362 48.4775 cv
32.7241 50.7769 32.1533 54.647 33.0298 59.3726 cv
34.043 64.8379 33.3726 69.3594 32.7808 73.3477 cv
32.2554 76.8906 31.7593 80.2363 32.4683 83.6924 cv
33.3682 88.0815 36.353 90.7026 40.4521 90.7026 cv
45.9741 90.7026 52.7368 85.7456 53.6113 78.6328 cv
54.7612 69.2813 47.1904 53.5928 43.5537 49.1909 cv
42.1333 47.4707 40.3735 46.5244 38.5981 46.5244 cv
38.5981 46.5244 li
cp
38.5972 47.7998 mo
39.9307 47.7988 41.3506 48.5259 42.5708 50.0024 cv
46.3628 54.5928 53.4082 69.8354 52.3457 78.4775 cv
51.5679 84.8091 45.5059 89.4272 40.4521 89.4272 cv
37.3242 89.4272 34.5835 87.6597 33.7168 83.4355 cv
32.2686 76.3735 36.2246 69.6108 34.2832 59.1401 cv
32.8999 51.6768 35.5171 47.7998 38.5972 47.7998 cv
38.5972 47.7998 li
cp
.75021 .679683 .670222 .90164 cmyk
f
34 65.8696 mo
36.9902 60.6367 70.4082 27.7617 101.858 31.8696 cv
100.583 21.1025 93.9253 10.1943 83.0171 5.80322 cv
72.0137 1.37402 39.2417 .561523 28.9004 28.6113 cv
23.457 43.376 30.8833 60.6284 34 65.8696 cv
cp
0 .970642 .96051 0 cmyk
f
99.5552 22.9644 mo
100.728 25.8457 101.501 28.8628 101.858 31.8721 cv
98.1187 31.3789 94.353 31.4131 90.6128 31.8638 cv
95.4751 29.6533 98.4668 26.7896 99.5552 22.9644 cv
cp
.132235 1 1 .0386358 cmyk
f
48.895 27.231 mo
53.1108 37.6177 63.1494 38.3232 73.5107 36.5728 cv
52.8813 45.209 36.0767 62.2256 34.0029 65.8721 cv
30.8833 60.6274 23.4541 43.3726 28.9028 28.6084 cv
34.0029 14.7617 44.5684 7.95313 55.2871 5.13086 cv
49.3794 9.66162 45.1631 18.0337 48.895 27.231 cv
cp
f
68.4644 2.2002 mo
62.6064 2.2002 53.8726 3.12793 45.5278 7.54639 cv
37.1006 12.0098 31.104 18.9487 27.7041 28.1709 cv
21.0435 46.2363 32.7847 66.3203 32.9043 66.521 cv
33.1343 66.9082 33.5503 67.1445 34 67.1445 cv
34.0039 67.1445 34.0073 67.1445 34.0112 67.1445 cv
34.4644 67.1406 34.8818 66.8965 35.1069 66.502 cv
37.7461 61.8833 66.9932 32.79 96.3223 32.79 cv
98.1411 32.79 99.9482 32.9063 101.693 33.1338 cv
101.749 33.1411 101.804 33.1445 101.858 33.1445 cv
102.192 33.1445 102.514 33.0142 102.754 32.7769 cv
103.034 32.5005 103.171 32.1104 103.125 31.7192 cv
101.674 19.4746 93.9688 8.8374 83.4932 4.62061 cv
79.728 3.10498 74.1099 2.2002 68.4644 2.2002 cv
68.4644 2.2002 li
cp
68.4644 3.4751 mo
74.4746 3.4751 79.7227 4.47803 83.0171 5.80322 cv
93.9253 10.1943 100.583 21.1025 101.858 31.8696 cv
100.016 31.6289 98.1719 31.5151 96.3223 31.5151 cv
66.6025 31.5151 36.8149 60.9429 34 65.8696 cv
30.8833 60.6284 23.457 43.376 28.9004 28.6113 cv
36.1455 8.95947 54.3989 3.4751 68.4644 3.4751 cv
68.4644 3.4751 li
cp
.75021 .679683 .670222 .90164 cmyk
f
101.894 53.1479 mo
104.994 59.394 100.503 67.9321 91.8623 72.2222 cv
83.2217 76.5122 73.7026 74.9258 70.603 68.6802 cv
67.5024 62.4341 71.9941 53.895 80.6353 49.605 cv
89.2759 45.3149 98.7939 46.9023 101.894 53.1479 cv
cp
.00985733 .0806592 .600977 0 cmyk
f
90.5562 48.0791 mo
91.168 50.0176 89.3354 52.3262 86.4624 53.2314 cv
83.5894 54.1382 80.7646 53.2998 80.1533 51.3599 cv
79.541 49.4209 81.3735 47.1123 84.2461 46.2065 cv
87.1196 45.3003 89.9438 46.1387 90.5562 48.0791 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
89.8481 48.3027 mo
89.7886 48.1143 89.6973 47.9424 89.5923 47.7788 cv
89.2734 49.0986 87.9111 50.3896 86.0283 50.9829 cv
83.8247 51.6777 81.6621 51.1812 80.833 49.8896 cv
80.7314 50.3091 80.7339 50.7324 80.8613 51.1367 cv
81.3901 52.8125 83.8296 53.5361 86.312 52.7534 cv
88.7935 51.9707 90.3765 49.9771 89.8481 48.3027 cv
cp
.636561 .700954 .654597 .746487 cmyk
f
71.5137 47.5938 mo
72.8311 50.646 71.8018 54.0269 69.2158 55.1416 cv
66.6294 56.2563 63.4648 54.686 62.1484 51.6313 cv
60.8315 48.5781 61.8608 45.1997 64.4468 44.084 cv
67.0327 42.9692 70.1973 44.5391 71.5137 47.5938 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
70.8052 47.8994 mo
70.6655 47.5762 70.5024 47.2725 70.3184 46.9912 cv
70.7544 49.2075 69.8594 51.3813 68.0054 52.1797 cv
66.0835 53.0083 63.7866 52.0913 62.4941 50.1104 cv
62.5742 50.5166 62.6836 50.9238 62.8569 51.3257 cv
63.9741 53.9189 66.6597 55.251 68.8555 54.3047 cv
71.0498 53.3594 71.9233 50.4897 70.8052 47.8994 cv
cp
.636561 .700954 .654597 .746487 cmyk
f
68.8501 46.3643 mo
69.436 47.4478 69.1528 48.7349 68.2168 49.2412 cv
67.2817 49.7485 66.0474 49.2822 65.4609 48.1987 cv
64.875 47.1157 65.1587 45.8281 66.0942 45.3208 cv
67.0298 44.8145 68.2637 45.2813 68.8501 46.3643 cv
cp
0 0 0 0 cmyk
f
58.1406 43.9678 mo
60.832 43.1694 63.9448 42.3096 68.0581 42.8193 cv
70.8076 43.1602 70.8833 40.875 68.3516 40.0723 cv
66.3193 39.4272 61.4736 40.4409 57.9717 42.8813 cv
56.4775 43.9224 57.0303 44.2983 58.1406 43.9678 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
98.8076 37.4292 mo
100.072 40.4541 99.084 43.8042 96.6025 44.9092 cv
94.1206 46.0142 91.084 44.4575 89.8208 41.4302 cv
88.5566 38.4048 89.5444 35.0571 92.0264 33.9512 cv
94.5078 32.8467 97.5439 34.4023 98.8076 37.4292 cv
cp
f
98.1665 37.8867 mo
98.0322 37.5723 97.875 37.2773 97.6973 37.0034 cv
98.1182 39.1587 97.2549 41.272 95.4678 42.0479 cv
93.6147 42.853 91.4004 41.9614 90.1543 40.0356 cv
90.2319 40.4312 90.3374 40.8271 90.5044 41.2173 cv
91.5815 43.7378 94.1704 45.0327 96.2866 44.1133 cv
98.4019 43.1943 99.2446 40.4043 98.1665 37.8867 cv
cp
.636561 .700954 .654597 .746487 cmyk
f
96.2983 36.1851 mo
96.8765 37.2891 96.5967 38.6016 95.6729 39.1172 cv
94.75 39.6348 93.5317 39.1592 92.9531 38.0552 cv
92.375 36.9507 92.6543 35.6382 93.5776 35.1216 cv
94.5015 34.6064 95.7188 35.0811 96.2983 36.1851 cv
cp
0 0 0 0 cmyk
f
94.8652 30.3711 mo
92.7275 31.814 90.3062 33.5205 88.4263 36.7598 cv
87.1709 38.9253 85.2969 37.6138 86.062 35.3276 cv
86.6758 33.4922 90.1836 30.6421 94.0884 29.6011 cv
95.7539 29.1577 95.7476 29.7769 94.8652 30.3711 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
88.3438 47.8203 mo
88.4058 48.4419 87.71 49.0205 86.7896 49.1128 cv
85.8687 49.2051 85.0718 48.7764 85.0093 48.1548 cv
84.9468 47.5332 85.6426 46.9536 86.5635 46.8618 cv
87.4839 46.7686 88.2817 47.1978 88.3438 47.8203 cv
cp
0 0 0 0 cmyk
f
84.4702 62.0894 mo
82.7129 62.0894 81.0645 61.4277 80.2544 59.8574 cv
80.0928 59.5444 80.2158 59.1602 80.5288 58.999 cv
80.8413 58.8354 81.2256 58.9609 81.3872 59.2729 cv
82.3999 61.2354 85.2139 60.9927 86.8579 60.3521 cv
89.7271 59.2349 90.7871 57.8594 90.2964 55.8945 cv
90.2109 55.5532 90.4185 55.207 90.7603 55.1216 cv
91.1016 55.0352 91.4478 55.2446 91.5332 55.5859 cv
92.5156 59.5161 88.606 61.0396 87.3213 61.5405 cv
86.417 61.8926 85.4272 62.0894 84.4702 62.0894 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
78.4746 20.5205 mo
80.3223 19.5313 81.6504 16.9263 79.0269 13.418 cv
76.4033 9.90967 69.7407 9.00342 65.6509 10.2202 cv
61.561 11.438 57.5854 15.106 58.0425 19.5908 cv
58.4502 23.5918 61.5444 25.0488 65.0605 24.8711 cv
65.4058 26.8525 65.896 27.8828 66.3252 27.793 cv
67.0532 27.6421 69.8271 26.6582 70.3662 26.4673 cv
70.29 25.7202 70.04 24.0088 70.04 24.0088 cv
71.2368 25.9712 li
72.0903 25.8989 75.2778 24.646 75.605 24.4463 cv
75.4053 24.1191 74.5225 22.2764 74.5225 22.2764 cv
76.5059 24.0928 li
77.3638 23.9141 80.0308 22.8159 80.0308 22.8159 cv
80.3789 22.0854 78.4746 20.5205 78.4746 20.5205 cv
cp
0 0 0 0 cmyk
f
68.6846 17.5356 mo
69.1821 18.8223 68.6084 20.2427 67.4043 20.7075 cv
66.2002 21.1733 64.8213 20.5083 64.3237 19.2217 cv
63.8267 17.9351 64.4004 16.5146 65.604 16.0498 cv
66.8086 15.5845 68.1875 16.25 68.6846 17.5356 cv
cp
0 .970642 .96051 0 cmyk
f
74.9556 15.0356 mo
75.729 16.1763 75.5508 17.646 74.5586 18.3184 cv
73.5664 18.9917 72.1348 18.6113 71.3613 17.4692 cv
70.5879 16.3286 70.7656 14.8569 71.7583 14.1846 cv
72.7505 13.5122 74.1821 13.8926 74.9556 15.0356 cv
cp
f
721.905 103.25 mo
720.396 105.875 717.829 107.67 714.869 108.173 cv
709.15 109.144 699.532 106.649 691.595 100.087 cv
691.111 100.268 690.641 100.392 690.185 100.461 cv
688.911 100.65 li
688.003 99.7349 li
685.237 96.9536 673.923 81.2207 678.422 73.395 cv
678.728 72.8657 679.1 72.3809 679.532 71.9556 cv
683.539 67.9961 691.071 73.123 699.041 78.5527 cv
700.316 79.4204 701.542 80.2559 702.665 80.9839 cv
703.928 81.8027 li
703.928 81.8027 703.813 83.3926 703.81 83.4375 cv
706.397 84.8062 708.561 85.6772 710.664 86.5239 cv
713.377 87.6138 715.936 88.645 718.667 90.5239 cv
723.864 94.1021 723.988 99.6284 721.905 103.25 cv
721.905 103.25 721.905 103.25 721.905 103.25 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
681.042 74.2603 mo
679.332 76.3818 681.187 84.8042 688.779 93.7437 cv
697.142 103.584 708.875 106.604 714.441 105.658 cv
720.261 104.668 723.509 96.9556 717.222 92.6245 cv
710.93 88.2935 705.634 88.9009 693.645 79.9258 cv
687.051 74.9917 683.041 71.7822 681.042 74.2603 cv
cp
.0250248 .567285 .998169 0 cmyk
f
679.773 73.8643 mo
677.919 77.0879 680.464 85.9204 687.808 94.5679 cv
696.467 104.76 708.72 107.925 714.655 106.916 cv
717.24 106.477 719.48 104.91 720.801 102.615 cv
722.661 99.3804 722.501 94.7114 717.944 91.5737 cv
715.329 89.7739 712.948 88.8169 710.189 87.7085 cv
706.119 86.0718 701.503 84.2153 694.407 78.9058 cv
693.469 78.2007 li
686.999 73.3496 682.725 70.144 680.049 73.46 cv
679.949 73.584 679.857 73.7212 679.773 73.8643 cv
679.773 73.8643 li
cp
680.88 74.5 mo
680.93 74.4126 680.984 74.332 681.042 74.2603 cv
683.041 71.7822 687.051 74.9917 693.645 79.9258 cv
705.634 88.9009 710.93 88.2935 717.222 92.6245 cv
721.033 95.2495 721.341 99.1167 719.695 101.979 cv
718.626 103.837 716.732 105.27 714.441 105.658 cv
708.875 106.604 697.142 103.584 688.779 93.7437 cv
681.447 85.1089 679.465 76.958 680.88 74.5 cv
680.88 74.5 li
cp
.75021 .679683 .670222 .90164 cmyk
f
688.782 93.7417 mo
681.188 84.8013 679.334 76.3794 681.042 74.2637 cv
681.227 74.0269 681.44 73.8452 681.673 73.7139 cv
681.036 76.7612 683.245 84.7202 696.288 94.6362 cv
711.961 106.548 721.522 98.7915 718.011 93.2397 cv
723.213 97.645 719.996 104.717 714.442 105.662 cv
708.878 106.606 697.144 103.582 688.782 93.7417 cv
cp
.101595 .727993 1 .0109865 cmyk
f
690.148 75.8257 mo
691.999 76.9009 693.954 78.1919 695.854 79.4727 cv
693.983 85.4858 689.074 90.7114 685.725 92.4917 cv
684.49 90.5659 683.246 88.3491 682.219 86.1099 cv
685.017 84.0425 688.316 80.2339 690.148 75.8257 cv
cp
0 0 0 0 cmyk
f
695.854 79.4727 mo
697.778 80.7646 699.634 82.0571 701.276 83.1206 cv
700.912 88.3042 694.1 97.3003 689.809 97.9399 cv
688.826 96.9536 687.299 94.9556 685.725 92.4917 cv
689.074 90.7114 693.983 85.4858 695.854 79.4727 cv
cp
0 .970642 .96051 0 cmyk
f
681.326 73.7695 mo
682.871 72.2451 686.285 73.5737 690.148 75.8257 cv
688.316 80.2339 685.017 84.0425 682.219 86.1099 cv
679.994 81.2324 678.846 76.2256 681.326 73.7695 cv
cp
f
681.326 73.7695 mo
681.449 73.644 681.583 73.5444 681.736 73.4673 cv
681.246 75.1563 681.739 78.7456 685.09 83.5249 cv
684.127 84.5493 683.143 85.4263 682.219 86.1099 cv
679.994 81.2324 678.846 76.2256 681.326 73.7695 cv
cp
.132235 1 1 .0386358 cmyk
f
685.09 83.5249 mo
686.298 85.2603 687.879 87.1489 689.914 89.1646 cv
688.464 90.6646 686.983 91.8228 685.725 92.4917 cv
684.49 90.5659 683.246 88.3491 682.219 86.1099 cv
683.143 85.4263 684.127 84.5493 685.09 83.5249 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
689.914 89.1646 mo
691.493 90.7202 693.342 92.3433 695.505 94.0396 cv
693.581 96.1392 691.503 97.689 689.809 97.9399 cv
688.826 96.9536 687.299 94.9556 685.725 92.4917 cv
686.983 91.8228 688.464 90.6646 689.914 89.1646 cv
cp
.132235 1 1 .0386358 cmyk
f
679.529 74.0288 mo
679.529 74.0298 679.529 74.0308 679.529 74.0308 cv
675.665 80.7495 685.835 95.7466 688.906 98.8364 cv
689.191 99.1235 689.597 99.2593 689.997 99.1987 cv
693.582 98.6655 697.798 93.9331 700.198 89.7622 cv
701.18 88.0571 702.384 85.5366 702.548 83.2139 cv
702.581 82.7505 702.358 82.3066 701.972 82.0537 cv
700.846 81.3237 699.62 80.4893 698.323 79.6069 cv
691.128 74.7061 683.69 69.6396 680.428 72.8608 cv
680.079 73.2075 679.777 73.5996 679.529 74.0288 cv
679.529 74.0288 li
cp
680.634 74.667 mo
680.823 74.3374 681.052 74.0386 681.324 73.7686 cv
684.355 70.7729 694.611 78.7979 701.276 83.1235 cv
701.154 84.8501 700.315 87.0015 699.094 89.1255 cv
696.65 93.3745 692.671 97.5132 689.811 97.938 cv
686.578 94.686 677.312 80.4429 680.634 74.667 cv
680.634 74.667 li
cp
.75021 .679683 .670222 .90164 cmyk
f
727.309 90.3647 mo
724.314 88.5679 li
741.772 64.7886 li
741.986 64.4971 742.103 64.1445 742.103 63.7822 cv
742.101 50.6187 li
742.101 50.021 741.788 49.4683 741.275 49.1611 cv
740.764 48.8545 740.129 48.8379 739.602 49.1191 cv
727.986 55.3149 li
727.668 55.4849 727.41 55.7529 727.254 56.0791 cv
714.492 82.6763 li
711.498 80.8799 li
710.693 80.3975 709.649 80.6582 709.166 81.4634 cv
706.553 85.8188 li
706.07 86.6245 706.331 87.6685 707.137 88.1519 cv
710.809 90.355 li
704.858 102.758 li
704.479 103.549 704.764 104.5 705.517 104.951 cv
707.203 105.962 li
708.888 106.973 li
709.64 107.423 710.612 107.229 711.133 106.521 cv
719.273 95.4321 li
722.947 97.6362 li
723.752 98.1196 724.796 97.8579 725.278 97.0532 cv
727.893 92.6978 li
728.375 91.8921 728.114 90.8481 727.309 90.3647 cv
cp
f
708.076 104.504 mo
709.762 105.514 li
740.402 63.7832 li
740.401 50.6187 li
728.786 56.8149 li
706.391 103.494 li
708.076 104.504 li
cp
.280522 .914061 1 .298253 cmyk
f
739.24 52.5537 mo
739.24 65.3647 li
740.402 63.7832 li
740.401 50.6187 li
728.786 56.8149 li
727.938 58.5835 li
739.24 52.5537 li
cp
.215396 .82446 1 .119539 cmyk
f
723.821 96.1782 mo
708.011 86.6938 li
710.624 82.3374 li
726.434 91.8228 li
723.821 96.1782 li
cp
f
726.047 92.4683 mo
710.236 82.9839 li
710.624 82.3374 li
726.434 91.8228 li
726.047 92.4683 li
cp
.144869 .807401 1 .0376593 cmyk
f
718.996 93.9429 mo
718.924 93.8989 718.863 93.8345 718.826 93.7515 cv
714.926 84.9683 li
714.831 84.7544 714.928 84.5024 715.142 84.4077 cv
715.356 84.314 715.608 84.4087 715.703 84.6235 cv
719.604 93.4058 li
719.699 93.6206 719.603 93.8716 719.388 93.9673 cv
719.256 94.0259 719.111 94.0122 718.996 93.9429 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
712.255 89.8979 mo
712.14 89.8306 712.059 89.7085 712.049 89.5649 cv
712.032 89.3306 712.208 89.1284 712.441 89.1108 cv
722.026 88.4165 li
722.261 88.3999 722.465 88.5767 722.481 88.811 cv
722.498 89.0454 722.322 89.2476 722.088 89.2661 cv
712.503 89.9585 li
712.412 89.9644 712.326 89.9419 712.255 89.8979 cv
cp
f
713.984 96.1821 mo
713.235 98.0415 710.77 98.8013 708.474 97.8784 cv
706.178 96.9556 704.924 94.6997 705.671 92.8403 cv
706.418 90.98 708.885 90.2202 711.181 91.1431 cv
713.477 92.0669 714.731 94.3218 713.984 96.1821 cv
cp
f
712.736 95.6802 mo
712.123 97.2036 709.882 97.7388 707.732 96.8755 cv
705.581 96.0112 704.335 94.0737 704.947 92.5493 cv
705.56 91.0259 707.801 90.4897 709.95 91.354 cv
712.102 92.2192 713.349 94.1558 712.736 95.6802 cv
cp
.0250248 .567285 .998169 0 cmyk
f
637.752 134.021 mo
635.972 134.167 634.14 134.168 632.305 134.03 cv
626.847 133.614 622.472 131.062 619.654 126.65 cv
614.845 119.119 615.738 108.272 617.284 104.139 cv
618.451 101.024 620.395 99.1333 622.62 98.9507 cv
625.279 98.7339 627.405 100.722 628.944 104.86 cv
631.116 110.702 636.882 111.495 641.336 111.129 cv
643.017 110.992 644.771 110.654 646.409 110.152 cv
650.295 108.962 652.778 108.388 654.714 108.23 cv
657.737 107.982 659.86 108.825 661.019 110.738 cv
662.51 113.195 662.32 116.651 660.5 120.218 cv
657.565 125.967 649.849 133.031 637.754 134.021 cv
637.753 134.021 637.754 134.021 637.752 134.021 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
658.839 112.061 mo
657.549 109.934 653.813 110.553 647.156 112.59 cv
640.344 114.675 629.912 114.783 626.554 105.749 cv
624.094 99.1274 621.072 101.293 619.673 105.033 cv
617.604 110.562 617.029 130.308 632.499 131.487 cv
651.38 132.926 662.29 117.748 658.839 112.061 cv
cp
.101595 .727993 1 .0109865 cmyk
f
621.778 119.503 mo
620.765 119.1 620.75 122.155 621.354 124.518 cv
617.642 117.932 618.352 108.579 619.673 105.033 cv
621.072 101.293 624.094 99.1274 626.554 105.749 cv
627.9 109.374 630.379 111.524 633.313 112.674 cv
632.94 113.958 629.61 112.551 628.929 113.084 cv
627.752 114.025 630.69 117.205 629.454 117.733 cv
628.218 118.26 625.761 116.047 625.138 117.096 cv
624.207 118.648 626.257 122.122 624.987 122.226 cv
623.715 122.331 623.101 120.035 621.778 119.503 cv
cp
.00985733 .0806592 .600977 0 cmyk
f
663.575 156.685 mo
659.023 156.19 654.798 155.023 652.272 153.569 cv
648.678 151.497 648.427 143.867 651.311 124.411 cv
651.45 123.461 li
652.579 115.748 657.28 112.487 661.438 112.677 cv
661.635 112.686 661.827 112.702 662.017 112.722 cv
666.25 113.182 668.896 116.33 669.883 122.077 cv
670.25 124.214 670.419 126.79 670.598 129.514 cv
670.863 133.542 671.263 139.626 672.568 140.99 cv
675.737 144.298 678.507 149.696 675.888 154.018 cv
674.005 157.123 668.153 157.181 663.575 156.685 cv
663.575 156.685 li
cp
.75021 .679683 .670222 .90164 cmyk
f
661.322 115.225 mo
657.899 115.069 654.805 118.15 653.974 123.832 cv
653.142 129.512 650.005 149.319 653.546 151.359 cv
658.574 154.257 671.883 155.704 673.707 152.696 cv
675.53 149.687 673.327 145.468 670.727 142.752 cv
667.826 139.726 668.418 128.612 667.37 122.508 cv
666.585 117.935 664.725 115.381 661.322 115.225 cv
cp
.101595 .727993 1 .0109865 cmyk
f
670.727 142.752 mo
672.009 144.089 673.199 145.8 673.847 147.547 cv
669.779 152.722 657.969 147.009 660.499 144.419 cv
662.616 142.248 667.6 141.627 670.574 142.583 cv
670.628 142.64 670.673 142.696 670.727 142.752 cv
cp
.0250248 .567285 .998169 0 cmyk
f
667.37 122.508 mo
667.983 126.073 668.033 131.353 668.55 135.727 cv
663.624 138.723 655.655 137.463 652.416 135.717 cv
652.903 130.845 653.636 126.154 653.974 123.832 cv
654.805 118.15 657.902 115.066 661.322 115.225 cv
664.725 115.381 666.585 117.935 667.37 122.508 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
658.448 138.014 mo
655.786 137.726 653.358 136.999 651.745 136.109 cv
651.432 135.936 651.317 135.541 651.489 135.225 cv
651.664 134.913 652.06 134.799 652.374 134.97 cv
655.485 136.688 663.532 138.149 668.491 134.949 cv
668.793 134.754 669.196 134.84 669.39 135.142 cv
669.584 135.444 669.497 135.845 669.197 136.041 cv
666.181 137.988 662.097 138.412 658.448 138.014 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
694.697 150.967 mo
690.118 150.967 685.792 150.265 683.124 149.091 cv
679.326 147.421 678.251 139.863 679.015 120.208 cv
679.052 119.25 li
679.341 111.459 683.662 107.709 687.815 107.45 cv
688.013 107.437 688.205 107.431 688.395 107.431 cv
692.653 107.431 695.625 110.274 697.227 115.881 cv
697.823 117.965 698.27 120.507 698.742 123.198 cv
699.439 127.172 700.496 133.178 701.94 134.392 cv
705.448 137.339 708.786 142.406 706.648 146.986 cv
705.112 150.277 699.302 150.967 694.697 150.967 cv
694.697 150.967 li
cp
f
687.975 109.995 mo
684.555 110.208 681.813 113.607 681.6 119.344 cv
681.388 125.082 680.409 145.112 684.149 146.757 cv
689.462 149.094 702.85 149.094 704.337 145.907 cv
705.825 142.719 703.179 138.763 700.3 136.344 cv
697.089 133.648 696.477 122.536 694.774 116.582 cv
693.5 112.12 691.375 109.782 687.975 109.995 cv
cp
.101595 .727993 1 .0109865 cmyk
f
700.3 136.344 mo
701.72 137.535 703.088 139.107 703.921 140.774 cv
700.436 146.359 688.078 141.955 690.313 139.107 cv
692.184 136.719 697.071 135.563 700.131 136.192 cv
700.19 136.244 700.241 136.294 700.3 136.344 cv
cp
.0250248 .567285 .998169 0 cmyk
f
694.774 116.582 mo
695.77 120.058 696.391 125.303 697.376 129.595 cv
692.804 133.106 684.746 132.715 681.337 131.33 cv
681.294 126.433 681.516 121.69 681.6 119.344 cv
681.813 113.607 684.559 110.207 687.975 109.995 cv
691.375 109.782 693.5 112.12 694.774 116.582 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
687.581 132.96 mo
684.904 132.96 682.412 132.501 680.712 131.792 cv
680.381 131.653 680.225 131.272 680.363 130.941 cv
680.502 130.61 680.883 130.455 681.213 130.591 cv
684.492 131.962 692.651 132.544 697.234 128.828 cv
697.514 128.601 697.923 128.644 698.148 128.922 cv
698.375 129.202 698.333 129.611 698.054 129.836 cv
695.267 132.098 691.251 132.96 687.581 132.96 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
670.038 129.214 mo
653.187 129.214 648.394 119.792 647.339 111.889 cv
643.878 85.9312 657.729 67.2266 666.424 65.6914 cv
667.251 65.5454 668.102 65.4707 668.948 65.4707 cv
684.14 65.4707 698.832 89.8267 700.01 105.123 cv
701.145 119.885 689.68 126.891 678.571 128.525 cv
675.419 128.989 672.628 129.214 670.039 129.214 cv
670.038 129.214 li
cp
f
697.464 105.322 mo
698.492 118.625 687.834 124.583 678.203 126.002 cv
669.72 127.251 652.134 128.552 649.864 111.552 cv
649.745 110.686 649.651 109.836 649.575 108.995 cv
656.757 112.437 683.838 115.37 696.555 99.9253 cv
697.021 101.82 697.337 103.639 697.464 105.322 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
692.898 89.9194 mo
694.506 93.2944 695.755 96.7202 696.555 99.9253 cv
683.838 115.37 656.757 112.437 649.575 108.995 cv
649.235 105.271 649.26 101.751 649.575 98.4536 cv
659.885 100.34 680.404 100.069 692.898 89.9194 cv
cp
.132235 1 1 .0386358 cmyk
f
686.89 79.916 mo
689.193 82.9927 691.233 86.4272 692.898 89.9194 cv
680.404 100.069 659.885 100.34 649.575 98.4536 cv
650.009 93.855 650.995 89.6987 652.32 86.0444 cv
662.24 87.0308 676.375 86.1714 686.89 79.916 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
678.117 71.2114 mo
681.271 73.3364 684.255 76.3965 686.89 79.916 cv
676.375 86.1714 662.24 87.0308 652.32 86.0444 cv
653.842 81.8027 655.822 78.2324 657.896 75.4277 cv
664.102 75.8101 671.684 74.9004 678.117 71.2114 cv
cp
.132235 1 1 .0386358 cmyk
f
666.864 68.2026 mo
670.663 67.5313 674.505 68.7637 678.117 71.2114 cv
671.684 74.9004 664.102 75.8101 657.896 75.4277 cv
661.067 71.1436 664.467 68.6274 666.864 68.2026 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
696.555 99.9253 mo
697.021 101.82 697.337 103.639 697.464 105.322 cv
698.383 117.23 689.941 123.256 681.246 125.399 cv
671.488 126.283 666.346 119.968 664.203 111.706 cv
675.016 112.054 688.599 109.589 696.555 99.9253 cv
cp
.574731 .695186 .633936 .604669 cmyk
f
696.555 99.9253 mo
688.599 109.589 675.016 112.054 664.203 111.706 cv
663.184 107.83 662.835 103.511 662.988 99.3218 cv
672.959 99.0063 684.671 96.6011 692.898 89.9194 cv
694.506 93.2944 695.755 96.7202 696.555 99.9253 cv
cp
0 .970642 .96051 0 cmyk
f
692.898 89.9194 mo
684.671 96.6011 672.959 99.0063 662.988 99.3218 cv
663.148 94.5015 663.966 89.8433 665.173 86.1626 cv
672.567 85.5767 680.413 83.7656 686.89 79.916 cv
689.193 82.9927 691.233 86.4272 692.898 89.9194 cv
cp
0 0 0 0 cmyk
f
686.89 79.916 mo
680.413 83.7656 672.567 85.5767 665.173 86.1626 cv
665.987 83.6895 666.974 81.6582 668.071 80.3149 cv
673.298 73.8979 678.841 73.5576 682.699 75.0366 cv
684.17 76.5156 685.572 78.1563 686.89 79.916 cv
cp
0 .970642 .96051 0 cmyk
f
666.205 112.394 mo
658.424 112.386 651.74 110.887 648.782 109.434 cv
648.461 109.274 648.33 108.88 648.49 108.551 cv
648.65 108.222 649.043 108.083 649.364 108.243 cv
655.954 111.48 683.686 114.957 696.462 99.1099 cv
696.688 98.8306 697.096 98.7915 697.374 99.022 cv
697.652 99.2505 697.696 99.6636 697.472 99.9429 cv
689.713 109.576 676.943 112.404 666.205 112.394 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
648.285 128.187 mo
645.259 128.08 642.474 126.65 640.645 124.268 cv
637.112 119.667 634.823 109.998 636.913 99.9136 cv
636.528 99.5708 636.198 99.2134 635.926 98.8423 cv
635.162 97.8042 li
635.546 96.5737 li
636.712 92.8286 645.332 75.4731 654.354 75.793 cv
654.964 75.8145 655.566 75.9175 656.145 76.1001 cv
661.519 77.7915 660.505 86.8462 659.432 96.4312 cv
659.261 97.9644 659.095 99.438 658.976 100.771 cv
658.842 102.27 li
658.842 102.27 657.383 102.912 657.343 102.929 cv
657.342 105.857 657.584 108.176 657.819 110.432 cv
658.122 113.339 658.407 116.083 658.022 119.376 cv
657.288 125.643 652.462 128.336 648.287 128.187 cv
648.285 128.187 648.285 128.187 648.285 128.187 cv
cp
f
654.813 78.5132 mo
652.137 77.9927 645.56 83.5688 641.207 94.4595 cv
636.414 106.452 639.229 118.237 642.668 122.714 cv
646.262 127.397 654.602 126.664 655.489 119.08 cv
656.379 111.495 653.366 107.096 655.694 92.3013 cv
656.975 84.1665 657.938 79.1216 654.813 78.5132 cv
cp
.0250248 .567285 .998169 0 cmyk
f
654.571 77.2065 mo
650.853 77.0737 644.233 83.4521 640.022 93.9858 cv
635.06 106.405 637.99 118.716 641.656 123.492 cv
643.254 125.572 645.686 126.82 648.331 126.914 cv
652.061 127.046 656.113 124.722 656.757 119.227 cv
657.126 116.076 656.858 113.522 656.55 110.567 cv
656.093 106.202 655.576 101.253 656.954 92.4985 cv
657.138 91.3394 li
658.402 83.3525 659.237 78.0757 655.057 77.2612 cv
654.9 77.2305 654.737 77.2129 654.571 77.2065 cv
654.571 77.2065 li
cp
654.524 78.4814 mo
654.626 78.4849 654.722 78.4946 654.813 78.5132 cv
657.938 79.1216 656.975 84.1665 655.694 92.3013 cv
653.366 107.096 656.379 111.495 655.489 119.08 cv
654.951 123.677 651.676 125.757 648.377 125.639 cv
646.235 125.563 644.082 124.559 642.668 122.714 cv
639.229 118.237 636.414 106.452 641.207 94.4595 cv
645.41 83.9419 651.69 78.3804 654.524 78.4814 cv
654.524 78.4814 li
cp
.75021 .679683 .670222 .90164 cmyk
f
641.21 94.4614 mo
645.563 83.5684 652.141 77.9932 654.81 78.5146 cv
655.105 78.5669 655.366 78.6709 655.59 78.8145 cv
652.599 79.6768 646.596 85.3491 643.926 101.515 cv
640.724 120.938 652.049 125.765 655.315 120.065 cv
653.853 126.723 646.097 127.186 642.667 122.717 cv
639.229 118.24 636.418 106.453 641.21 94.4614 cv
cp
.101595 .727993 1 .0109865 cmyk
f
657.686 87.2935 mo
657.601 89.4331 657.373 91.7642 657.129 94.0435 cv
650.938 95.1997 644.023 93.3022 640.886 91.1743 cv
642.01 89.1831 643.388 87.0464 644.887 85.0923 cv
648.023 86.5991 652.933 87.7349 657.686 87.2935 cv
cp
0 0 0 0 cmyk
f
657.129 94.0435 mo
656.885 96.3481 656.609 98.5923 656.438 100.542 cv
651.686 102.643 640.548 100.826 637.978 97.3306 cv
638.391 96.0015 639.441 93.7183 640.886 91.1743 cv
644.023 93.3022 650.938 95.1997 657.129 94.0435 cv
cp
0 .970642 .96051 0 cmyk
f
655.379 78.5347 mo
657.448 79.187 657.87 82.8262 657.686 87.2935 cv
652.933 87.7349 648.023 86.5991 644.887 85.0923 cv
648.16 80.8457 652.048 77.4888 655.379 78.5347 cv
cp
f
655.379 78.5347 mo
655.547 78.5835 655.698 78.6567 655.838 78.7554 cv
654.116 79.1113 651.174 81.2256 648.514 86.4214 cv
647.158 86.0483 645.924 85.5884 644.887 85.0923 cv
648.16 80.8457 652.048 77.4888 655.379 78.5347 cv
cp
.132235 1 1 .0386358 cmyk
f
648.514 86.4214 mo
647.545 88.3003 646.613 90.5806 645.783 93.3228 cv
643.78 92.7417 642.064 91.9741 640.886 91.1743 cv
642.01 89.1831 643.388 87.0464 644.887 85.0923 cv
645.924 85.5884 647.158 86.0483 648.514 86.4214 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
645.783 93.3228 mo
645.146 95.4448 644.576 97.8384 644.089 100.543 cv
641.333 99.8247 638.991 98.7114 637.978 97.3306 cv
638.391 96.0015 639.441 93.7183 640.886 91.1743 cv
642.064 91.9741 643.78 92.7417 645.783 93.3228 cv
cp
.132235 1 1 .0386358 cmyk
f
654.311 77.0669 mo
654.31 77.0669 654.309 77.0679 654.309 77.0679 cv
646.563 76.792 638.059 92.7925 636.763 96.9536 cv
636.642 97.3403 636.713 97.7612 636.952 98.0864 cv
639.099 101.006 645.253 102.521 650.063 102.694 cv
652.029 102.764 654.82 102.65 656.95 101.709 cv
657.375 101.522 657.664 101.119 657.706 100.657 cv
657.825 99.3218 657.99 97.8472 658.165 96.2896 cv
659.133 87.6372 660.135 78.6929 655.761 77.3159 cv
655.294 77.1689 654.805 77.0854 654.311 77.0669 cv
654.311 77.0669 li
cp
654.262 78.3413 mo
654.641 78.3545 655.013 78.4175 655.379 78.5322 cv
659.444 79.812 657.145 92.6294 656.436 100.543 cv
654.852 101.242 652.559 101.507 650.109 101.419 cv
645.211 101.245 639.692 99.6616 637.98 97.3325 cv
639.344 92.9546 647.604 78.1055 654.262 78.3413 cv
654.262 78.3413 li
cp
.75021 .679683 .670222 .90164 cmyk
f
662.515 0 mo
662.512 0 li
656.51 0 647.555 .953613 638.98 5.49609 cv
630.268 10.1104 624.068 17.2798 620.558 26.8042 cv
619.079 30.814 618.382 35.2476 618.473 40.0288 cv
618.407 40.0088 618.343 39.9893 618.277 39.9707 cv
615.456 39.1514 612.347 38.7358 609.036 38.7358 cv
604.933 38.7358 600.598 39.3647 596.15 40.6064 cv
595.929 40.668 li
595.266 40.8491 594.704 41.2896 594.37 41.8906 cv
594.036 42.4907 593.96 43.2007 594.157 43.8589 cv
596.504 51.707 602.035 56.7725 607.58 59.4824 cv
607.473 59.5737 607.363 59.666 607.257 59.7588 cv
599.115 66.8037 599.604 79.2534 600.479 83.4561 cv
600.727 84.646 601.775 85.4868 602.974 85.4868 cv
603.036 85.4868 603.099 85.4839 603.161 85.48 cv
611.329 84.8804 619.275 82.1411 624.905 78.2124 cv
624.849 79.7969 624.934 81.3877 625.27 83.0229 cv
626.3 88.0503 629.752 91.0522 634.502 91.0522 cv
640.109 91.0522 646.88 86.4087 648.611 79.5513 cv
651.558 80.3789 654.729 80.7974 658.074 80.7974 cv
660.641 80.7974 663.363 80.5508 666.169 80.0654 cv
677.594 78.0854 686.729 74.6616 693.355 69.8784 cv
694.52 70.4355 695.799 70.7236 697.138 70.7236 cv
700.408 70.7236 703.81 69.0391 706.469 66.1016 cv
709.449 62.8105 710.923 58.561 710.513 54.4448 cv
709.775 47.042 703.278 37.3354 698.362 31.6367 cv
698.452 31.3179 698.48 30.9819 698.44 30.645 cv
696.937 17.9438 688.921 6.90137 678.019 2.5127 cv
674.053 .916504 668.401 .000976563 662.515 0 cv
662.515 0 li
cp
f
626.35 56.7285 mo
629.047 54.3013 626.35 44.9697 617.566 42.4194 cv
608.145 39.6836 598.158 42.7036 596.6 43.1284 cv
601.134 58.2866 619.267 63.1035 626.35 56.7285 cv
cp
0 .970642 .96051 0 cmyk
f
617.564 42.4219 mo
626.354 44.9722 629.048 54.3052 626.354 56.7275 cv
619.357 63.0181 601.627 58.4111 596.798 43.7393 cv
600.028 48.9927 607.967 56.8296 616.136 50.7773 cv
619.298 48.4316 618.015 44.8276 615.983 42.0229 cv
616.51 42.1333 617.036 42.269 617.564 42.4219 cv
cp
.132235 1 1 .0386358 cmyk
f
609.036 40.0107 mo
605.049 40.0107 600.829 40.624 596.493 41.835 cv
596.265 41.8984 li
595.933 41.9888 595.652 42.2085 595.485 42.5093 cv
595.318 42.8096 595.28 43.165 595.378 43.4937 cv
598.767 54.8208 609.358 60.7466 618.07 60.7466 cv
621.76 60.7466 625.003 59.6563 627.203 57.6763 cv
628.533 56.4795 628.959 54.3218 628.372 51.7578 cv
627.521 48.0376 624.271 43.0386 617.923 41.1953 cv
615.215 40.4092 612.226 40.0107 609.036 40.0107 cv
609.036 40.0107 li
cp
609.036 41.2856 mo
611.761 41.2856 614.69 41.5845 617.566 42.4194 cv
626.35 44.9697 629.047 54.3013 626.35 56.7285 cv
624.311 58.5645 621.354 59.4717 618.07 59.4717 cv
609.951 59.4717 599.828 53.9219 596.6 43.1284 cv
597.683 42.833 602.832 41.2856 609.036 41.2856 cv
609.036 41.2856 li
cp
.75021 .679683 .670222 .90164 cmyk
f
629.892 59.9863 mo
627.483 54.0366 616.524 55.1104 608.925 61.6865 cv
601.559 68.0615 602.268 79.5366 602.975 82.9365 cv
618.417 81.8032 634.906 72.3755 629.892 59.9863 cv
cp
0 .970642 .96051 0 cmyk
f
629.89 59.9829 mo
634.903 72.376 618.414 81.8027 602.979 82.9331 cv
602.799 82.0996 602.63 80.7822 602.569 79.1763 cv
611.163 77.0771 620.648 74.4927 622.358 67.0977 cv
623.676 61.3857 620.156 57.5776 617.275 56.9824 cv
622.928 55.1802 628.291 56.0303 629.89 59.9829 cv
cp
.132235 1 1 .0386358 cmyk
f
622.646 54.8066 mo
617.885 54.8066 612.308 57.0737 608.092 60.7217 cv
600.415 67.3652 600.895 79.1978 601.728 83.1963 cv
601.851 83.7915 602.376 84.2114 602.975 84.2114 cv
603.006 84.2114 603.037 84.2104 603.068 84.2085 cv
612.942 83.4834 625.117 79.1963 630.06 71.2515 cv
632.345 67.5767 632.695 63.5161 631.074 59.5083 cv
629.864 56.52 626.793 54.8066 622.646 54.8066 cv
622.646 54.8066 li
cp
622.646 56.0815 mo
626.055 56.0815 628.82 57.3394 629.892 59.9863 cv
634.906 72.3755 618.417 81.8032 602.975 82.9365 cv
602.268 79.5366 601.559 68.0615 608.925 61.6865 cv
613.144 58.0366 618.395 56.0815 622.646 56.0815 cv
622.646 56.0815 li
cp
.75021 .679683 .670222 .90164 cmyk
f
692.18 29.0679 mo
696.889 32.7124 707.111 46.0337 707.975 54.6982 cv
708.999 64.9736 695.531 73.9111 690.892 63.6299 cv
687.926 57.0581 690.299 49.5913 686.104 39.8037 cv
681.819 29.8057 687.168 25.187 692.18 29.0679 cv
cp
.280522 .914061 1 .298253 cmyk
f
692.177 29.0684 mo
696.886 32.7148 707.111 46.0347 707.979 54.6963 cv
708.573 60.7051 704.213 66.2642 699.563 67.7773 cv
710.92 61.5303 705.3 49.6387 699.41 39.3364 cv
695.934 33.2588 692.542 29.3232 689.941 27.8872 cv
690.673 28.0996 691.429 28.4907 692.177 29.0684 cv
cp
.215396 .82446 1 .119539 cmyk
f
688.669 26.4238 mo
688.669 26.4238 li
686.929 26.4238 685.429 27.2456 684.445 28.7373 cv
682.723 31.3496 682.9 35.5664 684.932 40.3062 cv
687.121 45.415 687.462 49.9722 687.761 53.9932 cv
688.026 57.5649 688.278 60.9385 689.729 64.1543 cv
691.272 67.5752 693.9 69.4585 697.129 69.4585 cv
699.998 69.4585 703.136 67.8862 705.52 65.2524 cv
708.261 62.2241 709.618 58.3311 709.244 54.5718 cv
708.311 45.1963 697.476 31.5557 692.961 28.0601 cv
691.579 26.9902 690.095 26.4238 688.669 26.4238 cv
688.669 26.4238 li
cp
688.668 27.6987 mo
689.768 27.6987 690.983 28.1411 692.18 29.0679 cv
696.889 32.7124 707.111 46.0337 707.975 54.6982 cv
708.679 61.7563 702.543 68.1836 697.129 68.1836 cv
694.662 68.1836 692.345 66.8486 690.892 63.6299 cv
687.926 57.0581 690.299 49.5913 686.104 39.8037 cv
682.842 32.1929 685.162 27.6997 688.668 27.6987 cv
688.668 27.6987 li
cp
.75021 .679683 .670222 .90164 cmyk
f
628.121 53.9648 mo
631.174 62.1772 638.746 82.2275 665.733 77.5527 cv
692.722 72.8774 701.646 60.7651 702.071 51.6274 cv
702.468 43.0942 698.56 42.5298 692.509 25.7026 cv
683.796 1.47754 658.296 2.32764 642.784 10.8276 cv
625.752 20.1592 621.959 37.3901 628.121 53.9648 cv
cp
.0250248 .567285 .998169 0 cmyk
f
657.976 54.5098 mo
657.732 54.5098 657.487 54.4409 657.27 54.2959 cv
656.684 53.9053 656.524 53.1138 656.916 52.5278 cv
658.799 49.7036 663.067 47.4502 666.846 47.2861 cv
667.546 47.2466 668.145 47.8008 668.176 48.5049 cv
668.206 49.2085 667.66 49.8032 666.957 49.834 cv
664.016 49.9614 660.463 51.8047 659.037 53.9424 cv
658.792 54.3105 658.388 54.5098 657.976 54.5098 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
684.609 43.46 mo
684.312 43.46 684.012 43.3564 683.771 43.1445 cv
683.24 42.6812 683.187 41.8755 683.65 41.3452 cv
685.89 38.7856 690.165 36.9106 692.976 37.2354 cv
693.675 37.3174 694.176 37.9512 694.093 38.6504 cv
694.011 39.3501 693.375 39.8457 692.678 39.7676 cv
690.657 39.5308 687.27 41.082 685.569 43.0244 cv
685.317 43.3125 684.965 43.46 684.609 43.46 cv
cp
f
673.392 6.76416 mo
659.63 5.54102 645.86 12.3574 645.078 33.6836 cv
644.561 48.0747 652.584 74.8159 675.185 75.4277 cv
672.313 76.2437 669.167 76.9575 665.733 77.5527 cv
638.746 82.2275 631.173 62.1763 628.121 53.9648 cv
621.959 37.3901 625.749 20.1611 642.784 10.8276 cv
651.428 6.09277 663.184 3.73047 673.392 6.76416 cv
cp
.101595 .727993 1 .0109865 cmyk
f
663.667 4.13135 mo
656.369 4.13135 648.735 6.11182 642.171 9.70947 cv
625.842 18.6563 620.001 35.7837 626.926 54.4092 cv
629.72 61.9248 636.265 79.5249 658.046 79.5249 cv
660.548 79.5249 663.207 79.2842 665.951 78.8086 cv
678.46 76.6421 688.127 72.7495 694.684 67.2397 cv
700.01 62.7632 703.086 57.2397 703.345 51.6865 cv
703.587 46.4604 702.259 43.9072 700.06 39.6763 cv
698.459 36.6006 696.268 32.3872 693.708 25.271 cv
687.094 6.87744 672.047 4.13135 663.667 4.13135 cv
663.667 4.13135 li
cp
663.667 5.40625 mo
675.478 5.40625 687.159 10.8286 692.509 25.7026 cv
698.56 42.5298 702.468 43.0942 702.071 51.6274 cv
701.646 60.7651 692.722 72.8774 665.733 77.5527 cv
662.973 78.0308 660.416 78.25 658.046 78.25 cv
637.245 78.25 630.862 61.3369 628.121 53.9648 cv
621.959 37.3901 625.752 20.1592 642.784 10.8276 cv
648.771 7.54688 656.242 5.40625 663.667 5.40625 cv
663.667 5.40625 li
cp
.75021 .679683 .670222 .90164 cmyk
f
636.621 49.0776 mo
640.413 53.668 647.459 68.9106 646.396 77.5527 cv
645.136 87.8013 630.034 93.561 627.767 82.5107 cv
626.318 75.4482 630.274 68.6855 628.334 58.2148 cv
626.35 47.5195 632.584 44.1899 636.621 49.0776 cv
cp
.280522 .914061 1 .298253 cmyk
f
636.621 49.0776 mo
640.411 53.668 647.459 68.9082 646.396 77.5527 cv
645.783 82.5337 641.916 86.4438 637.828 87.897 cv
647.424 83.1284 644.364 71.356 640.803 60.8755 cv
638.015 52.6563 634.733 47.6924 632.142 46.9185 cv
633.611 46.6978 635.243 47.4116 636.621 49.0776 cv
cp
.215396 .82446 1 .119539 cmyk
f
632.648 45.5996 mo
632.647 45.5996 li
631.141 45.5996 629.733 46.2935 628.686 47.5527 cv
626.774 49.8521 626.204 53.7217 627.079 58.4473 cv
628.093 63.9126 627.422 68.4341 626.831 72.4229 cv
626.305 75.9653 625.809 79.3115 626.518 82.7671 cv
627.418 87.1567 630.402 89.7769 634.502 89.7769 cv
640.024 89.7769 646.786 84.8208 647.661 77.708 cv
648.811 68.356 641.24 52.6675 637.604 48.2656 cv
636.183 46.5459 634.423 45.5996 632.648 45.5996 cv
632.648 45.5996 li
cp
632.646 46.8745 mo
633.98 46.8735 635.401 47.6011 636.621 49.0776 cv
640.413 53.668 647.459 68.9106 646.396 77.5527 cv
645.617 83.8838 639.557 88.5024 634.502 88.5024 cv
631.374 88.5024 628.634 86.7349 627.767 82.5107 cv
626.318 75.4482 630.274 68.6855 628.334 58.2148 cv
626.949 50.752 629.567 46.8745 632.646 46.8745 cv
632.646 46.8745 li
cp
.75021 .679683 .670222 .90164 cmyk
f
628.05 64.9443 mo
631.04 59.7119 664.459 26.8364 695.909 30.9443 cv
694.634 20.1777 687.975 9.26953 677.066 4.87842 cv
666.064 .449219 633.292 -.36377 622.95 27.6865 cv
617.507 42.4512 624.934 59.7036 628.05 64.9443 cv
cp
0 .970642 .96051 0 cmyk
f
693.604 22.0396 mo
694.778 24.9204 695.552 27.938 695.909 30.9468 cv
692.168 30.4541 688.403 30.4878 684.663 30.9385 cv
689.525 28.728 692.517 25.8643 693.604 22.0396 cv
cp
.132235 1 1 .0386358 cmyk
f
642.944 26.3062 mo
647.161 36.6929 657.199 37.3984 667.561 35.6479 cv
646.931 44.2837 630.127 61.3003 628.053 64.9468 cv
624.934 59.7026 617.505 42.4478 622.953 27.6831 cv
628.053 13.8364 638.618 7.02832 649.336 4.20605 cv
643.43 8.73682 639.213 17.1089 642.944 26.3062 cv
cp
f
662.515 1.2749 mo
656.656 1.2749 647.922 2.20313 639.578 6.62158 cv
631.151 11.085 625.153 18.0234 621.755 27.2456 cv
615.094 45.3115 626.835 65.395 626.954 65.5962 cv
627.184 65.9829 627.6 66.2197 628.05 66.2197 cv
628.053 66.2197 628.058 66.2197 628.062 66.2197 cv
628.515 66.2153 628.932 65.9712 629.157 65.5771 cv
631.796 60.9585 661.043 31.8652 690.372 31.8652 cv
692.191 31.8652 693.998 31.9814 695.743 32.2085 cv
695.798 32.2163 695.854 32.2197 695.909 32.2197 cv
696.241 32.2197 696.564 32.0894 696.805 31.8516 cv
697.084 31.5752 697.221 31.1851 697.175 30.7944 cv
695.725 18.5498 688.018 7.91211 677.542 3.69531 cv
673.778 2.17969 668.159 1.2749 662.515 1.2749 cv
662.515 1.2749 li
cp
662.515 2.5498 mo
668.524 2.5498 673.772 3.55273 677.066 4.87842 cv
687.975 9.26953 694.634 20.1777 695.909 30.9443 cv
694.066 30.7036 692.222 30.5898 690.372 30.5898 cv
660.652 30.5898 630.865 60.0181 628.05 64.9443 cv
624.934 59.7036 617.507 42.4512 622.95 27.6865 cv
630.195 8.03418 648.448 2.5498 662.515 2.5498 cv
662.515 2.5498 li
cp
.75021 .679683 .670222 .90164 cmyk
f
695.943 52.2227 mo
699.044 58.4692 694.553 67.0073 685.912 71.2969 cv
677.271 75.5869 667.753 74.0005 664.653 67.7554 cv
661.552 61.5088 666.044 52.9697 674.686 48.6802 cv
683.325 44.3901 692.844 45.9771 695.943 52.2227 cv
cp
.00985733 .0806592 .600977 0 cmyk
f
684.606 47.1543 mo
685.218 49.0923 683.386 51.4009 680.513 52.3066 cv
677.639 53.2129 674.814 52.3745 674.203 50.4346 cv
673.591 48.4956 675.423 46.187 678.296 45.2817 cv
681.17 44.375 683.994 45.2134 684.606 47.1543 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
683.897 47.3774 mo
683.839 47.189 683.747 47.0171 683.642 46.854 cv
683.323 48.1738 681.961 49.4644 680.078 50.0581 cv
677.874 50.7524 675.712 50.2563 674.883 48.9648 cv
674.781 49.3838 674.783 49.8071 674.911 50.2114 cv
675.439 51.8872 677.88 52.6113 680.361 51.8286 cv
682.844 51.0459 684.426 49.0518 683.897 47.3774 cv
cp
.636561 .700954 .654597 .746487 cmyk
f
652.19 43.043 mo
654.881 42.2441 657.995 41.3843 662.108 41.894 cv
664.857 42.2354 664.934 39.9502 662.401 39.1475 cv
660.37 38.5024 655.523 39.5161 652.021 41.9565 cv
650.527 42.9971 651.08 43.373 652.19 43.043 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
688.914 29.4463 mo
686.778 30.8887 684.355 32.5957 682.477 35.8345 cv
681.222 38 679.347 36.6885 680.112 34.4028 cv
680.726 32.5674 684.233 29.7168 688.139 28.6758 cv
689.805 28.2324 689.798 28.8521 688.914 29.4463 cv
cp
f
682.394 46.8955 mo
682.456 47.5171 681.76 48.0957 680.84 48.1875 cv
679.918 48.2798 679.121 47.8516 679.059 47.23 cv
678.997 46.6079 679.692 46.0288 680.613 45.9365 cv
681.533 45.8438 682.332 46.2729 682.394 46.8955 cv
cp
0 0 0 0 cmyk
f
678.521 61.1646 mo
676.763 61.1646 675.114 60.5029 674.305 58.9321 cv
674.143 58.6191 674.266 58.2349 674.579 58.0737 cv
674.892 57.9106 675.275 58.0356 675.438 58.3477 cv
676.45 60.3101 679.264 60.0679 680.907 59.4268 cv
683.776 58.3096 684.837 56.9341 684.346 54.9692 cv
684.261 54.6284 684.469 54.2822 684.811 54.1968 cv
685.151 54.1104 685.498 54.3193 685.583 54.6606 cv
686.565 58.5913 682.655 60.1143 681.371 60.6157 cv
680.467 60.9678 679.478 61.1646 678.521 61.1646 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
672.524 19.5957 mo
674.372 18.6064 675.699 16.0015 673.076 12.4927 cv
670.453 8.98486 663.79 8.07813 659.701 9.29541 cv
655.611 10.5132 651.636 14.1812 652.092 18.666 cv
652.501 22.667 655.595 24.1235 659.11 23.9463 cv
659.456 25.9277 659.946 26.9575 660.375 26.8682 cv
661.104 26.7168 663.877 25.7334 664.416 25.5425 cv
664.34 24.7954 664.09 23.0835 664.09 23.0835 cv
665.287 25.0459 li
666.141 24.9736 669.328 23.7212 669.655 23.521 cv
669.456 23.1938 668.572 21.3511 668.572 21.3511 cv
670.556 23.1675 li
671.413 22.9893 674.081 21.8906 674.081 21.8906 cv
674.429 21.1602 672.524 19.5957 672.524 19.5957 cv
cp
0 0 0 0 cmyk
f
662.734 16.6108 mo
663.231 17.8975 662.658 19.3174 661.454 19.7822 cv
660.25 20.248 658.871 19.583 658.374 18.2964 cv
657.876 17.0098 658.45 15.5898 659.654 15.125 cv
660.857 14.6592 662.237 15.3247 662.734 16.6108 cv
cp
0 .970642 .96051 0 cmyk
f
669.006 14.1104 mo
669.778 15.251 669.601 16.7212 668.609 17.3936 cv
667.616 18.0669 666.185 17.6865 665.412 16.5444 cv
664.638 15.4038 664.815 13.9321 665.809 13.2598 cv
666.801 12.5874 668.232 12.9673 669.006 14.1104 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 15.0.1
%%For: (WINDOWS) ()
%%Title: (Dogi_Pirate_Idle.eps)
%%CreationDate: 7/26/2014 12:36 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KCQmM]QJcsgq*4(9Wfl2C/cgPHR7qI_6qMU.lT?ZBS]TI4PY:8,j.>n\g[;ed\\EU>!s]@";R7I*U^fi&/3tBa*#tJ-%R0c+
%IW^!_H?T,-r9>A2:<I>B8o$5^[$nY5p>q4Y55Vgq+#Y3FQ);)D2:g!L<LtY<SkY3H9=tL%.YBZ4Y"ijf2O?A[?XK@?5(7=NcEFB8
%IQ;+k?XHRB=oSQ<X=+$lF+/T2gLPcI55>r]R=/AR?(IO)<`dlhl^Na%AlP/4V47MY&ak5Tn?XYFqXW_Fp2omhgqPlJq>u-G8ACC-
%l-#R@bmj:`SuT"bbr>[ss2;VHEfs/?,(m.4;d7h]b3;9j[>#37VQ?25rguDkIQ@:MF1o:J]=RpD0<h##f9UdUB(KHU5JWK@+`Mi>
%5>Du`GO+#T)t)u:e:N`??VI\\s#KoC".">1]Bgf<S"V(pibtjf"`h:Spb,V4I_sEWP"uKNkPO]ap^GC^Cc4!Or2e]`Wq-3Aq4'L&
%!<-tZn_nkDZ_<4775caUnap2d74Q4);+4LKBqEq,9LT8<[$/q&;en16/q%s:",:XkI^](>bK7M9eu,!QLBt6PRl>![KF+igCm&G!
%/,nN$Huo7qbHi,f*B-shA:/H@\iJrAG.4[#f/WLZJEYh>pi1`\bN9#5qs+(pkMjZVje),2mD\Dan!iX(dU<%I]+:CS+0Y[73r5j/
%-AWZr79NUm<3=B0asTg3d2Yc:GWXb5c'C=PhZK$jGCB2.g#\P(bUpW[U$l?lcV=T9_IBS@NVYlAU;'n2>W6*<2`I4!l*o)ZRr:Vd
%=Z66@NI/[+mr'k.^0I9Rcu_-rIhhZk%etL`=Pp1\^+`hH.K>dZJ%q\BQ,+usnJu3T??M7r9d?K[NrS9&rX&p-j#d:P>1)_bS$cAC
%>5Vta<jNRB=h@j/UNMQ=l5K!<n=n\')QVCG<l7`.Nn'R&X#1@Cg,/RtdpS`s$@c?`Lm6j'XKYmu:#'IN1A?TsahQi;np?tGmJ%c(
%_f=Ws<l8q!B_aS,'Y\&t*#--9fEE7B1QDk#nJ_rFhm"U7(,q5*_KQn[I_]D4(I"*mb!!OT3&H$'3ia!]aXg<P):Apd"r4lDXZUnN
%!-b&^a3U[/b>_%JIUP)R,JIYd4HVaHrln.WI_]\X7[[rp%H!+S`-;-6"(XO0GLq*k_KW)9A&NS_9L]g&0)#@<.C_X6(JL!kj"<+R
%Yo3^?@)Jc&!DqsiC]%^\>GdC\a:%=l!!Pl4J93l6S:AO5i]C1N>fSQS>khoYa#Z1F\6Z=D<YC%GT>?mIkU]7LGXn<;P[UAL73Zfr
%d-(B_m.na34R0RQN/Wh0O4E=egcRO2^[oWkSeikd2U=MgLmqMoMbuL9I_H&)Qdm&+R/eb="3,Fc!s')"p4,lCo##8OXM\j^T*1[+
%HN8nE=1TqYk(`\4V)!AUs,L&.pX5L[$NK_@)#bTUk82o['O2@Ok>tgWp[CD^Wf"PmQ%+,A?F(OL'`R:II*UWes87K'(CMi&s7:$:
%jR;&WIV&N?kWI-6^@V9nGPT8Yiu#1<9X.c3eS8)%pbmo4ccs+-bZ:cuK"#cOhecpT"2C01.%Oj^U#C0)m)g,3j]N<J@j=g=@Dg`6
%eZ>3"?3U6f-NOs20&97oF-AQY]VufR'cMP%n2WP9<<Y>?Xn[f,q(Ca$:p#-jrgYS)RDr;!@b&8<e'-rCeX606Jt!-q,^+X.<.JRs
%7:!>YC/Z^g_p+.CHmQIX?O]aAhq[.iT#pA%+Thk</ThBU?=:gaq%\mY)CQTd\H6mp)Ha,?0@EFE6dQ_&Qm:J*KCC$\"$oEtKh;IK
%f*qAk2e0([CsGDad:50G#?M\V'>J-=pXm]+'ic^hS6ViIL9M.]g7hd#ZnQ2\E7A.7!=gWJGp^d4N?YNVr?96`0NiNN'j!57\En<,
%:Wm`c3:@?1%G'GuE4aE>N$+N%nec8%VTWpY]>Qa`.QKg<1e!sZQ10Vd]/4TKs&i>>6re,bRfl\sQ)7l%$\3s9)/1mC'//^J<3C;F
%gaK+'R2Nfb5f5*gR$u="o*FGSh(EKQ75##P:WU(mBKFY^Ki[4#NN0%b.&#Z(:I%BS+Gf?B/GNlD's*&!C/gtN63BC&):h9_Yf(h*
%l?#tlDLe4!=VfXLNjZ#-GZYp4LMIRKo*lEK!e/E624lbQF]dsIlEUTRUjIWqYE:)r"a16F@=\!d,aEIE6+BATCf``.*%gB."ni6@
%Djhu3*CaOY4TS4kNP?,(SnA=*!8)mSW_;\a=VSGM_H\TX)gE:7AsM/1kT^?_OG;0/ob'9K/t3btk0>XTaebh/QZ=lg[!5tu(k;h7
%boA(\b**G2KJmpnK@CB]"&jfu7gqeA^iU@:Z><pE!%kuX^dRH81gO;!]loL>)6VTpY_j;"W`dV&B\Gcd#3kYmjX+l!IDpK8KVm]X
%is>ap$NPeA=#3KF?K/W5]H`*&*P5i1&L41(C;(RX>hAK+!h*6fRqm<?9Hj*c!OI#4j"ILA'dKQe$+k'5M4*i#ZGc!]>EO:GUF7+K
%_0+:=!#utmJWR8i_J5MCR.D'M=<LQM>[#4"/>EYZGbZi)JnUJ7N&un3*2.Jij_%JD913[1h;&F:Yf,(FcU9gL"(F$>#_\u]T*]10
%n`0,"DMMtlmqD>U7bea'"dUBTk&Z1chd.GRY,]"4*]t='Y^&^a"Ba8:\rd2q/Rof/*)nW9<FUn_T3AGZWFZ1-'5Jhd/hP@n=V+ko
%2)]ZOET!5u<F1u4?0[:`=)"Y+NnP%pW2ml/q*oTIJ7rNq#=)DLiNX's9VOe_"//(4%Ua(>F5sAn1h`C9,NTo]3hr1f!m.qWXK<D]
%UcM;r&G':XQSXdBB7MsD#>$`a/"0#+Fgr8>+tZH@FUiGP`JGk&M!&5B1IJNEQOFgMM-M00o5YuTal9W4S4pG*ba):'HS`;HkD?+#
%E?9'9"gV:m(PgdZZ)dXf\WOCmIiM#rJI'U9$&&rE/2SN[E7)I16(n8rkmCK@Q;Zld1g,:#gIapPBOm,c"U0P_ar:UOA0/*Mh7V3R
%)CbC^d1(j4%#LoJD,@gZh^cK!Ud'#o@Zu-QFWU@TL/B-T@[nZW!qh;9Ii8t.,a1kj+G'H\fRs&5W$3u"iq9MgM*WlE+Dq5d'hVj.
%8?C-1"s@%^#Bu(@-+_7V!^(4pTN3K]Tuj,p9cQ=,Bg!c#T7Xt:*he7Xd*m,?/HBcl"[.uZ/7;5W9G':hEKi\"[EtLj,>/<A%>ho]
%Z9.X'+p`:8BaSYpiBp?&,d`^IjuQ9_>&ikgY;UCn$Al2JX]YQ&I[F-ZU]A\#U?'J?Ck+,o,)o5-L-W%ALeLJM&Xg-]/Qf/*nstu8
%11H\/NQAoF3d0:er<rih`&cee:g.S(,`Bf(m5g8%"2.psOIUD9+r@F7e8&a:qjq3g648$,E$1sql?LDR!GSi)_m+4d1(4KR.&$_/
%6!7u#2C-0!<794rVmtiWA8#ZpqGBkkN$Qc.,q^,^B?46^kCIDM=Ht0^V/Zj)9d3(t;N9ZR5$.^pAOs^;9PI)b+CP8'&R7h.%8k[!
%cjfO\DQG1J`<1*UVs0Y\mO=Cf(e>NF.<uc_+GoGB!jY\-J/Rp.Cm@sU7+F_D#I^E>n$+V2<DOW7"-Fb*)ENGn6"fS"9Vau>X:W\i
%#8gY>7i^(\NCJcTk&V6W&@U(AWkPK$j/;scOP^+D=YcQBXfY-SQHk->^eG]0EEZ's<<s;B3H?d'@*+D$nB[B5Ni,2QXVcKUSZn.D
%c-Z%hKK>,5DpP^,UJDY[#;&b><)+Vl+Ul[A/W0dJ.no>ed_R:VT/^.S";*;C=RhA!&@3(e/;j'kC'<LUNPIo39[ju7,H-THa6"DF
%2Hr``Ai2JGf8eJ1K#SZ/<3k-e']nIF)rPnJ*KXP8!/,bCOT[j0gO[g3O;G.Zi.bV[jLIS`U,Ja+X0<5E#=XA-X>4%-,R"b><^N`V
%(n#pd$lpQEP"@Hh)9]9,oZKjoW?N2[mmAsOemtobh($_SG[$W2)1iBb9'+8N%HA_>EWI2tZ"D+7k1)4+"QE/;fJq^87-2RN*F#BB
%&qVUmF!ujVM-HpTPg>k19fIO0]KAX'K_sD,?(grUUN]mhIslHgoo&])I%fHSCi4,T3*-M']`%O2DE,6ra2lF?hst^9g[EI,iQ&]>
%?ep2+qXWImb86es:9T-'9RaW\T0UZCG<c-%k2bZ_alffLI!Tj\G-dU>cTZ_r7oQJ[p%;q6^V]C1(&i]<rsuYiZ$CP9I1[CUdcKTJ
%2s46aU5"*<qXSb!+7&5'6Q6"(I!rQ>T$S"^mFQ!#LL8U4XO)8A)q=6:qVqe\*8O#*>*%<5+o5p"UXhBm-hHrSjlo:m3e)!hSdU<1
%q<%F0T<HPd5$n!gitDB;@..tkf9bB#E]:1?5JEcfG]e-M!5TE*:LTEiDtooVH&/ZZpAk!YE#W`HkN?Km>d$B)5<J+F^ZTh@TIomJ
%_P.]qHJ]CbTDZU<G9"VD&CBmk/l1FAU3Zi\<u2r4<+PR^rV?U3A'J"Q1ULB!"X4s#iE*4+P@pF\k*L(Q^L"*>c[Z%D#rHaP$7,I_
%Z98(s_pKb!OM9.72T[?<e!D`eoAtmHC?s<B,_Jr9W$p&k]IM&*5F$M"'K(>;H)V0$;d'p%bB.1NK:.,\G(0D.NCBD-895GYD'Fs6
%UofJ12/t3BoVBPT.a,%ZFSEOuU?:S[T;6,=PBO$PZ@4rN\%#N27DO(4fI]YlmH3\SncQmG9`G"WQcfgh8]9W&@Z2ie"!3e3RHL#)
%OO\#sJPW-k%3]/F>@e)bZI5CO%mH@9@r0A^^R5S1pTMqTe@b1]Rb&ZS0'5f++e-,!:!o2um*(oDZTu:U68.n`=VTpOW"u]C<(7tg
%@^XFGHC6G2Z2c`cqQMN;eT(j11^4aqEIPe?#^R@nMD";!*%lUtoZ=VDE:<;rb87nB7(%&ZC&3`@C`T."68&1mgQHlg^ck%+Z"J.C
%j,C,ZqM\KI(FiYn>m<cQQ\J/LPq>:ATkd4`;?.1nioLPu8A.:+4Mo.U<<0B7^ao`3l%K0EAn\6]#NJP>2kQ;O%h8PPfX:eO![(9N
%X-YIX:$-!5hVa!G_ILrj8KpCC<])PhZK)`So6d_"K'E8A4KB?)MD"^3Et,(iFnm(Gs6%mdU"0X#/*NIFrrW:c:]B2F>'uBNn%!cP
%4F+AUn*gQI?GQF>#)o/S@^?r"Sq2&=,7U?B^LCg=0;h#kU;C9NXB4o#W98:*Il71i2([ImW!t/%3W*GA?du+$?kO:Ff77Tj7qYq(
%_IY5r'ieT).]Yh:Jgm,j^h4rM:mRbTJQ>h6V#hAHXdhA!NLebUb87UqV(LU\<nkhJ5Y.8ER&4!e%DiYNapVKc7:qiFiFI[0mp:jj
%IIo<6AO%IE,_B`Yq#Z(PkHhhDbIko5DK;<2\]Q]nYSA9QULu8@[BAGke5dMoBHshjO=:/ZHte*>k["C[-,??sYQ;]ZLBZ&0"<E.+
%?Pu+AKd_huB2lTO^*"/L?e/N8H%_Eb'Z"NQn0/!X&?@5a_4kiZ/te(%3JAedZr4]fC$7maHVNu323T-g_mKiSb\")d(ljD?%*R'b
%dh"WA!P1EZ'O!>,g5DZYL?fHf)'\Up_%e,/.$+hq\cTr**+W[f<=gboZ3]3T!])SU8./DliMpnMME7DN+SG4*U.#G3(KE@\0P3S'
%1R`Eq@'-0B/%at;AsFc5c8:.:_h'9=;h]h%JL2jsl[MCi^;0D1X(b=Ea22T=J-i_PJC)cVaC-2Ng[hG"'nFr?b,(TFP4>)^I1C<t
%_$gp1_n=ote1_gOY@.n@CB=Dl5TcO(3C#b1\1[iS);^[PXW=J^^u(Qt?GKisY9F6**J=H-(!H\$64Dnu_mo557Q;Wg$"4gTiR.)A
%r_e!W*2qqEoF"iMcs8c70WoBZ/_@F4f"I`qN1e[M/[nuChQ+I#`n,=8q3Gg)jf7>K=q';g/Q]LEZ@*Or=DYOlQ7Lj53G`\N<O_Lr
%kN\I8J.TS9$/u+h;)F1k?npZH"hK7QZW9VckCDs(U]Kp]fZBd1^2d<f8CP\tX=Kr42:86\XIBEme<34oN6hbh""ZCj',K/%"e5[?
%`uI)GX?WM..i:$(*ZE"t#+aDN9!'P!>,&>,BkINq$"tan<!YMglP^ZF6AdE(CE;YXNQ_RWIRB?F=fc9<PQcjDA]UQBjF`c^Gm-#,
%l2-u!rIWgr/!r^nIY"$a63.fM<fK)YN&Y\WS-6d2QS6JrEalO8DBL(iN4c%k5(lC-jP=m7k<P_W70o`Gcf`*i$K>nKS([*FcodC:
%JGXltL6;T]VF$r='S40-,[F@pCWt.7$C#Td>P_Laq,DeqGp[;kMb?9e\Y$QmAo96-7WZR*#'8_cMe?haB1hbH\JaE&iRqB0R5'.k
%C713N0AML758Vns_d)?>bs:]j?[9^;g_o5_ETj0QpWUO$jl+E[/j4k,%pS/Sb##2DU*-'Z;:Zsp1O".6kqn;Yn1N'?jt"k5[*p][
%knl9l)%H)K-#"8iF:I/fQF)X?oSplV)_0Du!(CY#D4mc2U03I5*0u0Y.9j@+M>i/9HuT91$J>9VM7]KeMO3F_j=p/&7^ACnH&SP!
%Oi`oBOUI>qk1CBiAsJ_-=?6Q;'sLaAgm+)MQ6aABN&E%$(2p3DP/T:V,SD".e.p1Z95&D+mSFKrQq1o$PL)(JD3lO&U1hm$=VXM@
%)J(^dE._sbK2/^_#,@2hZ]&HO^ftuoeg-ZKJCT@;&/<4l/!A-q=_C/"jFsC20l9l_GEKb[lA?d9!'j1\M^183j"@4?_"6fSODEp$
%/'m6pWZ0qpF2sDT!3Eu(&0Ub_Fg;uY)4o^k0+%*k=U]C6n<5un+PQFHn/gYRbk%(gs/2#Q<6mZ!J7^"#J,`..-lRf5nWsBN)8U1[
%&=Nk\]Rq[tKI-cOm@]=ITo$!/G#6/5cpXN34/h.VRclUjUdL.p3B@mjm@&-=f!/L#+LPaZ[?=_SMb"9]PED+q?5sEfE7^7*Zmr/i
%i5\KOKTIO)Q_CIQ$e@PCFfYjH1fi-d[F5:3]>qEE!G!)lCBn/[8E#l3iX;\H.;!*8aiR^qaMNTH.H-35?)4h[*'&/[RKqjo_ZB)M
%+rbg[6F1]!0G>8i0"0pSq/SA7j<@W:!j,Gl[8#TQQeHl$I*o5p[BKLgbI"I=4cHLRgFmoo"mc=p/9b@LcE$BFTZ-D;G/lI9Y;ZCr
%>1#\hg@V*i7C=QKcjZQrrD\F67SGgqG/P"neWONqIXiug1o)YHVXeP-U/b`ja[lsj@_!7"Jsms>\YCr3gFgS\`_r1E19U=K#g4KI
%a=0l!@C`ioHQ,VmF!p,R\ORp=PQH+kjQ5HeMm_G,,pu?q=JDS0A_M30*V!e$f>>A9S6^5/[PY3Hl=:$2OlZb4*(8guNL9BMOZ5l>
%pK_;-SooOF>=aVPWMLf<B'*VD-M:&aKijI3MB[$;rZRMt;Z?'b_/'Lfh@?X"]sT"TQE@4=fi>GD;3t$5SN2TO8>LcY,`e*/FlfDq
%Q9\UL/=be#,,nLOc6.%g[)oU#k`1Xd27H/GWLVY-0iJD-P("?CQm?%%mB:]AW5;]4K'c>b;O+^_jfqemk!SK53%q^MQ"$5If_m?m
%LH.qQhC]@b$jt$ZK&8h@#KiHF<o/J5FC'WSk@;`dB&laTH&bsOc[pBXXQ,M]2085#d)'/'`rRidHB&Xl]_A,i*.-iG&:?3N0:bmj
%YJU/`N5u7bU!V(XTtCD?jo#oe06&hoF2>&Jo3g($\U9MR!uPmGf:d0?"n>CL?4p.%T8PQeR>Eg\\Wcp_num_1mH/o13%&#QNXIG9
%-+itsL]=h9=9R"1/dZ!rr38t2$/b04JD(W7O8c8poNO;3PpP@VP>)i;OZH'5Hhk!e<W]N>J<U@b-h?BI=U[&u2:,Zm/A1m_H2GG5
%98^n`5(n%blSk+<]hIY&Ja=8U*L!"?c_bqG(Z*'>@\4m]02&sJ,4"J]Y3X5S1?1ec^\CQEA3??1D@#OD_^V2%RIb#okJbq=H'$ko
%Kirqb_7RIPpAl_^JnRI>4.u<[=#':`i\6KIO-C>1@I1*_)N.c@cs5#qO9QYua/JYSI:g);C40p'1aL,HV/f$h#+W7NZ!rsUfK+kt
%adJ@K<ocElc5'PD.qD!M&`kn24?7C)f(@VcLcfDQEZ/+S:dRN%B#u].3A4gY?:0mt1?VG$M2ZkA[IZD1[Kc1.p-u?#')lq7X^oah
%krbBAo5$<1EM8'93</0)rLkWBbuWo)AT+PkhG`s>i^tqs$Hb<n=-7J@+Fj-0301deMqk=GOK(`:4Y?=>hL/bbfah2>.O,l6b!es9
%>?-e+Tl>1.\[*NbF^/bCelg#G.c(_('0?90@!mW)N)MNA%:TX)Z-)*lZ[]<!TH`4->J<BFQk?rMqLPu"/+Qa[DtC+p[c+W92K.]Z
%$c1h.8!q>#!io0Jd1O=SlF(QAMfj],dh'H=CIg2orI?I2KTUA5<hPrtJhItjK4jk;fAIGA]ILbd,+][)Rpd9@=_EMiSAfC6X\iq^
%'O.C0lqq;Q+tp.PU)8O8%V6[KTN6mf-0pb\1eGOu:OPis8eES>9QNIb[A51qM:sY[.G[*>@;_45PShnGo;@+r'TRJj@!4BR#>:9^
%klF7Cj:kUF]Pp>&&@nEn@W1OK<q2bah<)UiqmtLcO"P*#kXXHERiefbDoY%)BX-mdgZB<R[p4d)&R#V#[eVDb?;8.[IA''&qQF`?
%T5DAe0@2*#YAO9ra@@4Q!Z,0aRsG$d,sR]8^'7$/f9Pq]LjpT@/f=/FBo\'Br!K]1U$YcT?FNRU$EW3KNX+'.i]]cZ'>FV7HD9f3
%^*ahkG**lGIt9F@TYP:>LXQ6-IKn1%=VDKV"7(Q5%C/1=EAfWDQa0Z5HD,#,X;d%?aSMTDLnZ+dF9q2h^o8c76"1[5>82K_1e,a(
%H`&_RZ6lk,/kIsj]3)CA/lQ(3CIg4]8_::Qi^,&"$tNb+(ZX]jNY:@XYm4G8!)IoX!Y;aG,X/0J-Lbu4!6Bu02M$Wf"C*KSa!S%F
%,*6ItT-,6iV[V*[$C#ULaHD.&$n_L<6K2PG2e4>TodjuL`-Xr35:bN\$r^3=!&%[@3A5H@Z=V-<+F)=H5.IY4_-O^l`Hes;Ym67L
%ZIn>(bcC;-?5C3tnVJ'rp46R$RUdQB%5HKQM-r283DMUq*$$bIPCkbZ5W#F1o._Eq!)c6$5":>F-$CM%jhgG+(DsT&VuWb_W5+5)
%9:X6nWDP&O7Nq6o&`LAH<hD/E_CN1J4'$**rGu03aS_1gjQ$fkaf;,OgWVasF!;sN.BZYbK"Ksf>Na4<V:;K,c>X=FT?\b@hFhM@
%(IN](BTL^jIO>X:[(,$iSZ?TTi%(qYF!n@4ruS=[L7URr:1U@JG=UE_'!'ct.+l4aQP=V"lo/tXo1E8t+A?tPZbp.;Z34`JBV'A+
%4M1W];<L-)<KgWP;8B&=h<o2Q,WP]R>d,aVd4/LbP<o1M[H5/l8G7uVNQR"in=TA?!<7&;/5S'!<&@G[$Cl7T"sP$<8@@DAg,Y#+
%'iC$Le=a[6e[iQM'%R5;HpJpM$_e]@;H4E[BSg23+(i]I[W;dFS.SI\>+g;B/Yr]&<K9>O'UWQ=5j4*V3sUC=`;32GU0pW&X)'1Y
%6aGn3&6b5/,\=2n3LP5(#cc`ARCAQo2Ehta+Jt#qH9i^B1R`SV<1*iQ,rE.T#V1L@6P)Yl77!/>&\W%/J7_)`1*ajs6naZt,(1/8
%H/le!3D^A,,#CLEU!5_^FEGi-4V<&Q\8<RKaBlFH$PSmMYc^u8)OGD;$03Ua^dMOkh.'F,35G(k6FB-V!f;k3&?6Is&cgg],ZH8s
%-,>ssP#/7lPQ:LU,b\Bb:^bk,^eh-]W3T2bgSp5+X'Uni[T1^!]Lf:N\SQ;Kpd;^/FJ27i<@?BL\`U#p#o>Um(<Nt#?&;"aV8&qG
%UDJ`liKYdW8Zne1g#OX#7Da&p]'A?s*p>#6Ep74,'OQF$^p`lDZF,Hcj+Cp0I^BIR#5HS:c_Z]N(Cm%%nC[tjgGjjeJnR"\%V`=l
%BVonV6j]f'1Em(S3b'A]!"#cmi*&#i=s&'@;unrKc+KIL@1tQI#Tml`#g=9-.u$Pe*0%jR-1H(Qo'jL"HS.l,'2t^(@"k+q,_t>N
%+E$9MPB.h+]C=rS%Uf>s]"hQ*<$KSLn6?:H7I&>.^)1P5)e*h3GJ"<uc6MM!^N!tG8LZD>FbA!"T_-l%[+eR0Tf95JW6`-:*0#ib
%QoW]'*%uBJR7t&O)<V9+cLi\,a&5nZV>IC[I]p%1Wd\1"B/P0.+Wiug;18o'b\`s:P=M]Qk;/:jjt)XV,_mj395mP%^fRm#auIq"
%M0R4*ELWD-9@K%^1neMm8]ngp8V%==fp9#9`MCAET"+_G-YWZ3#Y>sLhROhUK4U(_c0L>N>,73/P!9eAper0JR?P0AO2=8k_cde'
%P-C+"oliqQGKMHVZa&l2(3a$.Y069F]^)$BERf(qMtNC:](7EK0%ptB7XHYLbBjqq0Q%R209FR/N#P2@$"WZ7j$lm2K-e)r6kdY[
%HRD?3%so]!l%SkEEZ\n-[$g6<ha%;.B@5C$0m!>i74ZMS]@aF+7@(?*;G\>Na8S/o1,aFm/k386Gl/@^4oSt!H25=F6=s!R'TYJt
%Og`qBGN[K$h,(_-3l*nZ<n[/qAh<K&hTaP]>+VEV4.5*A9#do&q$tEtb@m([Dd1a;kL!8SCQ<Yb=MAkuo:3MUJ3Gd[P:rJngc1gq
%O["bPj,?(d';(+7gu1f_]N[23hG2;$W"pDmJo',P</[KW$cGJQ,fVKofDpRP$8s-/(NuHuo@FY#78pW+@LlBQ&i5p1cZY+)1lalD
%-gMV:pc`KaG0O;\rnObBMDIX&,fLTMa!_<N:0,XbMF-ufU'ZH+NGQ(Cp?mg&r](hr3*q632.AJo+k-Cc4h>el#&'-OB^WJ"@T/kl
%6&XK"h+i\BL$c6"BJFo#]Y#ic6(sRuh'erF5:EmZ],LnUS0&AI\_W5H1>NG0\[S\\Y[LmbK?Al\qXauoj9CN;EeDMi"%n/tg]aik
%0'#edCpb:[_,]bYaTjmZ&21<9p2A!oh(8(YV-C3:cKuo,"d&,WPr*ZS-Ebg(D(=@\_i&m+Q?,ee_C,So4_s;6@r`B#<M`"pbY)/6
%M?P:<Pse^eEJaA?RRF%(##TKI[5NkZf3+T9ZhA(6XL/sZ"ac?f8m89/X;"ijRVF+&@;*oKiWg/$@"clF'SLG^<YUFbBP']s_-+hS
%De.<Fi5Lj=]V[@l6XigXKJ@(N))JTeq[;.;g06;+bnZ'WV0b4p"glq=#a+sE])Ir]4qggdTuGj%QMB=p;2P6$WCNeZ:tXEa@XWcB
%gOg-U*J9Zj8t=fq`ta2d*9kQt9U^SKCDWk8PP6*^91+8fF!%JgHKkP?NeE9HA\sDiM,!2)(29h(CdOBp.Dp;7EoCP`6A$hk'jN+Z
%+.fEFAKYI--qn="!K%&^+;^iP$0s/H%95fqk7fu,&G6eikE&+==tGK\=+ofQ;?&Z84,5LF`Wme4F!6O#.$,V=QgdK7k-0%WG^Cp\
%F4_;II\D&J.r$7MdR"![h-]Gq=pE<;,[ZCU<t[nM^+J%!@YiU$5*/JQOP9TUGfrb?B_<QM8DKi3YfipRF6g)=70-8>[m3rUFieKa
%9EN[fP=J%UI+J!^JG;PNG+D,ikdX5OdqVa$M/MJd"+>E_o0+:.#)Wi%^38J?/&JlfW%<_'Z&l/FL)*P&Db,"NKJ1:S!M@@.KqjMk
%]Ur+(T9TdgjWm.O2cr&SFqF'rO:>4#3`>%u^hr2N[LM!,rg+HnShO9$HLR`H1:ZT?BnL!<n+WWo1;qA.1g#Jp!X"'d,,<H-"]rZE
%gT+-t=6bo=]G7f*;L_1$lY+%2:J%QdY?YJ%GZi`AR++@L,Zia0'D['L`ECA;eFjfGad%1B;K!8S+_WTTX&<<UmY!?pgGSPoOU$)S
%ZC",0`-<M+L_6Y732#rL6FdU5CrHeT7gf?im)BE)T]!7\+UK%QN>)FtaK\'r5,o>NZlng2*&CRiU]o<sQ/ZaL(JndA^0^W>64,:9
%M5G#09-iJM&n%(?,#XMr%l9Fa;ufY`<lp5tI)mJk\_sf%DQo9W4V#cN[@Ha/q'H8d"@E;2ADWZF5&AL=*F#gb6$@=7mc$B:Z3s@7
%T8EClqE)fjcm#fZbjR:8dJidB:L-K&e^OQo=8?4sX!qW]_?cl!CSHV?@q_U-C6]GTm6"pkUMP9p(RcbIU53"AG1!+5Ed3ZRdYku[
%,TgCPikQ-e":&+URX/mC[&o.42A?_2n9aC7m<:nJB75#,jg-c6DPr5Vjc\Hin>G'%GjYKN078O>6gV6(n_AOfro.i^F;FsAG:g-D
%YNWMihX:_uPhhA*%r(0M3/67KC$*>n$qmn.8-i`>i9Jsuo'D^Lh!JL`Ni:J[,>4O[A`6d20,#\Qf?t8/)(ppi`g.M(Y`"pRjADED
%9PT:-#0<4^C<EMaa_cb@Q\0<nk9AAck?dr>WG##%+N3-lEj8HZ%Rh"c]JHh\A<n_PioiF6-tD1=a=C>S]26+eMO[ZV1FOk)qd5jl
%/nC3aXF:NnVM%c2,*Gf@`#/_odJ-ug3QWHm3TQLO;98S/i]t_AbOe+5C-\H1WZ#OLC@T17.g[_h^`j(:9!W_&H`HF7.X[>?KGfVt
%-CAJ2%mnp?bA3C(nhQaU#NFQCOB<<X1nFS=cHdf.XsfK8[%f(lGsK!Kdl^sm>tpRp&o_T!'##S#oJlW@5Q%9@!$hmPTh,%lntJ7J
%o-f!_0+;B,+:-1WD_R!>NAMKJ2]O(P#_>!tOHA=lOMnNgK0mS*A,"<OP8[8Sb#>`MU-VK1j045;'Xkg,>WFhd#?(Dk"nI_.@*4'f
%9UTKO0'B1[CG"M0M8CP';Wb9oc7,Mqa>>SY:P#Fo@b_=$5>bu$_5D"_LGO__d*nE;,Z$lj3gSXXbpoaVOHFim7g<ft_7jdJZkOZ*
%pgrl6jS#XO,/S^"2"E%Xau\#C3eS9^DY-?U!"o\?U<^3'bm-^RK(-Au??9>XVMo@W;OoG>fKh'%qj><oh%fU/2\\oW/8'=jldiiY
%(Zlik%MJ%<#<V\`3^2W@#<bW#*1sAAUM8af>p9->oZ=Wh/QWU>5tE+dk1(Fn$j#s#7#AB`GDN'L8eN;O;U?'qEAsADR1-EhY[Ot2
%=UQpQV.2*.YqTAo4;!;lQH;)d+kS+X%OVB(63tFX#skN3.a;1l20j1X*8D+aT(n`MYtl2OZ`5Y7nXbLQmfM(F#Dl@\<.=0+_PI8E
%qe56!Ce5Rn-,)DLJ-\&2Z&m+/?eXi;-R"n=2<hOY\cCr2-J\ph6_Z!.HPppLKF$B3]H%2e5g)'PhB"(a[h0L&2+[YW%ETV"2E:NG
%Rm2)gLQ+*p6S:CH^tWk7pe1cP1aC-R,aj3/-Vt'KM":VWX;*pWCBt(DLf:1W3m$1rJc^n?+=P!_\kgIZ(GWOo<mEFi4/O.JDo)X1
%!U(qQLNVAMW[&Nnis:0rIM9Te8ODS+;p5At&a7<17F21G&1h+4A.&drZ.NfWq,!!2Rq_-?%mchnM+P]X[aU)`:<!rOp7/6<aKDZC
%4!AsGA8[X%NJf1m%p=V!<@ZXtEluIe-^H'beH.%H[UYMYrh.5<o2=Et[;n:;QHiO^89PtcO"/3h<RA7?a*hL.%HSb%;8+$gF@5Yq
%Bf6j?[A-*CbK#2O&nbCa5`gRQc#KV="biF](X5sdqp<<"'bn&U]5/7G@AiVJ/ESQ\@`W3p=S$?Z`n+&0UF[2@.,RI^lW`rHo]8NC
%a]Z;53gSRH%69\",#nb+=`9PL`.qf`K6N)t[r:;Xj:j%jLeZuOodu=\Rt;(3Q&Co3H9oW`]HN8UbqbMDA&sh+Mm-c:m"09#pfnu@
%27rcSQ<aEK?'=-^GsYW?d3R:B;3hdZ`kEY+G!TSjb7WaPLQ\b$*':.T[UBjU,6>P46\sWs.?5@>_]_4SUF1[]*V5/]eH&-1"pa*(
%_DBp/GJs:r(>]ANc4k-:NY:nALdSK4c/+O0fc-763@XAfd^l!-4j)X>p$X_]6g;#JaBc@,=k)mml8X`-E\Hl8Ea(3[cE>[[2!T3&
%FWF!32BnK&TBiH-H*kP=[*=0Omm9X:8E(PH<2_Ne`1F;)7)smRUq)>h2Nc!+Y-!O;23F1OH;YMWS#Kjpk#3Da3]\2HC"qaUgE+sY
%O\Mir$5>ILZ>N-+b3<qkKKPjrB!SM>-5g/h>A:k]pe^QrE-uFY<JAiBH#aG*SY$<*/Cm)^^_H4N;U1l71K@X!6X:Sf@_MkFF_14C
%7l9dun^g]FB'-qiGIKdODU`W\Y+?=d>a%t5_\t#U!1kS)Teo>(7/.ZCNApqus+&X!7U--F"XLtoIl'8.gk(uH\/%fuUKV(sAO*4P
%p,TScNK79ToE/:"l&<SR(%BnaTVktY0lS2_as5i<V^9^ba25a%nl2!?:DJ\]:Pq08af"EtRH?q<5%tO5PMF'M!jR>p#5uCOD4@7L
%T^`W0h3FuO<O/@!kb0[H](QSaoF[kL'/]Cg9F'D[P/:]`h6lfukh%?,A5<=Kf@X#0Q%l_4@`()SPs$/@Cq':@/"iJckkh.`J6T\L
%$+&N]?2cn\!PY__nRU>JlU4%VEhI5FY.KJ*\/=C0I'Yb,GdU]JVte>F&<S9I=]$AN<h^npJtrG0g^7MjO;R/71KPt@B92=8-OC4%
%33<$APMGOV#tHsoK%?3rqWH_m,Y+!A3Inrb6Dn%%j))0f-<cFF2sc097Z3]L+1IHPH^%uH;VR8NVSgo9,Y,OiHq1OK8j_]QM$I`9
%"jb/C\[2lf0tdh&PW]8^Zk%6b8%Qd80&^3)k]do9>/%[]V(^`'g4"/Q4i+35dZg3%02ZO*P:u00I5$Q)#GYNX$AY>i/l'/.Q&VR3
%)]+77,_]"+@j)C.*-<I"-aFt4mXe3TF6:@r)#&*<#b-frOq)h.$>2`+kE<]T_Hnh]_b)neV"=[61VZ*hW7I,'0-`nEpIV\g!QOe1
%Oub/I7H.TVI5saMqm'bIb/-U;im*jTMscjY=h3FXALSsNk4Yn#IIcEpgSM;u$+McO=r'g4[!SrpX0.E0+ianOjbs1`$A.#t\"k#P
%iGsM#Zk#U94DNh1]iVK;&hfd7h-MVc4k7oNW1*EE=k`Da4.J(@ZYB0*"n1Gsq8,5(g2=(Cd1s:)]X'-B^YmpR5UV0,b9VE\QeiT;
%n*H8)gEl)^b#5Nda^?LaWR`-4.'7;V/DIL(P-[p#Cr_=^`HgO5_9q@9I(@Ej&n9'PP^1>Baa#>gQl0AXfr1>9D$FhVb.NRPjeL-^
%r`ipZ,n=3id:YWe^%QI1E`)"6*D3,RI.b1sp<2negkL_mCeSotUtFlOY0#)Q2T^uG7D!j"p_]O)@6]`m^QQ2Z5+oQJOl@G<T&dD8
%PI)-BaNe)YZ*J_8@Y0p\NY^TNVb0<r1W<*V;%,#bNV5WE0f6nt4tJ!B"^F`@[>h:<ato/hClGb6joR0TptNdJ=YENoY/HS#T;5oE
%V<H?k>YRLRasX&UiRc(1oZhcWXTML6Plg*GeqWSm70Db`_U:Q&`[].E%K1a"hG^0JgZ@Pn@WOU+`>))]$J%A:nBbG$l[Pa*;m#i>
%.!h)crHZd<jGORhVj/aTfBiONn:*k@8CA/Dd0c]=@2U5He]arhOgI:4G4fr*4l3%`O)!i#[rQ,CC4DW915[P:Oje>?m^=tK9IJ5#
%m'M^]cX\^)f#TZ,:pJ2!NBUQ9#8+<7;#4->rqKnd6*9D@q5@D9Q//74:\mpc#es%2iU`Bnj;;b_--a:3>"c)B*,lqhP]:.D%_e5/
%m$uiCf"[Pn&6T:XY"/nk8,;ouQU2t>a@?`$-l8Kt/I1(cBV[Q_A0[LJG1+Buh9u=?EcaQ+1d!q22*R<89C(ZjdZsW8h*GqTs4_u6
%Gt@'2b1pEEIRu]aAl9>SkQL4`Ht`78M9RcN7sWHD=YP;KO5JXNcS/QkOV?Ok4`XS+]Ve93LlkuJ7,;ON^/uR$9gnMYE?^N%QDd$:
%W"htd8R))IXIcc&U:^j3\_KNWR5e2@:VO6nltIX1:>k?U?Pq%Nqb-f:ls1'I3^^?2coH;RC5[pE'bIdS+sUH#P+<O?8QN(SY<q7j
%)R!lu`FtsFaW/FH1h+=_C;ma!<*kl$"B2/Ap]F?%`Ek+0Jc$O)J?6"I`D*!nTb?tg'/\iV@_f/^qm:)Z(+d5%Uipc;RUDg80%;,@
%4Kb)B$S5L-((aWS+L3\T91#5f.A:asF"gdOF,@"0:9WLQ8S>&t8ADlhk>oZF-QRYNQC9aRcZCY/L1-?8:.a^jjUID2)/,<gW*.Ck
%j+o,oAX5-nQ>q3S9'm4g<o>dS)J<51AG2D\),Kc/5cOQeQi`CfTC1Atm?LmP%"dIMDkcZ;UJ<aGGICEHLt*kGB>mHeaftA)afOL#
%$0nTb)N[HjXEIea_(>s*gD2*?lcKCSakN*saiVQ-F_R=&.4@Vr\7eB!Gg3"!&RE6SA/Bi&3kASW&55q\in*rg$?DEZ<V(4FNg99A
%#1tP9H\8O_r3<'5a.P4>.+kfqR5@gh8%']]^O<J/)j4GYI+e_JgQ3tWFHFlSh&5=KYs&Qp_Je8Q.KB?u2Jllo=il&P>=gD`e&l>S
%l&>2h)p8*)=mepD,*)9@/h$I18K4oiau)7R[a*=s*U.$U)/J7-N`.sVfcT6q5iZC!Ms00l=6,f?=,`2_FN(H3?T)/r9-IOe]&GRZ
%-eO6=:IN(+,c:\V,rQ:E(=CZ#fA("qr`@sTq64]4rS&#pV*?roIfD;p+I*J_[bnjcaQ:G[S8H$]<e>l\<Cp3u(c7*jCo(Oe"$VqL
%"k@PL\EBu';6a.&jAFXP2,I\)RuqY09C><]bGm#Zq+DcTs1@C'+:5otOdr=c?Fr9,mNoq>$9rZDaSXihBX&thqrK"MDu!$(5:->Q
%fYKgrbjCW_\8<RsW/?41noGTLqL3ncpeBU0IOL8t+.RDg<?.OJFWuf^gNF?N4Nm7_F%8."6mEuq.Da(eS'QaeBM&@?DaBj_>L7D_
%"h20.C^5ef2L*C?SUjT_Ur!e'?mLW9/B>lW@b-%$m>'p16mn+</eXe;8@RBrZ#jm>^5g?S8us7Oh7K"f7nD:0.$FH_ls/dpfS[!n
%:7>30$.C.,57T,5EFeJIa,"dg$tCqp)%<Upp9'49^#V?C-"Sb^(.0kPb_I.U\J&F'C?J;nH;'3K%S1+6[N;Yem`pAhH9nor;e7J)
%hV<$BFL[%`#_%-$MSr)M@$u.hA(AH(=bLe_,#'5o(?orpS-Z%)$H7g87RAs4-N`+[0gbFqlk2:(71S$ud)LmM\Bu$Ng*0$H+a>q@
%Ut\Zq:LCaGP2HLB(s/3XS"f(GRb(hMhcd=t8%II!%X'Cn/$5pu#_$kMUknLci(AYWFNfEr9o;"g_4!NZ6i7WMp)S/$+-_pb4>P[#
%.:1>$lt@Ve8Fmd`6V@.'4PG>1JQ%gA$!DPSKq+LDU,/n(B$ifK\=p:?c<`dd$9C-,`8ZOF@.B)md<W][-dmT%<,'KLe_PqD0+>C]
%q@X3YdL-HnXVdE6P-SKOF78U9qu)oQHWrPPqsArS.0ntU\@Qg%V@%[f8":E9@`4*8-[+Lf%^he5i[MZe\)'e9>gR\W;;AiRo*UsD
%0^V%/hco./Q?[b8c&Uhrmsjr((%u*p_@G\4-YHE27tl@jfLLXD<7j]pI8nihKmcqQ7mVN%c:4<@EFQkCI4=N-oKbPRS`hSu^W_*+
%Y8kA$<s[q?rIGA"FnrCd+\A@#\lG%A$V]"Qapt4J\j/;mTUdbj$RZ8Wh+3,8JfB:^Jfc%$./@#:"E5<pn*!M/l,+4E5=gC9QP:GT
%Vm=TRPZ5GZ(ctXNTX74R8=VE0M\cCE@[u)9nn:>;e3#da4!`t?P(__J+L^p*No#r_23Gfqk,r`&Y&2FVEAFhqI;I5?4I<A6Z#]\E
%1oDIQVu+Zs?&rE+Ac9ZI68#%dN=rM0I*nYlBc=EDMNESYpB9jC+U^ADI94:d?CKdbNch9e65S?8i3C'>clghHk&t3eF4uU<Uqn.r
%i,PJSf<\"`$/os1L(j3NTF6#bTI<DQVuM_F@-OC@gR(fTfk3k'J:J<tDF;6p^)aHB.A7-aZVZ7*.3+_\+\O6QG+=@eY/d"k\srh*
%CiPB,=Ks^q)P(=_C$9$-fL?`fg>EX=3LlJo%jrPMTeC7:b6NI9SJXC$&p[2le-Stn4RBufNbCISVLa"Gl(A';;QVCH3JS(s@F"/p
%ps^8f\DkC/-rYgGR.G;FNJg[d*7[J+1WAGX:UE@W"JL]'/K>crY^H7U)jO,?3V2$-+;nQ)%RSRF_o"^P-N;+jN9h87ga0:eX_R?6
%)g(;hK;2QG@TWXY*YHBF(W-T%iXo%hrJ,6+O(+)D+G^PN^Z,`SQS3M'm!e+8"E^Y'+6DAK+mu")A9@B[:8dJ_3a&qhZZ@'Hq0"XT
%`/#'O:5h.e#Ue%/WqZ#CAlFuF%s7rcS%$=_gMCWqH@+(nW62fEf@e&fqudVo[d&'=6[:3!gn!N6\=[hUl_7R)Nj+?V<h)p$qnd+C
%@/ApiS$q'smLJCibH((KS$(L+GD@ded:,aH$:O;oite.9\N2a4B$"\nZWiiXU=&@M@Z_ng\W8mf<(%]^k:R($'D\O(?[PETMDP]0
%Nd3,.R4G#=!:eWdfp!T,+/DI>`%a%m;o5%[\P&Bp3$ElHL4DZ3rZhe:Hj6.37-Du?:]c<m,s[RQ#;]7^pnU-M0H'7%c!4"\9b*fN
%A_W6kTW8oF8MQCWkP4s83Hn6q;s2:OhhUbVB0j2tZtdp=MM1c[AI8a(/PR*NJuBdC0[WS5F(1Z&+R29*>m@Wkps1koX_?6DrdU>O
%`e=,Nb@$M*+HPqG4\mJ0^PbFrh['pKCHB>](m^Te/F#PK#?Et@IN2RQBtO"9CnC=Nj-MEj_L<J/O6Nb@8)')7RfFIH3P^+1Fn^U9
%OuABL+GA5L50JmX2j#AUBVh4!]cZCAnOY,)%[)eb:\`s\h=9'9iX)6'![NnGnqh8\M<$@[pc+a<!Xd/+eNV>la,r9^6Z&Q-D7oP"
%rV+.Z(#,^OUM[XkL5kT,kc4Rr[]l(FANP0cU>.rZU2_V;dPMiTM))N8b#lT]10iZZ_2MgE13TP<J/2?<1PR7#fTJ!WN\4Z5F=0eI
%oH^4rRJ!B+Ye$QF%Trud9(@\LR^d`FQBGh/P+jGOae#<YGXO&W:<]!/R-[-i;^gb5$Nk`,/1$k6/dH5nCrrmRi"d@a4mN#[7npg[
%Z0^Zh(ZRkt@X6*DBc7o.7qYEd"nA^"g=H7r]f9g]%bdD_jEMhrCDs>lL[6=<HQdJa$:rWPM<h%>C:8eiFTNN`Aj(]Y$m2>X>6E<2
%hLMsoarD$!UUAo<SR=9=69.ag%^q7InD[ul6+RQs[05L"nY:q)$FgF7)\>5K+64:^&-Z9\7SaS7aV[?*L2PXD&o].JH87f/"uhIG
%_9#Q4S/?G6o9*3Jreb=t/Lf(_R[8\f<MYhIiq%n`S2Whij7A";m^s^lHeqR$\oU=gR,PSe1C>F6ctPjpekiH>UN4Y[Gt0U`F84rt
%>>h^/.-`G$AAFTbD4q)CrrHc@FIh,@_P\EH!N*S@Hiq]k8]M*]2X"D7p)*`J5/Go6nL.h!:N6#&4@U1H^pA751%q&bnr/PO'kVif
%PQs51=f=qpS".I?1"hNWguF0Opn5SST;4W:dbb*Z`CpQ7ejW<4pX(rt;[OrUZSWh@OJ\gO7e1<qJDl&b1#aWcHRq8IkN3dsmT$`9
%kJF`M@GJCImT^TQ/rVk.`gmLtc@p9$_AJCt7]DG.1#g--'7Y,(Jbt*pFDM$Q\T(8aaNe%@:S=.pdEOau!/G@li%4pr2ZO6n+eM3P
%FD%QA^]<Gh/NV5JO=2B35oLZ,G47)\hCOV!+ELDGfoeQ6A4[,gTC)poI):LdlQULe4he3"A^*'F9?$OlYuInE/!qg7i'TjD.U.K8
%@I;lfTO;-D[d_18X;&lthgm;g*5+o2P&:QbNZ^a^!":r0,mct56P8?d7,30"[KRp'Ah=<\Pb:F$OReu)B=cM*+U+OL;e8q!DlRmC
%6rg"+(Q6a+b@f"44frCdp-CDZgT>g`MX_9VcH+BE?#0:sMda1e&Q5DM!f]kaMi!LR1%A[,UdeN003,V/'7&n>j34X@%G7lDO,Jj)
%VF&4cN=JaSOo;L-(">ZI&\'*($5>U#8rF_]'V]t#k!uoC-B26QrL]d/$EA7DPg36a4UP%YEO:ls8)ZPT;gdX8Ih#!*7*"))U>WmC
%2DW<0gX'DUbYA!a4Tq\VAa+1oiSYZ!P`7m3a+f!"Xh3"3rA?b_LEJjW:=#IL-0`=5Ua(k370,FWR]XTM$\]E@M$ba1M#n=ej.^sr
%pmqXXHM*gS<qSq-kr?hdF0#qlfT8eU4]nY0[#j!eYg>MNG#?J/*8B",>Y$'N6>Ta#BV?]SMfp7^M<im$qq/r2`I!Y57$m7A9]g%(
%_Pokp;KV8CL`*`ZhQ(^T>Aq1+Q>!JY6]kd=GK"kc4`OeP*/OeM%QkG>B7*bpi<?`uoh_Hdd9XTU&.\4!LHH,RJu_CGbjpq0X;^.C
%c#2E2o3"U\<#JR:`Q_RTDUt-Epo&B0UJ%'TOFJZr8]W/!j=\H@[h^W2*B/FgnVe`RMWBl9l\E$/n]ne=Lg&W_*L/"A97ur+DMp>H
%&+uD9;sf\QVSja9iIT5`9>=W9D0WitehTD4=U,,PaO9#lmDss+a8Ab%4_sel'-iVV6/#q4G[#%o:XOuL"[IPW'HR*LXgl'01kJ],
%(Y?#Tk+m8\[#UH^_J%1k/3R^@XG7RuMG)Ae=Wa1H/SJht%Vhk6Ua-r+:E$5[l=5W&OfOC^eV[kDq"SpY=VjJR]I'081nqZQ4ZeZ"
%pDW_icn;K.B?/D#?+NNjhn9tDn6RO#2sAeP]hnISnK4i,@gi[`RitYO90W7_&^Vr(ct>68<m#,&-(T82F+W2")gO!Z.XFZedAC%+
%;5WANVNLj6*b@ARANClDH:UPo*m.o^O#hbIm`D5mGq<%(]j/snI6o/[*4b(M'h>DdElA.BMMK',%Ym85L+AS'>d59X0oXj(`bc.E
%2MQ2j_mk\7gr;$c@i2[0r4.D/`fTj*-UsUCET5nqi_Qq@Tg/+D'6rNUPl$/HgJ2Fj'<f)aIc%s-V$P]U6BUB5)iED[6?\u+K"Q7L
%E_-2]2Ij3ifn2V0j`<BQ<r#RX<!\FMDe$U;%DlrehF8ZuT-De7-'ALJpF'3(.'tb*?#,3r[KA$]@XN9sdb98;_5,]nXDAbqpC^(X
%+HWhJ=BSbKS<@Sb,@)H;ULbC>A/qYmXJj4[BIGF-LL*-DRJfsc\sI`npRkjKXO^ZGlL'WXZOZs!cYM@'fpYS;Pk$1Z*4<(Vha>fY
%d_)YKq,@mDMs*mB!@&'@O6L'bL%7_D/IHE7]CfX"hFslq*u=bQaR#`GIbc/pm3H.bOg,B>$SgX<-I<njiZ2KO7jcTocTfr(Hn"UO
%,D09BfLHeA^%jOt`3N#mq_N-t.CD=*-`C<[$*n0^Ss[0jd-X+%c:V]J8g8n'Mo!8YFRl+Wr#m?V5Lqc_CSZjc!?*@16:bOIQ6s4a
%P:tmaCe'UQ<0u+fKqXs37g_bL`;^Er5_B"\Z;N^kV($g#'V1+,OGRB(XJBMWXXJZ@&jaZ1N[ob'+;;Vrs""qG_Cd(<OO]Iig8#Li
%8.96YOE[Zi/OdaQ\[5QMgS':C:3in2A#++IOHk`H<TMu\.H4@eE]NQq,+gP.`u=Lc98%2k!"jd0b;jj:9j#f]cZh77Qj(T/k"XZQ
%QXisWMi8*tiZMI"K'(iu4CPlCZLJUiV=MP1a^GmA.""?[\2=Ld0F)0A,kK@?T(DjnOCf7Ifq7'`laUGHedq;k#[L^)6HfYnl&QE!
%TKoT:a,!"$@<mj&FE5,>\[nF#i4bM02X3^Pah#NVFEclsA`Q2[9Smqbg6RemEP#&6DC;HAG,"^--0[jdARj%sPZa:c5pnk<^?i/b
%Q#qIHR*EQ2fqL"%!nRCdlMWqIi$??ja>2XRgtGA)HXCR")m[])?GmEDK0kjigR.l>s*VAe#MJR>jQ3h>P)=-j=$trL;L("Ga&-Q[
%k<X9PkiflbmN\cQh^Y],]^Nf+6#k3__-3GPV[W3G2po+/okWO[A+1l3G2::oV>nj@="^[Bl$)<.WLpOg:[lR-.C73mBabjCI>q`\
%,l\"<jADeZ^>tpbk#*;%,k4JM2a#,4Kft*1n&qih<Oo.=q;PbqLisPS>Z8]bcga^Q`[T1X^\(i2$87KBqde2+3>o6s,XP%V8^9hK
%-`#0+pumrA*t?e\=)(5W[:>QW&PU<<]I94?[k?4BZM<\jj)I!Np9)+&hS!fUp2hB`CH!@&@#B.#[9:W^D0qbSE9A*:K@2`T!?-Ap
%[?3hj8)$KFZi;R*$.S0lBt,i=$M8W>U)WCh/6pZY?Rg=s&&cjjP"Meb4)L`uqh0hXZT>?aUrabe$8<5G7%?jlKGOmVH0#oWSZpLp
%PsUBAF=cZ#)P8cOY.734'*=:4&q]22V%8\6L71Q43)eM.YfRrs#HD9'=[n."e<EiY-@qi^S"<@KM@MX^D8#BmXNZh]eC7CO3bj@,
%&url^]SZu3dg?2K70Ks`fp!$="EW/IR_RAWh/A!BbUm%X.g._CnQlHgCpch2J7*'\m\<JPK7^QPAHEFGgS)GhEt4k2+g[(UC=#4+
%R^KTfDF7>f6#O,mV`RY3<)'FAR`M`)ppN.m\&sV\ns/B_QkVHW%EM^`1<M0D!pOm)8o2PrBcu2-=\]?,$ZW'chj?LT"P?V+K?C4:
%;I]7!b&&<aWuA=GduO2Y/)2c)6Gp]5*W%Z8h?`iW5\h'X*a5::>(EBZ5\*ep=\^k3<EO?+9S"$^RBrS%C's#GT!0SUm#r:JT]GLL
%=-qfOT3^<D?2jE[<G\apIsLkLgCNp\cG+eB^:Dp%?[b$2HuZU/\@Oen1q,\f5,(1n/XY1)!R,GUe.f^%-WMnG1K@/lH<L<k@`NDt
%p[7C9a\T\Cp\t\pru4R[S!_;VPQ1QaCi]@bbCB?hIr@2k&XBo(-a0eVot7Y.mXF!@,*cI-20!W>-3e\ZP)'",gFunKFcK3LAO1[;
%"+!4..Vmlp/Z80(YegeG&VN.U(ahPMnSV9!CQ+r?lkK71G;ue";mi(0Ns6j,l'^6Lb-q_!4fr,.qV,BO[7Q)@ia6^^"k$>H:XaVn
%jtQ_oBh>!\9l>I:f4K8r/Z'rQqDRPO76Sm&J5u_rBd5'[2%G"?Vd3uFfmT=)-[?VQY3bJZ'["l;n@%'[:M[k'Su-7)s2NoTBI]W(
%SI^8G]=s\/Ss9`$4Y%t&cak'^&e#q*YAB(>[[O37#^"Ka;CEA+\%h?HZTDgL7W-X7],RYZcB9fegC-lAV4=WpZC7(+)`$lYL6Z)R
%qUKJiqm9n9aj][tBmEmfXP.N7T9d]j4Dd0-UemYK9MrFH/k/GP#t?87E#>"-3K1TiS)-/c>ij%U!=(nZ7e$HaBgI*81=51T+?%(9
%I./&/73U2m)EYU@_eJK2rnb=lA`AHnf^8!I3$"0N=o+ZF3aEX\S9#+:jkDf9E3;0jQ>brD1"DM^AZ[7>OGLB7l9$:/:t?gO",V6Z
%P"K\e`fg]".`I*P&J(eqm5?''.>H=>JXf'qiY9:EG:t6^-qhYB%]A.;AVoAdP17_(kOd?iY2S=ZWE3Q3e[2V/n#s9m,MgU]P;WR8
%j_;CcHe,D?Fb9Jl_ZZNbo=oI<&)jt14dNAGf'L6O81c9md#O?i%qN#KVSY.gp@?2n,qFtJBKDFKj[1oOMLV+&hgTtAg[[(A<'5a&
%04&6(4BR"%dr-mHgu=)kZ0YOB=fHdKQ:=S6nKtnp<>H?LDZC^m]l"Qr"fc!sbPB/L,/3T1H:"1u%W)SV"q!R8b@YllgTKkBWXI+7
%?'hk?)(JJt[UO:X$6Im]#MNs!Qb4QtQA+H33C^9K-CEBg)-u`N\cPP&@BPJ+rb4hlcqSt9$0-S.K?:ORGrs9napl%;oghFVjfdG#
%eJ'jc_SIO5B3TXpkN>lE\H6bEf+.*)(+F/\V.!6"XR:1E>C"`DcYXm6!k!5WD)`f#DsPV*3:t)t3Wi$NSp^OVjJW$&*+$9-D5L]8
%Q@uA:8$S`h;-$KO7MD%K<&R[MCQ7h_VKlGb='c!DX;PnqGu+;mQ-gfj&-K:?[AQpFgJCc_mQ)a`QZ<pf\%L2hp8RCmUska-nSS'0
%"V+bq<gkJKg^kcH=DDjSm\##XluW>2R$p_!mHH63RLCOjDbYE^ld$>Hg$X"ihmBPD:3j>I]9Z4ogC%^XcV;fAGmTBU;bFN-[C%gF
%3Zjr_b[""oScn1QZSA%AYY+D4qsaKofA"$;QJH8gfFEHk0sc->Y@s,cKN-"R+:qM_O;8Bh$>o,&[.L`s'[tLZNHY%ob-u6,&*S0R
%k0I8IJ&a&2jU&jt<<C*SZNH?E&:=>^p,o_<q6Z>_H.'gkcF90FlSHY(+9SLhgi+]\@SC"Q;j5mi@H*jkEA%R&@YnWRbSNohnguMW
%jN(`H4kn+hR4iWPOpBQgbaE(MaE&j7"IcX[^C0/,>NIOPRFNKVKQaeh8*sOcfK9I+#iH*(""IX/\hfcp=.1]gNjNGQNOm,`<Lt"(
%iJEN2=Ck[$_k<c:j$N%K8Ja]^#s(o2XFMneK+so%?GmkE/&r=_S*dul>'TcJE5(Zg2tt@<&5t?"mYCE5So*R<cHDu_Bl,WS`V-N8
%;JZk:/&c8\cF3:."PZ<4;J_E;4^+08_96$g>Y^uUmUCN#27_/+V'1Id(/ZK=Ys!i'7n_`UMSQA*/St/%N[r-`ig]>Ni=fXHol+a9
%=6RgiT.1N%kbKWYe&#7Wr$pnGV25*r(m[rJS!Rm\btAfu<Di#Ei>4i,Co*r?152K9+?R2%9R.k:n1ZE;!<L=e:deU=3LA?bHeUEI
%(F3+8R\DPe`'1-4EeUI(S;<P:e624^Eu5`1eeJQ_d&`M,\s=C:>4C;qOSZBIngl;MX"6E\855o-().V+5(!0ng%EVLm,[<ql>h=O
%qrCC$qtu]\m**W+IPLZAS"&`Mb?lTgcf_WuPM;!;Y&;fmq2<A0@+DIM9a7BJF.ndC19R5:!V'X/p!7-k&HK"4Q&-irjInnc<`qYl
%MBH2T"D3%TAQc7Qn/2s:/@-E+@tM."@WPV,U"b$*R7ol>WN'W@X&@*B.f@5Rg,83m5Z:l:mK5_MLo*)2?&*Rj-W\E@F&PbYU$ubC
%2KrFM2oQjo[5qsoQl0,K;d2e<DR<cBPq+[@o7baV``lGS),G*U41uHOMP"&qp8(c<C9peF94Qt\23*?V<N5oGMB!miTW'5!"n\M6
%[>h*8<j'>/+a@C;?+ZdFQ)>QM*'VL*qWHG^o06])%6r5PenB*3A&TA\R`jb-Xq:=jprV&4ZZdOnGs&WB>#_nc\/6"%Kf-(<5IJLN
%X_:`M(ElL)AHL%IFADRLRT5J%Lo*YJWnjn0Z\2I5AP?+l0e3FCVjUO&[_eVcl<-Qp[`BK@,&ns./u<\adM@,rA0tU5Npd"qHm.:d
%K`s(?01a3J2)'`q((DG5C8OQ_RP%heZHB\og-gf'fm]mTA;gX>iDnSHqE@/QD57\rNlZr+=m0hH`#gH:fuS/p+sXPSnDodkO)WF!
%:1DQLLrjcV>>2(Y;t8p`.5.aU:TeiQO(:#6>aCO)#]X1&Tug;0q:A69eub@gb:b][Kr\idXl?>1;P&4q]e4)7<-j'nX%LurP%gmh
%D=4oSSn6?%oV%Z'RJ'RK6K+,%XVSI@`1HuP;d5,n8d4`%^hIT).#D-Me7r&uWlu8gj=M+0bT*M2<)0PM\I"I(Li/Q+K)mYI.5[o\
%-F^(A.kaMu`g'4ETNPg:ZC%\M$],9^PH.+/dU!Nm=u\KlgETf-LJK_:o%^h9(kPOF\`b6eNm<q_HP*eR*PdNQ0[$O)K4%rj9;#\=
%U+<<IRtH'Fh!<!W?8@q$BB3s\@$SqN)I8V']?PH^jCVnd?hkf]B8&]q;`OERQm'X)7\I*9!bk`kLUspfKc8=can.V1%3(UmUXZ-K
%dVK:$:HuDZLa$n,EoHr1T6tZrm@]G12WMp0;QcS3KTdpLF.Ogf=QN:K/k`C]d,^'HXG]t+(ImIo>F=2AY&OT\g8]rV=%hY\Q?fRs
%g(jHJi8cBR"Ee#6G]IliY]3hd:9Ja';&:d^GN&$_-J&MrWj(ZYHu_NsaE*-kTZub0E5D.C?+G(^MB$/eg+c['@]pD+N+JH)ipAP4
%!*3Y^Vdct^'-4*UU]hm@Y-:aFP@Xj]^#2e^*=W8@djh9Fpc^rOBqu7OH9caeV8IFV]?6@?MMG4O.;ZiZkpI8giPob`Ur"LJgg+O)
%LP5/qN.66HmseW6SO6=/?i7lm`X`%1Vf,mkHZconcfnPTr:JP#o7(#8?c%l-TS(j/5Mt>Uc4_$0JE2%4Y&j15m/6L%_rK=3^O1HT
%'7Rm/S)6GHkf;#UcQ]U4<W9]r^NF\uZ)%f]1T:RBRX9+S6hl)F&:WNo&6(Pu&AOd,hRjpa&6J>)#P3Ccp<3?&!Mbd7q\mcHlaO4l
%&+A+ge_Pj=3up!tXL,1I>lFTXS!0?;ea;HIoPo>fD.uLMH:P@.DjP)q*sW3,WVnKfL2pran`KQAkM,UQjiQY&kjVl%K#K[_[fP;J
%Pj?T7g[cR=;C_*oi.GQipMbRfJ)%-.2ui=^-?9CfDq3asi:PhM]=biPmc8!YpW\d')->\HQnGT!gmm2jCu\gKcot@@+4&4;N@h+m
%OP"@gJ_Du5]8>V2a1I-seFDAdE53aYluF%k-4CB"m0hP&>hr_YD#Saorp]pRAB9Q2%;:7Og"O8U&6Br3fB\p,lN'?Z<VO.4R]D>W
%=!,b+L+S`fe-cmimd@kt(7TN3Y=;O[+GMSMEecQ?j&>'`W65'!<4R5)CCks@^V)]*3%B!_KA"!p2o)S:Uq5=]1,J39UFnLjEhb6G
%l>iXP(LbH:r=$'D@=pO]IEjr&I;[D>N_,k4DuRI2J+J,;HM-#k46V]%hdMO:9("LnQTq,"DPQF9W9Odf#<q"7/iJ2DF&=FiK]]f@
%Su$tPY&?OR4Bl1<\'Nc:bKU.OkB%!Q4l%@/*AW?m*;=Q9/9faP5BuI9p$UYVc-;:!n44J+caE`mNU8,qq)QSK(sR8FFaeK3j_sUs
%lR`EOrr%5#D:$fPQd2@\naXNZjLa/`piVP.ImCfla4op(l]]S_PP$V'9<.GTUW<WJ$tf,)I!r^+a+p_=c/k&OlJAhU!=g2YF*7<K
%ApplQKj0R:iHS@5f`2^GF@ue.STFG3MH>,V0`F(?)#rC'N:Hksg#^KE@A\j1q/kG;j-JtG-T<$AcuW!p^qk@%"q(^3W:Pe*B_6<b
%+pAh!(4P'dlbq8'Pn$n3qfN2/qK7j`CWI@`+_/Uf2hiKc[*9/IN56J7h)tgWptYf.k@Za2YKsX,;THimf@OXomk6RX6g!Q-boDdA
%$,2IspHFLRT+h(Gk5(DR6LlP$S`(:DH-XGXmDTq(o45kIc]6n)2CPB^^^XpKNBob_7WSPq50_X.q>>QFq<%`Jh7.C`3UGKsdfK?=
%nYG's+V9cnqpj#a92sK(0c^$6*&*,B;(YSicIYEM(lhIqr9!;@_u$M+X'Z&:&-o.g4>/J`*/N4.NA62`]UmUG^QEa]/Fe&Z/7M2C
%"3l-%RE($j@Z5mZ2o^@,ATI9UI=T+XphP;6e9`_Z8iB(l5LKZ<"/:t!"9i[Z@tK:[S"aci/b.U)NIp&+q"l1SIJ<ggc\$?M5c_e8
%SHB(91otaV^bOKS?XI,WcJNH`2^cN8qsH'5)W)&-]XRVW?h]jLF.:/%`t.A!PKh)/o&cG7LSJB?(Md]%J?/&c1`\TM5+>5,+'%n%
%mK(eW+nC[n4ClTZpcRh%A0)^GLgr7&1q4FuRpAGAYj'mb`&d\D0gHgDr7*N0&4[t]%GC^V#G`n2[+4kf?ng$@Zh*cs&Nf.\4id#o
%Y:bQgK<"<5.bZ5g`-+1(S8!e-NpH(J.)g_1S.<ZH_mT1qN:m!ble_pU"fU5$qKa8IjI1FbR/neUeIVoDC4B_15d@*CpkO>lh7n#A
%Xnqo5jRn7LecFem4[$D;qtm%[q5X<1e`G?CO<NTAGIKX8/!<1eQ1m/;o<ZWbHGJ[2PP+an2ciB?5X\WHW`cDVcRoFH_nUT!*^#(n
%Cp0in''15M[$0YaM)&TQa(E%&,>erm5!*GG*;iui%Zr/,#&uK>QtLj8iK-HJ@k<KVgDGk>A5b<MZojLRPX,HLn7,=e#P3<QYp_sD
%EAYm\N("Uo;%A9@4RZAdod>Pa)+<<lSjtr!=Hjt]3&Y9lZ,`RI6EGfH*R>lEA]Q!S7Y3^`=Hm=bdMuajc(G5a&#un\\NK<@H%X!'
%`gJg#N#Ten&YHEHqs;/*b$R.*qX&n*GJ&?5F4W/;Y9CokA'+B7g_*5?=_:.7p)pqY8%LSY"=%1kl.S\[Ne4DcYG#J@f1'cIONH2\
%O`[C6,?;>t<?$Y";-4d:g.9bc$WW*J6>rLK=auCKD#ak@<"?]`);Tc[Q/aV<!.o2.NQ\96N4qORa6*<soC_QjT>N"k,+B8K+qf/:
%Ii&la(tIHoW5c/t"p!n6F)eU1]Do,^Dg=fD:XkK2N*/sM1,Ta<Q-L_VJG3j]Ip^$)q#;l>@IfB:]$E!)2t,$E[i]+L9](WMqIVGf
%+/?FE)VSJeCs;\&41$a&bGQ6/`t+R/jmI[_mu/oT-5o%NK*m)LFs-OQX")#AEAV,%U\WjcBYZdd/dK.dHlsFhFE2PFFn+GU,KQb>
%h$uErrb1N3<k'6^:TT]C3_CkU^c(oP2EP;/*E[#o>3g\n$mArlmZDZ%)8imZVIU,2rl-VpQaZ_`Oti@&NT$Iln\Oh8q_=;0if0QY
%^#+9TM:ZB!mk6RX6R8p$23U-l8&RQQG22=@mdrRHs6k#"$p"06P7`iShd4B_rnl-'H[hINq>#Ms>+u7(B3u+DS>4DSo_FM2hpLUK
%T(6mZQJU$PH[tD'kjogC^'BF2#J^%0cec@I*HI%Y_6<mT,<6YT0YkKg#2NNiK"?"`A5JgYp,0G=2s9@*^YM&ko<Vf\h`uls-^`q:
%^^/[R*:WSTL:nIL=@,o4DgLdN^3"`#%Q'-<_b-s?j@b9J%RpiZJQg.7F(#U06H0GlX'`"gS'/!#SD&@5G'SE-bLK[D5J&u6gjF7X
%3W87.H@<?S-T.@<%a&lOLf'6,ZehC8p9W.qQLt)XgWrhV^`0TYkLmiAc*h]O&k%qPqnb*M?oXWspbpJs'@kpFR:^G.>2j<Cm<age
%=g6WVg@:Q*7/LV+1A^cSEronNqK^'0K=(HED%V8Jg4$O6EsTDU`s7]H#$K'Z\*Rs^"*farp)[h]mOb3mAMh&YL6k,WiPh3ff^Rn%
%0P#YN%54L8AMh&YL6p<W1)aJZ_XMT[__,q&Ym[<-aY0&XeWDdciAkW\dW=/@HS8=GBG_\P9cW.Vg-Z<%3r!5!6]rE/HErAN@i1D(
%*)Q:j&TG_PG)F?9g!09WZ`Rj(@q:I,P)2P<NajE5_dJL7-Dn[gNqZMZ%\>rrB.-9f)oi@\ImW:BN;iNt+RGJDC!=;u0/T5JrV"M5
%p$("Fcf4/Z0hKc#[JA.V/,s9nJcQ2)`pN,>>W`)uMEK]aFcok/J*[]dL5]QVBrb4tYa>=);m36GmlkW,E&Cm=:'ZsCLX<>TY5.O"
%N.4;;i$#H(4I(IbS!d(93]N^&))\d2d*Q*uij66OFGS/G8!.<6+GL.BH^$OTaT`15\$OOL6%Q2qh?K/S)9i!&Y^eQ;EF6TiG)YUG
%6@-"KN-:0?[U[t;NcEDIE:jY+(dl:sg+a(<diIfma22O\43!tWn^3@Og+eW+Ne&,&c$E3jbG_$r#Q=#Fp%m`]IK&WafoUH"^@+h4
%pu_<+Um!0dk1S''SqD`-a<6L4=jElHZLe",rjZ*:DuSY]k43&=<n"(`YH\PYbB%rUnK!^K^CNqu&Qdi@TJ!G)gmm2jCbtZ07LlNo
%j4X7$YpHf=PjCW<6pj=Bk.Br[M]j==CASpkQtC"nn_\8RTkldJ%$R0]+i;XWr^QF:o*,Z_]OTZghP#pCK0IPa`jA%(d-S(6nb2hB
%gN-Kaa(uH;51r^9.BJ<-FcYcQ52hBI<ef$GEB+7FmPSM\LE>fI4f;\k6%_1p@'@A?heq0dIn]"Kd@i5o82kaLA]Nq.^]?SK1NrJ>
%mFVMmNCG_4)r!a(fV:(nVpOO[Oh=P\)n!4RRiAcG;4II3BlaA%aAJFR%bf\o$kI].qV6Tp&P&kH%2dcscAh,EW6UCfgo/MXl<KRp
%i#*qb_Zk,E.UDS7<4YAJ3@:$Z5H_.aJ%8krTrb"QpDih9kB7c]^n'/6Nk<UgYJ^FSD9OLbk/SJ5@m6g''$l(:NsRQORV]Z!#B?$T
%L&UZ+oC^5/?VS&olGNJZm,n$q#MDF.hY_gd`(KF^m0a^8*e/V-CMMceNboZ9&Fkd$'g4*DbeY5YLTZt2B;Qb"6"9FZ<rX8\;+H92
%h@.hf7c0eo:d+^bcpO]3K1Br=$\(En))pdAlB70d+/4S"n(?7UIX=:mJ,$Q9HiDPJc5R:uIDZ*3*[B=,PP$%m+fW/Y;%3fQqKRAc
%DLJf.3io^b5b<(2gd's'!42[ffu<>$&!X9.YA'k&oGhm=f`<OW2WsRHTS5A*]4^YJECL*/oe8>_^O41a&4_$5kjBkDm89prc_7a:
%,6pAU8`:3<W<\p\9e^bdNt5<YRm@['pQbmsnYEMcOO1VKN'bqN#XtL^1s/41GN=`f_ac9m4gtFQHV$`&X>_'07q;:460Hj:FlMZ$
%9)HK,!DMt6+XHF+4]8L-A([(K-Q,:#fONPL?]g;`lu*<M]dAN\'q\^3mePP\pZo/fRas2K`V&oWc23FDT^sp.k'2[bmEh9]&-dXJ
%b]1]@7cnr'MTHGaaPdP=jGbC&4BUHbN#(LEYe`[AH9Md84J)BDUqJ`[N-L(;I%Jrhich7m3C``BSC>]Ba/+cPM=rYm(Md]%5[K)<
%T]'XK\Z>1_0=cG:oPk-`9#Y;5o*<UKrX*k!g_'4$`-_Apo@5e3f%OPrM<?0*4k%Yc@ucMc?::ug6^!C0"(^nRc][h_XA!sYc?Ec]
%M*kVD&"0"6n<Mcr>W_]qKU-hPTHBe--Kd,#mL\X!rK-EFf$8e_KL`@ne;uKE7tGuI$gG3ATV((XY#f8fHaJ8Bg'll?Ii^AW7q%t<
%P6!Rj)XtKP2*WFqpIn:^\!JI,*$lJJ:.R8p-e[RkUY0!E1tssXWTR($k'IOI+Vb6k4TBZ>^ARbDa@Q^DM"CAtE,b;IO8I%57j3'H
%,^h_iF#8<(V@V:.$@/,3T8so96PnYt@ej_)/3cuBmWf)dB="dAp3(_,l467VZ3#s@IX?554g[OiCgO[Cq<"$MbP7Ej0>@B-mEgo4
%I_Y[Rl5Z@$l]8euDSC@`9kH%cA<WX7Hhl[pjbs.YMdp""a`m54/W3;TE&Y19D6'0jA6OWR3it2LNJjM+BoP&BCs>bjj1#$tTDfeP
%I[c_H2j=:>YAA4dchcm]QS2[1V(JTjVXd:^Dc;oe6PiY'8o:dPT2:jf/1d[PQ50h6HE*44W%aiU[PUii6S56O>3C09q)+MnBpn-2
%D+'e+V(7fp%LUB1do#"-bP=!H#0ZUI>1C!&/_^V_;H2KCc5<8Q*J.lh^M>ngAQ?P7\sueT8dC!I*6(l[Mk/;8'\Y4FYia)1B]+*;
%kmC4r"Z'.IT!p34IEgpA54DZA\Uk'%!<2;-3C$0&dLGq1(arBZqBgp!DgigKA_Yh<D>0aW!]Piar0.<['Xd@Z1b'#Gc_6o00I`5o
%$E^@sJ2@L)aZGb^?aHWcLIPHdjXE`qnhBe,\-P^#D^e5p5iTpt?aF=U&'Ym"H&rpm0Nlp,BiH.n%Y`'Z,))2be(iJI5\a]7W5>tm
%S%`K/]+<]a:nE7q.M$#"O,KYFqNc^i$m_u\p,-'_qp9/1Rg3Y)9ae)8$U6*O@kY'W;Q!?C_T^P(5[)g>!]o/;>kBmX[/7Yp%co-1
%U[g,4n@/`rTl2AN_a*5(<F<(4]+<.%\1pPSa57#lXNclpkLJ&r0\$Y3CEW!Kack+N>F2l/.?ik(J>sL^KS=00PrTQtCdbZ<&I`q:
%6OMoj."B&bKP&E,bnRQNIF-K!C75rma'dgGWl@4i%@^GQor[R0d_J8V\/Yl^P@Y6Jfmb[NGCBZ0jYc\6'[FWc!2R1MJ;:"Q&5YOS
%Jpd=Y/[)00.M(jIW!o#FTO?Q$dl#Ac4=LAI2X-d-7TP5#LZUR)26BiKG<fTBBa.#S8o@"A%Zc]AC49[t%*)Q9>Z"FnRK?f`c3T^#
%$kC40Wif&'S?,I/aPZ<n.4UL[GT@NQfa:GD;jtLQU#Uh^`Y_We%RH?]$?IA3TFK3bZtdM6!,_neF*Ug:4?"/pDVcjB;kp?RC7u6]
%.4^3aUEBabO@W?)^sGCWQ-k\f_K)YbnP7LJ?s[58#Udpu77qqO?so!mJWhj.>no?=&u<0tQ]QqOVCYr*+B`EQe'^S3L6;^cYV$%s
%22IE\j`4r2iflbpA45on3&c]d#&r,'0g*K1T=N0u(@ij7%,/qp6Oh,/8Pq2GTR37YV)_@ea'_5dH<SooOeSbc_@s`e@r1#%>YL-S
%AK*QI$I^&Lnu/mgfk=2&#b6-[%0&M<$X2XdW],G$<nW>/-HI0J!%D;KD.*16f'o"J2X>FEM8kF:cTu3c^B[2MF+%3+3BuPoQCu\(
%p%n%Is(jZ"n?]TX;ok]e5Cf?sn`H:Ql9C/Dp=WYp`;Joc4K5p)6n@k9DpM1L-N)P$h/*_P9jZ^F9qc=qp>q3Yo(a)cTDg(de!tU3
%X)QmdT5SToY9rl6afiI]Y><oaf<&^l>;[jpF]GDm(o<=F!Z6o."cChU&m56hEb;iZ?'YeF.qEYh2qL=C(/o=$P#mE\aktm:FcVWq
%W_2%*mtFik\/2?DDkW5c/KP!W8QB(`iGW](r+?-C?h="_,<u4_-*#@jP@(KEVe6s98,EJh%-S'5$Ir-6[9?f%5g8\<:m42G.*@F^
%^QL7W,-c3f#_Rdn^Ml#;5%gl(jY\k"%8V%Ap5Dq+U&ThLZ*_=H;1SoY<Ik^5R^*0icjUb1;%_ot9LNY#Sl&1Spq$c;SH,j*i)'SJ
%>H/1KWtXFA+p#5E86oEX;-WtS,>4UN9:ki3[)HN_AB>Kq+j"L7GSuion[IFpY'kg@J&a57&PM2CLB_N5?K\2(b#RLL<9a:Tb.'Yc
%i]!R*.\e?cMs#b)$j$2OST7Fa<SNM68OiM:VN/$p:LCi?6:*GGFOA5$2j8/d$6"N3!HM-kS-C61ee+aKj`KF("Z(.6%F'kY2?k@$
%?-.ar;4(&R#-AS^m3HZI#lW=_13G>p&SdC2)\O4&Y0PJ(pq$c#(3S`Hkjp]B=Y+YTcf(WNd_R4pBR'LMXnhMq>_6Xf_Sod/U<ft+
%0)AWt87lQ%Gm2&jSQU3GZ'/#LLm(9D&gZ,%0#BbJ<LYFn2+@O.Q'p45+Qb'GJ'Rs5c[kb(/4fF)PDD,n/-OW1+q^e("]/8(\9efe
%(fj=p(aPWW=][MBMr_n0gB"L!K"M7rV]=p,Brus]C4\M_(*I%IB)KeN$Dp_M9ILU>O[/e0qbM_aR4aG^e=\Tks1!P<,GkNF/m#Tq
%=ngcXko>?c&4<4^&S)E#n9jGP&ULZJa<VWff[!R4T_/%1TI=@Ug/MT8T$M$s-asmV>ht'p6+B(lGOh)=YASgAS6T?l_TY!UB,fnn
%106:/qQFclIscH_I3Ese=R#p\kk+0'c.gq'oipYN)a(n)D0U:T*8shY_BH)GHf@YESMHj#X]-Q#H+kC06j5n-hc.H0dViC^EiYuS
%M2T@IBE-VSJ%rOC[lM!-JaVFHQ`'!uH#UCF]=TY\6@\Y`XjRkJ(\jp#T1h(J>lAh+MT('q=KK5%>*W0dW,qm4$d`rFP)kmND:Md@
%UkYn4j^\,'U4TM4@K'*eX;HZP;+TQYODJALfp\jEK]I0cOBgTf,b$.qP0H`F\Vc+%[TlTpE`&Wb97X6N84I;><tu"%+srdWjlKMt
%)'54c[,p!nii?\?Am7s;B`,$BLrh=jdh7k"5,TtZms9uu3`Q06)^6Vmoh0Yh+ji2&+PP+",N"B+WjB9mM[YCu[5_G:hZJ6V.lQrk
%<I*lcicSBQR.P43&sFLE(67Gj%RpIg_;nZOe5o8[_TP6u+9Mie85[kLGX[-M:GnVV$cKWF\<<P2<%,i=AL5lDmsS2=b*#(IaiT/V
%2]qrWKO8$6&p',G;jqmSA5=CDDhmrc8CW(OnRiZ:eHD0S;E"1q'<"u6f;#<j1c:=loI*.hVWQ:Ur.g]/.68\225<`GP69^3R]0>&
%C//YoKW/*B1dDS*&LWFCq,PK#gM=8%gsJQ,\"uZ)X"QY+XM-hVCK#a'>NeXnoR5qUkCXk8CUGYcCM_i7qZDq?7sji@D[tdslcm%:
%#lH(iO7q^5;B@.GdG@">S,X=P1PH#0m6C$nlgW.(39T+9A4`pmTIr'j8E4Y!U/UkeX/q>>p^n#j28>==;H@:<0@D-o2L0;l)1T?A
%2?;!1C7_+Z]V;C#+#,_n)UqT$.^SM;quWq0;D=)Q!TFH<pAp>Ghs[fY6&IZE,#(:i0\m9)"-B6I)fr1orTCOBs$147O&GTu7?:@=
%-q01poI*/s6]1"HSpnZ?YnTpi_D]6u[oA79290IMQKl+-7@We&#>!7sB1o&Q5#IQl-BappgPT]V!GG\Ub7&_RdQ&9E[/'Zlp.==V
%-`9(R;=[L%Y4/n2UDu;:OeWmVb)q1@*1>P+M-DB3>or+K:ErA-WX'^B_YIp*(u=gg0&KKYXQ'B;bF`K=)tU968W)#3<U7C_./*BM
%Dt)2BErfiQA[As5_HQL=P)ra6]@.ri/d0^fUfY1i9XC\!atdK6\\"W\9[CC+<Ckh'Ia-PZBgs36h"a+)bJ8d<*>'>:CZ85k_"O?B
%cs[1/7hb8<=!**#I<0IPM('f+"^tK<IZSMS.0TjAKKa7MV8JH',N(T($^Y=".2?pCZ!U(r_,+3.3tdn2TFL16Ou-<Df49+a(D4it
%-&AdkG$],:@AC6Gd1"D,\K,pF<"+hE$U]uLda7fg8Ju(2CbBIK@C1Zm="K<^VGPjMiZ'A<h%`=kEY'<$F@qh[e6%f-h/=#;8P>t3
%1/grDQn.4ajj[agUtp5F"\c>,MfrXiI31Y&aMTfnagP*Ac3f7S/4_unjRPXb?BJL??4g-aZFZb14(-0aWB!mgD3`R#E5$i><ZWbD
%"BUJ<pihZI,mN$7Y*?>r>D42n$3#Y,*/'La6f+b5:c1id8-`4R?<epAp*0(nZHArsEKOqDT)<)m_PftEWUG5ajIPTc?:mL(M&0>5
%Q@@=SR1')F\]U7J;'in*!9:3'e&#Vq<A[aA=61]AdaOTW6>I5;^\i=G<+2!@$h?[L<k3]R<1$@b0+FJ5RZp*]@+6>s!i$d9c>BZM
%Lc2I#@Pj*R*f+e5P^(t%ZYkIp*"45]3GlDq*D+l6+ZFp2B0rO)'r*]+[Aggs<,P\!WFi9R[N-/6DS["8daMKgKIp@MIa,8,H$b*1
%jLl(n>?FZN;1!k)&^/Rn&V5ICV6X=_3)h-IW[]M&0%pSkJm)bH?X#t=%78-^>+<`(_!]EH6Z_-Dmsg6TI)MWh14X&>!pY*3l6;Q4
%7r6U#.YkkJUg-R7b<V8s),F?_A?=p]M+Ys*<P)u7N<7PkRA!UmH6@psK#L-7<KU<7l7"9J.W%'nN-Z%-UX"T`ULA:Rcj\g"K05m2
%8-LHbg?k<HjEJ2YB=6`(Q+TK)I:;clF2Q!4:uZ6gAEL$3\pB61'?1.l_cbQdS3^2#kZY)fX"^DS^(bY2Q;p(>)C8HT%s4q+/gGut
%X\C<I)Gjcp9UZEEE=\eld+QcZ1or;<R[!]f(`:)fX8ont78q>HZ/r5*/72T;EFIY?4;pnraB0B=8m?L$0WJS!!C2pV1PX&>YLJ22
%RLOtm/;;O!g!FChX=apM/[2dL_^%n[RrBe`6)caCqi%XDDdS9W3CkGco#%@!hJL7L(kqu^JZr2;(iu!=Mi_X#qu?#rBj2N:ehI#N
%^9=U;K<paAVBhF+<@eG_0M=r'JF'<k"rrRrCstO1+.hBhSjcOWfuBD4m`@$Sglhc4dW0GQ*M((TQLp(kGhEenP[$<P9_fW6osI'*
%Uu7`BlVC[_OXUleYl]W%N,fj>RgSXOc)<Ut9^;mc*W:NA5tP;#CdpCmE6JHh.t[:21U3jO:n$.&7##j+8K&@__^@IGqq4r0+uWc`
%Y_W:rc0H:@-!`9eqf[A9<LG)8nOCJZ8k,ZC9oY^&PM#4dYo,l<Eq+^d-QTS$ndX>f"/qsBX#.r.#62fKkYq:7>TE=SI2nEP-Lr[a
%%M%T<4';B<D*7k&>,sRW`_\WX1Mr"Pm,eN$X<RN:gc^/gj4UH,3pY/n_;r<s/RED\JTU*lUMq]KDb?@b),.>S_p@L`F7N.p^ss+4
%9or5H;ATP=EDi1A4D5Cs/j`u\*.=;t"":Wh=?OAl%c8cb_9H&0*_.nYW/%PnXuh"+a(C+E#<ad[a64`c7!M]T@iZr>Wel=U'`ff$
%M64*MrX@!'F%G7q(K%-*/5d=G'Vn.[)hla$HkRWV%](f=#+HM[X=:#hOsLS!8])%/Blm"h2Yj1]#+IjrSglJs.K^XM4;6tg-KCD"
%,?Hsbc`I3V&K-<jN?\%o\37rC!ledp2jcGt[7W5A`mSDq&.r8o34mq9KHE8(R%@F6jHl;Qb`[)a$6u(Z>bMqIip5*Vp5E[k(M0k1
%1QXLUbQ+&\P9/fTaD]l*<to>AjDu*P+nu:J&E1sj(]:=&A?GiX[tc9H7YTkI0-1(m8j>l+>jhhI'Im$j"$5oeSoW`#G&.;&6]ht5
%N@HMb_g+>;;;(^=F:hLe9%1l&9_hR+;sMDlUMu)^X?tYI9\\8jeArkFg;-sZdTs?B+Hgc:.Wcma)s9I-A`i5s?qZ(W2Zf?UT_Q.r
%J!aK@@&PlI=bre#5:k\ff]i4l87biE/&G'c(!js;$\"$D2.ci=Q=LUs,LFje#,<j_>&DpNOuif2$OIQPE/cs]Z"P`[S\pO,<fF$V
%Pn%pX.UW]&]Z%#*$ZhZW51>oF";qVN6l<b/8j4fGruE]@'WY153Xp("f03"+="X;*GkFg+)U0dARTL"k\Mu(M_UamDl0d\lascA`
%VMPZ<@*)sRUM>A%'1@<C'V)>R*XI]D;alLYB>A4!Ksi_CEC*MW&M_=o_-1:iD$7^G#hpE=*+NT^2$T%l,;?CM0LhI4]%RPIKZ7Sn
%hVK#:(gBKZR%C!?OXR#(=6P$mLX@/N&uKY2g50_49O;;3rX`kEh6:-H!+.O-d\A[%U,Ele26h+u!:=/SVqYZ3!R\s8B,L\?r)"gd
%d#oR(N6-Vd(2Tcd3jDQCWa(-t=3Ara,a-/O2(F4Ys/QJMka7O5+b74^r]@9[2k',r=O0M5CQH5&,RIjBOlHZNamI;\#e;>IhD1+u
%[`fs3`5s6.b(G1[3$pnu1Yc>g<)pkFMWk[799P^(5E6-`4+!.p-MAQ[9cK4J9Hs$Pd+Xa[CF\$%5k,POVb>VUUoA/3=0j=2&-"NC
%FCp=C6M^EYm:[oS\?musNDUNO>bN74g*DJ'1Q).QJfc4ma<!d1&]?<C/W.)*?Q.fK*!APQ8O4Cqr[TD<$!L'6+b38k#tKR"q(2:C
%=*k6]!bqsW->g[$!>B34K!\[%BIjO?597&T7(E.FG"j=W.lQf/g.s!l?dh_^L.EJPT2,_?1,=b\)`-4cKlJ>A.LW@[_^8jrh^DPU
%$W`U5Yoo$;'EnZe.>&+6)nKk@/d!K/?)'Opg]^9]D!)W]O5XLVRrqg\.g_HR^'fpU&4Ubqr+HtXCqrK%i(%R1!KNS(@r_#o9gnCZ
%;u*^c=Cb%7nk3A$qr0g_)LZlW!pdM$'k\^+7%n!S%ZQ$[do"43]0!7_27rBT+_1GjE+n!/U)-[0pt1B&f4`JpJ\B2OhcYNU(,.Eg
%Qb$^=.H]1?Q;-]r&]1+bAWt0irJ$qL^_t+JZ/V"B$Zh<K&p3&TO_Kl7!.?esOi0kr@M4I.i+fBON?S]3%P/S"IgD(-]:#&4=F&]?
%gLfKQ6NO"(U7[;Hg$_:/MWmGbPaYALN[G7;HE9QpaqWN<S-UCQO(gSU$ujg!p!PmEebit!SP;uHTdF/hWMYho#:1kE_?r=+eO(0j
%(WO"tV*2</eUN5IPg(0P56>Of]J<rO*pU1+-5Itm_NgSn?,kIN!qX7u4M!T:4(oo2L/Vu"8L^J9`*m14TqZBWCn7TAQ7%lhWnUKW
%BP,3nm_E[u8aIUa.tJXNXK3'^&D@OM-@E%H"P\r?Z4Ut8O?3)=<$c?bN:If=!Dj;c\bm<$G=4XI2WWVC[,($)2J>7^O7[LQ=@+L"
%.9a6)!+HeWRZ_hr/1d[3$>\8O)D.'@-(#;?cH:*7fA*Tu`nVIfmHK5O@C'/WJO@=D##)+i"fgR38^4>rmb*ENibp;D*#SEnJ-qtV
%LSVckM1KF&N>#O5NiF)1B^kOd#1Th9n`ca$.q/om'B(6;"C09+`m(X@HW&3cC^!L?(GbVom0r0<jr<5P'08,$"UI9*M*CQM,se0M
%OtS8*F,[tG4($8m+>o*J\*AXj1i9-b8nFK60YT"9Tc"lofSZ1S2VqOPX>D6C]2&,]7BVss)Vur5m,N3V!(aW0'0NTD(cg*]N5.9]
%UabooYNY]p./CZU`S?Ar"VG2P&8Vl:<FM'j%Y"#DGAtYuU*u8O/^"aX@O(*L;:`IEpho20W',r>'q(tdBiG3oVCX[OFS"')cm*l[
%q6,qTFC^+s)r5nmg.C$bohj;Hj@9mj(Y/4+QMoW3ID;pY^Wb!O&P'=bQnCd"WJ>2T,H=)8]b-GH<Esp;Ln7mPcr=sIK[o"/,4Q,a
%dVqB:-j5[_^F=-TXs6g>8?MCrF4HJ8.G+6:4oWNSFPK6F*(VHlr,DDkN8nE?7F@N4[4iiSB=3>tl+2&V1W?QA8LnflhU4lp5`/$s
%77uHt+f\T):PXpG>c2_U(a#9/#T5"#"Sk649fAFZ.rEL+S@3'2R1>\=:N#&gL)UK;1&V-ms%t$a86*VX_*\f)UY"L9CtMf<oBmEq
%+=(K%!o]:;P=+@<+#F[`^5[^5BYd.M^]-T\;.*nnmB(C3FpIMWqo%':eYaHe(aL!07YXj_jD4sl3W"!J7L.G#"0-2cKfE%cgmI<(
%OEmMIn(&L#K@"6!:YH?K6cT\)gk]ZSIepE7Zds5#\#"2qq'uVdO&Fc!&Of7EC=oLe)766m3fACGcq8[IqNo+8'QPE*[,\HBYeO7;
%?;%k:VI.JH1F&cV6g*C^1M]^?jUJcf<cX\Ed\/hd@[MF1qD9!&n-o?dO)p5BA%g8>p;%-ip40>WfSU%GH(8D[:P)o9.'B:W)nf2R
%VB=q^)`791j-1E>dqI@[E0k^U*W6jQ-k!Ro0qknWO8]"q>ba5>m=I-be#d29*JMCqnkk&R\@E`3$o&:ldB,:^XViT;JEIVZcAB;l
%20iuaYO'/BZgF4A_WT&:-3Q>$cqT:%d!<@ki`,3GdJKml$7=XjAlU$>Ct]_;K$:RgR9Vq)=G*eGj!_YHfBAd5G/;kWl..W-NkjU#
%c3XC:8nf5CDLZZloc)IZrg7pj5nmL('fj[eL>)l%R.2d2R?1Vt@K5:Kh;O(1"k-DF#:a$-jZ;G(@R0APbcmMT0^Hg'Zl:,3p.2+!
%U<bIN>JP=iY0e>L?#[5n]!]bd,B1/LA&15nI%/HM/aP->]l(.7JfOCCh[26uHqU]&V)N^K40fF`gB9Akk$(uJ5""X""P(IhKl-HG
%@`+PJREiT-P$!D5@FI]T#4J1,mFnW'l*)K98?4_b#1r)-.I;YmS^T0'L)ki_9cOP"DhOl$pPW=\$mIpj0N6/pY4L_JeWO98#_'@)
%2V]?m2M$/Ed04bH_bP;jh77c?+\\c\+-K0"n:pD%TGK'r)E)H>CIjN>[q@klG$#()'\d_t2:tCeX)n`pFO"dW%m'iJ)\G/^SX<*:
%"crW$X]GigRi7uk0Z#mmHSZ82=^ElN0h8Xre*W9GLdBGJ*9I=[;&jB*B\<]j^e$N8=ehUS?A`<Kbr"-3fF`Km7OBN$(NRFQAW5^*
%0BjB[UVE(9cVZHgrRNaANl'ae,Rp[h=uf0l^Z8g8B=gb\#SP1b6,O:BM)a[PDb%aOQO^kH.ER*7)9-`,e:gpae*-Uc15X(r`n,>[
%2Yge17^iR0A`&MVO]&_t,!.>>k`n?3bc\c>2I&q4?#ZZ^]!]bdUN!^To$K_0QGqOLF0!9jY`_uRPh8GIa64q&*I2Kn;mI`Ub[^-*
%NqT/_P*m`b;$Te%6LlX%-<`6uCd\aNE/NC!]SRT`ZWBD3CLTQ([)'1OF0KVDps+O,4\Dfr$Zci]"$\=l%]Sj?(QIN*ar"it`SFX2
%d&QnJ?bi<(WfD)S#'Pj-(kl8u7?$CrN$@mqcj18uq\9sp,@.9e:_%><L%0:#Vf(1p5r`/cWa^e1fE0>*_`W83=Yq`ASJR`%6j6.M
%q6f?^cs_`/6<Wso@rn:c-fb6C7aO^afXlunA((.R#X>3]HA\s`>l?%C_I<R&I/tJ[IhTP@66C\nfaaBC[]YUM.3VN=IPMc51$2\s
%@)qG$Ym,P>0SrD#]oZ_8MZa3Nf4^%e3S=dV-q8VS:fNi&q^"ZX.#oe>mcE]b9MpZj74"Tc4.\2ZiB666J?=PjT.B&-kP25S*]"BK
%YAb\[!""G5&r*?"qqdM&.j(Z,B]3t6E-_R8&B-OK?Bkd8"p#^$DgJ.>0=<<JA/,cOA%U!aL7U1?\f,VE&iYt8O;io*^OQF>0Sfuj
%8hp!;(+3\\9R<!eDhE4th1Z'^,BHr1/ffe25Xnl=7:MJAi*Du*+/Ff\6;E^NFoh+Q;6W0ie&^;]L9Yj58iW$UE!.jQ@XM7rWD$a=
%:.snqb,L\iDJpL7L<edKfb1/40aT!Ym$dp?$pIX,J@i_@_6bB&6Nf(hIMMak>>ZBW(P\<+;?3+n0J[2\bs3/W#`;"Qp(Xo42Aqb\
%X+sFEGmPHO?ist^!27aEJs7pPKRugja;3Y7JdtWu_^g%,i&BKY`+d!kM6Q[kDBZj?VrPM1#L5B=hOOdJ.[I9EEpL*;)$kdjaXJ*m
%TZ>QEr:tpH5B=(0cMT07o.(6NZ2&f%VBt_5*FO&2.Sp:jW0uCjAZXn<hNU)o2o`g<@ON3/To6AaDSr/ERe+C9A&?W$ThW5:_Zk^n
%6&/UL_SdGd_\_q<q#IWp$EtmrN=1\t>t"*@(Aq;pV-DYQ$l$^U/TX:&@\9fYXHH^dNcW]IeNW@F&2@CBY_j:28?e'n3X1Sd7U9J5
%5f)M2?ld^rP<b4\Z#3gdJ#fCYF$o?HqOC%$i[=Md`iJHOMR"DIMa3]NfX"Bh[#X\9"=0&dJ4rX36r""!-O+]t>dR=j86&OL:Onnl
%dt1j:`FGuX'%s#4$!%`@m0gMh&9X<VNR$LdV+G.6:Vnh4OXNg1%7Q/pr&tI]S"O[cNqmkBbZ$g]'WIr9oS8:@ADDt8a=JV$J.@6o
%I4/#HRD\h\jqp.A:-Dm?B,+f[gmd4uf07B-?NqfGfMg#i8'pdpR'^H:i+HF>glSPQAs\Zk\C%'HG.JnF7fbgX"BI0TL+Hi$(!FRm
%P#4iGOSE2B)u1A57SVYC(][l1*/KD*:4gC??ss(OD]%=^mA6\s#SZOAb="n\itm`h`[bG@BbPd45<:Yha#>FsQYg8,hU$48<q%W%
%&FU"[X+60L4HI=STrf8anY7_B<JMnmfsEX#0_3i,oak)khQ!8I-ogF1oIPIHb)7"f".Ci.m/Pd?5\SMJ'p/1&&kU%=,@(Z$F=l1m
%$8LYZ4Qa)2$p>l`_FB;jZmri#"O+[%-DX98UVVh]5jC'p!osBW+,;Sl):%\bPg-^0C(s4-J83"@j?"2s1"F3Ym#g>\i$Y0/j6F[4
%92D\lRias%p@7f4CPDp*0)?3V-Xa-G<eGuA[CLkbVq4,VIol'VEndGj<h-\C`^n*<mF7l_3<qta=]6bKOaGbQe:\]-g%7q@^kK%b
%*MHsZSItEK"FOFJL!,?Kcd/OE'.OI>$Bl'(V8bQTKQ49k@Gn2+TT%h+-QTK7b(nXPaV0kq3O^T@k;j=.P`5FC5Mgro/dX]*d>>UW
%1U29FW=p<*c;_93T0O;qTE&V9@/*S)1IUPL6Mq>hFV3c[EKS1Zb__Dj-8fu'[%W-I$!f!E!&&oB^!Wkko0ZkA?DKE_ApDWP,]JB]
%'V3i)61pM79>G3X4,jb("Q&LNIh@m@nIj4SK<GYC`GeM3/V$jE0G/-rNdM;U)QMVdL*AJULCT%43e:G)'GNT,E/\MnAO])`kla/\
%"!el\-2J5V(G-/Bm#i#XZXUWe2(X2&=)OLb&HS1FE83CH-sc9as,Hi92EjDK+@P5&htXpR?X.(\OOiibDQI-j2(9(-oZfk1h^:_l
%;Gm:V81S_L@!a*qUQh.O5"%Tp*PG"+*4D`M^2#RiFlJ3:[^XEsIjV:t'.,2L[N(JmmR$g&2Y8CWk+iXhRL^M?fHLMXfa.I8X]lhb
%<>%8l7.ER]U4hO1(2fp\7GMQ0$:Eo]NaO(=pPQRa$UV`am9o0:#<l<6b17K/Mla0rnIp4GTET--GSLYe6Q,Nj"AR)o`i&=e:6o9V
%dGoDaPa#PU.<7.sQrtF8(;o,ucE[gWlE!X!%'fO[Ok+EfG=-&b-OTW")6.12:[!ZLUSEAT$%@*9V'nVM_5)SA@NmmF]%OV:V8=@d
%R!hZLfZ/K"\Z.X%!Zs-'B>70OF:(;@,ZbW;+p6:J-H_r/"+:gidPXhnhj#pUnLl?6,tX-MJ0QJf*1J,I:-sgN,<C9=%h(^EdFRYL
%Xb*atV"KdJS@1`ZXJoJ0M(e>6Y=nC'W-pCTF<T>r,J7B;H'4/j6('.Rd_^_.4$/#F'L!!pEIa+cW$rfZ-ZHo_j-$A4$Qh^X/kqAV
%B'TG&%GGFH0^5F:Yg820G>rt3L)37tf^uL\d*L0@;@l8T;(LmW'mDN0i@6[T9q$n7W"".u8%l%B2KBQtTee!^<u/4BOE1)L</+GH
%H4/;\2"Z53b]8iaW%-`]#!&'t?\XsZ_8ld)["'H/A]P9F7EglK^J>^"?rA\LfGb;O(eoEa!7_@Gf`:?cO(CkkanYj2$@788o4_^'
%%(+P>BaMNCR;Q>?1EepdQ3Hnt`\?hj0,;(Oai11Ap;&eeVH>O?NA6o^*;Vd';$V[$..Qmt*Id2ts'>G!k#KU7Ljs-2m'8u+%0oV^
%3AD\L3)MTK$4ZAkR)o3n@r(9d.bDuLm]i6'05Y`.H]uU[a6\u2%19Bt2Caof_>`kpce:g"qIMRQN]=WA$(N0u!"YR-?h+Rm9Nf0)
%pBlQ15qkgq.g%[>CmunUkO\LB6c&Rt>t`1)(%h\`6QLrMV5MH)"PoG<9IYYHLR3H"Ul6u'3NcsBTDpbr040(sf_Of/4A8&g="=m3
%JG<JCR%n>7"Z="4p@jRT^JD#V/b;?UhKJYeL>TTHl$KnSm"m=U\Df?%(ggo\)N(mB6aU[$-k).H6YjRB!QS5M%a.7/R7>@JZkN5f
%cLI91dmgeNJ(s,>kn_Pj=)rUT4D#&*d@4ur_3rT:/Z6LH_LX/s'&%U-D#;ap($K,(dHWRh8*-(mKdD$S)'IqU+7m"bG<RoaSr>h)
%F9RjcE#=mVhfeD&&DWEW?[1#DV6]iQJbB[WM+q`DFTGFQ(Gl:1fbhOJ80"]ff>L#S0&VWpFH:Fe-YNYK`M][*m?l-?lmfJ&%/1*7
%jCXRb4?[+H[tPY$)"P#$d9Tg+J]>.A9n<!_e0q!ZE>U'Xa9)cb].);i@t'qbX_<aQ^f^@kEndB,1VV_mBc8Y^N]<C#@S1l*-]Ad`
%+Pi<pR#O*\V;_c5Z"pLIZBsr/ndE7#R#_T6"jk+8N'*h*"b8AKLAo4X!T%VCH]=6ZM1kp"Cl.dRS?jr$/JZ6"kDJIqbrWU,CVZV/
%5dQq"l%=u8#gP!^H4Xcfq07#k[&^]G*L?*sqIhrGV*YCae07H@3JFV543*BBlGoFk?2DUX.+W58!EO4Hh8mA`6H/WhYa.rKP.XWd
%#flHq^1,mj-)SkN.1]IN9[PHq'8/k65!9E'CIa-']NGEP0t%:j_$b/OES5/QND&3bSuO-X\A-quEoI$Alp15SHMdc<j-"J-J,,Lr
%V_Q2_4oaX,:7oNCHiEr0T>LXI@k8,Z?[`Im/qH*D:9sU/+"3cT]e>fFro$dF/hFR&/B6'SJ'&I)l^e9k)WM5nXP+]Ib).*>])N-R
%n_hnfkjsn+,6!aNY5$0PkDSgKUgt;uV,"KuLnhaiMgp/`=9\Oe8<HPqbnM2Z"!$)jQq4!,%-OF\7]C5k[Eul/7<ARi14*JBAkfiE
%?L]OhU'J[a]u$K]P25U/4`&-LiFN_e<16:5Z@OYqfS_]Qi[HQG[(Xe\?-m/7CTP$9&+kZ<h\l$9Ek7nL1FfpO5;qL8j5cChV/COs
%&*B/L_-3'fN=-V4p9c`5e0Z*O%%`SWNeXfKP]7%$,mi4tLY9h'bJ@p[p?n!57K1,FqKGnsnY7n<[tGsRR<D&0c&&UmZ85PLb/=J<
%L?tG13!E+K_;[7#+^Ah0E'IFV6MX.Qb0e-VZ#o'%@^1#Ikd7X_hb/_AVno>I2<VebnAcLpK+Ip>LGX+X(Y6acPOJV$$TD*A7o%er
%g08A8=I892f@2_;(KNZ*:G4D`6JF1ZWMGT?"57D;^]\k4FriE.V%l@Lm0b<"?LEp[3mE(&4IFFj7aUJeY2(B?:SMMG\qXU%ZHm6H
%Y@p]je=L@**r1u;;<E_/dVS4OR9I.c3VlT8WEb$>gXB+&5mgFT-9#98">=[,:m(k.'RCfTL'[6A.$R1#Q]qp7)q95$(XpG@V7T2W
%%<fbm.VT=EF1'4X!8/jgCkHW;qbkVI-t(jId5Hja;7Z</^)lgq?k@,N:g\o#cD?*o&kS&"=ld=al]J?ehgFL?`YoGZcT/`Sbiu6G
%;>BM+F1^5!nq@pkDo(^sd;>aK,R%6r"'*X*-41n$60R2!fjC,+d=mK9c!tg)Q,tR"JQT2D_O5au&TZH@"Jj6;O3KG=m,Q8+_[/K]
%JR>p1fW<DgL9/Tgk*[J#;n/<Mb\,kNU!64bcQ:ji[!HO"#!2.D0FH`R&LhkFUV_[N'kP08fCka(nNk7h(YCO44[7/Vi.o)^IC;mH
%Xt)Z*,<h\@)BX820'Ad0$GFETEUlc#dbl;jfrC_c"C_Kj-lO=uN.@(sFnt_FoGBh@K9;A?Sa#i]*YbA/ouNPje4Og61P:r8m3:pJ
%7='c"pL>KuL"pK+6Dp;ZNol3uN^3,_9&rX?",qqj7_:^)O;X>#`q"1\-M^c'/i0u3nP.UbP_N@DX93gc7:?sEmZ7Mg>6n&]RQp_3
%0/,+0An!m:BidN^P*kfG-/P%YO\M1FlkQJkR>.sYB<:m?(gECAHNZ)-73&j.U_JdR.Fb2Q_.QAk#G$$pUf#CRBK)"O/ff;UOY5D6
%k-oWbL\aN.LHQLm+5^AY(u3nmN),Y,?U)7S%9V#pkhSpA^gY<&:V<)]D*]K\f:'UQ5?(W#k/7\G_n6_oNf!6S)Vum_=C!k]4&CmQ
%O3umZPL(2LR#DNfMFg@L_Q['F1h>C>b*HoFK+i$Y$BAQl_-+t1cAFQ\OaDnHi)?o9rQD%k:loE/6(u[h47?Kt%L`6!qK]Ddeib!N
%19S@&\;=@k^Adn/X&&Wcb7Y(e?Ya+G.&AH&BCAQKG54LBPB"]pZ"BhUM9632H8A,,-PEm.,=u.c#\]r0!&7=@8G<i(Dl'5_hsJ>s
%rZpKgD<KJ1JJL,j+r4PqV8!cZM$ZXiWO%;qnZ;frQjX8#VIh;u7#l`?9Hk--;VE,hnAmN.I=r?[=ZpNt^eDXgbU:YgEB'U]%?]Da
%clm((_j$1=35"sM(f<F'pgTa_[8f?1%/.F@>Z@T;T,;cOOZshT\1(:,f7n2o3&!QGj<m\lE'u&`7jKV#p8^0oO(s0R'3cHu/oNi#
%jEEkao%c"S[Q1isY2nr:>?n(mX?&p*a!SsZM"-:G>%.E;6<8gbMuais15F1r.1,Y!O!;KePbHfO;b^6*c9umXVM6>gY.cV3cZ\Lp
%fFOFV(N+7bkUBa6p2IY+lt6eK@ZM"EN2`TYX^hWm)"gjcHBIo,r6X+d]+0bQfZqY;(r#Slo>`u#-SWZ(@g9Gh,5JZ#kD]gU$5A43
%%k$9WWg+t?TUq/-(h#;g4<'eQBR,J$3P1_ROqCY.6g8/OOO]V`)b*iQn!4]?mUYko0F[Tpp\YcT/Lsg$+G&AD;jio#!HmS2d]7ke
%^8$GHg#`:\dPH4fF7a:u?`ieT@uCK]$kc"(mS2dt-]iG'c]'S&^EQjt6Za>FXSX<^N=PK'R)#nsU-.fWA.utUrer<d/Eema`<+Nl
%18bHRUol7FU*5*)76knqKnB_R![XVb7/9\YFU0A?BLk?:62l%doC2[Mn@1l2f\Ef9DSqlT%@9A#A^E_Q97.pB.aYRdgoar>3(,D5
%CJG(t5AV@$*4Cl+<S:F2UT`U*Hl#"h[Lq+'L$mSNYL]j+o"Rn"Ke^_7Z'mB.>n9Eb%C=TC0d/-'3=Cf!_NtFONRQpp`nGebV3`Jc
%LKAqr?lZ;*LXkGNc<gLTg$u6_^n/H?r/p*"00\$InRZ'G>3!f'92d#Ae))k]4S5_o;K:t3[S<2aQ(,^jgo0pja\$.LO(`gAl@j*G
%45`s<^V`0=Xu*kqM/iI7OO$%=?7mlQ*n@LbV(_pGElggZ&7BXb@G>RtM2%"nM%ei2TG[BlNRLp6A`WkfPnghk7Tu:2/"K]#mpDZ1
%4$1,VB)o!#T==3`b%C\Eg]'E$Vn^4K\"33rr;5L3)h8'U?&B+FP^=5FPJXYPVgdFf'jgMBS%XSYrNX.fXjl+m(=:J)8ZQ:3mK4^M
%$F4V7-l-.e?AG.C])o\)(tfGl`"0k0jY:N;qV]L,'Rd3DNnA_d*b3D1d:H[Dp9f5ZHLqk9ckd]^l''oTja*iRm(#<5#^.5Z0tg5n
%?M=ub;PE%45"o+dLC/j!5LR:H4YGDI@R51doK/<RL]7kdr\+4^08q9^q?L)`iYg&qnNWlNo"`L%rj')bnE(J`a)+!2T>+oWL-21p
%c`IT/C!4WU0lm\BS6=4?o3dA'L:R);-BEmi*l3?/%J-&9O`?&7b@=H5Ke=(0hSFV`OE%i2ORO\1XpV@Or6:_8,&-C5`c.VEG?"pd
%kusM@:&#nRgDVXTKEti*EF3Ads!jZfr&=A#WrLiR/NiEBs6.gJW-;e38f+):E`&&SPX%&#^$5DF<:!UmXjmV0dq=r0HE1!&0&4Yd
%mt0qZ_j'Kc<[72FT+qr'U!i</H@^AcnfQ+m[bDT4M:Lu.S,WKYZG;!@/krgjR@u>Np03/-07DhY2>[Z]0SA*N"m\'>"o>(rg'^SS
%mgWrt0g"52e/P=;h!s6of0*tGr^bHjm2%q?q8utoE(>7;Kkkr+S>!YnD&sFX$F&QYbZGOo0ta\^[rZfA)I0_IaWKP\YCPZOrHjh&
%<PQ*<HaE>'n;rr2@([AUplR1aalGUNgJ'r[T@i3+NUR%^am:2l@cB<(S$d`&)]-"$rZ_k,L/mklofig'h-TE>h9H#aki5?i9$G>2
%If]09*sMY)!e5q+=kN*8lCC+&0)e.&PPKZ2+le,0E8OjdK]S3nF!&Wrk'!e8D=#2EfU[r,9)#u0>9bf,cFUbL2nnVeL.6_S%_HAU
%Il:SRgA?$$\!;:WPhl8C$f\?R]UiI$W"#cH4),Mu$X2Z3QWh''E2#RNG+n)lMfh>A(ct*mH/*0na3X7@B*a*_3Hgk)7amAVr7BQr
%^CL2oZb#D"k<G+mDkb*T=Dri#Mg!DGGk1lZnh8+K;`l(3b10hm]WcTX5OAAHXLHKq1Zds'drOOn0YBs6!XSYKjMu7MTHf2bF51I'
%*-WS2Gs(lnS/G_^eY+S=FO094LDI_*f0R$d#N`Q;ZnMFEH.`ReCWF[d\bUTYrSM"NlG)%.]hq&.3'-=`#O'Sqq*?^r7_"3K:*fG5
%1LS(W4B3Ep#>R:a$;e?WFq#YlS%(,XSYF-Po-)YS&V`odiK_!7%)1>e<;p!Xk3#mq'FalBAgbJNOZ1EX->_^l3l]DVrSL0df1,MX
%;Ef(I2G)H_"[;Mbn4jr2r*5PFm3`3q=_$jYTE"hqn>tJ2rB\_2CB@:"&5UIaKt!:iYE0cS$$,r>,5bn@?O5ir"\!ToQ9"jT<<$n2
%Ha5g*5C<6VZL3G^_&KdHIp?SsN:%dpaE&S"c+JtO39L-cZfbV@%);C[Mlkq5Cql0On"4DJH`;3kn"!bhihFpGW7OHU)bc/'LC3_?
%!.R*/=a9[rmJTMhf=9Vm(W5s\.CqA9=.0!dj1ijq!U'`a?K2/h\^<H%Bu>FM@1VP9JoaYH58g0\90-BSj.d],8c@B6-1M+Cl5X#%
%=]g/nn8/u'@'Pe&&h7.o[tSY""=E$5b8VhK=?p;G&r`p2$s<VFP%552#Sfp)K.fQN`>%3q0&mSc>*'/IW'FT>qbhPW&&$HYpKuO!
%XYa+>H\Ced>]$&74nW0(nt/ufE&)C$j1fbe^#WZfGjZe;M>S09Ge295G+3GA5^`Ibr#G@Lr9A=#l8&WE>Q+/:rD3Fc?g7C)6id8'
%h?l[LU;6oU!N,D),^ct%bS,W6k#dC17T>c[hh&o-?\8;V]/BWeXjMDkPW*39rf=g$K>2%Vli28P0)p9C3)r+;rY?RSDeO+hOIsWl
%'BVt->P(6.%p<BT_A"sUArI'3^0nn]I".!^onMu`q:Eaf?QK6f*kHT`@BqiY@f5]!C-Ot1rLuIMPVltF>%d$ce;V)j;7-5ToP&e.
%Q%*:f/=`VJ#C+oE[f_L8?gA\DU<0SK9Ac_XRtF"j\$:!.rOQW*A<V%_H:STlqbMlMrXZdBhbIZ$P\/dBZj'8!kA)>7L8+s:591Qh
%P$hV*oQ^Q3g0H?JG+489K"qY(Ht6N?0_X#T]>&-i0l"[U!SXsg'0g67l[#bfm.d/U6s.t@`thRR,k66S+&r6@Vu>XX)9g*!N(bFS
%48^5UT@63\rmFWW2u!qL&LbDa9`JbuA"`b2rrd+.M1eeV,S:)7Oce_9Q6lt'#L#D*Si>W6=UMn(k##2JU'g3:.OgT`6Ce05J?Pr>
%GToJSf*gV3pHh"Lkta8[/m*Xp*eYehnD;r[N9R+h=(D^a/!E!9.%rsDGXQO>^-R-gb%SRKImA^XH*R/gTl#2]o\/YnFK]AV`,H8)
%b3,22g>MOI&jmCY`ng%2OLRnV&dMnNfeK=re=^4i`]/2_#o.+p'>9e.7g""*i#ed..T1^hNQ\,lAh,o6`ru4>m&Ii(N'f[//?/&E
%U@A0g]a1ik0Ss1:"@n`KI2p/U(jIMR2[YL2BS.`7$&Y,5Nnga(,76IKXSeM-;$R0oBB"`S)*Ig^`Jj@KAE8[h'Wo4:YUBp!`sFBH
%UdJT_.o$ce@mtrAjHSRn;Gso?9R(6u7kupgOIFGuZRW%E@7jNh`FL?S8>CH(lW(1\KU3Q:G;H<1pk9`H()PtMR.N@G6UX%/Kp^C-
%!>lFB8.uib-QR6i=#AKjNcO.`#X=m.9E_`$Go;.`;9WYrgo:-e>/(i6UdDgh+YmQH==FIgi<D$=%<Hf1qm'Qu]K#@00VaO^8C0[n
%.AKN[U/aHk>D!NoJ05,S%3r*=B,M]E%MUZ6j4^;&aXrO[+uj:N6L>Xp0as0ME2Vp9e%+QGL!,>5'_mM]!Aa`sdNSb3M1"j@I1VJF
%&.@FCU([NVPTI#4T7N\'g1]]98),.\:h',p`)81$:k:\RLcUu$4K,"]+phd2+p]t!9?CY"Ta4;.$"L6Y4Sc5GPbGtbR+F<d#`s#a
%J8fr$d>!M/Zk<?>!!*<,YQ_[\Jb>;7]ZTb1D7r5qg`jeG7@95Wn1#E?FpEmhiJ%VI6(H_<G!XQ[Mf=&@i:-uo)Qg4$erpMh_5bch
%bV12iC_4OI,U?6Q4f"b3<I4?_*A!Bs/&EN'/c^Y>KT8l,)8](89%7U<(EnZr7>b&D9$A0(6r"JfnLTlc`I?le`h8P>LKZ1l'#Nh!
%-mJgO@-8[F-4HplZ!g"Q/;EGViuliDX<g8.8rl<6r59k'8AS/XRjpToJ/5*b!.6+Zi-PbbHnXiV"Ah*e#Q+RU*?K6k))l$Z%`ZE/
%lf_'%J0j2o=R(FVo/tBkO(@Zqa,P)T7+Fb>5YAT_EA<^D*QL%=Ug^)iO_+Iq=%P3jlsV(3#=rMq7$R7F,rB5c7mmtEF*n/^O)QS*
%PCO.bJg+_0KR86#;Xn4Xe-/FF=Jd;^WL,`NCb(MZLB3^HVYqVJ9Egc'1>BsBSDYU%Q!ot.Tp!\%Q>[3<)?AKQ192gr?BJ[t8hGs7
%@d*FqF\)bXW%)asMEZgS)9b>\XKdJHMOcR604HNP@Zp0obR&lQJXjS:N$;l*&I:21<#Q(;>6FLn+I-i`_@^(h*8:rs0NQ,j*N<2r
%ZW9;,(A>@o[6k?.-I)GqdrX:ll&\:3N9<p>drrQDknd[8N]Ts-BlM&dj1`X;q+]]"W"XpE?C.g2Vq!dZcr6M/Ps]-[npofflXDF9
%`;r0@aaVP8q2cK[;rN,bP92KK=PtCDb_S!QR:)"/`.>`_8d*Nu(`S(gUVJ'AUH^_5N6!.SlS=oZ8O@#XI%au!Ar3THQp-12l$o7%
%LFS!IhP4"mDR>9lTP."sT!0>sLm,Z,BmIk'CA8#qDFDEt3dd0#Q,%<0[Et9q)qUdg6o(`_!Tcm_q9Ara8T"AA\QI!i5lQPW^6+C#
%3r;8UBe05>ieDr%@nYgCA.l_n.J6<.LhM?a@qL352De'4:d$!QJP8h/Z/F#E=Ias,8%_f1`<7qkJ0eke2BoW7i?-jJ&^*_n/>ABD
%J7p[E6@l^N6pG?rc/I=Tf-*cuOp6I')ZEG?TK(G3/qKRr#ld0;`o>hU@kt6$p]mu1"Cq`\C<N]T#0IT`O]&NiG!FmrQM]kFf:.5b
%W.]EFn8F2Ff=IT\bYreh>@s*_buKt,]@Oh;'i$AO:@Lmte>!=#:aDd1N!;.fcoTj>HAl9:R/5Z&3sqiN>Z'1N!*s%o!X-7@`P;rr
%idR7ZA[OL(M'PcS;E.=BHVI$W,8SisR)iAuNhr_oXIOPfiZprGiPsV$VnOkRn[`%EL@&#kOE1f,Ob^gb@X]8Em.]8QkLl&NBL_rH
%]TOA\30DNZMF7>l0`+?6$q97$7^INgfgYb89j4s*n;(!>G??q`;QbQYh(IC]bJH@I>@)'u;XOJ2aYdlnO7GG?S`bGRK,X5L]m#iZ
%XEAlmm6r[&(6:T_!tb%@%5QCqbq;5FI!)B.cYt?b$^D#0[^]3%2D3:DSO'YITX&\JY$k"4k20u4g?7;0js>L`.a7hNXPJF;oC]qm
%f/gDYp^CL;N';aO0K1g]VI/AZeNW=W?-OgB+7K2frs[>'AMa'Br@bq;Hi9eb4_D.kmr^`UgDU%<^SE)\Njp?J"kRh`57(;[DPoK(
%PhOs5C%H9n0Y+?-^Vg<e>+J#_YaB$dJ2;Ps_/n>T'H>;?^Ib6rH(]u85a`)r/PHp>'kL'[df4>U\3<hnr-`n"J:2nVKZAL!0)C4g
%fe:/?r_aG9m+:c*'kJf?iUiN6GL-dMkZ;!7IhjL-O8enXnGD*nPP6e#m!m747kkd)om("!5PF?%r"ieqo27%h5cq3Ef:Q"/ld&pK
%?Vr5Vb[YbV[f0q\;F'[#>I-JBM<tUdke?H,m@?*$Z^.ZdkIUX2)g!6:QgX45$eFneRclDN/MM"=g>hBe^Pl&VgiBTFd;(S^(^0\N
%BGDZVIYi3;2$`eA:q(=M1!*3Ek0B[nR7r<URGQHS,GE<JB(HRRnTB$E&'p]"Xc'O&DR85;?e@V$5>>ijLk9j(J8TLL:3"a8-9CU=
%H;/csO>./"ak2foH2S^Doil&Fm;*q_G<4BQhA[GVlb12&UYE6Qcc2']nujFel\C85;k6dcJp^f&]K6sJX1);na<JY7%aS?JgZGfY
%_+K#&1eX<ld`%k`fWFlQc(<*V#FdDL5L"&`6)[]Mr*Jj\V;7*]8mf0eJg_V78"jKBj3.>BCu6b`m57Dl6tbbGUX4VQXq-sTBTr>u
%T$sU"o.]U=B)fg<SIRB,.$H#<m;s;Fh2=SX\C\DR[s_8<)udgqi#I&J0u9-*8N/.Uh'dX/Go\<<nL#l^FU4r@c`)JD9[Sbs69Eq)
%jM4&,deg^\fPgb!:foeq%I+2#G&-#o+G>4!;+fTGGE+?Aa3DIrpY:BTaqT=9$:g[)HN_:_hj^!)Y]*EWf/nt3<T(4@_""d9SRu:1
%M]9##EF&J6OMhaZN6oP:R.WJ1Q8WLpmC(cklXm=2-OG:9@f/^-F\WZUgWb5`JKD^!r?9<Ocs,Xb;n]iB,9RBKS769nki_@N]"^1N
%kNJmgKBq0"j:89a]LgFgZ,FQsjHXN\(o46T6=4d%k;nZ-'R@g7f5,BT#6:[hDPQ&X*nmM%j7NE0)^*PpD,t_+Z[^k&,8d="bPo\\
%OCSNFIic/WmK1i'2U=&1r>]fi5,V[u^Wuk)^O)RNitD>G%:L=[a[h57<\aY,XR5?h?4<H,p3^EPR.C]DQ?tX!$ngkST0m]Z)0Zsi
%l`/LHk=5oZ%_(r0HVajBJ=LaqRc.R0<P@c22^P,ZN`c/\YKj9fY^b@f56.G(aMP4\H9a*rI^;\d7&F1`j*1GP([HBZ(VJg3+bo#q
%FUpAl8)6KQ75GpIc@,&!V4'iNRhBb8e_s-HrRP@ESTfin61.XUggrFb?*;b/BS8r\:R3;*B,5.gYF-2nF1aI[@Cc9HH^%Fs**SId
%/-BsFPJ=uY]3+u]^*<)&ns(&Cli]S4FrjFag"g\`8_]e*_8J&T_)Dl[mXK)@nRkc#m76C>r4H*A?h=Ja_G5l62t!&OU5R/YDB/)6
%o`2q(-mk;Sbh:E#e`IJ1o!!*&B;+#]!S)NVSm_*3:/6!T*PF2?ONW"4(,6:ie;L]>/,;_b=ed4LHc8Z=p[N%a*>Z9#j5T-RgJ707
%,EoN\\/T!op7kpHnb5VuVdAQR`h*pKKf_.QrJ;YN:4lS/e_eCkkOI5>Z1$Ru:$?\L;Z*OiNF)@,_RbdhKAp<$Il_($oe-gQhUK'W
%qSdVa[2[`ZTS8%[C!HTcVg1sSK.$D.F?9T9,bEMb/Pt$J#GWh^W+5k'%Ka),@BO+PTo/,B5\G=W[bF$lMg9Go*%7HnWmDD[%m@Me
%NUBe0qNE$e4Us-Bj6]2U?:!&51]TKf3fT!?JU5j.*H0e1k]S7>DOb:KaNU^E?Es!sGl[CIoXD`Ta-jV"06TNC/Gq+RfbFp7hWl5j
%4CuY)Z[eLmCiq':1,?Oqf&3WiQHG#34dH*M^1,M>FER5Zkj"G0"-,R:aA9B1PcOJX<WG:D!9&;h.l&EjFsGORN(G`Z0s%Zd5G*O;
%gQ%JB/?u3%eH%e&LapWt#ZWVb3MA)GeGte*\B-H1_`6Yq^*)i@K,PAqitmW2ILB-8X8;KEDb%"le``YcW;$.P5ao"Xma2X9gnPJ9
%nabOhmeQLGH[,eRWp]4:G<VBeqk)DcVu<<S:XM70q%TC+/"`P_DWP@3=)OcLr?bY7A3s(dA<s=[]q]IX,/o`s4$uKc^B-hh9Jm&B
%,)AY@36'hpiCp&6O6_*S'b`rs`B7rjC6jqLaPNhqUe%*Da,42h2V.$SpErX04J'5VNO(hs1=*=?QS[Q'.;8ln;78$gDB1XI$dZBh
%^hYP9QKUVJOq!R3K#Z$e+1.S-61!FR3IY6"DYn!unV"X>LF=8!S`s3q5+1)5=6?o)cgdM*9SM%8E5\gQOme]9oOPRkHY5orZ?=.b
%F#6%r<pETBV5p_piI59:K#;38Fkk*EqJdF.pXL89S%OSf;U;Gm19k?&cYCR(B26QsE1&dXV_7@Q6"#IAf6;[RQ0=11AZL/SG]Ac%
%knc,,/m"J11EV8-17bSu3GnN,3be5HHJ^)8aS'BLa9P)Jg$G4E0L@f.(%5EGp)NOD4E.K/p4l?,Y<jT5`md[mHrgI4::9eLY@B9Z
%,O'!5LN"06UXhgtU&0"gp#+(i"',[Lmr[;9Dr4;G/NU=%"$=^AI*[4D61q*AU1%TX8`*f/j##Y#I4$ehLD):%``doE\E^V8G(JCS
%n(%H>UmckJ5]M`O?8Ake'H\lF,iU.k`6psGpG!`#r7BD'+c]VL`m6fnaa*-K(-sS+ng2laoJ_ur)H/k;FUk;N219]aXJc#CABEfK
%YFfr!h$I#8=+&^]l#k=@j#9,%D0@"B[_`r1?0Vmukk7c\;lMuf+W[+s_PXLqp[2&(rhWui:\9UVceP(1WR:#Qe-Fb$5F^Lp]A@qs
%XA3dFDi>Vh]hN(9qpfNW;OD)lHCDN[";tO'_[7mdF1rQ22(/9V*>>nBPlAlXH=m0[L+h&'blT<O"fmk'?tTRflhndpZW$)>J&a;0
%SH:G'+arNa.S>:Z]oRZMFd]9f+4<t:]^!t]n8Fr6b74A^pS)U:]XRsCU</n!AalA5Qs$WCiU7,ArQc3d@R!*_N53<'MZYi*Kbds4
%eI1b*J+k;p<7K7?5u'.-l<cACE5A$7.]J<i?p(cd%kn?LbX2%P>u7S/\EKGl7^(h5=@.OmOW2!bq%_JNlb22.oeiqg"ZJ'LM"Zsp
%]M_PbX!eGN@07Bimoio>j=OUW*HC=ep'138+[3l7Al4u05G.9YF^G.:Oj^q8Fn\Z9(!2%N=Bu*an]^k[XlA&^?q<t&^7*",CESYR
%Ljn/pr\;[7n.b2@k5NKAfg2OmC/=JR\Z^CJgk;_bF;K0<d)nfL>Wm<],qed0]'fI/f%IBUn+9?JC2MCbH1<I.">KWWpnUQrM:QEZ
%khR]>iI`SV3)mB/kt`ZSp;BAl@.3(T7:s"bfL98=@Q>Q3L/r@U3\mbgcNK\2nJ.aH3TlTs+>1c?K+$C/@n%hp!@li9l:&GJO@%qm
%f&rE(YL(FL5fF\'UIP2grV,G1&?@CUgX8o/a?mH!XOkm,ATKZY<NojA.5g2"nB$Uc+(gksX?9Ub^Ra+WpKu.2=*s7G-]?$9>?eL>
%F#+=VXa77%f=]g>1NsU9?`cPA(-YmVrqPF)C@@l/e^iffpmqc/4$h5sI]FO9"a=%74r5<C0$g*_=8PeT!_fr3[!f"<H>O,6`u?\@
%=-phe?DY(#\5=gn*up?c[=.f[-B+t4H]-;Kog/9*VfMQ]I]deDh<r1@#:Hj=c(0br28&g`r2oqU%89\`$FUGaNcm?RNhY,Y5C>$L
%=,O17T/GAAn^HdoC$jC7@_[.G>FiBM;4C]Q4G%8Q?F?sZ`MuG#hF-K!CA[DX;>Fa!3JlUN*(7NtY;X>mpXS@Q&)Qe@YipPtoC:ur
%r,hscFn9SD<d?n.G.4h;J#C2BG[!DFJ8(0b1UE(KL42-]3=3GO/XPn)qm5DIF'iQ].h>t:.a<lAO'ch]3E^)RlDODUCNf)Yqh1j_
%_*U<M[I/KLCjk/$/@Y(2Gqe-FrHM2nhRie.2t1d/C$S1'1hQ"FVq"\Cn_e5,jk8'KFS9^N'h&N/,?="d2T>%IU@:N.Wa#GR!4h;Z
%1O>gJ_o5YfTali/Sup5\cS`o5B]k?Kn8A-[C1VJ^cC;5P6t9!<lK/=mkAaJcI\'hoIJ@5J*o-QZj$)ndK.T5EO7(r2Hn]K_b79-h
%EV]7#RC<IuqJ\M-TC+hB0%?6Vf5AjIn)6)-s6uFGTe8#nE,^.[UgI^Uf9Yf"bAYt'ErX;;g/f=i^6>%:_/FtZa,ej7AG+(7MB1p*
%b4=!>\*'CJ2#W;?]GG/HVL`(8/\cs7kn:qYatEC&L=E)=Q)e6tgn7q8$-dhgX\mfUI[dG\/Nj!G<j+`t>;c_i?7p.q^H=.9T/6bK
%S\'koV1#<S"\R1?GB_u?_tRqb^HT3t:h&M1@I*+*FL8P`lts7"He5A@mB%BA87C<M_qE(SQJV*[iQ*^tg(uL@\fAH?Wibu@-a1D+
%B5aBg.E/mK1N7r,k%;fmjRY&^o39OmhLUOp(PdTVQ=a2NAnol)-jNt&&cPoD>!1/AF3n2ug)o*&m;EFd7\MhaRMjJadsp,aKl-_.
%e%QW&V.!2+lmC!2bl.-gPnUM$IdJ7[IT11XH?2AnB4]2gKH]?kZ+XK?Z6]e>QKQ$6OCXt!X./"@]&a!@Wq"s?Z_sW9T?GPqQ(tH@
%&5NfHCR)fDGJm(nSATZ`D-#MhK:B^Nb5:bLrgf=J7DLaaNol8bqWY[?bk5uoR>hQ6(>j4(f/qck!C+g<f$A7V,g#CNpj<>o9:PnJ
%;5Mf]).K0.+*Q__4.@2R^6Y4GpWnAeG98#l4e#a1HGAQR4oP^L9u13*D*M2GHoX;>m=!fj0!rLMCHTD[K+1c5J(?bhID*BuYH>bs
%hnh4.cXpa#$p4d^7*TVOp>t88'Dm(E2-=YDgF_ERbB*-DXI#[-\,)rZnO8]9><>s^E4<21pZ)E0&_T!76_$3l@D;\VH1"GnD/"M"
%r`ho2M;[<$m6PCJK0Pj3fsTFM2k5DDFME-$;U(.Cn:*k@YT;:iWa!/,?Um>QqdeOtT17A+rLU!+4aalNIW'Wb$u-kc(&kTK_X.&l
%<bd"A!_P]T%UEDR!uuWMq((lFZ*\kI>&#jMH+5asG8+*$cgK,(L,HTQcs+*sm=%)i!1-bgiLe72re!U>/%M8rr+kCK[]S]GC7&]^
%pCVWB?WJZU9DW@X54Y?CIPq.$V2#$:i]gGp,t`ENg0/AHlBN6CVQ#T9OY/ls@\r@U_eZ:!.!D&bhs"XcX?G1TUK.4K4(Fp_\nor/
%JrU!Q%U"(?qg9,?XC0dT3_%58?M/hrR0*MCoXQ'?PhAe)ZmM@4oS5/C&pB`90\/D"._b;T#?;fh]W^tZZJTV<BG#D+J"T0@RGq?4
%>Q1UfT/H3j:GX%TY/ZIggqH[6)8TRLk#-FYbf`#&A9PY1)-ldo=fGsDH=WrA,Q>fG0smJ)&8FGTcV!6"g9X?o;B%c&#%,?QE\/,(
%1(8L,CrOj-j(9lq!^,o#i1:Qq#jRK<1ct[]J,5Rop=u!!J;f08V(;sQr9Q*7:O@O8[/B*gT0,-u?a(XmCi@$im1&LNQM)s!h9O3)
%/u\UE)>!iDm0qN2d#POM::g0nYdO2<Jt2j<[8EonJOWs0"^0X/)='X8@!t-hRg5V%4a`[F<;*dRB!X6Hg[>lWKCuesDan<GW0R)p
%U$'ZFP"&t)TX?`aEr>lVDG.g:e^k=DOP*SDgY8?8<W-569bT+lhl`7:lGBUe`_>Pjl05gn:@>=YO/DYl@rHL85.Y%UR_>J;7NiVA
%W-8\"[pV7/@8f?LXu7B(D<LV]d6M<[?J5?bg=^lKZ$HD)lBhV)7ODsjVW"qV`MNI&h(ic:KCe*GfdEuhhjp2Tf7-97-*>X2\iACb
%kThf2K=1H/pQ"@ejX4'Z/5Y//rjl@8rh/CKds1!1,:[QUlFLHbA$t/rItJ*sBl-RpZ++EZ)2R_Z+?I'^"L&a7aK&%QL'J.ke(E'V
%9t@^Fp9EiSRGq`ZCg--4LPfK.kgcTne*>?(rn]tWk<mo8%rPXogE.csPZ&HaDn_nkD)()$]i47"aBK4^k=]/t1Ik6!V-nTK]mP)!
%o<QgJZ_4<>cTcfo=Ro@<n!9QZH$^@KBU3UN%<n!rLWMGEAgLh(e4S8gVt42@+p?=Q/+Y21,cAnb'k0)I%VKQa^H>8kjm@8iA!W!a
%bjgJB_k$K6O`BXq=PT)21IL3"k!j*$=>O^.:0\,iX<#<?cb\1HI7&HhHF/<S%2KK#g&\EQYsh?&&q0.;X%Q7Gh$0A3jH`::I'AAI
%O;Fb,ott]uBe)?WqW_+uKJIaqiPWg^Kku>AG5mBui,P>>Be_PF8b/2+YbA]D4B_MQdr\ntJto-IBtXokn*ZHIS<l1WiC,a<F0GG3
%GWupoM155)8sZ'oq`jF/j7Vro.,'1#%(8'30*/kHZV(O]-P9(4rj4Ddht5DDep)@rRDTLPq>U"]jlGI(`S&;t?bYS*00Ut[5+B5I
%qfq9P-,i;8K[8aY\T05!"&.aG,dQ.:p%!C=h(4IVldggr^gP>=X23VUdTY]'qgCMfjBF::eNP(W4fFWPD?@R[J&uk1+AM+7jje:Y
%b$ZM9,R_qA5F-8!Q1GKGi_<"SY2@`rdAA2L%Eu0BV;`5SS@!(fUM7e/]+So=j##U3+P&&=gVZDHCp[P^.;kj7WgnI8!6(F??Ur-W
%m%e/SqtT!F8+(0pq=sh)Y_(n>X5BO+RdM^K>a46#oAcRtGWgi'Y`IrE]BW8`Q=c5]D"[Y@k(iV@0<j"C\*=2eAuC^7o)Rq,TA<WF
%(s9LD=DiM6:ti+cfW,d3&*I"1T:`Pi&XHlJ4(7Srm(Pp;q8:okpXqta=_L#lLU(eb2">3bFS<hEnp^Qg#d/e]0R,s^o%\C?G6(A1
%eCX!7Vqn2lf@+aG3ehoWh/(<LKXQ;;o`I;U>ikaV2@jQWbjBXnl2:M6_*W+".`]BBqpscuj/(>\_>aE%H1f1]B5R\Jh7_O/483r7
%?Zo$DFE/I^?iKT/;`M\U2L8%U@(\@&DFZ?mO[H$M&'H?,4L<b2:G,6m+'"BEo8ClbTii1#I-Z(FiObW]-ro9Rs'^7tjluBSlJYl$
%QVIuOS=)Z:X-N+f!HMKVF+8OUZ>e7ir7-eSbkr4$E;^Q6kMbUSmq&a,S4VO>S%hr[_jg8r&-\`mj2IeAe#/Q+_Ch>?qneL9l-eG#
%=8R"F7(Mntlf21/aaIHC\p8'Eft$jZ[bBWmroQ>PQJ%5V;PeO5Y-IW/\-@j>T?drkLqVeM3*CZXoW!kjI%F=Wm8/$cl^so,$RNLV
%Beus,g=)*ejnd]oRXA+]\b,#j7R=HfRESX>qE#NZ@#F:Eej"U4Fk0pMCWl$Q-6:7oBceno'b=B0PE2OuOE:(tBm5("HWD`-CKgeP
%G5G,cqRBL-?$u7W'tmJE=kYNO7hAJ]e*glHd%CkSl>/TZ?<aQiqAGNC]OI*G(]-;EPCEIt6^9$gj0?PX\IFI1*j;%#?1\Vm?f(+;
%q9Id0=0kq,C&djie(*R#kKcf)(7m.^*B_]8G'OO;iF*g^A'&d=K]^:F>,ClU)#fs'K)W.Bc8.IA7Xo<`428N2`3XP@9HKPgeR'_8
%8,6![LsmoYl/r'7a!^,f",D?:?THMdSa+)Do1.n\K<nU%n2Dj@#`RU=g?^&*Ph"RJTDA(3jj1!2mg]Qd_@QlOSpn@DG.-7Wb3U!K
%ZF\XI1F]iI.t3u?DeX.ZTiF7e^X8'aDs7^:k:AJTn!o>&)T4IsBUced*o4#"b/kmXiLY\==6cp<^ODQlSn_d.U3_4Mj#aJ>Af>Fo
%o5M5S4Pi+<,(ZTQ/(pk=4aZi;)!f1(T_=.`"BphK(<M!JW`S6Jo-7B5q>dnJ[pQ1?.nZsmIW=kVHF2QYVW6Z1aqHNq5qX^+g&!QZ
%,Z8OEll-f/CJoK+D4E!"op76iQHh*2TkjP%.+pc/'BM1(No6fKYBSq*G>:eGn>KOEm6%GP*?9K1)*8<"$>5M<+BsGaCQ19RnM%3O
%rOM[brU-FAW&G7DNY<8lG4!t24G6=LldepPfeiR(`J_p[Gl0$r/*SEOgU3HIlUf+'RR".oqu&@8#f-?)h`!'fPp\:lQt.k`k&6ge
%cAt5mkg*<h2c2)/.(?8%jj1Dug$HA!ru@9"o!>D79M/rj0tb&4/Id'+q7a4[E.5`L8ogb2cKmFKX3`Bcc/ZbZ3jnQL0J+Nl@IUhf
%df06Z2jojVl,eF"oaNM%7i,i8!ktabgTGrBgc7tAW8*);.W8u=^t+QRiU`%M5l:$3&Ii9#mhA#%h?>P(n[/##q`J"CQnMaJ'q!&)
%LWDMbCR]Mp.N3XQGBP(KTEH=mT@e'(ku"*`TsG54Ahfk1Tg1Yco&>XTM[3V[$Mr+_+&W.[hCAr#b4E%%CT2[OimI,QrqjY*1h<JV
%H5.O)be/>uY5E<Qp%^r?cJikZ\l4sLQhH"3<R.sQUUS9ZV0K[<^t\MWg<A.Gl\]q0ek[s(Z;ZBRb9h+5YI0hDOE.sM2;FPk%636_
%Y]P!7m+I;=c^_V.WXG4J4B^=m)"V#YHXKV;eS;/*X)5YZrBgr3oAXnM:lFp8bIs/3P+>=/i!Z^.k)G&#?@Gr/Rp-'(iqQ@u2\"WB
%4]lK)h#:3/kDQgM>;Hf7d+KtR[l_iTG^=UJ?GH@/3f]e22@qHX>CO)qYlP./BtdX%^"&mnJG]kgHIu*!XKZ$Zn%/1-I3,=WYb$c>
%]5QZT?Hk2hb1u2H(S[7tUMF`:n?B1D?.D3R?_2W=ol[f.0D=#TI6%=rk@BU0H2co:/$gemY2SDC-_p1I7Ss)-g:<-j4KWM7h-8-L
%'6i;'qd7reQKKka[`me#O-\?80-@@X>aj/RA"cr:.,hSr\!NcW5+&O>[i`@[c)@31ZR_jg%mI,?RgA(mnE;e#MKnlindKtnEYjtE
%N`B<S6NSjQq,DdRp$"PXaHSL76!Ks3BJQ?L@t!kFn6i%Zn*jluHr%q^G]%T!HE8S8WF8M/L2Bs%f4LYi]FUlQl-R%a$!qO9r0JhW
%k#e,-`;*H/gLkF?T?XAHGdD_^$L%?hE\SXhDm)%T2*WYBhfQV5(Y6=VX0'@Q]I)f>73=dio]#+)SP2_MRo^5eQ0#N%Gd7+Ve1D]/
%bT<_Sc5lN18VkoDnc%@))&h:Q?9<gSd%^P@qsq8h!?Fo#iuHsBo2kgM?kMSQnXDsuQ_=1<X$'S"<s/+0WG8tmFOW]SH]m9G+"3"R
%G5$_ZH#B;NpT)J5aqqI@^!65oUAY'WGUpRjg@pMU+S5%kY.dh8crt7ggc=sK=Nh]<00e:o$7a)!]4pTp\@,Gg;;'18V0)"!U\=O=
%fO:%ha?#s-q6Xh)06Y'\<31HaP%]EZ(u2)S/[*u9qg9kg<dPXj#M!#@bM2<[j%k55h#eR,\WXTe"$:jAL3E`INbm$q\,-Oq)R9i8
%eSiuM:!Ma;*8W9tlM$pIYu8",leCU/V)u.]A9Cg6PL[8e(5(bOSJ?RRnjn:s^<s,IH8l]BgO5"2g?S7a@:sFrIrbc^rhltBG2LlN
%KD0R_]3R*O:M2k>]rV.ij59ceZMZMf.]'!&E;)1YS\t0jD0hQG%Ato&%P]<S+5a^>4hs._GC8t@V(o1$1A-leWdNU>3[$K&DjacZ
%oZVk:9P03577dM13_?=gWj-^Di4&`UU##tCYcurW\AD-^0J5`aX3GBfZ,"&f5]6j/n--D@T,sj;rIT09W/gN)5CWLEMp23BL$EI'
%#eNPTC(l7hM=k?@Kh7.oKXu,WXg/cMR6YO5MMXrI_$!^t87Ri57S8@<SO>mYEtaM,N%-Z5q`gX-@YhFfTN)e>&/TF>MK,"#Cr(*[
%;U@*e,%*JdXXOT/_EnDiL"9'i&[s59Tq<k_3p)/n)aQ&:TVXr<QD+7T^c!C]XgI_;CrPCeM8E;!N09!$9iTVGd4D:7?kFTb%BQ0_
%L/Cgf+j=c,6r>)#8L7II:t+Qc^nQ-7]8El'-$Ft?MO7Vb0N?P2pBs]HL^ej6M_Wd8K\!@E!14$!.]30]*7.IpXH\aM<u;^40Ts/0
%A^OoQ7qgGl0STbp=M\q_FYpa(p^Cp@LV/NfN#4CV_()F9>@Ra[DKDjT!H'/V/7c"W7bj^?;0\)V@Xoe"XKaZ:Ce?'SG8S*E!in9]
%#SQAKeo3Z)^mPa"(JUX&<<9DB5'7JSZ1KA$KuF=:"47J!F(1'tT:,bG&dsAc_(rHTI]uDFe4<)D&t"VT<uHe);WDr@+S;$J+H*#<
%W-/B+(q(>p(f\%NC&e@hmH1^733oB4A5lb@E(a*2c6S7GiY@_(Z\>QhYD&D\P15#6$5SFoa.erOQ=l.g-KN(0J5dGL9#73SM)u#s
%-6R_u(u1HQMK*#@cQYKtKK!\NoIa%;84:PkLSUm_+;,^69]$H!VSQ4BNJK"q(7HKc"4Bdd*N];dcj=*8U0]l5)D#MkLTLR"@QmnJ
%BF\Y]Ue;sC9aR+Ae%cNnTK/]c&gtmWn5)f;F+gb@Xc]J;$pshmJ?tr0$=a(d\B.*cFE'GbMsCsWPF^8,^M,kk"@FHE22mWuE8a(o
%gP%#j0?<FU_@0mae"`QRKcq'(.'Q3;AG"r=?sk^XBao<J:e39*Y<^T2Ca'@`!ocZlR"f'\Jc$s+2pjc>1^O5T"0g9a()Fn2K523f
%&jnW=MRTAU?"":7L=eHS++ZjtO^+V_&XWPkV-jiF*D^85Tl&[4&rApi-NR$i/.hk3.*i/TYV7b,X]XRk7kA;s4!?54&kaoDYtQ>1
%B+f):edIg<Qa&rh#iH)T&M/p*3+b,t&Y0I?bp_Nkj-f5Sb$L&A/Q`Y6?qDUg3c6o\a_,C`3-'s7M.4_#!-4&ZDCd!D]I4+Sinr22
%X?+4]_Y/*1kE*We"pUe1U*D&g-8^[B^ul@D)`f+c!!*[#beR*:KSm,D&1.IT*m$IbJ>0'aLb4-WP(j>Vi;m'f;BY,,SiX9rF=ca6
%lg)oTEhNUjR"-<Z5WT+3VSdr7>C!EK@c7WqdV-P#ZmBMi(tdl.YhJr@'<dA6K,[7f8$=6J'rh7A4RGt@A6,Z>BRn'lYrne7,N;V]
%=L=U`DT8ipYbKj=Br,6ILd\A@oanNcO^j2MZ";H1UP0M%1)XMV^d'KZC0%c0/0u=@'TB8\4i8!-857#,q)kn.XSl1.:2H@%<ZTSU
%_q^]I6Mpm6$UgMn#TX&LD'^>LRBjI3CYL(jJC[/H-t'70X:Qo(g_B5c95>*hBU&+G"X\"EP'%8#Wj-Lo1%m.Q1er$+=QJ/@7&1CT
%M8leg(h3u9Dc@'MMGb<j#(G:-IM#J,\\sq.;k+4m.!5`r;S,rt_rT.4K9P`^Yg!:@oFM"(R!DeYq^,hBAEklWMd_,gL:(F9Y[a>O
%`%\DY/9Sj%-\f,Z&9UAgNGJTqDW=<PX<=dIO`_;OJ;spV.r\l:&n;MQ*LmjBic1D4Sn,)4K3@It7B.A(rJZ[KMdV3Z^u?o;$$e:<
%As$VY%Mjk0`>C&L&DK-GYF(Q"R@pc*h/)1BPu]M3N\$>ch.kp6`/^f-4U-3<q&$)/8%e+(B`ZJF7$H.8_C#uj#0\$.OdPMC&Vgd?
%BU(?XYTb(m%jMe>/-BB[&Ia=L9QU:N@CN,*#`5.cq1ds="dlMtlI[m3F11*_?lZ3%*9<5>!?\[(-&-i>Z198OP*fW5.RYiCJjH_p
%AWM`0,tKa#HU]^U&k#.E`.S28Dk^C$!io6R3<<<i#+Juh^Pq?3)rWeKQIgYE+gFSE?s0C::h"6@i]u7udNUrukOng/Vh[=4;\LA+
%-PY8C<p9U(REufSm!(c1!tO!W3T_6!V@qBWgG-"V:!CZi'uRg8VBT,:ka2oqAou<f+O-RbAf.(+'T4nsni+aEY[BF*E!J[H8>-;5
%'?GR3nCZ9][Qj71N.?P@!@UEj<hWQi.&0,"BZ3$07)oiOO]:\Ld-NWq6q"n[H%Vn;9K[4nK.J@%m)DK1aDm2"dW&oLPK.W:&f:f1
%)*@<H+E>VjeLU%R8,u^.&-i;.8cgepFolHG6,tr.Y88\DBS4cQXRhY$B+OE"`PIr5*J4N*dH+`QrdpVNJ(OF?82&fH5nnR9#I"HN
%X^Mc#I6P(["e@$GP/+C:kpXS?j:;AT%.$@taGGj#bPM^Jb<m19j:mE3c!@!+KIDelUsdt\T\?V32&&CHiJH2*`?=+QG#<l-*NBrP
%3Fjq7cj6jT=EKH@]%I8-J>h=4JF?kG"%^A9=!NujJPp&1m/@@D"+$Q\@mUrp<6gt(mNgPeS;TGW'GoUl7j*F0(=oBWQ3ut[YcWXe
%!#$cbX$*h#85:7"L,r]Ea_ET`P^lHf-KHi`;JQXXc$fajrT*a*&L5d4;7-Pk,l*+V,i[;'_AGJZ=DI*J+L,6*cjp8)_4s7dk,Dab
%)/>$<]*3`GSV`0)4>#cs\8?%:&`Eo#-l@Z,A5$#F.^[8sm&Wr]7d.^UXSF>Di"-JW+:`;+U-'ie5ZR%p8#WO#.Per5$m6D3X#)B!
%UkL?h+\<'QBF'lig53'a+e$O>A-f;4@17QFJcq@DW:?p7,@9Ih2!:A_!Krn:0-RWW1VP:lI#e:65X3)nN!,#t#qZk&/`<F@X1^ks
%kktTo`hlSZAHk!MAQ>Tr-;5X!rm\@`QnV8?9NsfLi;j+/'Ef<bJDisAq]`Ho1m8D1gS$K\M),G\,8&nDdU@kQb"A<5Bo$CeZBF8M
%2'QuYJ\S5k"Qq\\a'PT511egL!SXIt+.bmk2'FgXA`=sh*GBcc<)!d"2kbMm'(T%r$TYYm2/m-V8o/8c!c.L`-K#gI5YGmDOH5a2
%!Fo[oUU2k7F7."<=%&RO:rI`!"k4<oUK=a2)OneSbe?B-^H+ghEG0dU&oXTr]Gfq\L_[de(P.0,oS!,\eI?le"X;6;Qq=W9N^7J%
%X$B:G>'ST]Bn>+0WW?^`N)a7n@$4YP!$_n=l[pL%XDR&<9;M/=;LCP1<Z*jDQ!o7qJFk%-b-F3dN`jUdM`6M"%u:-0C#!8GH)S.h
%lN>%2VNB1,/.>o^apP?Ulj.@Slp!uPNH^3pH)/+U!+hW0)VaINNAR=3DZd6n<6eN>:kjuCi'^"I*^CVJ8d3h>qocZ=^kDm8=pZl:
%_lB_15RsI0ijD`!)aFTa-rO7m6&2:X^k"8c[K;s+(hJ:pR]a?X8<nEc9qFA>IK3]g2,!m7YQ@I^'I+@$m>YgfO\>jiVoI+19Otjr
%%6C/UKJ[um!_/Ap#E>G\rOgG"P0V:opjJ8&clQTT1$d>%Y*J>o-2>?+HS"BhY5p\BKg8k\H:)e_o)L".pffugC@q<2!"^fh'kt!f
%fS#DnQ:^@&Q@(^$bnuk%J^m7]O![bcdJCu;.,/6erB'NU2"MP;\&$pZ_SB<6&X[mqC/b0el@AWaE/k>6X;B1%H&Rn`3ARtX(h(99
%$eGR$aKU.%-jU_/'Udg86:Obu$=lMchKQuA1)*LD"e1+Hl9plHqbOS[WJMWNfS$Q`?FPK?BN<nS0fi-UNkL)RnD5cHE(>chdE%(O
%2t=;V`X?QrDa5LK^Tq8iMBXu'e3[[&O+TFo);+J=]/@MhorO55h*kc`$#bm4>rKL=cq^ZSKDSYjUEY5WBQXRt4N`DDM\0e9>N;(O
%j5Pa=AHXtI#,m$LE4Uc5SV0c<de5$fN*@_:LQ.ck@@U%_OJeBMD_n>Gbnt*q3L@81.M]tS/lM+9MMu#F(U)Msa^-u9':u>>j&MeY
%k#3,';2VJ6%KoujQiNVG?R00WL77l]R4`SK5-3+FN&XNCo;/^#?A7]4,nlcb+LEh!1>s_a=JEFh211=sc)kM.gK(oM%f&#AS+(T@
%$rm9'j3QF.6T0kt1"Lki\;_4H^97:'-.+na%BU$1CS2.YZS!3NCK1oqXO!R=LJ\ouH^UI=gWH\'(jSASkp\AuW1r)i=WX"7m,9<d
%7VSn;"uM$Ak8XMo_rMGKIn+aGmK1.tK^N\7?32FsAV-#j%jk<;C)c!p`+t'Pr(`,Os".Y^Y_>?Ko*9p'Pk7qT''j=t#(;I;qC;Xe
%+;G."(B_ER&7`jP%\dCj?(<#r,mE')3BLRr`_On>fI2TDD%u_]A7I0H"6(:YA4&Fs"0TQr+,IuNZHRlP'4Ejs:aF"g(h<@eh_pG]
%ok"_D!hEF*H6!V1ej,W.YQGgum"5H&;NTUlXW!U\^o/W&^0h<QhIqH@0VRl$qun6sFqZCm+O?2V@';:+L5lE[PFrA\i<+sHJL84<
%K^`]3&N:]/K)QmWC*A<r`Qk\$5dNN@2tgX;C-4VI'a"hQ)du0Q$]Y)6396gT)dHT4`\Lg*Br3Mi_Mht/'IP3nbpA.iP1p?<b#boo
%3J]kDr"NO*Qj9`1-&YW0,-g8;h0S'Ad";q8"Uh>qZk95L`"GRR?u$0+"&K3[:DRDM_`Hbk:9ff:QnT?m^K$03TiNr([DH<RU'C8a
%_I&uc!j9@*&\QLF-ur-#Hpp46NM.>NcFDRF5nkdaNc51'LP+$QTl]_Cn;5$:XUrH#/sbL*@i>d*H9>drn)H\&>2bPe5("1LNHD:!
%mEgMFE0c5$*jLjrENh261V"qQButM/MV%t69&);6hG8goKV2Ct$B6/?bhpbA*%]G;\ZmoC<p4X([RlXs;IV0k"[9d`K]mD#XH=Kb
%6NaV1#;FWLIWUVpit>ls=\G9p+/*uHm_K<H$g9_`[#5eY`nh>:n01A>J[nLa7.b>H+bbU"^tSoM]+>)VW&G<\X4A,R0$nB$#R5e.
%/kd3X>!o?QUh_2e@Lrk#YVBLcNrdbTSg%IaJD#R,'!X)tgWDbp&-iGT`,nA(!\>"`&L\1ZOBKC;EuQ(-7oA:R=c7AS.%l>T7Y8FK
%s+jY<3"9OfNYW9M78b=8%9],+aUo41Vjq]9@h*>I=N@&K5YHiWQ"E)[&'P70!_;1IB_8o/g+V=I=J(gIf..(Ai]Vl*bRc5#K_ZEV
%DOA5dDBncc7Z=S8=_073K[)3if9fk3aQ+YR>G)uE9o\n/mRn-R(__OT]a?)"]S=:2!9E@>U,+VN_6X?#n([ZmJAapq:-?BR3%3]P
%kiuc,%\(=+3>efQF>@Z$h$ohTN^8T*BHMjC2iFol\A]0(c/)n>Wta/_-:0Pt&<eD#l%'#.0cO(8C8TWUIOZ%,HljZ^,Hm2mX3g]Y
%V$)ep>D6:TP)0N)E"$-D!R$NP%&k]6J7"OsAA=6j!Gmm:PnZ]MOGlL2;8i0h$9eAs<$:0U7ZSgjklHqs]YYjIaKDiTrtr!6#H\<=
%.;DSEQWXOp+ujIs,U9q61!I^R).AL'JWNHZU:diK/A)9^akm)UVpg+2=@a&D5DbFd$kWc"1u^^(.8gksO=5In"\ftpPo-slku2/!
%*[i'sR'M6:,b:XN?j*f*Et]E,1dn=N!X`gq(]+2D>UP5Z#CK;Q9gC`?_?nb#E\ZLGO`!\H)SVhserW&jR_0Vba[&XG__q^%.Lq/#
%[WP9aG?5=p=NW,':;FkFaEZgjnQ<(1dE6]1Lb5[%[lf?7Or4XH&YiIr94ChV7;9V`)o4k]W):$f%[t7RkQIl3`-mat,RPEei*"D5
%X*ipO%UIom_6UOOPM)#l$1&3u0kNI6(EbGI5$P\]7AgEb[R=^LK?AeU_p>_9C!H@Y"%r]Y/e='o0HaJ[_ZXgn]\ig"igV?ZL*<j3
%9,9Fc$ZD(n3pk"CQ2j#Jc:MFQLp(9rf/s"jT/:FUTRn#2@@3?_"GSu`"AlgP7t@nU!/H-OZ(M7`6hYq[QM-jRSIffQ_P`bk_qQRZ
%%@)-X%H.H4;CsB`MU*KOOr=<r;=bF=-XQQ+n.n`k:RKemE+C&4=c0?B*hfHaO9bO!oKKq<X5$%nV*kD.:L^m?#XVG0$qb;&/YEe#
%*=@[/_]KTl?hsj<j9VKN0p:8C,^N]cHk1?5Z6\rX*H">F9YI,?96SK]Q3=+GO:F+^aZs=4[iWo7DFKd?oSShsF\b^GhGD\W0'L77
%0Z5=8Zj<3taO`*("/GdG\4Z+t$9h$!:E/>-BFLSoUW=B:bj4IHnQui`H6'[FYjnT8SGn?WfWO9UUfM)D$3O)V;RJ/qn_aLII'JOp
%3GYB[/5miZ?6pVGZr_(<Mg&upK?/"q5<PcYe.>eWoNDgh+Q#&bn:P(]0hL:aTmCNp#"6(/SdC&bT%7hTH(foQ'OOGh)IWe5a:*Hc
%6*9d2$mW:0kJG\_i`CB$&Fk@c#6eI="i?ut5E3Qo"D1DB"VKU(7`3S)Mrf1*77nX'SlGOt?#6=nTdhZdUDc.aRq4Z_H)#lQ@KLAG
%JG1S`H7`MgKG!D.j79;d'8F_rRR@k]e!cBdlVJL`8&"M_IDs>1)-'@))OX&"$AmUf6EXp&(m+P[r5/^h.Dl?%$67$Y(%cI$N(gP9
%37uou;2YFh.)INS2Aa(80ilNV6ZD0iO`_%@PEsXG$F8OnJ(dum[Y_^-rOY,J1#cj`G"lt\>@O.]aMO[i63,8+NW;F!L9IJZ8Wu)i
%lnuF*_pGZ=n'fC\C[i?,-N%a:$/#?5+`O\od\R1G0up1h0>r,N=:BtY;ZnA16qof%:D<J-gdON'N2B-*qe;u1MZs5S(0AAuaqP(M
%OejfKL%m:okMDJt,ZN>nLsB!-Bf&8mY_Xj]@!K)-d#JYaIf]CCa`3"e56MTBV/ho](o`.b)TCE%D=nkUn"D.G'3Ws)<)";OjN%ii
%)9jCZ^W)q1>RPlN8MNN_!FBHmb7ntDYp+csWq\#W1G#CX?ATk.):H;2rK?[c(^<dBEuUaUd?@D@@R4-fDFt$qLRD"5,i>LrCaH\>
%d!Nen'pO'3%hLT8*'Xd?QE3<OBT?unN8lMm`VTkj)<0*e"@^,KS?^?\4>R_Qs.?hTfo[N$P5Kq-LHIN2K^R%:qoJ([ct<E&.NWAU
%qYN!MT".A$O\@,I1Mb>>A1??PbuC=8^."WLU:b/?`a@fCc?3P<_7dO)lRas5X%c'V_"5lt,Q$'@r$-Gmdg(8iI;o1R=Q-0FF7tZ<
%_D=4+Jap]Uf9K<0Eq/e)2r">8]84d+bG0>O%</lNQY%E0XXKdY97!j%nB#GLig*tT*@*tm:V-dUmq?/q)`Ud(E&`D(\S2/N-^+HO
%P@YS/VB2[!k"DkdhSg8L4s$ti;7X1l`ClE.0^Ph\n;l0@]D;1^G%4%-&:%>EeW-I\It\+hERN$ge_KW]SDRX6i&KbP;6&N%4.h/!
%:02cqZ+'3i.t%=@dcg5O-12IX`t<icgd&sG@n8b0!6`t6T/nY)&Zm1&EIE+h%UE[W;pg<PBd+rAj6Z84[jk7[#fM;/`.dH%2='1!
%6`-7(?0*)6[K\H-VTs"K&D0(G+-6a:1%37.P?/`YdpphJEWC`UUN3!tpFC:mg\Q.rXMZV9^]@a4aP2/DCrU;_I?^^"7pN*)Fj%%6
%qs_SGg`O]na*d4c6j(*n!!3u)VZN+*J85LA<3pV%?PK#R!DQE-8N7H2P_5!YNXS&aKC43[OGuLG#3Y.b$7afgOL:8^gaEVD1#R!s
%O6nHXMq)*d6Se`r9?+kC$mNB_Z8bH;;-E;XbVVf[)jD2Ae]3O,%$1*9FM"(;J)9Y1%lhRQn3*EV't#'+d<`-lrI@=233f$nefAm#
%Gg:m`"1X5ZlqFI_;P(i5?k@!/opKV0#U(@X[D<BK3&u\-M$"j=@)UhXa!Qe+$k+TZ_C>sP+0u+IX<Sh-$;^1CX$`S5eQ`eg[*@O(
%UU0*[)*".-_H*Ol,e0LHL.13[RGm=Sq@[],MiDJl.ct0ddfutEpZ<$DL)Te(ro#>,eX)dGV?XPTJVuI858i@GZ5gn*Gu=2oUT?-c
%>.aC,BGShk._7?52-1Q/Vt*rRM6aG"RAY6<s5W:3/GJW0&L<U<j$?)P.I`dSaIhh=!$1J@<oNm`Y+GLLh6&,V8`d9%#f&aC$Ilp"
%KH*Y,a>+ShGM%9u"'03RJV%tdR[m7[#f&OUqjJ#i2fF'?3L^u'bqgMLO)#^3.VLN%qFk"sg"\DR)Lr$emsb'<=&4/451_Go@BF:^
%1\DQ*6oE]aeG%-;SS0q.G`_%L[GbU:S`URigWe%fHD0Nrr+14bG9>_WK"],S"3Ba[!WXaN.8;+>`<l]2\C:b+of2C]q>$;in`j*[
%(]CHmq+VM2.?Cld]6Mu[S^$[P31Is62Cn`b9hYZ!!Ea@HI%UqcZ3sn0ddKS:kPK`3f>G4Qn*@0JgiCVl21Vl-h1I:=.^0,re1TPX
%#T*^#+5Nu2:3c4Vg,M202S(WQ+A<X<dgM4gM9L`JF++$?I)g?p*\Q$GO**V_oeHK-TA[c"R^8o!H[_^T-O91[DhM0t$[hm@BZ!78
%(3>H5JIo";G=/&mH.(uoE&<asb+l;N&Gl-\e+jf_`ID.A[9VS&c]</;bh"KQmR+P`bTjDc2[!pGDm7.W39lt-J8em3Z\G#>@s3Pa
%;IYkU(*@mK&_V2I!<9oqpTbfFh7+8^H1<ZADiHYUTq7]]3B4Ljp6D:G4k,bX7tXBR7Y.rT*[%>VO\?>6K-G)mg]]4*VVHn/A'-/N
%L!k#OP_,E.S/US(P=_9iH/ZJXIeLOe$F:E`F#tVFFX>kVTbnJo&Elh`&onn]Qk5oWQ^pO3'!H)4WekrbYke^^7(*'@j>2E*%&jNM
%S9K-h0Q8CL3U^5h+:L+4WRbnN"<k;"O[,+Agf-3f>nR4t<o&k]9K7(Abg[cC1kSHoUp!&O-2#'In"rd'1UX9_ZBU$bZ,9Y(YO8Z*
%O6<CCn)Tf3_kVhrlUKQN&>QE2f12j_1Z]8K@80+m[ZnCP?Cr<>@1N0/WW'#"(bE0fJ&"D59OBfGAIcb&_BbFZ[/Z07Hmq>i$1q%O
%ichG%PE@\_&KjnEf.bT@MWE1TWD[5Sp2mGpYM][/7N#;,1"=ao1Er"-:(<X%@+<!/2E>Wq%1[OJ@8nolT)DZKKD9SeY54=I05.Um
%E0385+TQRE[Tta;4'Y$%E]E:3EQd!!iQqcX'o7-j\8D\S8L)#J9HB7WE<X!WDC'\UKWWua6Xr<!gJJ's@YbRJ)t62r6?Dh-#kD5Z
%Qj7O,*`jo<8FpRK<kU[IQo8<f#QQniq,7\&r:`GPTL[,*J/G#LG#Q!o`t$Ce>_W(spG)_&]]ra00`dOp*)s"cYS,8-"3C3BI"Sir
%o3_F-WS'!nHC<CdSH\41+R^]F[Q`@2/WBLFnCbJSh[a.O`s)BrgN7nD>!W.@/?ER#1$dDD6fY,Jrt=]9NMW.T/qNWB8H[9As7Jf"
%B\)*$jhC!GbZE*($/gB*m'_=!gu/*Cb&/*iL<L.0(H]DQF4g(H*EbVic%7uUZXqab*4a@9Ak[aX=>_55I4GqP)h25[/+[5N:^R2[
%XMd94n3IlBn7eJCN$Wm`&RVE3!I%3Ns&i88p8^YW:<QN,KH*dZ7"EGlH<n8/:#"doXkujsoCNnbF"u!:X7<Q52kOYr!'+L4&ShJP
%Z$EkIXBHflOB<^;)dP.Q\N$(Mfqa\!DbF^QOX8Fg9B0*G:%HGGT.Ko;Mog*tT%o/-B1LTi!$b;d^K@,_jf89XEVD=H&gIm8`L@SG
%6WjWG>II?,9Ob[je.a$_Xc*EJmaGpn:H*Ck@T/kP<.)K<'Td<.kAPVs@^:Zq@V\Q^9pHb_MHD)9gE+P(SC0'b_iVp:3^^I8`<+P*
%*="Ur`'%uqd7OCm-'&S98/:.\n'P/Bc<Gi7!c`o;o4+F#6YJc.m8OfYlj.rmVGEX-_PQW,_%)LA9K:Z7rt-j8_`Y[+:=h4Cja=L`
%/4`lQjf7pLj;cPY%bING7k+PX8Au:h+8/3jAORL<)qs-.=P[CqHX-'pKb8^6Tm_^mk2jAN+\]Q(X5i!9Xb@F&hL8d88=T*d>NaNp
%HlUEk%9JRHDl*;OUF(PEa!t[LSCMD[bu30SMV2rmG*'bS#WBHZ.Y72OOL-d;Ii[5On8#f&20aS$Ua6mX-55KL\93+enVcB1lTA=_
%^N!+kB9Zth(A888")lN&AX(3(Z]Ham3XbiV=nlTX5P>/+,m8+83=@JiLPcOf<M&ETG.S+\]o0OXDW;AIlSL[SO.po_s$`4l.l'eG
%6a@XJKH3qNU6rGCp$=i5@T)BWg.iuSj2>_<l5fpI1_UE(>\5\_!&Ot#NkJ@5n6d7T`('IXl(!?H#ec$10DiX(nhl3qV=`.+r-@S&
%L/N+uGB/F42i4g_N1nq:F]1ap>H4Xh(hh:(#9Sj`"q\6d@tP/l#\sQH5K*>eq.-E1g6n@e.jn`,,A8af?F8nG]s*&\A,3p>kM[T)
%%#5iI7F.j1>T8VF.4d5508SU'gM!bVin8]39^J7WfOhA.M:]D3C_+R_e\QZUn\fq7_,LA_.c,(pi&o-\`$-I.4gY9&8M5Ygq!-"F
%mZ*4#YoA73s(%mF<VN&/E_2.H"Iq.qaSmeB&=(.<V`OP_2_-[6>UQ@@<i>s&YPnd!76b.iH_-D(RM)NFaRS(C-+bMQ[>E>G!)B'.
%%7;$nT+UF4<Dj+1!1rj6R9"oZgn/O7>cl]Nb$LOPLG$Q(>N'i?mIHCRKr6E:J!ei,ha()`pDX<Dl=LmAB7U#FF+X%UEPPZG*!:[[
%qXfi`)_Mp%_A'.hk&39d5=Pn:k=KsbLeLYjXj/u6+5LW?'YPA^eam9GI6=)K/d<HY3Po8jDS<3BGf6$^N$*&5lut@?kWt4f@RH@r
%fY/h@2L+ph?lV8*kc19?Rrp&$F>KfimgiJFV.E8%VCH.pj"r\V0dT>!Zu>32@F(Bs$8LXE8tWedVq^>"rCL.J;&k't"AiH8E5\D@
%.a*u7%Wg1#Sfkj'9aN&/+#;u)BX7KEfQT_5>4Q0"NSsS:%1_cZ2IiW\bqd_#`q'UraTEr!Y#=e1RC8olX`J';C/+l$Gu(h^>pqun
%?j1[t8@8c6W9S1_IUGo`O6VQrL2ebIRL+ejPQDgf/LR-Ei'U8dAO!F-`(XJf%n#ikF5bAn%`gg]-:m!d,MnZRSHt`p/"#9KRi`8'
%Lq-:h2u"8YKR3@6L9;3c=IrRjG%CaT\OhU$74as"^`3pdKCp0aWT+h5_&25=Z_T>H^If\A6gjjh*!:3scp1Dl.G5XZ'WKo_Am+2n
%T>2>*4;0OO8J@!d6[0:.<Q!bsr9(9pN]%aJb6.8sVoX2n5=*1k7U@s'.glI;S?Z4)9YApnASXS(_-`7sNn$T(LA7&h<-@eb?,Y51
%Bb9m`!59.<-(t_L#*LMN4@em0n3&oC*QOkCi^$4:NgFZ]brga)8WE1iECWEG+OiXuqe(j_EZ]:?^aLq#"><=H0,uLpOPa9c6cA`j
%%uu1SMM8D,K1r7aL^5I=fbG]X7QDR1SGjoqioY/MT1FF15ka+q]A#@IeF:,>A5t>KqJO+QFY"_k>bm,SJeTSebQ5e367^UgJk64`
%%0/b8mSBC4NVuu8HBi$Ricj&mC^1HH5!6-_#<GdObrO;Khu$N928"E.a&"]R#tNL.f$0@C"0#/<7j*VH57H)Ld-,^LA7,Gb^RUAk
%M\NuAL6Xg@>0YA2&<],cULl?JFm"AP`>(E>^g".^NWplig2WMlFIG]"rF:XB6;]]A_Zu6.C[jN+X]'HTVur7V,8hJhrT^8?k,'Ng
%C"44o?3pkef&DN0@pR'FI/dF^CB0`U07b1g26>B?8t`k@8BSehBnl3rjGj>6XA?V>=E+<uk&T`PRGSC'iEg8q+_@s$?.Z&Pf^cok
%^:U+dm/B:"WJ7JTdtl4'MU/sc5/h_C_AOm-JWY?>Cd`_M;RAuY:q-qA!Eik4>h8ZVi4r&;hSa8a2QAa,]'q#ahN:V:I2>3#^Ap)V
%Fe3\d=i^u5DkVL\#7F&cZ#;>#XqI*2e]!%c8<P*\WZeSpT^DglZa-Zm7\8:mi\N7@-OL9"JW<\7i2+dg6h9Ao\R!uO\hjBPs$i=P
%V<f)."5OU:[Nd4qij^!#Z#DY$)0(*8X9Z.LZFUoO!3W&mY)4G2$b&*HO69X?L;oHL>KC\Z_;V<qGW+<1:EP5]&_mBd_rH7dZa-KY
%rq?9&?gc/EYD%aX!Bqu?TSkXf5<rS>Dq`0IoJdk,rV#_04br=@kde,/U*Wb-;XTE2^WC<%IWidlJ>4_3?[=tX&u(JC]Ih@(p`ari
%5bb!hmR1BF70F2elT[?Sm"67f.MaDr?!@0+aV-pin)FtSf!8"SS3!%(qlQ4MYu*0Ol?-@ca2h4C-0>0mB+RLmI`GJ0o.*9r"iqZT
%N5CEkjVBGbE9](bs7Wsb@Y9&P(PVPQRj30=Gdo=[LCL5b_(D;lVA#%.6X7?hh_IY?JLfRI"p8Z6NU<#gd.\s$U"tHFJ+]^"\m<UO
%c6(&JO8m@iL8Y26FNeFU8$O_QmXBD"GVOM<lM4$KU_:PCd/)fQ$(l)I-R2RXKeApYILpl,@l&jabK+t8O=E_Tiins651)Yq.OF]K
%f$I63(jM7U/iEE$BmDj'KIu])@ZngJ)WXlTXHSFL`iq"gU[B4o_Ka8!bK.Do;c9;#C8?1XM^Ga?!^%.^D`PI,QkkNTTN30G2K,:e
%q7A`Vn9j$k@$ZMW=],9M3#-`<^0VJiA_j1:rEboR"_ZR%#1.p&n*@NEcO5361kT/HUbZh4mfj/8@Gu?t+cD*Ti_cRR#4gq95+G9E
%Kam!M-j?036j:1j:uUM>?@M0uPacH*h;b#tB.tSt,^'0>-p5h;>:7>t517&urTX2NIqUeK3!'Lc'(HdeN*k@tjmHO?%TYt\IjiM^
%VS'cE2aM>&()jBjS(pJ<./Y]JeAKYr?$?flh;C`s+"\qi1nc<YQC&cpa,4fNG%W*]*%rO[i%?sW3kEKpEJLO"n:bqkX'>uOBC#+r
%U%P+P%Tq"G^h"/?eM1%RnUE8p?XCI>5"8*0@kK0'jAqTCGfSjG.H-eaf.][6'P)c58f*u9HOIK?e\&<=B5>5gqQ%m2["4f-)GS3s
%BW*]u6Bt:uOn8+8ht)$ep(*M6j1c?UjM#AQ3cuL=bVp6VgH5])Sr/FCi.pDu'[_f2?*uc3J>Sj,/7E]A6qsq*M`nJ[pVgm^]>_UB
%*K3C-=r);S+_p^A`6BS2$I6uNp#8g@d%XmgTmTUPl(QJH(`W4+S%[P&j,r5_V?%*)kk='n#ueD+O:pp]0sA)hJC_k6-)Y]5XRML5
%nrLA=(+D8QH#Lu2^K@)^jeBH'&q3-kAi:546*U`6YFDl:C7)i+LqEc-P(X=g<O,-Q%%#'\[`:.Q;$7fkkbMlsP%^)Q5bjNMg$hn&
%HbPQq1C'mSm"D5=&;`=[1]o,W-+ql&"A-hbi2^C?^e3YHAX%1flE$b/@XC%$bBGW9h,62ATC_j<f_p<uP,sS5%@I2[>e)LS4Vn.`
%luf&k\Hju,U$l(eX[,iD]QPd&@gr^^]#4&Wm2!=s*LM?_^bX'V(@Y'LgR,K.K3CAVG=O,+_).9I8uB26H^<mc.%G9sHm97(ZcKgS
%&$5:a=FQ,2f=+m'@3-&^gI&NhV[7\FMFnu.')Osr'KZ&/Jpu]>?Wp99+W#3[@2bqT!8_rIo\S?lmH6Fo9njj4=fce5RR=.oXCAY0
%;[GDs6V_Wh.dR)M-:1jX[Bd%8[*`eV^X;ROoEm=*IX!ue&+Rk#0EGqB!"XOIgtUA<5Mh:lIr%I6I(^FDA_=Fa'nc:0gFB/<XglRB
%nP<]:amn0A#fp?QQ&Bf%@8F^]?+(H8$a7Xh;kY&_9u#jTMd1lRD+@Z/7`Bo5-RjXcf#;-QP3BmG-R,ZaOtn?UaqE?r<bLEP/DWR?
%[mm0GS$"@oS*Q3;q-tHt_a@1,`YB%,6k[,P`Apb_O>,NJ@E>]<E`f,/$rCqL32]$B,uk'`m[LQ`8R"W!Y-jnQXGU+4^;SFc`Ie=.
%A]pkRS3%]J`M0X(MB+2DbYAO$md7a2:W@ANL5!:RQ@GTTKR.pm\HmYP+\YnY9_/@D4I!G$]7IUZrXfJ(Ujc2u^1QuiJ3Lj+$G_<n
%gU'Qk9!L7mE):7G&>$]h?q,-$d2,A'(fF-AcRhH(1X?hnhMNGD4XPR\D[Si`T=B*Nb,@ECOO=m0*;sg2=@cQtgN;e7:QUb`jX\F8
%eCb3VG]l>::X`h'q"'kc:dEss!m+Lud2;_pB^S!MS$9qY@^88C`s,RDSOBXj;5k[<#>.I,$@\Zp=r$XkSh7'm.]',-mLD#--MB!A
%Wfq]Wl$is;Cjp0=02)HPUqU.P:o14>22,+Qbln-,SdRm[e^_6nq@e'12AYfdC-S>`6m/]$]=E>M+dtT^0(ie7%*E9hJa(_r&kbo>
%kf"Z?ml=j'o"*Hs/t]f68QYfVBk-_GcTCo2T0Jgc9lFI.J7aK]eB9&A*T18RDRInY$o+@,_6.a+0Q&;8.S-93Cg+=:R+@b?ra]36
%"<rh]R@9H@U:q!"HM:!\>+=9sJj!H?pOCEP3B$^#!.WKYa<.=_dB!O-+Vi89FQc4g2hrO98+b.HOddn:CuJs_gJka>>bIeoTn>b:
%*-erY)e=S?Kt>ZmbMaVr3L:B@pCHs/D'KuTI^Q;.c%%-MAkaac];4ORaHH?<Ri&:HGbRT\VqX;Dl6<5[k%.D*7/qjP(\qmd+2lNf
%Z?<mZ2__gA-keDK!qURK/>*!,4JB_Z--#-!>%at"q:cT+cm_?p*FSGC_,hfK-FOdl5Ji`gN/+f0OrSRB]&)'6aV8Vop@3^m2aCEt
%+fLkTRJ0_3EpAs3hmA8n)hL''1dM&aWbsKQK\d^F1U'C->:3SeaUG#^LZK\`1R/25qr+pE#\kpUo`Z7j4NjgWM4SROIK2Ar+ZYJF
%EoXc*k!5/W1"5!RR5dRO(lS=i[L]k?c\Kh24,KV7rl-5?!MNUeC`_YSUh`7n!AuWClNVMU#)RFeZ_]'<;RE%u,/`IP3p!$?"15's
%C<@0A3I`rTcNOq(4?G;ZdZWe$Fat5nPu!/Ul)813_==]EKaoGXI+;PD%eTS+k5U^YpOa>8?bUkq<hgP1E6MPn_6tQ\8<0DL'B,&T
%QK.pd;EV_om2's#9tP6mF\(d3`!Rf[9,OCXlu@E'`-CJm?f!=LpCAV@H-jQ5`dc^?[pRdc/o17m&G\Y)*o-B@0r#PKI(PpFa(t>+
%?_Q=UZjWKr5<Fnio3m`)T+)gcK2^+XDV"_>j/AMdI;iA0#0IERN\,F6nL=@oBEl]FX9\"t+T:A3fk!OC^1uZu7`:/%XFu_gWADg[
%%p7t)0X@F\&K'+HJ;"j`TS?Zf?2T9AF$hblq'<+qcOVB##7Hr41(M.&qjRF;3`aM009d4X9NE&9Cdum4@l6INL<]nA,]>!^aR]^Q
%VX.<U,T!d&>_ecV*mR`VpXORne_@RaqA3n5.2k%*9D5?Vh&iKImj.Y+\_e!SO$qFR_pKW^MWD2>KGF4s>g,[cETb7?C9/]Sga6c'
%3iZ?,#;@mp8]U?k-.pbE"p,X(\G&g6j/,.d.>jr%4-]6n95a,,Zst?"d.VqcMRT4\H-S%gq%J:@afXg'0LiolK9R0!KPWcLG4DNl
%$$eU8foRgs)O9'm>L.%BHQp4lkNuj_9AQood'r@>1A#p:<oSPDak@N0H@Ac*1gL$s<WR_B&.Q/6a1Y0gR`<jX&kNesLQSFpi=P9n
%Z'i5o<NME'%MsH,:^`LtHi.(dbq$Sf(b60$s(7t9.]e1m9fc(Wk`L-Y!q].</H-V[mV.RnL-klSP%)J58]1[\G@bU&%Gc<J_bP?2
%L^9D:s$\M0DeJ8+X8@PF!FHA,"5o0gj:P(=15u\h#-#tfj<I4qn0aedAu(RHCu:-kIXM]*0I%-b3,$uqB(19`A'AI?4,mag&XMXW
%cAs.*F\-KYZ?EdLT/QZ0_=7F(EB)Tr`Q[ab&$U&lGFimK1o7[^H%$FoSgaK\;^J/DekFCUr01m##C*Y20_K59OA??L>i^R%"+nHL
%+9ZKHecM^iZ+LDH:TjF+\KN`BMP6N=q\/I/d;X^(A80+a&7B/<m[=..-Q2eR_u`EprBNK"&@212GfUAFft-'gE;$2l852<teNJ3q
%SO0=?Gemn>V@c0On@6a9gZ)J]=^ghU7iltAL+<>#XS-=L*q:[1iQ:u;L:.4S-Gh$k.Lq)L$/`=n(+5b##IjKZe4YK-^?0ibm/(!2
%QDP50j2Y+HUiL*F>$]9EgQI%=6W'#0a`]@bP*)<g$j\#cja$sD/Eio9-=]/f;n@W-'(Z8(>&+DU?Ss9C&FTm4WX.$8aU6Lll1Hml
%-VM3[RK))3$'k2`r`QX.bc!M]i*$.Z:-riK)7'q-lL=m=HmVq;#b=GuX!e5Sia>kuU4Z6Q3[ZJP))1*,6Ck6$9r+Cc%?`.$L@Qm/
%aRg^e#MFV/?cJ.i,hIaOV*!#p&@'CpeZ17CROr;KNJA)bG.&Yiqn)V$5uIRd9FjY\O*@_?U3&*U<5<E`*Qq=ca'!8,n*4ALS1,(K
%=V,Xf3btHL[k"=^MV#AR-e6VkLaJ?$O[*@cG3"bloIn%'8a]FS.bg#O*,[KX![N^M7<Y5P/[Q"&1aD(Sf7=:<LoE0ZI.D1lDu50T
%YGiUjpQ*co84WVt3BQ'fH.[R9Z"*juL2Cq#]@bS'CSf-*mgSKVIfGI2((3DP$.0/8\^R/1nN0o85fYheSOW$/WCTWT.tZ#^*"<@@
%QS($7W$[JcRU.==CN2MjbK1?BD-rOi[!48,?]&m,?jb-$Z6e]T(4udb*lg.j,DNa(1LJ!7P+I;sND!Un.KZ@"dnG$hGVN&\b`LX<
%I$3Go=D+sP`n]EB%-5)0A'5JBX+d0<*&D-4[a;W8ro36MMti0^2G^Q'6SF[)$Z/3,7"DA99QHFCG"HF5@D5kU?dL(`"=bS#!:Ckn
%DX4a<$QNCYB[i4J&dl*XcVseg^WDciV><iQh?I`VL>ljK`nMRSU;ar]W\Rt,dDJOZA6W-TjkbHuGh4#X?AB3#r\,P[j0hdRlAj<<
%W)8MLf3A1J<&SIRX[8'N2VEh(lo\bnE!A9$77f!Rn8DT;k%+;L.^5sJ$MWu*96oW$;KnQLUJ(O<.>7/P?:,?'lsGX9L@5&1S]msa
%YX'>?l?_N3jrc1n%_*f[eBq%*8Z+l^qhQ_-W)W1Mm]AOFqqW@pgPdWbQ#ZL`Xoo:#+:S)8*:+SgT&VbVk^p5+jCcd!*O*t55CrFB
%R`dH[EYat>H1L>YVh`qi2J!`-V.DDYk!R+tQCY*VFW%!N@\NkjYg/Fse<HrF>FO22.6G_d1.[=_^S^]K?Ko)?cT4jfa\T2:Gb[YG
%O-3#ZDu6<CZB)tpYO7ZW=:2o$()0!S20!AI7okdKKB;0-\iA"'/VV0lh!m)p4>fLtN7#=i[qjAcMbJ/V;M%iim)r*Jp4Q%l(qm90
%a^,SX&Jg8LFtqhu,FIM]K03ae#K7Zn6cG3^01hJblI4L:GQ'#kH#0&Ba&rSM!-I`n"\nNcohAU!ZsVKTN:1Y08!98lR5<i44S9<3
%NPKWoZ*Qg1NmRq/>Q/NK@KbHe_4oCV;\!_1BO.oHLd6.M*-_VOa\316iAXgMO8pK<pA)>cj@1.)3PpUorp4P=H*:"^q]C+b+:>3o
%(F7p%6E[F^X'LReS>;&(K-9+SkXrSBX\)T=Q8?/)>_2&Q9hD^Th#T,t8>PgV=(Nu,r/<3jDf$OT<.r&dUl^o$lJn*P80cWd3%0s\
%A85#R1Et(p.c9G5i>)rEC93FEiMKCc4rP&@kVXj0r!J'i?U^ohjAU&>Wm`K0o%:B$Q3BAX)hX_pq$1!:Phpq(!(r%JeL9co$-I)@
%)(]8C[jHrMS2V#A+'$!-8tEQ6"RZ(_h2k7]^+\!oOIMk?'DE""B1:A@GT(b@ZWl*u:kV3pi[OhoOEs$uM@uRM/.lJt,S6u:Yn$U%
%Z@DTP^eWi4E,dlrQK!cBl0`,gV;^tcO,)F<6eF`k&o\8cSk43FGtCCS!I`TDj(t`p_bW2m)iDTMJ0329cdpL>?q0dlgUuW1#eM8)
%-PQ2.WKKsY^m?=%(]ae)5,R&bdsHOfidna+-N:u:s2)9#8N@cbJR$u3O,B9U<IW)ASF(U;[WUmu>1Wd0>'Gbj-ikotdn*Q[I%jiM
%+.MCtQk'=SgT9u`bRkd8>@'$G1,SPm-KQ>l=TLGjMq@)Ns+a'6)HqVHihFk'LW!NV^$Q?SqcN.U`tK?jqC)f-*h<kJA_fecqoRA%
%UBiSGfteh(#9bbZe%AN8dOC.f/mrZ3S-b-c`/^?/L`n3n/c[E5_h)mud\,maW(Dk"5YXjGEerir*SV`"HplX7,lg*uoZf3b&m/\,
%Nh[GeBFfuCK"pNl8-UUUE=q4XaQfQPkSBVuD7i`(4,Ei@,Do;g,nL11NE?i$@F)NtEeFib&`KF^,IW90;b3oKfVfcE\qSWLXi<(h
%g1ANJB5$1S]NIAc(.)$=BgGghPm44Ee(e?-dm$M%q-gCtNT0Y+h8jLhY!VQ1'c/\CA&j%`D(,FC4RA^B#'(p?MlS&J3!e<(Y6>B[
%5&+a8:6r^EqkogFoU8>/nos"7lS"r2e*Z"Chj9k-a<HLV):;)SmEF909k5`ldM7NgBTFF/%NT7@M9/T>*Jf*pPg2VU+"+&`5)G`L
%'u`e@7(:MF?;sjm-&]<**GDAt='I?k$CSHrk2RHM8Chn@3;68=c%IQ9:*gU-h`M4SomNeW7TO"Ul*TKCriOO7\cuR)5Tf`5eX]:/
%%*i:=P7q>UN<q`uAms?C<qM\hRFW8hofT"sh9i.nmbo"XhO8H,r`dQ8PR9SX1]Vt;r)IRq!s:OIM*SGa=CdiSkC7%m.TJh*]C7@r
%Dc-Q6&K+T$cGdu9e-k2c#-gQ[;BtqF_t/nsqbKU+-C"ip#rY$U]a0ldk("2E2:^4B#d4X3]I`7Rkm_N=]Q'`5#*(:fC)Z?\>KBR\
%jj"Dm8pC^MI7\i8Gn2e+[Ec!=ZTB38d_s%$@/qYuR"j0i[c>UOr[7k2em*\a!t6uc'JDbER-,"NTZi8Q)45Gr"o8gIP/tO`9lWAZ
%/6#t8Gu11b>E]'/WmnW8fip01P:525,J,[MY(Q:QkYouVA9FGZ*CrT8fVpB#:6A]TdEq$8RY_hEl"#5BG!DA+IQYUlGH)_[cG&u/
%s*FITf6r:;R->g.4t9Mm_])k\>g+cpVS&48O@?C>Gg&IM:pYnfXSI,<\r3TI*+ae)@?>>1I"FWH$IpP_0b#`,ETCN7R3$Z0o5K)]
%M@G,("YKEb3aU0DHu+T#G70W.AoCr@D65Ae9.OF!BnfJ=#>/cXaQKVn8lSdk_S%$g9Z<ReTd7E#h@AtJ)NZD/e*oY6f;8pn<"Qs/
%?Pn0T>H$18=?5Ab;*/TbdnnXW`QYV7M^P.TJaT#,$f^[#i-Dap<WG2W%SAJ>:KG9)=8!1OK.o+>E`;j!'FKuSs/])GrE2,@G``^^
%9K,>es57D.1#4/3nBeZbkHaY+;sq\;*^AEdfW$\1\;ZB7]&TA,BK_qnr7&cIL&MW7bDc0l+nTt_RK89_8_IDY=YpULDF?b:I+]$"
%o+eb7Ki)1cIJ7?qTN)m,KaQkdGA,M-::a8`@T1ZU=dnrl^h/0<)B\=F[9/?-9KXNc/PaJWKKkGB);'jT&Vh5^V/',aJP_u<TEZ,%
%/\9H?F@*8(h)>Ra_8J>T5u0=2p!>r^=I3`>.>c1.7b1+`TNq`HMMo/(B9$:=^a&/e00_%VAS6C7-4./&%X>?j]6GQnK`YuSMjaE=
%&Gsm*^5>:po<8eAk@&Sp=,hMIOAPCKc^g4`QdM"9nL?I<&b"WQ@V240OPB\YY+JeV@d1C4n2/j97Jd?X$t,pF#,S:gR`])?I_*i&
%D@UupR09n4O/+BG4K/7^967`0Z?U;Scc5imj#9[fhcuZ[k`;d'H\0E4=?Ok!]*5cO0&(S1:L>t(_P8TD3BOkGA\,*u>=H2HGfF"n
%*kMdO`T)(2BL`--0Md8DL:-=s,mPkKK=qST_>L,jXLZD_'.013*DYkcAcooU$ai&JaF;o]!e^$h+lI*/p<qI;imQ@gNMFtD?l"Qb
%Nnn4@K>/B#E`bUF,-P9M:Z;.&1>Rjg*I1Q<#t6TRk]Hm;3A-AaK"mF'-T><nXd\%8XLZ"5EY*+b?Dg,Z<nsX<E=q%FqdYMj%B_;R
%URutQj:GY;CLFU`0a)I%4;G(Z$gcErGb^*c8jS;h7[qm4Sb#?];r?WEMZpk$R_ad5g3;b'OV>W5r[T:D.egOlTT`804qW-VVE1P)
%-Ef?W#IF)2Y'3BF2@c,3D3Dao6@aDiaX4quO>Xr&?@0\<Pk0tjgFL2L2LcMHHlj;dUp7$M4/0tX`I1U-FEhlEJ;X`g@p+&WX0N&4
%Y@ZE\8_,3)NHne$r*Tm[#J7-al_5/g"*+3'm,9uI6/ILJn8S,H)Cj2oPB$mE;uE>Ui!VO&r?ouMI9Yb;^40'o!"pj(e\StsgH'HI
%bKZCTpuE<S.MnNoP.W]tH@aB_=0k\0[^9Ipl$'aF@`(%3:C7)XCU.N'h/<%0%@MQG=*5l,99Bt#Rl[9`OL;U4TX/@qS*1HSq4gDD
%-Io4O?M=)d:?sEUOQY<7`$8IBh0l+%P741!<FqjqKD[CJmCo&=cZ]'QN\3<;P<@M`=-/&I9tl'/VlGBq@T^BkjW\l#f:cpqe""HU
%EP5TnbBgSk(Imt8;dNT_#SOB%r7j=Ta7%HJ"-*P];S9gW\e%pQY1%0%\2'Odg\QX6i_55s(W\BPb5%k4:NiDf4n%9NfW:,WhY@mp
%T5Ui<4-c4sKHk^^V;t:-"VRm;H-S;.`%Gse*>h?)m5FmYl#(h*Ha'0cojUACB^Fd"qM@a0Tqf@X0%MM=iP5%o$idJEcVJ?Q>g*Bg
%@0ZfdPDd*+Z^?!*Ph8SiJX/oRMK*g4j+H<ARlZ2IU*;KdMh$cM:UgLu<pO3`YEo/4Qf5n(n2u8/Q+'sX`R-0=$5Eq0AB/dHP>b&n
%?S%]_6B(]4l1]sU7J5i\J*Ou\pRufIoC?3*_3MG+4bqqP9N6TgK4&bl;uJD03;G,YcFcWU'/(%jj!+@Ga[%/7*8V^ErkN`=&he._
%+ROreq^Co=#H5_uG@63+_?j1;PTL?s"FB>%7'$t.)#^BpK'5?a]rts!Eu.1XNJhK^R@=95-CTa[c56jX%V(MLT_E"&1FLE0@]"%0
%oClmn*/[@>%[CX_6mD0/*aOo#^(27-otSNPO0*BI*j]&RDg]e!f&f@=?>4SKa:SR"Fsc*nMU71FKV9u/dp\fKb1&e"-@r,Eo)RDY
%o]kYhL0JA<G&iIN/[0RZO\,VM6<M**JuaU7fgE1h52F_EL%isb'!WTLGKA'QA:u\U?>^835qu9g)WAq%,UM>]F[A6DQ%X%Y]"]@I
%JWLEr6$<fcP/f:WcOrb6m^hYB7Pr*)Um??s_H#[/F9niX'A'Z8[a6'^P"aP_jqS+UmtD5+/hQ*J2%/qZgL='T!?YJj<&2F*q,LDr
%(=uP]^dSQEEfe;.F=rd"c%FR"Sh.$'%$;N^bVO'5HTT.KlqQAS;Rf6W69kKX%&0u4o`qg$$-,krP'RMh!+D8'E*!lfPurR5c!Nr]
%+5I_i_ZmP\s$Bcn*Y3nC"2.6F9@[\"cZ+l3^QY1r(n/EKg`8DR7`]'tHXh$e+VV-Oa^'mHlt9o$NDr2827oN9SmeVA2j2uMjri@/
%aWY+1=9DfMAC)`j";XEqcYWj4RcuRoN1,d,=!aXsA7-,bK%LtV&<1#0dJ"DF$D&T:7ZekIoi[.@XDL)H"#FQ=]9j7D-:Q2pMXX;`
%U.bhH$q=?d;bhFOB/*>(_TsD1pWq"5Pgl4$?0J?[-s)9D=nZ")3*'0R,`$V%-K^doW:Sl+MMu?f,6]c=kiVcDCf4--)qh$djalO*
%HOm@cPO<tU<aT@4cGpKm"f/I?WWRcEB/r@#W3sqi$c:sN-?BS5%G%FrknfiY]+349<6NbLFM4pS^RYf0H#b00/F.KQXYpcK?s,%V
%2D)f>:[H;?FoiZaa8;L(CV;k2d++4OJPNTA5@#q%HlXV[rd"2.5E].Gcrp6K2C'8,Xr3<L:/+t3?04/?%=Gm[[a0GJg2)8XLqhtP
%/U?[Z:J^JHbZqr:IW>?`_QM(oO.'E_D%'#SpF:0<cSEMrZC0Y88TU(g>2p[#I(oNbJ#,.G!>g'>coj-gMQh*#ZPd1]4XQ+05_6OA
%:BgBtS"i8UN8B-*@=WM'U#E%NnapJoP,YrYD-e!k+bcP`%u-Q\298N*NM8OkTtHOO?j94C;FZCdJ&>SXU=+Y0IX)8+c"YW1(SY^<
%_'#+S%pYro;$bN++TPWM'@<<@_lVMlSu4u6RI5Xd8ErYHM5UM44JI[_&6tnKpK<l8UrLWPg+GT;0+0G'<JqRc1f=EI]c+NoBD&p!
%Q4QEc/C+\M=e;P`YIp'*#bcGY<?`ZT=k2#_dFNH:!doq\j;>agdLb`<*#dXe<)OsP7TGp7%>NSMq'4m^@*hQuWN3&#Tr)3!-/@4S
%7sX`UegRpT20oC2XS!X@C01Mj#W]2WSShn9^?DUJa"LA]#t%58?1`M\"MkYgD"YlKf`MD9E\ag9H,`'a2!E9<%#KP_b]>\i1iP1I
%J,\GW#DndsmSn]AIX&ub7lp@o=2Ce\Y:bZ.I$a9qP0S#j+Vhe'g&QI1`#ckV\HpjjZNJh1&3",Qd%NeEa9qJ'1"EBk&#ONVKrn&<
%7X:*6-LdHFm.Q2_NGH=r4(=:E86oj5'rq&8CdPm]g[E]-4u%\]s#B*3QbZ_D.l^7aN(5cCCV/P_Z]*fM\!6deLC$JU&uf`_(K$B'
%'TLo>Rm[E('H'%HTnG^PF[eHH_rj.s4/\cl494mrmd9<-3Td(Fje0F1;-FqL%StL:!AB=T]V.qVAd%&2kL][b[J8$ZGoa"ja[6N<
%4/Q=-2\lYHdA.j:&<$V7T[MZ7&ZQuoK8?N8;TSe(0N8PQED5J%<"MJ>Gg,u"[q8Up=%YGMJnacM/_eC>:O+ZWs/k3[m.=3&':SaI
%'SSZR]MB,U*9J?6N[Q"Mo2p^Wp"$"]%%bC/-'4,E(&?[4:l!L1hdrTjrT?^]>VeGS*8HPpY7$'di?_>'rN3AjSN5;YWo<KWcj\Bk
%2P?_43nPso:b%AAi-cgW%8AgVPX4OLF?C:SQXWtq6uAuIlM+]X859PceJbMN(a<<PKs#Q0n-_'-Zs`E0JE&be9m8uOUj[QP.AKhX
%0Hc30][g&;Bgi]K4RE:oos"#0`%p/(Ac?`J3H]m`5khlonLDst&f>.0"TTM"P%"J*r'e\pdMthDI[]<adRa>QqCqPIoI5CDj!9-5
%_#";R:+O35dfPnmrTa-D9Hq8OBEP6`'3?#4eHU/$Ud7p:XXHP@W?L0(1.\$u\O3hjD&Z&DoTN9/C.r4UO?:IQ7baO"5^"1dkp8S.
%flR;BThqT<N]Yq&fs&ZgVJn_-O3*m;,4Kpd^5c]2OnU>XIgm+W1smY(2D-V/P\;P'2F[9jA6Y\(l3D;.f9Yr65=lYk.B:Q)!BjNJ
%T>;.l/T%c5'#tY(ml<57AT@C</$`&)NjD3k5Z]uZe[>&;Um8fRFa0)Sq_t*Af;ikq>Si<E\b\unWHDU)Njb,*QFT,J:HU&s#[.NG
%K4WFo<Y?\*Q_@qDS7[j&'cdum&&hJ0*Cgt#mdn6_3gU$TI2#h(:g.q)P%0ba<Bh#]@B-(1?SsLdZEc4A/]ic[,7]_DBVBX]A"_MY
%L6t8f7`=TU?3++@^=t";=tJ%Y2ijGZ"'Z60raleX1HMf)pnQ;BfDQV(aL\U5&%0tiWg=f$p&*[/Gf>@:\'=&h%jG5%gLFlS('^N?
%l3Fh[aF%q8AWb>=OJ9"_:^Tc6I!,M"JaiC&MbmON%3lLg.(GWVfCFGh6#hhLn"s#rb&O2VdT0ZlMLI&HX:bb6;Lc5.)2B!1]\31m
%$bEMnZX@L3--Ff68<+i&#Te[!D18u5qLc@0iKI?Y'!f`f;I?VNqRg7-=l2U_M_/dj1[5lX[f:?r#$!1.,c\S6Eio6hjDOJ]E%P)p
%3(WhNTsqh1!I(OP-b0e&MRA2rKr]p_;$h7V@&k`1GRP$Y0]5mX[).\t6\O?fDVDsBDnmkRZ5@DL.k&XbfmdEZ[nHVo;9C>c_d@]n
%Omrg'H&I3"61.jnW:6L@)6(2qaX9U=(3(#+7i1Q@R`c!-7j*&PD%@n.HE8(^&\okp&9;9Hfq+7#n^QV033LsRXrC"Dgd(N*Y`po9
%K$8+2j&IRb(^p,]Wk1RnEk.>`$3$WUlj/QT5_B&N/so6T0Xsr[=<-s887fnN5c!\^OGU<3CdA=6ER!TDQ!Ka5"$=n+N@)j&bUJDE
%,am3%'`TRhH>WW\oo&A+o;o_1cu@5NSjIl^'Yf`6U-FPRV/QDMK1(I7:m9o#9cI@)(L/-g(U,<r^DF,*_8DET4du'hDdp?:C=pJR
%0E[!-BBAY#>2hri0.\;'nL5gbrO\PaEfQjrJO<WH`f;)=oY*Q4!55rc#O"pLG]t'SYCUA"r2-e`O`#pS2>ft`s1A;df&XNPI?gKE
%H]!t0J1;NO+"]fPoYk3/IX".6FS,/9+trI@g83%j8\Bt+YJ:6-aV>VK3m%3RmcCMp`/F@HGTQ5_;H:W00Ts%3%A$?)Sh8Y+3*Y;h
%?1*fTSb0SNY.!EsY2q/db6LsN^[.h.@nO"rjL^#ge?..:#'I@O<C31N8m`CX0!R#[qmLM^I>tZt3[[#lpa!7"%?WdT6f^8gd(+>H
%(dj1Afp#'PVMkA6,6J"V(a9atLK7;"#ppl@4$4V(I<^Bf?1H1DbjKE5#M/M^?c;oZ;&(h<E*A0LGOj*Il!S7Z/Frci![YNM=g2T/
%'JMb2+kaR.RQ&hRI0T&D.=?&KI)IJbZ;*.8b(%$*SW>pUI[#$TWVQ_lOg@0IWKbD(!BM0&jj-eU^=(^Rb)((Z+IK[KTb$bVs0tM*
%qS&U<141e@k48?p%L\mA5TTZckjH<\@"McH5T8mns.BLh^u_hX5We'naf[hX.?X9>!O5aM#`7NuiAiItL7qqD4!IB96(U]S`=Tf<
%,JA=$+=JRpP6mHo6n;#6lSl2Nc+?KE>"_$m(IBtf*?hO@8ekoU^r+f)cL[9"62YVWT#cH4!9U_q2K)K5QP_Q.$5UnsGc-;b-:mMh
%[L\N!UJM[6l.oprF^<M9ma^j`<k2kI^]<*I;$LTbmUks)0=OS)P5kDp?"7#bJ.2?W+M,C0UKGNj"!"^qf$P9;kC?*MFl+i/;2A)4
%OF5RlGEu8:0m,qa:):N-n^ccka6`H#W[!%P/2#&q.sb.`V[%X9qp8=:,2K0MHB-\c]343S0^0(eR6>qB$rHm8XI?$t`UfMf8ng7'
%;E@(SUY?S/J4#]QOX2T#aa>gr;Z2ue>I[Y=$!,%`*@2$Mr-"7<ga,:9_;TcjRBJqY'&Y3_"D9jZ+mGlhEpQ=jJ/TXW4/RgPqL`Tg
%jf1#'i802p)L]W9Ka/]"=/#Y_2f_]nqmOoE)skO"T#C3p!NF?';eup7c`.A<UHlq1KLcon):6>=071%us14Ql]X0enG?"L%f0N_n
%<fq(df^UQZ/^:Xf>.?Tp=\H>-Ai3/5KRO!1'C;j\,2q4L_.#Q;79dpUXK/)*6i\iSOB(O5$UfGZmp0bX.A9+IjgM@pn^;0E:&AZ5
%]I%$lqVUVpJLXOLA#,S):Ke"[P03<C'Q[u>FK-L#!US&g%\uSa#ll;+d9He'Z$GfhhZ^19k2GBV"=c_/l'1fJ7[HAD+;nug%CT%(
%J1PYTWOo/dpsA7*binrVbEX+'V.82qeG4cUZce_4YW5Lk<LHT^D7/ul1^jRU@ZCK!7/#?RC?mt5?q$;5S"\Ef!sDY6a9!B\H31#D
%7=2+oMA2GD3n.uo#OA_ZX?SAam@2mE^[.8;0Vruk=I;>MW[P!Ig)`_O<>9E?fPS[f[on1uB0h-72qD>dKiJ02P\MbE=e(sDY++D%
%e83a2G3(@a<TUu(PYsM8NF`F'(C>@A2)n'S(pZ"iMs^Gt_YLQufDt:d%aa841ku*1Dd:X9/TncG/"(2q&EWel;Uo9+D_9]KH_Hr[
%MI[stI@4drAIe-la'%OZ)FM!W\c:jk:AjbuIALU+6DkI#&+5i32k/7p"?aSsm88OF!ecSUd1IJsMTj"pW0TE)XVehGfJ@Y36$EIl
%77P*:(L[u8!Rk&(>(PGj;GZ`m%';+JX7K0%W>(_!PF1*b25q7'@>O'VmE^@o<U6^J(RM=eY6-ne]Mr=F]W%cN<\C969=U3>2Q)OB
%(C(kWMr5Xn7?hI5l9X#]/lb3t8%l5/>eIlDMdFWIjfDlh3V\,/^@aL=X$AqHjZC5'SFjdK*mN3u@_lN89BS1%qFE'jkEcWZjJP'i
%+bV/^!k^9YYbV"]PUsoU(<7cJ9[W7&,_.T0qJi[0qr6uqB7Y?jDXcN`[NBc#orTE^M2f<H6WN_C&Rjfr=i[ZT>%ACOWX$=2Scq#L
%g,e?Q^$Y4Mb`;%r$oY-IZ%MXWXe6Wlp&[3`LA#,VD1CRhY+G@HSZZ<@Abs-sh93f"VN'B.fA5r>]U_)?I$Sj5AeYj)@Lap*=di6/
%KCZ*:1&efZrFO1<.F'JTYKZ:IY$M$KD5%Y3L3e^<%53c(pA/L+*rFsY^+g#?,&q9jA4IWRCJ%SH\4Tr>J)o4pd.Si3TdV!a\fR>[
%0(?lECDB*d2MfR0m+$_g%Y/iNrs53OG6d*Y?TZBkXskOLK^<,[XY?`qLObcDSaa5\8<J!m2$6PpncD@%%DQJQq$mE;.m[iM'Z=aC
%/*81nTIO7k=JMf<I-9pbK1(@Da8S;PJfE`Zc7XS6ih7tH*\oN,?\ChG]n.Y5SX=(A+cHs8'q--37p%YfFWHY>nM$db"O<PinH=Y7
%dFZ)rY(,E1r5U[#bN4_2nN7U`IJnK:e:3W(B10\hgCc&9Cc)I\Xlt:[JEAg)/5P%ILr/K"^%Ka+qo3@J$Q%aeQ?7BU^OOPl2n==p
%[Y$7GDLIp6[E97:c>p64\H\?[>hDjI7:nAsGDe-qCm%17456.C'7lH'E@COlSWNc=6#fr;paa9%S:OHYai1_AhcGiaqDXaSJ?UFk
%@$"RL`HH#:@hd^//BI&?-=%LJV4+/G8>iEg![G?<m?&p`>V-.ThibZP(c(1UBTJITR#")62r>qYLEEK_Le9(gi#\pF"Q]*PAIbM^
%MIRi>+QAkRah/LX\\jhYRV.\*OB;K8P.J97e\A?0=CZQ8)%,K'Z9Lbe7Xt0b);a=D/_ERdR]@Gu->@b'D"j&^Ig7S;B'scLB(E1'
%&.uk)6c7nmM1/F%3O[6'hLB=3#"tO-c_b0KKsHAIA`sArj@Z_*,uBOlY!fU,LQSCYANCq_@D`JZ$Qd!UBYiaKb4:63Yg(WJ/^?t&
%Y*3i?"R6hufXo]CBcZ3:>;9(;!2,,)`JO5VRSfPfmk?)]#S6p9IQm\:1Ks9pJ`J9L>f0R:A0Ka^0p>nN+B1jVZ)eY08:W:uij_C4
%<!8>8I5gb/(*Oi\Q*SPY#ZVJT+GQ&><#K,;aR3t0nQ@P\pIMHt2h`/S`Kqc_kV;-4-cdp'iPDXLJ$(i%HBq,4QotdX$="J.:Vd%8
%ir>d7Gn`:h+Lf1KWJ8L2b\&7Hb/$:=LlKH[8B+9)(u_\K_Bfti&1pOnQI\s>o4DP$kY=,se:NN0R*/Vq`Ab0Zp0bG?e"$<Qkd-!C
%^E;jc_su'&\7t,mar.uS.!lDn*6:C4Np?`(%,"_7W8#m_"U&k['?^O1K[n7!g-`1N`@6s5KK^i[O(\sP2eZg%H%-th?]:`a(mNW!
%G[,NX;P6:Caf=B`"nig.#Qf9PZ:6Nb&ZC0:"BKZO3YA=c&4sLQcr9ZFI(+aTUR@jI]t'+hRMU&;,Flbh$huJ=%9:gj=Eb@+J(<b#
%,p!_KXdT[,\[=7K:[`>Q??uFj(Xqq;ItlQ[9_A54Ge[oNT4Q/A-F7FhGHlFt6M>s93c(AC*%!E(]%KuGCt_bI._t9:^i`"jiPNb4
%h.LeV2VBJ$^?JBjAC-Opn_iX;2,0c/H7McaF1Y\]+/()iZQSesi)d9U>>s43B$i/;9aY3M?^5oJo2oWb:Sl&k30GcS^=7g_ae@%7
%h@AfZE;lf;JE`4&3gT?tS16o&Y$*)+g)fQl0+1$J7b)VUQA=H@(>QpaSt8181m(Ds*2pLq<?,Es:97P);R'e&T#u`90]&AkiV7Ie
%`4'QS0Nej66ki8_\!d_,,'bR^dLX1>ORl"p/`Sq^X'P[?9:*n943'[G+aX9t&?f!S;(sodj42+P[oR@d^05!&e`^,Hl'(rg1"<Np
%XRB3fG%h1'CMht&^NoWnI0^36pZjg5X3X/i=>]qnW.FBEF^Ak>aP_?8LG^FYfWF#5ZjmKbk?P5*VQD#B<MOc87m7P5gi0&Zf+DW0
%F#=Pg)"Ph.2Kl<+Fp$'@`GSA%JA$Y3't/]4PE&p:a+B?rm]V<iF!T\AR+?C[&gLPf63Yn8=9RTN=O/eN&<M*K,+:'.-MI%)beIFW
%o#KU=YCsdS0.5aJ78\*o5k.qM*5NMPG&4u!aO%TU&j0(>:hr\^+:B1@?]u0<4&N!"bWDmpCHjdc39dRe:fT"5Yc_#/24>>a2;i-'
%1`JJ2+_m<p!F]'M.J7e-_*:?)0L0.f4_:uF9K!AE^$ZCUak(pkQa0$*1[)q.*t)Qn.^S%5G72pa_L,e5N?^qm;F(iZ?(.joZL-Qd
%e/>j:=NEFZ]C%XiRc5C^*HCcrNFgZb;=Bb_PQRSY5YpLN(@HI%0C7WF?p8Q#H%N!<%#<]@0qEC,k8t1=,hDT,'7jXQe9\Q].g*@:
%ZZ"PBrAme*Y@b/D<W]*(QFNQYq!U:ko&%d:Hb"UT%WA5.<)K2=HhX@*JcsZE<8keZ"q6bM&#-#`s$KlqG0)(DZ/uOMYm^f$"Rb7&
%U);=,\ZNhm"qi1I8_D2\hHBJ,C]D4@dEe0LSnI,bAn6m1WY&*T_ZOj,f2Xg>*ClVK@.J8OZ:o7.MQL^"mi5J+EW.P@AcIEfiF9n]
%(A?/X5'/5[g^)5iBZI<53!Hs8Mc%Z>)]SBiP9rlAJ&TCbUC;5E:!=Ekh=_s.,[-fC"=-nFpl"*?OY9Deb%CXMA+4!8&:U4E\'C(%
%7E=THo?;bV4q4:&'JR2"n\Lq&l.ZljjJkb!%OO.`5Df0=ST5ED&":]@7+q%Q#%>H+H80PSg".\b-sZ[^8d4W7%[EtZ(?.tgHrl0l
%Pf0YD`"4i9)<NjE_iu?"7Qqeh_Ng>c%OF(0;4jcNFuaht;EeQC4qZIf^;f)e5r"bDY`DW*l6lcr1XBH0W,;<:8Km&.rbL]`[ot[M
%2`trF?k5G<b+Km5De>\K9]?HY=[d)@Fg;4pZ@fUT(/H5r3SKm/f<")*Tb,&APRAI&eeh;9!ZpVd&Q!>9\H8O3?l6e)Ah%9>MRud:
%PRHX[YAWOfEXNaNYmWGOA)_$'?0K>k^LgebS%#)4:oAqj-h@:3`HX?EPo58r/<P\o;(pSa:!RKb'EB(rF'L8,Z)t]Fn(X*>r9*2d
%hNbBc,`u%0EB;#H6h$%&/%?."n?[.*Mb)/2U`[C,N\SN(?Ac3H#WSlq^sItDU]S1JX;A0l\8@r'8U2d^jWJ8&q;#YR-+'n]COVaX
%M2W1$SKuD*PBI1C!(jeq7S[S*"J`20IT'5^C>Y_EJ/r;TL6@@$_#Q;\@ZE&DeDCWWcL`*uV09duAJZ[kmN_KV#bO.V)s?D"%3`@i
%-smS.(!rrd9aq_pVN"b]h^&+8'G<ScarT5qD@0&KL?S@O6VE/@-N7jrA;\bUA!E?E#!joH1I$'\J'o)[V9C[D-F5(mJ_flYnLU_[
%-Y.&X,>'GdqgCa5F8X<<!ru:nCjI'cTI*s']!>OpWdu!r!Kfb!3lI+O!&:jYVsi9NPrlD%#`eAVPC*r3)U]1a;02^lY:Gi'=j\uu
%mQsH?(6WkU""HjG:f./Fq-eq`*IbE:O0q)ZjKL_+LjH>)R*Ko0)`:kb:`Z0E^WM,&G8DZpKFWOlO<o%o'1NG:!:CfJ[r`Na_`('I
%&@itf;Ah*NV]C'h5Z.VFNW#,Q!<CR\0oSl1]^*HHY6/+VO/(@D(=%QI9-Qpb%SYS@*mb0EmWsD)ZHl#JV(9!R51<*gH64p?eI9Up
%%ur=OYcFt0dXGDXgR.UhhA#d`*(U_a_U/0rZiL`@9:3T5"%.`eJUA)_'KVk!(#C*HAfBVKN+-KfmJr:Z`))0PGkfpM'ImB0Zu(@m
%DZsNtK1QP[Kd+!6oOY)]/]C2Vp#,q(@L2UD9E#jb*ZVolD@MLmBA[/7"SN'$;eucYb6*%qDrq_E6DcD1+?D?DO_E_R-D)N=^e(eb
%&[i[RfjiPGX\f)JT`d5WC7tgHriJcB/Q$I,@Is",\dOPW5ds&9Dk-^'Wn#`(\f8(K8`!]&[u7:V(Zg/FhoLnoPVPm`(@Y-Edg;H&
%J<41sX^m^dm[q[WfmjIpL_Qmba'^eR3sVX5C2Z'<El<asrPO0rNZn8FBo@nuViTXDYf4LW_Ektp&#/'<4N5deI^up6]GM7Ol#SsM
%b3iVH2Ak!'27!VLbb\N;U%.V$5"@P%=&HF,T9l&tGc*,KdGpdbq's/s#X:f,q)S*<<LuDmm27sOOIXpF0c!paRck%J'F6:><gjR;
%dX8]jX#c&%?@ElUpnB2PdQ5]>N3Y$gUF+Pb^FPYC&4"P7gVl"_N(9?Z,>e&tK`A6J5nQ7>*Otq0Vnk;`PC^=NiP;s2$Si3lXZi6O
%m;`#ngZ!R,-d7n6SABRUB(&]b3QH0M")&h;@L@c*6X2Z->E4J9=O;%J@atkWZc>C\A"+dD/TC@W[Dn-Xh+6_p^RM%R`Ph#j@0$&k
%Df?FMZRbP+l6+e-7^4$dQ4CA5SPAa?,dNM&Y^CamSSt(O`O+^ImF*pt10lk[HcVQ0l@m7)9#X/.\\#ri*.n1J[G019kr-YK6b/VW
%&gAKWV;<h)P5eYJs2oBt]0o,BI.]GaU_,46lq.X-+'YGN%bH_s:E0K7?B`A3IJmt3#ZsbhRjT*--El_JI'M>\;Sb'Y-,5?:6!gi7
%^;aQNd+@uoVS300jlOMbpE?1bD#O]EV\Y'YaOh?MJ__E7n7ek?=6olZ<t\%9PBR%aX1nGDUeCs3.QHrX^D`#F,qC7XEu8o;>Y3tl
%%'-_`"nrD_&,<QQe`,R=M@OZBMo@mBFG1]#:i.!7(i1YHn1:UtBF<C.T-*jkY9j1IOlLA:#[P3ESr,,j0g/[R5?[\1ZlQ?3Har3]
%fAKEU`Kre?cb^sWEl$,]";f)a2FBIe9oULE+W*Pi/XSOEU9f)Q]br;]4m)5Q!RX1S)8\r>W_"oU;s.+HHs*%)C2,'Mq@SDI7i\&G
%X$KBSEWle0C<`:EG+u^`Hng&.GhC&A9I."deNu,Tg>$\&WM^k.E=ufi2jId\GV['=(sQ8PI5^8(]>*&Ac^X-D\'\m9L`d]GIRV#?
%97)&AkEikf:;OgooD#N)!f?^X8""%D4ig"nhkq=17$fa$BCkU5MYKR`G,VL>3r"^]LOMA=8/M?9k",<X,A'VF(?oI-K#hCLKOV7@
%XZX!%,7uB*;sWsp:,?j&H"`3/]AoF8,&-,06oIO>c.YWLEg&6!4:kYM*!066Ptjc]%OIa+ND="U:&9:"HWg^kD?Y9^S9W2n`oAhK
%n0Ze]dsbDVkJau;Xk<Mdi>8;*^p]-"30p&e@5h[2<j>3TO=ZHg299/\.UjX3_3Z_GaY*u]Xd"du'kd[,8$lj$ce5a1if?I,CW`#o
%_H4S++G^M&0elNJ_8GBX6QgH3#IP1a&JHtq/ib*5pM\IS+Y%EK,!s,;[Is8IqV?aH_EBXQ3)KW^^SKqbB1(U\LR\$<5aW`FNT*rG
%/qg9%]a0&,,3[1f..\nAW!sT@28QKSb9\ro:A.d20HfZ'cAiGCb_rI9mp)$\)L9:OOGY+'6JQt/,34sc!.H6S+S=HoLU_trH?36[
%Yje>)o8_^:>(aqZC2nCg*`TDf9I:n0FA=O>dgWp=9774?lj)?EkhTGK&U.0SZ+70M/Rf.[+;n$M$o<.sXn_V]g[umd&[s<p*qi/X
%2peMlZoBW`G`5._cr.k@5"2dL*#V]?CHl\-gFmAaVVd,T)aK)&o#X]E#\Rt1K]qg9hQA4&nN,/a/nY"&B`Ia?&/>HBPfYC<LgNC5
%FRTeg[l$l\?RQm,)U-)I6Y+-fi&h'V9$SQfDQhqDWrhsjk&VW"QoZ].[IgJ?c!:nm"_;(RAjH^adF[16SIZ7M!>-&P867-9r'Icc
%'PO&M6n*2h30*FEXi$liR>u=^R=t]MO%=d!?ksf(\hYmgo7J02NB;3eAW8`q8n"GmboSBs`l]A'\.%hYEd(OBGZVj#6\J[lP)48R
%G?+@Z`V2<:\uV^!3C($i0b;q_RGi?))`#j7Aa,"cbjh:Jr+$8GDj\W#9DKC87&Z(]6!C9D8r+uG&Q,tNO&4e-+XfrDGN>liT]XL*
%#`n*kW#L0;,GJ>*^-/!D->O1>'nmA+hq?MYpau\F=*M`(Ej@6EA`X+Eq21r=F:)-AFqV7E$s51JY.:U`@q]DZjoE1jL=kc=e;`f^
%+9b'BFMM`P6gl)P]BM:R0UL*AoGB+X4L,j<[>4g%,UKd+2UYh_Pn>D:(:F:!:WVLY1^]Qq>A4Y,PnH2>6A=SL4>O1aQ>OrW`BqUg
%(VoL%,,"\gTPl.b"&)81'b*U0D_Ldi8\f5n]1]bMj*LF%Asl;CZ3?S(pZhu-pEsj-OQlghFmguUk50Fmf[nTE+3^,K1&qN$+Kb^e
%&od?]+gK7a(P=iW-Z05cd!X[f/s3g(5Zc_,Bg;1#cPuUfHTrIi:%(p6OXQ5#(fRPS6qYXu'm8%!0Z7^314@%8\W!JT:.@MW#3pq=
%Ap+!2=hWMIn'-_Y^7o!21s$LbYQS0-m^)l!.(?7BHG&_8s+h@m^mMQdJRaYRN=I;(1`PD8>pcPd*-Z'&o)#NLYO45XW[c0^DBE7B
%7[+]1:KBg/i?34O219OFpV&7-O2sQY\/$-+"Z)7<k6FLj4b1VIOSE7>C_PMKSBQM"r>\!jR$>HVef#4hQsRpUUTU5@)26@)>j]tO
%5rhe9P?*U:Q_?kQOG?E8.,V?KQ(8T5jhsJ$1uq,jeV/k]jJ_k^quP<[,)OK`U?mYO%]l05_QhJhhrUC_aSW?hKbWAW]E;1F\L50j
%cB?&TbYQ5t]<[M/%(CeZid,4FXU%+)p'#7e*8N#qqi/u+gB:iR-B`X:l;n\*HF$coOqp2`$W6S&W/iLQ>uJtoG:ZDE\ouZO=1anO
%TL2SDOMrf:>[*n^=+$?NV7>0<5I.87j,4A]7e4RnDu+E;s*UL;Xm+l>p9".cT5d#F-b^78_`.r+7NI;8+Ku:!HDSIOm*XeN"ImX_
%m>ql'NajA[JCQt&-,?FhVuSR@P&5a'M5;NeW*ZPbY-XN-0rIamb)B(Y!soIHIlk$<P#oYI4#=BW8cI;b^N.kR0R`'+="PJ@`+_M(
%Abs1"MI[.4d4D#CWCVohA,G9QDa1kODVAN'jA4u*/Oc><2-Ir9EC-5F#CMGbDK=?i.sA]'+IRf*U8#A]VqlXqL#)"1<>j99D2*&O
%FIUQ%VXn8ODjU(pG]WF_=eNiip\`XP?d[eE7k0,CG`]D*mCQQ1$%\P6;tIncUP?:4pDP0%D\=Xb(+c#<UaoH!2f.*rcYB'^Hj$dO
%OiPG8cdaWd'W,-cs,(XlaQ8r]@SR/jCu]+\d8lXh(2@<XXH3&pckZ>,h7,uJ#lZAMUgtZ0JdNPn`'^t+[jR^g"9^27rQQN86,m@^
%DdY!&K%AnR*0,[#2!8:g=0q>:X;f0\*UAqaMo'tg>)Kni4Z.jkk$5+aCONfMJ6sg&_REsU%(nF?`2'tBkhSRsP_+;3Rh^0A&j]2u
%r4ij5RurimjoQ'@*fl90TY!d+HV\tJ:F'\aQmm2"qUC$;.P180o\`1=)Up+i\m],(;FiEr'$=%>?1tS*VrcVn*kuEA^O+5[:KKE)
%=Y2%^8@[+WcKLK^huKV)^;OF'iZ=;bltUr1@CAA\&s^;#RO?P8dr6J(8ne?)C$BE^)4k!d>E9cU(eUn4`!,UFVBW1C\'M$TL6jR@
%8?f3RQ_)k(ZK0jK'+HrO+VL!FdGU:IJ>n@;gm;tob7L3qB,fpdebNu<"(;@h&(:m\mGG%1JQV$PkU`GL#@Zt(FR)epIgqo8Zpp;)
%RA63N@Oe0>l8CGa]l&.A,mu)AK=XZCH44=:(rMsnkk2RbK1Z)L&!OV^QN>Kdj][U4(kW[$0GCk>5W=J9s*8NP[eT5*^=_T*3"<q=
%NBuu"bW8ZZ,a`2d$@1pmmj!jpkk![rL,aAlK7o%N]AD!QHiNA]G^kf7(6n.kZB9[APH'Pfc#^ank4NmTfl&(jo,j=iE/o%Z*>*r!
%.A9iJTKhdP"(/&;3fl2C;?iM;[-Fu,8l5sqZj1BFJEc-@B#>(40uH@2^.*)EMeTBshcWqa29/'9Wl+[F4mjb[EbAk&:([=0_Skk8
%iLsIldO7T?5<.oI^E(`CqY%O5%d,8%7>nMDG`ZI07t]>B)=i)YO@jcGh.Q9thB^8n_"+Ba*mMtT5)TsGBK^f\3fsp;o=Re_aR$t(
%GG,\ELm_PC@%A\nfs7E9ok&jCqeIC3VI[d.a+R:mG<+n5!O=7MKeIT%]A,d](h.qs)up"$dnbMkTo"Mr@5BFF-*!@OnGLoIOk,\k
%$=4>;53s8Z!@g8VDeMBNNs]340[RJ<eb%e[SjrWglaNo(E;*F#8c?DR<YKWD@"ZX)()?<S0T3S0J?B)l$\@3LI&b95:tmIRAKA35
%=^(q:M^pd/)H$ld9e$%8FM@#Q;6256C/[2K4W('fS4d=`'V-.*$:ra(W'pZ\HLMG,%4uH3UIGn82EO&\LRK5`50Vgm`1,BW62A/6
%+7:e<TY5<\%%ffW?Wj_@\:K?3.A6ei!YEVUo+M\,8so\oH+%#>Cpd2lqC1Qdpd.(r+I/qFZW@tuobgU4im;CRf8dMpo$?kX6Uk1j
%pP=)#4W%&hi$!o(!.PbuH.L<IBnGki2<J3"GL%r>K8HdnZi9"-cIPNNr6A%BI3+.#;&q[p(F1o$jVYc9,+k,IgU8olmeZlH@TAN@
%E>AW?2D_VLq]19tAP0"U3jWQP!'<A%R+,#)3F2_tAXJnq&C7W<g0MN^E*15?GH>K>?,_CD.X>Bck0/^r'a-0FFINFf:K%==Zt:[=
%hO1Re2A(-[1k-D7_]4mg6=^(@0Y]."%/dXOncfJ]%IR70'dk(lbIjMhTk>FhS0+@A<ejY,iQrYl6CQHc<WgU\&bnOco,$<Z08nXF
%&/crU"P;D4Os:.b?&RkLJYOJ0+M60/_K>C+je[M((]-sl+p.1k**C_d<pCV@`@XCZZB&^6i#K(VZpH-(WgmT//`%O4j8g\b!1.7!
%T7%F6(7LYC+J:j*M'Y#a?G,Wc%^<j9=aq:go5XZ+TpDE?g/;3`2/5G>>ZK"c9DZj[YY7a:lpp1-6*8(ps.DapiLKtF8j[#[<UhI^
%q'u9Ij/br/,e`PGbr4(8^G1Y3)]qa*\@j(t6abI6*R2US3^Fc/&9AItW;b,'h9qgqiYg"uc&igYj]*TsS4&*"fX=F;DIu8BEAi[_
%[):Sk'MiGo6$Df*+XG"t,er#$(MlJaPf&>"2pX=F##hT1WGkjmOVO>e^:X1FZesM_?X$;qGX</)R[Qs4c6;^iERu`?(tj5MW#/7s
%=^Ng-Sqk$PGOh:rC&Tu4&)hE*hIOiH:@F*D`;7e\Df%7AOe,qQ7lt9(&aOgeVnBl/!8glr!dgkQj2<o](7&MFCG'L@TP[M/Ysc4C
%"@MXEfOW6VOdpS3MP^[+!-:Am&_Z!LL-qVBILS6e.]j(*(n#.p"I8rNQ"MEY`LJWV$eX6,ZGa8p2;).HU1Q(8pU_q@ouH*i/:X0@
%!)#R1c]`l9A3&16e@UT>)5OJYE<rABCc_ZEnj:`!J5c<&@Wb[A@8*JN,!=$R85_iFQU$`ADC.HL@!jSA$>OJ.J5_PfiIq+d36ma,
%5fgeDW..glg:2I<^k5i7-ebfc]fs-pJ*?.C,R&+6oUmRUdnR;dWWKbjB([kYTf=eJP*]BYeqFQ+pDdP([Gn#.h5:V]=L3^72,\bJ
%ftDBCHr9iaYMtI_U*rgMS+m`H'IJ6%A]D)IRQ2QG]!m%C#t(I@,8qQgY@`&JoDIW75XP!0N]`e-e7$k5FZ*597f;.up%`tE!GH$o
%C2fONUFOc;LMg?'c/D6-=O2'dK>SeG27b0$Xs"SbS[@p"MUJ(RE8&E.8-7Fhp1pZO!1D@oNRn#^@OW&.p:3jcIDtP`kMIZ[3bJ\t
%>/d9>CIA917P])4o[e8M\S"_oP]NTjr>6@t9$drb]"Q.m+8F[8rnYUZ]7==FJF,#!0hoi;0]tsW.Zh`Fm1"h<X!DNMTl.u<;FbQ@
%:f/j.La+#M4(Og\S;V@6NM&^Q"DT1\0&.rU"K78mkaa.936PSfN?^V(b)U*BU/$W)I+k9TK9=pl'NLFakr$4;n#3N6oD[a;Ipq-"
%,kYn_6\2st<(1r\@i2$#dAPf_XU,2Aa`)Wj8jB-R9C8mtMGRds?Rg#Q(=c;UYg$]o[d^?]*q6Kmmdjk8,,HL'PjT[SHOd=0`_3Xa
%`6Mj-XhS#qi?;jNKqI5q#M,GsKDEE1N.:ejJO=WV@+_d'p@hQi$)F=;7M/q7RZ6X2K8cnM-lTscKfo#jH\]0^YtSLUB;Q:lcX^=#
%)]<Qt#I)3aQ_qVZ!/_s%?ltOf*$VQj-J)t-:)8+"*EZahCA&BZ0LVs?pebQ+XE=(J-[KT@P7hD@0I('TePOc`=h,hOV#&rR<5eak
%DY/"9EXT&hOWbiJ@)Oirf%KV5,/QDR<<_Z`,_LZ48FFkH$8iH&8.%'@$_`?d'l.Q="^-W'F,ecTi0c?u9=$WImGJF_YpUY^e'J;e
%C,nBmqq3H:h\:qF(5XM_>Zc.M:90-9eMLbc0Pe0FQl6"tpsTQk[6=ka#/6AIM-T!h"8bJO,D3;$R`m.j>X7i^XbmN=b;Ihq*I)p.
%8bkaqQu(c%,/PeLZ/mXJA0;n<=h_uI?PueH=O.aI[.lS'Oq\(&Q3uk'_"M6%)jnTV<$Y=1Tdh$9FssF04mQ&\8('@S)]B$r_!0&6
%*:HEbFJ(SW5G9'&rPq]_;oIO@WX)8FHcgo%XV_u0#bD!t^dH(kX;&unQ(Q0\]\P9lMc*5nUY`J%jS*1C4c(GBBr^/;RYp"H;Iq/2
%:j($]0`5.U7^8IX*>Q\h'??@5A7?V^K*Hsi-.8CbQ'nQUB2.=8qesg3o^<kV9/WOC?G<.?+f_B?Amkk.\uZCbO5m3s8>LE_\JkZV
%G]MpkZ-_k(`<][l*SMOc=]9$S=^iUs"65ZoO$Wt2Q"JCT=<jD-n6Au7?&b)Sfq'sTKNL\HMHoh[/Gu[</Pdo]a?9f^D'jPK(Gk:e
%TAK*.);rES>CSU7>fA5#=O6+IBPG,4:A@V$g'<KH2OO/l2G1o46aL%E!;].;_bFH9J<\19%>gUN.O!!+fE.3U#2!uWF@98aqA62c
%[*Fh"(`nUU%b$LCqZ;pGHfb%=S;kHO!e&24C@tHLU<rhe)ua4Hq[pI=ER3p4`9^_.rND"VHegt9aa%R)jCR9s+FNU#@'lX.qZ[@I
%o0SNnk:eY>$tfl4&PBkFKShtY5"?T<pnO73bD6VuoYB&:T,`Bfm4._[_5PX`N$9Q>nL*90JX/S%N1k-tBB,0Ne`qf?$8VmQiTJGG
%5^.Wk'\%UFQ\GTu]*UTjAhKf!g[U>trL=e+>?FJ0*58+I@pV8:+%1-d]&H2`1PSrb#&>Q40dJ+4_`a+gfl)^TW=O63obs$:*%T%V
%ZZ?T5?,5C,+L)1944rB>s%&e@n6_uQ(KY!3h-au4^t.)JRAq%T5!Ea=ZpV97(.3hQ$,uR%=O+gQEcXH$PJWRW<GB'L0T<kDqW2%:
%o;3t\:j.U>&Xllq!YJ@M:*Wqn?1"KVm;[T_JA=P[Q"3C=rN-Wa)fF]EmEVqAFadRtoYo1$Y8;A,O8VD%n`SZ3n2Ah_Lo=STM_H;e
%ET)R9&=S9[.GEPndUuOffYb)%e<?]5j8eq7X\:Ga.&C>VmA4<:Au;r2f9W7SqaLD=*\Wr_.jl4Q>3"Bj4:70+=f/kY>9?qYWr[cE
%9:R#E$$OXlWFYi,&fo_Q<hpbcTn-tW:j[e05%J2(G+4(6a3%a_eW8_BQ^7/A3"hf1DlEoGK;EAJ]'/68b'"dh\;4"\5'U<h([lCn
%)=d^&0;dlW%_9oX-i80\0%Q&0VMk"=b*9GGOh4Ru\DK%YlsLj8Q&=?t2'D<oBs\l2`aB"cOh(\`1.?gJXR2mcigj(UR-q;?h_`Gr
%1m9S'&2KA<Fp0rVW?X&3k]XLQhk`&UeVjcq!eIDW`mQU2[P#r.IlntE4abVfZg`9[&lO7g0\Zs1kc-<Z;bW9E6"KU!,[gaQ*?j'g
%r&A:lr]L/eqms=/3>@i(#`9q.\e+\XN\='YGZH=YA9'uMldO>h@AkkfTeWo0^H:@<JV,]miLS*"GQcH$?d^q47Z]YK$?7:eEE&Hg
%&9Pb=dF5J4^pKUWY+8Tf9hAERpK\8<NIj?*85c_S=,_u'$"=6AWnHbV/MN@65%,.Q;])HFShNaIa?tQN=Gm0,!>dBZ5`D!`9[Z6r
%9@4FE<^]k+6Gn]b^Km;ELYCI+(j"(WQ]<No/&ckB=nd`sg1Hk2O#ND2,j+!4^Qnb>,-&Ca2!rhg#qZD;qoUj+:60V[OB<R6*`N!>
%qMVF<YhmK%'$mCs^T`LE.1\C?>`lpX7&f9AMs->/5FB6JE$Fk=0RJ#G5sHh6D].%VoYG8aVs.%.[>Ne3USQraZ&N^oNsu[c$^:aS
%7+%=l83DodMcp&+Hgm(@Jra"3X2TGDs#2fh!4&jDQU;/1e,Y;Y#>`b?];QB_$lg>gDpjZiDFe>g'@2ROb_lnuGd,[?fg0EDjBkPD
%/<I4)c+A=VS1T%<b1\bXWWUPebg::m/2M3!*RS%b:R'>dWB[D9WeS$[0AcBqTml;Xq2gNf_o*dU(NCr:$]qGT#d[Nu,sDJ#L<Q-m
%Y_]ZQ3gDF7YThj93&t(L5qIQ"6MDqk^tPSl.i/0g$^;sj&0]g3%ZYGDE8L&0af^s'f`3WVjTAckQ4JTACC*1qcg!Ae%NnZ#2]-#L
%_T`0LqJ2;)ZCPV1qh?7PWRNEk7J`0@oB,^9MqF=#qt>U@[M.hV>P3K?<TY7$#EQ6=E6=_24'/\7aC\(i\;#c9e]u3.DWmer>]W\j
%0TN>*CB/:t8\`X.4HD;>)N!B4"."or!u?T)L^lUljZiGEqJ!d;Ms9.gJ4YjOR3e@qGC"I[Qiu1o@7Bpcis\g"`:VQ:QFViL\rDU&
%:srMUa?KGIGZq5-'tmfIO'IATGJNhJI9$8ajV2>X]dlo3822"d`l&O,LJTj+439c+Yj?^jc4:CJrOLC<l<^q1]aQMopVI-;N90Lg
%r;Pj@BhGP,aV]\X24YVG/;>'R4E0<-obJYQJur9Q*[Ebd5uM1Lg_oJqkgsep#:k9;q")2r0Z/66P7Y//3H130/P\8<YQSUW9gTE\
%>)J)T^[Ikh'8V[&<CZP$g=eSK5\+^=FCB($C&t5hDuk_VaJ$&q1"ZMU0h]"!\be22%S/aD)<"JmO\L3CXc]B-(g8?3@5dfdG"ot*
%oB`CoAm8?>]ih1d)'A=aDOmOT@8nR"Ufe%G^n/T2C+CH#2Ok$3hVXVeRd^UA<b=(`GN,m8\31A+jKbchX^FYVMa/,T_6$4g53G?6
%F.B<Y>N-e'mYEY(&8ib':pH4qE*I(rUm1cia5dlAb!4&VRT1AIY/0M-dp:doW5`&#Q7U!6B"F<h>'Ks[%_OFbBdm`bB&[CL6sS_L
%6`]C@9hI.KR*Y-36aK9KOg>E?\6YQCIqgIm\\,o*6ie`feCKAq._hu]0P^;Eb@DK8aNJN1./NTQ@/:qH:AH0?r=mD`CpVWb>kKcP
%NIW@M4cM'=]nlddr-gJRNOP!dW#KU0lXAeL:n=k+W&WAKBG,uP**scW"eAtX%Lfq/KabLB]'PatK*hnNochA'L7^=f(.g/^i'.X,
%9G=oO*9J+&;gi2TkiiUi2?HK=Cl-d%ZVpWhXFRba5)Dd.:8S:@('o2D4bhu-k''r5>h,8l"MQn"kE[tJ$;dJqXO/M4CB,&nG!Jbl
%>RF"0U(RL3n7-LOeOu4$&>$mAX3S[\F_cb)3#j`]GIlpJ8KFU)kZBFp]<a:L*OL>6dW;2"g-e4@.aL6NVb(5[.pZZ``E>W!lqr\V
%TZ7cQ$.d.mGYSG)_UL[Um`NV^UD4?V/]fctm.L+7:F[RrQHW0RQJIJ^MTJC+7KG8%='oCSKj]_Do9'X-,+s_e0WG90$CuC52&>8o
%.%#WhR7n%B>SG%=5B"C,\jE%)=HmQK7CDI9\Y,Rm7RG3pk\`!D<31UV@d0Z4XLd"JYqK;e]lX2q-g!E-jI#-0#P]sO=33nYJ%B6\
%U5D75aF@M[_iN<r5'64AQ59iTOD>*b.)Q5`2+Eph&"40d(N]?HKt4N-('=OUWs>7M+5nl@\j-`'iWLTk721M89f0(2#Nq,*MIW8i
%P4!-QZVg:1L6e97*l=/fQ[e_4[&:f%?`7lF/_O%?NDhFSL`>Y7@Jg*th8_Qs.aY.<i>%#S<UD[q!VLF#M-G4E.\?\,?SW@?`6HI<
%2l-"c%%Q)pM8>q[?9#Vg<5CWO&ZjUqVR+Dgf>b8%B@kj2"Gk@k.Vg.na+A2#76>oo$&9e&RnV3RJ#LWO$4*G?C(T&#D6UMA2WJk1
%F!NUq,?5=%_]$[o'O'<Nf-Xg,NZQY*pa04:(>cO+U/IbO!u"V`T>Z(R3dO1H025,JKoe'ASDDYarfq]V$UHW=r:7XL(XhrV7[lHX
%&`2H?^ei+LG!QHq,Y;k$\-C;lLu1jI@.E&*?4"Q`W3TpS!lc(G,$lbcU<u#+9'!<Jqi%bZ!DH>B]666h#\uDq.WQ>Sqhr17`)?-K
%BrPQhr/'Fr6P,*J-ITnO*ql(0KIUl3:>+sZ)P-%.MqfOtOr-f.s)p,rJ,\__#EkF'mTb8a?B^>X#e'D+5cW\A2/dP&?3<st)U;'U
%V@#TZ[\E1%&N6%HP2bgK^&nVlBK)_@"p<Brac?p"HEH_nWGW*jAFLs]89si9T\R6di"K\o5^p7,#4:ehl]@fXL=d`=CO:N`moC/e
%iHlmNEW#&SiNeJF&5+O$n_%Y;GA3><GSSmAmO<AV,Jln^(b:a&p5A<QnDN"2.F&(L<(%uGHrVd5\-]<u)MS7=a^0k4V8fI1^^5f=
%EN<0%HikEY[&fFfO2IY?Jcs:0XHNeLNMq-'hXLHS+1i<Gfdj8$<_4(B\/RBRW(I6/3R"RV@C/hkS&".$b'Th"*WSVO_'C$2D_K`>
%&NWo=7f]2*MA+fdP0Mg&+JUSb9RAioTDJ=8^/16ZK"`0:&ErEmdG>Ji&IciXb/-T?HF2Cocm<idK6(X8BX'toLg:FV/S3D$DI_me
%Y9L3;[M"T'KZ=cK2D2E>I`d[!aZ?1H!q2E3*-$"lJJ!8<8.M$PE^Hu&0F),C(4R%K;-=!*9#clWc:D@cjjk!:4bs?uSkPYXd]9Zf
%H$Y^q%j>g7;F9ddmLD%j;OR^TDH2T6d2S)@PDT8\U^,W,P(hd^'09$-;sJ-0X[$'Lho25M)+I=5]Gl]e3Q4tt6/;oNH!O6^;jrML
%9qk&R,^:hg"4YR8,/t(u-r\'@E15eR1sj:jD\#""nW,S66<=&G2\5oqQA5SP]K'".A)C@iKq$qsFVKq0*"k"3P7Q7H'P!VH'sKPi
%h[5/A(N4Ne/u(k+N#^ie+V"a2CQ`sC8*.)l=tN-dMXNX&=fHp!V?t\?/FM0%S_bN'R<o>[-,'T!j=nWf_iZ,9m'&mb(^a3%RoULi
%i)JtTAqIF&ZBrOQ"ni=,hrB7#R&,jL_LMM0M%h:H:0tc;OZhp/%NHkg!6W?uL`tYh8;G(r`/k"#]Slu/_P+D!)%b.c_<P@,d5K$_
%?\F!^C[e]1ccc-DAO!_2Z$PmaO?sZk%d4$,!g#"0nt\bBa@-7d^dpP&R?j-:VBR5#q#r<58V(XLaiB\WrbA^XlJ+!75cBh05Fh77
%n+)sjo:j11lu(nt0LJMfF/,-^Ha/8I)jl4m!&I38#>PnLkNR=]hEJG_<4lDail(f""9d,6(mmm=0UV!V?/g[[:m1hhGr/PjT.Ju3
%/bPAijp)Pk^3:u3E@&sGZ!e?j1:[K/gR8Mf;5U>FU-U]M6;gQ8CK,C,CjmkiD#c?E'L"".<lhr=MV4;_^VC_C$dm\6)[Al3>m]U7
%H#Ui]:W5QKlr18-$6`7WHnV,&,]M]?f,;S\IW*u@J.S&4%S,InOE<I`)au[ALc%Z%2aO5E\:G:2I>"5S"]_B<R#4\`=WG0BhVP]]
%W4LgK.,d$PE6a\1Rj)jB!iMX#L#A_8/+^B-S+BP=fnuJ`e)_8'dc4UDO*<mti=hC7B=p!U<[a>H^h<u\2t6DU1@Hi$?9m>VBY/Qu
%*PO6YPb4&>A1A[H3F5u0Jh)(S/@S7cqGI+RfZ#e^!mgXqCV31(NLFUlb(06IiN&>F*40X(GMpCV<B#9X2TFF=n&=O-&JshRXjGB^
%V*e!5M$E1unO158+?Oa+Eo9[T(*\kdj2e#f/kYM?.EM.'I!84^oSZ>j$g`LP8K>mgR_t4i%c_E]+U,uk;FnSr>F[Bg*b')&BBA@`
%.YU3Qb*)#)S_&aF%Z)`-N6f:-$E6=f-p=-^\%7sc+!%Gd/cWS70p6sR'Gph]Yh@T[]ttP(9W+hO0qT-o@._`P[#h*6SHup>-%cSY
%o>4c'fMpcAKGZXRF@($<$e8GqmWd8cC_8t=m=>^gaCq?0S]N-d2"@9JN<I:9dBr)GdNKUIOeXkqmXBK8+/ONph22<qF%\n`NF(3:
%*U2KQ8(a..irkf#0c[=grZ>=)pQkMQ7VWJaAB>T=&mbiZV0f0D!CLCKrWMFFF)X<mG"[5GY3lZAj4OW'loCT33o!oaY=;G^KkJEc
%)^u_:#;NT^r.4PSSDrEc#G06LSgrKt%\$7s2oila]%C^u47WK?neHYNrX#7H=+$6ACaiEVCaNnoo>dMa[5oo2XOK:-=3%U&9&n:g
%pNo<gZRPApl;aZF6;JFcjHIC+E=lgmSSJJ(Z'?%>Yqls+5rIC`'k(@ZQ21jB+'Kk(@!&#OPZ8nl]K3ZBp?ll42@dC#^,o9qJEoLi
%'ok&GdY$2@5MLHg_6`Y!3.1<8haDjf;=u5e\:?#C%*@f-fDOHA3Xlickhfh*5tjtn6e29m]J[C#Vq(Uq1Zq9-kFX4j9Zjd5r1B^e
%,_?]G+?ZrNPQ7r+[)Fc<S/2d<3cD=QmpH'T>?7fn$6[[RI!*g)nD]uPB,Y1VP,C;a'cnHO-<2@X5b`d*qm6<1T+:0(3.\>8c"J@@
%X2=Q;p^Uifn1B:4n!Y6f;mV9.$amr2Y_F%[koP$ZnZ1ktj+2ITi)VmEkpN3(<Yi@s&$V_bisF?4ZW,pR3c>&STqiBs<D;VVlMfp[
%8t4seCNN+1i>bE<r/k6S*MSWA'3>#FCq`BK](UaWdNj%deo;(t3Lm/tIHcJ5gs08D"K$-\5o,/%)0tC(2Xk6.[n@Btg\Yb,A0nTn
%Vs06K?sM]of+O;l0Qi\?+Xk3)KI#D\XnXVH[*-aQ=g86$<!4uc:PUB!K!%[3O6IP2=\DR30OlD%T3-]%$u(2I[%,.TT4@iBeJ#g#
%jG<l&8fQF#Vqma,GX[t6%aTHNAi+q4i>@B.UfikUgXdUA6X0W=-QrYu<BhXqP0>i^GL7h/_WOVgG&<anoDI]&*V'T`k4AJS9*c_n
%\k)mA6d?QjO`XY6'p6U;:m[rgkY9'(jQXsT@48tj]pi:s13_tJ:`@o7cF_b2T,/W>E.O>qBNsuh)tYl[WGLZ:Jka]S$629c\h:^3
%@Z...]m0_X\s)p%[[bAP\U/9Y9]58F(PtVrMccJ=Q=D_B7o^82%\mjnN2>QfQ,)>mmO)'4e[<bVr")V9.jZ*59QdkG<9H!CI$--S
%7=K%P?#3JVkMB]1,B%g@O-bTJ@GY)_i$E*$_]8Y^%hAf#WXXQ0eG(k`q6M$cK4HnQ1H7'-DK.W.37T$s#(R[e9\Xnc8-_Lf/ARL-
%mcn7&!gd`5@BIRoQdAo,L8,'D@-nXM<21KA<n*I5auk'%'1N<o.9eN'IpjsTMi3I:B9t2md>.M8ZSI9V%0u>s_dP5%odL;,<HD!#
%X8T\TD'dP\B1@g#lQ'10/2>AVWn]ubK^<IZf/Uq%)>a^ST&Xf:T%E,u9sV-5G0@HG&c%"]Wde$5eg4rEUWb-d`^h;@Tq]_,a3eu7
%a.ga<]:\*ZCT(]6Taka8#%,pr5iJSe1!pFZ$9S/spjc%p$1D-8,CpIcEe78S3JVDVXj>&6+`XY"+hf8ekcKP-f40\0J&Bh'i0SWL
%HL%<+l2a_#b`j4_H]-8pME!#T3_:#W`iaVGTrZ%0T6&%E*fncq]:A_IhJ^>>5L<9u;Ul(Z7k!Q1IFdN:ANi>i[%/^?%.pbK?1di)
%N;!:@H^C&?Q7P[FhU);]:23Z<M7juuajgGYJ2C(=e>Pr*=X?@'[E)6<jM0;LO+#gDo+O(",JKYVRY&7fiVrX5B%tQ'A*pZJ`MtGR
%7l"fhLq9$99X_KaOI@td%Q^kH:'^tjX@UQ$,"C5$el&:-MWn[@8T.W%0U:+d"pi(9WC81[<WsEp$^??bb+!^D?2;[W(<?NU0JjLV
%ns\!,K3AjC_U"G<.9t"3)q:Nl0FTVgbN1D,GY0i^c4i-$Ntk#>:.Bbl(V"_=\!(epAZ-j=]TX\e0<-Q915!-ad[aaa3LsZgS(N3Z
%ImjJM>uqU_%C):+]PG##5MTJ"&tBO4@(12nL^6#OLF.R@JS1gZF#Y#@$J,f0p!afHG!-/U0)%V"U4Q,oJN?j5N$Eo\)$_K3R-m]2
%^1&H"2[NXM@!/,A1![JB>5e/3Da.iTA>3Y.JZKd`<KLRh&;@2:@0-Kc6P?]th(Kl/l:EYckPE06@,KL&B@8H1Mqk/\!qoG9%`?$@
%[O#$I\?-6d[$X4A<%pDn10QHBd.?#k[+0`M7u()]\l:jTn%4`?Ze,J<['X%.Nt3kN6!ZY!eT5*1h,gHSjD6rMWdnr&N=c7gD9?d&
%4S%g@BDr?Fcf8gD%4<]_C.s/EYiZAX5T9i<+$gsO1ubk5rBGo$iQWP@q<(LmH"kD(_s=7=_\OHhLhUWZ\VkhPFScKU8Aeq.E<@]g
%!8^hK.#]b*Wn<sNSorR(Z*d=;*:sS:VVCi9N23c>A?]"IEod8D%kqO!bh9t]>s-Wu_kV9FjpUuT!j9<Vl[I&0WCM+SC3Is9\_Iu)
%2!4.B[7iBUZ$]24JZRr2CT$i$>a,2.c.R,_)a?R4`A:l9*!gLP1'q[$JK(s.gh:6jAu@YV%@;`fMZ>.h'<G;p!^e1g7MESITf&CZ
%N#0P):Y^FQ>LM(#qt,sd0CkAe:-kFqr4<m341$Ynq`t[<-o\8>-5Z@iIZbS.gs)ogp_5g3HE^G5i0I>G;H3m+D+aW"VN;-&A7R%?
%,f"8F?:((*rT3GDaoRr[hq/r7M,K:`Cf2Wj;*Z9>"rYD0PL9P!0nEt6JWq2mRY&#-)kih5V[T$4OP6%PJg*7@C6@!+X!>5>(sipb
%gGiA6OMt!l5);Q-:Y$Fno#PeuFh$FcZr#n<GZJrg11(Gpg.KbDnLZ.h:C7L-F6[Z$?FqXRhG1'TZ=PI:,pk-mf6_nqE\H)&\Z,<b
%j_CYgk%St5D"GV8D[2l*_A>79=TKI%Zim9?]$JRkXm4,=^+$_sH[>]K!7j4\0o%8WN_mQCc`h7FV3V/229p54aW?E<$D2kl$KQ(?
%OZ[,gEXt^:0\I?X;p5Dk:2\\@e*5JIe-%A[<E'7'\!FWjW/qoQ=fo2$JUIC6i#Tkc'Nmb&T(\pKf;N]W=1&O$4MNGV+:ohcE3VeH
%!-\Ll+gIn#fi;P9_hH(8;NN*IBdE3],>r-eP2$`r.-E@5H/kZe7j90&ZXU^%aLMF,Fi)Eerb2us!\\W,2V@FpSFm*n#.;j&i^bf`
%[,r3TM#3ImO*&[f+u8/Q,3p[#(%+KrK4ATe*CJ19r?m$?PUbU'#5":d.&%k7a!;BGNB2a4;UbnSLh2+b)Wc.6;apI]'0Kd'MWbPL
%Ql86T*-ateJL;ZLk&SS$3dJ$cFuS/[fQ+Zd4Ule&lMYZfnom%Xr)E?@R"fJOASsE'hiLnGSk7c9L&Dk";$YT5U".MH>,"Yf"L#bX
%Qo-9eWD*ZG$,ap%DN:e2730mfNu%C;\N+[E&:c<,D-Xd(.,^-$Ico,"UA?\TK/fc)3m8,\J,(d2mM+T0'k#kQ[mED.4h9b@kTs9`
%^&aTZAL$WbD-a/:(DHIY0^1*gpbFW7Fj^t&,LPo:)tToS/P"2M<]<Bk&##Y;nM3&jQ+(]14>TbHBMcsm9L#Z"e&'pgPRTetWk'J-
%#2k)ba4PYg06.GW=dto.ATSb_Nt2`W%ne>VjUt]TIC;#)neXc@@Cf5mIabtUNes@_N)s:&jb/f?l=,0ZQ`Kg3jQ()g,Z5W[MK^R#
%LpDsl'i?^UP$5&jnE/KV"c(:.[M1m$c'>Zr!`R*mm6*^q'VMq4/-!ZgU[u9a/Sj5]V[=\\Or&"tfX>8?Ph[pd`/qU?4ETGuK%Xt2
%#8oO7hJ(u7TL?oC:.ePop!Hit]LJ)4B-\!.F\u\R#f:[[dNu#1>EL6kImY?#eEGEAZPAHT%8]o]j49=dL_f>c)IND[DpaZ4MQaT(
%/-0T\i1--JD^KmA.h:$>;l"XQ!9nds&%*mpa<G"^X#lKf4)Abp.t5+7K(l[[?_P5[q/<qS'ef=H3;70'iBrcOfbYIQ-G80cH+=BV
%LGOt.Q"/gCe=mn-G(^\rc8fq[;XmA<][PrboYbRVeF;Eo3n=.>c7\YD&ZSl4['3JRBtJft5\Di]-mcdUL3iNu6fGV/p^7'G'XAqi
%W]cBs;UH&7\[cGV-ioCH)TUelG2nM@OMnjo%f>j;pr*r^mj7c-1%=-*rnWEU;+4H+fW2;GT=*^Yjb!+0YqC,<W<l#9"u=-f3/[@Q
%4_Kc"*g-.=M?CY\P4R?hD3\i%d\C]1Cf,?F%a7[[dfAPoI^dP:r;\oME:@<7k3G=i(=aBdW:kGO4uA(a7$"(0BgIuD,Q@L]^DTPU
%k-r'h+F9VF:O^emM@OLc]aHbEWr3(+J9=PF,*5)$`!c$Ml)H<1pX!Faf)T7r'O,S'*Cl(!((%h9jHi*p:.&AEPAq.71XuJomE4&4
%m<O79bi$oUhU>37q6<Hb+UAlIST@=^V+\Xk@FZ"4gJTBag+]Z\kebWZC639:PFMp(lcK%>S$M7,I.PRshs%IrIo>.h-*6thrY(ia
%>kT5*<_9HQosb'[IIZ^PfW%4:J'q?_dZ52S0'RA<LTB*uY&.=%#b4Gl#Lb3q[7N%':0,6WORZUXs.,4G+"uY;:W[6DM)p5Vp>%PO
%qrAP,[=.-kQ[Ko+$V<U[E)26l,eW;kD`/5MJ)XN)%;pp`27m&F.hd0ZV0I,54ADPU^G^1WB;#A]YD42APTe6UQ"='p/r/Bs&)=;A
%WEX\r39!M-0%*K-WPAK#E3[L1VJp6*^XGLD5'dK!:=*3HjGXXqK4$(T+Hk9k-lV1Y>R;R7&LTjc&!SIL*(r/pX#%\1nhQLR"UI^#
%:ln1Ep)Bbm(brsS0i_gn-`_ciFRbdAJ1RS#ql(W?k7kM5_>Gq>J^B'q'$SWf#J>lZh?IUgVP#G&R;%QLCY6%lUdB;dQ;VF8B'OP"
%J%niI@Y@Vk<S0LUi91]H*f?(i,Q+lkpCY8&O0-PsU#N?O"L3KuVR'c5Zp-/GU>`LM4s'>dqVWf'ZI"?M1;M87RP9)[eYX/n`BGmp
%$PLQ4S$4PTFgPS4'qZ[i+m)q5EDEFeeAdLZZ>]j-FTa1O'!';#(^'r!=gC8-bu$/<gBB+Xga<cc6mqK0GU]A/bga)l1cY!1'BRJg
%%dcQE\>TG)lfQuu6)[0^a!!QZ'1a<91&#DV</a\KU#(-3@jO]9n72X1/&V.CS"t:-j2+AVdV&dQ=MS>k43<)5qqt!+PSTCR0hD%H
%@WlGr/1FS;DG[3RMk#@2#;j'>q^"3<Z@Fq*Tp\La)(7,q4`.[$j',oG@fnm@cuY)da']Ug`FYiJd0`?/GApX:%+89!_'jX@n4aX/
%0\!A=a&!RN&;I2)!3hE<fc1W.\c2`Z1/UMnqs:gdJ_T6[li2B\$%*\_aUX@`[`Ibf+*V)h"ahf"n0Tqjj(h5X%0n?BI8$rNbo.O?
%;ui,[rMD.YM?sHrV1I#o67+Jm[Dt$66H?]77u(6-C^_'DW09ded_V5o"qp<P:t>$e4)=WiNg%*,j1Ijm7W`W]l@CZcB5&1!j%uRA
%As<Du<459L'(!6QBd/%1ZoGkt=,E\sW>CBr6iRdS*jW%Te:nai^_`b7R/S!2I"2dqi/Ku#qO6hrec3R3VVgM55[sg8rtCbK%*T^o
%,.HH8n6O"[N<E-EYSEom2Qdk?]gXK/J$:=5];(/<KLFAgS4j#)pmj6?:>C;[R[(XVPPXJHZt;`i"7LTf<XCb1/#]OYLkknR)4r"P
%3RmUbYYM#XTF=GC$Ytc-IZM)]7-Q6u,;\)c.6R8A3.ZeRN$/:/9ppD/i!_+9'g#b)h3^iTg=2f_PY&<$2dMY[pl9$V6s%k@Oq"+9
%.Cu6=3`XllEeSk>T8#JMdW8]l.O"1BL59)Jnj4B^\=>O4T-G\m'RK9L[mkoS$lI".-X!mR)O\][^s^0`[cF4"cO%Aig&knQi2!&J
%FVnJP"qs#?Q5V%ZDt/&dFBo#<5C+&%7*]T@0#DAN3Wf.@Nj-9;0C^e8U/BQn"meL;m-*E&05@g(ci`e&A/0Lo7+.(Ko)\N8+qIlh
%,7stJfPb4?q;TE(?/-X8"97o+7TTG`6lC.M>n<;\@WrI(e_l?;`B"UokJ2LBMb)X%UX!p60==aF&g2c_Q'5At!^^iE!L*e.$+e>@
%$-8bqa8Q4/l%/Kc=g1R^c_g^)BDlpj5^5!djMU0PiOab(p]Crbpm,1g8<6]Seh7Q+dW:d!%rII,@'t_0gG;rb"BulFmB@:%jPXM2
%8a%:-cikQ66[f[eeQ2:"Or6KJlD9s.3P)EaP7iF+^<%];>d[RK6Fhp5#%'6/6JD040I;"5*$oqAk!TOR9NCucbJc$G$9gN[mC,["
%s5T0uL@-+:aYo2K5MV8U)5kLtp:mW6BF\p$?J52BEUTEEin$(`(bKBmIVaqkCl'!F85]n`5A^phWJXphiRVgB!0=sM."iC0JS/s"
%fB!K0GLO"\6I'q"lDin.I.Oi=F1[eq*B+DVmf,16Sb8C')Y;JQ6'gtbcdNap?3n9,BFN"tYDWbDO-1D(1PqVYG]"Q(Q5?[c6Z/k0
%4D&OZcl]SVC="g%?"`9>%]@eu4"b0+(i]O2Uom>u^$!S^7mD<$1IeVFSQ#Jr<BS27Kc,mG`<UV.X2@^8OYaI0n$"EB3Ef97`<.ZE
%+L0-[?90\m,EeT_IR#Y)M#=UI\t%f,c9Qo$[kDlNC$dW2Gi2K]OZUl4pUaMP)gKfoiMN@^Ya,3lE)4Z(]3+Wr]7&&e@[jht(>_WO
%;deE,dK4&]$V:gr25j4V9ip!5c'r+3rY7OIGR/(E(m9F(nYbT\QJgf[H_+).XY0I-niObTXHmZ8+Q1MNrqP<e5;_`ScXt$;rh<@8
%h2%fgb4/Sh4n/!rNlSWR:,le(=qN`MhWGY(4X<r0FeJq+82)<S-SQ47E<L"SQ4t>,&VssuR:+\(!O^bJ7R/K4@g.+7O=5*haq!_a
%3?4&R]CX!V4Z@f@%-sbRL88r>?M;Hg'".3k9:oP)Heq7&m!\:CL:Mq;<hM;!9=PsA>lla<h=',p!C:tp:UYHTHhl)VTC)F%hCl=V
%e(/g$@5&NKnK!\PNEO24oC27qDgAsBpP2u6nR%20AtQI]c(uGUa:Lo:)l6UUHuM#5O,CUJdLD&KU[kAa@U`6.KC1@6HJkD>U2;'a
%bab:P`iTPMBH,#u\\fs+F/m<j5E%Ss/S0A+0kUeP;Dkc0V3f.pTF!1_3C`e'3#S&PX27aE4d]nCh+hnrmXX@m\^/u`_#gBE&u0(C
%fEcG`gdB=$c@WI7E`6.<(Ch@lE9J@Xr3ueEMfQF7Wjh0k:T2VOM2MciB^S_PE_BD($mX^5,Q;?A;kY"hEEWd5IG<,,,EP]Y,HZ9N
%ScK,?;dHYj(_W6839:.\S$a$]bhIR)!-8H`"(NiaibUuUDoVWG26gk*6I^=;iEna<=DP;C1Lum"Y/J0$rbTT1Dr:4hMphuV_t\]-
%rEk%HO[Te9J:9#u4P)m`3NN<<c!1M93OfPTefd/B&FD+8B@eKlHn<@#,[W%#O<g]T,H&YV]+pD>oiH$&'HhZSJ:K[607kn3i!(Ye
%Z@L'p`,m$q]L^ut:ALW73k3te9mu`e+ViO[[KlbqaS^QT5n_?@AIV?=;gqLUo_R,14q+X`F>ZcklJ\#_EPr(5'mE**Z.k#)g$[/1
%4W3eW-T:<cVBTbWekW$\0Z4Vu]@\_+9eFip3TOG1P,IL+JC5Fj),R2T0D>80a7hX$CX]s(:k.^sUbQ_3g48O<RbZZJN'H0SqT$Pp
%4jc*YY6IiO+;H`q.gF[;.U29i#I8luU'\qZE]c4V'_41#JD)^[22Y9sfht`a5B7%/h=Q&1Gi1oGm-GR0QU@@-_k7.fj;A=A^;p)C
%27;,>WF_K>Cj-+Y;kg]P;NoYDQi(_[Og'*$Qf[Nh@l89`P3V4J(ERT<1+n.LK:ln;bEIX,WS.f&I\c<]ai5X9Cl_NqTmC!EZouWZ
%HOTRU8#=dcR^,Oc\bI49P8;IZ`.cCQ"9=h\Ua]>l-,IMrJ`cI6X`D_jm^^D7[W),$JUD`!s$YlPV=#NU_ft@WSo>dq:.p0kS3"k5
%WA0"]N>h7h#i;^_GQiDsPeAB4a^>;k&N"WH:a&]Z,p;;2qd>3+:5ea6T;%HPJpnpPYcID2(MOK6*7@p8Y%1(XI%YUpPrC-9K$:;U
%j9k@;A%Fs0&N%m+M,@":0HJQM*hJI?ERWlXZ>KDOOre,O+%If)^i;9=ah=&qX?lac<JO_RF@h_;KU[c#4e#1Sk%s5_,_aht6%tQ9
%5fS<n$/f;N8"EqaI4ICY3pTNg=hm#O5hKV'C6&31K>m!)f)+,Q?p&2CL%3[KYNP@pSs*hoZl!c@0%Z%-T'ua,*6tSafe8A,Cm-%:
%c.p%)hgB)%e!CXu+L_NO$?&Km2`W%iam`c$-TCI&btq^_)oO%a[i=RH]05OSIeS*i?Yo=HqmblBMYj!W'**TOB-bF2L;gD`$]-#B
%jg#dS*^0i]fGQ`.=UG=NNU-9g`q@;GIkiWWo8kCh`aW,VMfL4u`YERoZo#7mom4:Hn,Jd*-Ysi.o)-KEJ"'V00Pk3YTX.:>.VM">
%2fp0Bbt@o>@P:V9a3E(Tc1a,]OUTj>-kGMQ0aTRe*n05B<].X%V,mS)0g+MhAH5?K%o.]U<HdN.U-21,rf+L"RT!$1W00npO_GZ%
%Q4;<4K?[/e&%)dJ*4NRgN$oPZluk-4Z6Q.>K,A'0=[dS52))V<[>$dOOt*^*Y&l9gpli@_boe30[V?)Ej,rS2Ud/cPO58psP,J_j
%$;!(ZdjWo`XqUjo//",9!0lLp*h3W:A.H(!)gTI0S;dI`,$dauI9+abokcNW=#SiFZ.6.?9+aSC]Q2\D:]2;6.ju)?$eg\]Q7,DK
%3acSMpBR`a9%b#`;tp>!OYds.(A1Fq-&7]ca;^!EN9t/i1/r;!`&(%=n30f\kBcPkBr8B.qJ][=Gj,(U):ZLtPpliWo(<\\J2`\]
%51o3jEYK4S:tn9RVL'3]+nLA=:76D];`'H:+?#lpa&\62#psq2LW#>q=WRo!.Mk1,D-Yj:kebQ`W30u)fifF;3&VN;R1c,<$i7n(
%JDsq(qcE4AG:',5q;-fo#qh1GY9r7_RY.>2NhUAGmgp!s2NC;Ge*Gn?GamNrc*k-Q89BFh!GU-3KN(b,"/*V#2nAEf1Ga@WTMnfH
%037))2X'NU2Q5qBAV=Bp3_;WKljBeko4!GmQh13$Jb!0E&7;:0oD/=0H5QVEn3s"=)!/H_PFmG;,ZIlDqe:MHEem%u<Q:q*@^=Zk
%[=Tm^+idte6cnSopZ^T`D'W:Y.9<>W<YY*:Ag/HM`"^YsL@XC>Jp"jLZf%??h&U\iaS+hoWK%L$O)""'3SO)'.^QNfm-c'oS:pSH
%2DWSu*.*))_]U*uah2DR$q.$HhXSK7gGD2uXieBDXl?]rF12Vp>'\3j8crFBEM<L%L+[aV(hr<pbSYD.Y,Bga?/!*?eL9D>YT-Sq
%e9C-"<[Q@?-_'"[[k#NGOb@6LOpEI6cec!-gg/*t'R+.r3m5%7E&2Mf9]4nsJ-UspR&>MR#6bR7=@WAp&oesBCP2s<X5pQ7Ym[Bs
%KcJ6)%p6AOU8[7a]_uetF4,%tGd`=s@epEO`2J)/0*:6'B&`(,K'"uQnn,VA6!;8`.]n9rT(32![i"A?S%-Yj*6>PQc?ZAXm&Z.-
%#Y*a*;-<,Z3VCNGPmins!@:)]i:`\<";tUmmb<sG$tBNePrO454[FNW4"`iWVCc:ujT"?XDJ]En[-IMiK:U5oN)./mW32S(i(0%A
%'e]CUU5sH^XRXVf</APM=tB2FZ\]?N1e6C$-;bL:]f_4T+%Qjd7UIM-ak0tM*;&@Z]RG"<1SN^l+nICSnk;qG[D:!Qlc2$,Sf/pr
%_:"[l&cHl_7e6>trVO7J^N'rdYSe!F3,$sbPZQdX+oL)_`.DL,qgHC+efMa^`lI"=XV/$^+LWoso@:Ri3Z[(K,)upjZ(!.rCiaJ#
%Uj5_fe%FP?-Mr^G2u[faFi<f&9;^kpIS'm3!W:7Tpmq!XK!$60_gP::!h`TIZ\)^:DBg>](X&k0l/[.dNsc;9>f];,L%!A./:uDW
%7.aVMhuLd$mTp+WpgTI,LB3-3hSC,CGY?p1_aCocUH-*fi+u3HS[q8)r3#;"0ffJ$;na:`!pqV!(ku@t9#SFaPlbOBS`t+gP/HsC
%;-&%N4-0.^mR0S$5IRZU#V\IF-1E$4$*oQ:\u?;ifHUX1B[S;I`Y#rII>@1d>9]</'Zf=TKLc6r31<^+<Bkj:I?BPWCJYI\1sE@/
%$B9QZCM@_S[TkClp)6X95t6gr-O]jH0X@JgK\Q_p%gVUF/k@.;^I*9h]>6bSk<a/N\@AFK5M>o#C'36sQ&nQ:T70buPVU!oQnWs+
%'W(;U"JuM\3p[[?4_Rhh.X%)o64Z<d_f??&N"ic1rB/Shl+f;s;i;O"]RmF!Q!F*epb'AF;ADYMQ`VHNC&BANi`kb?;jTYAb@['=
%!D'fKYJk3:#U?:VLQWkZ_Me0e7SWi;:(N-IqqFeO\74BYL^bUg*=!?236l:AG#oJ7jA]J6pu[5E7gX4j8*8TQl<.HSkaiJM6]W)%
%X[3/PLjpFtAE*8TE)^_KA=u/C<ZrfG:M3jeKFsI\*eQ$Y$[Qbkk$Z10.9lLTlq)6VVmlWEbh(@*c27Ih%h_,lr6A(3Hlf`R;(ieP
%[p`J\7kZbXdTU@j/NX&%eaNMMbC\6(;\@7c'2b)Xs$nqC;EKp$pg\n;O5`cH%a7Wf,e#I%>olLdMitpoY3Nhh0<D<72.(BWcJ'^X
%3tGD+7h?)q&gU'^X+4_6bMR`'Zp^e"KoVWC[$WiV^L7Pn'4k)jnZ*;?5Ybp[iXRIlI:.jEZ;63N12KLoIn5<f"?M])#jT)6ZT:Sg
%.5EA?Fd^CS2!JhUTJr)4a]JJb3qbfqY2j[3]:%l_A_FL7+;>mc.=,^Ea#HciX8X_>Qkk%&*o\m+cAJH$bnR6':^;W0k3eRP_bh*\
%Ap_(-`^W`:Jeme`2.*-;1`Ja,d)$$[3QBJ_-`NPZA6k9Z-9p#/Rss\m3rGB<rCZ8A[Y<(622h&ZZUR)ubP0QI;k=*p+?Jum36SPI
%[Y.H>&]7!(k.b#_PTLOp+BbrPZ&qjM?^aN0j.o@oj]GCSNIWmMbh%hU`6rjRg!dlFMOB3:s-ru2VWBSO"5I9ZEh^#ITHSF5QKD/s
%@@\cAUiR`i\N78Q+Z(uMbk>)JdB.2GF);,IOje+BeD=eF/N\6QWZ0lAQG;'>(MlH;d4qPb;urUK\l*Z+<d_BX`lO*qN+W<+q8Q.m
%mC(E2=u>93L[&ka=:V=I$qemPSCsam#/=@gN9%UIM<=Chn(h)%aCU>qVbSDll+>_099`^CFV';W3;#:DOe1J'>C0p'CH5bX/$I;,
%^bo/Q(T@5h`Pe1L*Eu)B%>L)&^VKag"VXNc=A[?4;s^gP*gF@kf7!+9SS/=rgk#=@e3f]pm"r!%Rq1u@FHl)lY$d1=N1R;#.rlVN
%5_;M2G7N&gE_1X\AZ;Rk^$`'V!#6N8X])s+"TU&<+4$.t'TuXq7,=iai+<>Pp[!/Hm&Z]h,;\lCjp4YYb+rd`-q8"J]@j1pE!J5!
%9<C+bq?C1ENcn'B_]_id-%b>tN0omr':Q`1q6OhH7P,@S_V%;c5%SFf?+fKQd.<l$$=<M,WVQFt7]E\rr)c]l[dl/7Rc6Od.J)Ch
%<S<[bL<i;5l55Ye>2$ON:*GlI&pi)&6u,r(B:`?5fK:Qm&-+)HK]@]:WK3mA)/b6F^c`D'[p.J+k9+6;jq@-&8;.[\p0Tm-;]4]!
%ZbL0E1ngs4N!:&NoaIRC&HQC5:BA_H>MSJ;)<,Z&N%":aMb3ofn]stZm[5BQ"':2Rl9CKUCu-#_541]LjNb)m_VQZ::U?Lcd:eRn
%'[(mkF.!5fW(On@:W?%V(Ud;e*PgNS2B7&I&/Pk*G;gC%dZ<Q\Oea]T98&[9m8G*:.J!:?J+)EIR`>KNic=B99n&CdM>Vt8OkAj?
%0F9n1ST9<).'J)d+=WM!*:MG-c2RdKf0MVHR:cUc\l#ks+1@R6&C#iVU*bRLU2<?r`_(gnZ@^9TGjnderOueC7lQ820p8#VUFL7H
%^#uRo4P'Ftp_Qa)$ff5Pjm\67Z>lL"WiA+\r"SXN#;bb.XDY_k_jS!k^:TkWO/XY;YAcKNc<,LsTHoEH->1UD%f#`U<BNaW*A_m,
%OPW*:<u2H*OlO,EFA6om0?nM54(WDb;-Ns<Z[fP'dVXF(ZJVnS$oH1PB/0D^6O"#X\Z0]%\dN>8P=-cf&RCQ,K1"/c+UaIgq_HZA
%q+2I1jtUJaRCZK)lcA$.cb948q!/Ds%H%HR(5q0;.uKlaNCcl`o]H/,;aYfFV3ud=OoSuLqhbRq6J0E5YJu-&akon*0%+Y"+%ULD
%#C%Sa]A!NQH0k#th:fl7@"5X)%h3];XA(]VpBSe@_*@+Si:B3eG9ULR&n4O2#ba/cif)"l@p9;n*,;"\,YQ]&G6[^b.$sJ0PQ?;H
%_:!FWNPI<#?n>O,D,i^r#;!JM)Sh&$gqKfcpbe(28@5Vb_M5%$nD\KZ)*->8/3:#@\6RGG_'E/Rag2TGau2\WL6IrGW7n.go=.\`
%]B.?M\;JXq[@2!b%\12q#lYqnQR51Aiknh-3>#r/"dZ;N=94<`V,k'>VYR+me]qp>,Z.G_Ws"7"pW9#&UC4J#l=<3JAQ2[[W!#UD
%T"Sbb-WaM+b3S-QJt`7kEkLFe&H]q.g]m)keV2;\GR<f2WUain9-7q[,2VOd4oXJ[$9M2mYjC@>'qPSm!(ekU`]KF/4($+_Q`=R\
%7`\iM,ZPR(&:T/j,qQ<@8$B%aj_n<[,#u(n%f);oNNYF35mUF-K[hV0nbf`[7'-r7aZ"]-Vf,0T1^I$mHpPG46jlBB,N64I&XE)[
%LhRY=)ghOV[YtGeMnHF;'X6?qnrdT==>Q'MhH4No^h7`gif,2]+Vbm%30&+C.l%],UgIcu=R7@f209L/Y$)^.6dK^6UZd9F7PHA.
%p>?W9"(7bXn6;mL_nfR7SbaXF/@0.(_"IUkg(OSnHj8`%@"<\/>9kVApu&md5:LN\a]OFL="qZ++d5kIA>PIk:s>>jf@jXX$5sIU
%`UDo^:JmpMeTLG#+TGR%P>V^cS-#rU)j5\O9>'gekN^gRqo7^i,A-h%L[("RltcY"f8'BQh(`$RU^J8`hk[(^I-tZ.,$"g4FVDp8
%U/(pA*pf=/4iS,0KcFc,Ho,:#H!9cQUFfr,b=ob67)-QX>"f]`ZPaLgd`7K&d3]hG1=a0?@)uk"k])3[c_Npu@q]e12k"a)ZaeZ@
%H:04`b8<VB1605$CZYqVa#>.h`k!"]`$=8%2KR5g+\c2VUs.lQ;G;V1ieTJ^_,I@neG];TkPNgV0Kd(-$BTQ^OJJkXoAs.]Y0sSY
%)0=o"kgn(GR7Sa3lE4U)4AJ^eUhrLY?(2/T'dj.[UP]B(8rsP@&j\SYUII$GPU,pA]Eh#^FY63lnPApbduA3\,+]_F"=4aBR;+ru
%8fEECL`V8Zh8GT3UlOB#kO:c*2_Y/Pi-?Z\3GUF0/\\hfH9jcD,kWKma9'@X<#$(oQf]eZrX5L8)#Dd`"oMP>lkaDp5MhkeiH'>l
%Zg'lLASPiH6Tu91.=A?m#_Hi33&n-gF0c8Ur+R`g47n/O*X`hPAgDH%"X+a>kp&`gXbb.!PI<[&<E*>jM3FGYFmdMk_k9L?):(Kg
%>f$chAnpC/>?3Xj4Xh7553m3-:@o;o;$P.g+Z\qH.V3c8RO:1?Mt[64,EKb:@\1:K^:pt/YJQCj4RDn,o<>4aZUZk\-p@4HkH6t'
%GT_;E/mdY:'B8C@5>TMp"Q$L[hb<[]C-4-g^)@Dp+u%"X_N64+]5CB278f0V129rP3*ZfLX(c68=5Z$chR9Emf^XZhh/lH*[E&`f
%IBr=2VKh3dSH5:$4E@J]bOJ]'i]!oZ]3M[LAKZEOL5:^JjoNnOVY6C[jkrTWU<8+h"r9OQnBS+0b%P$^c6LdV,W%Gm'D@QX'':s9
%Hf0/k1W>%E3#/!(+J>lDhSViXe!D`84udO`PJBt+UkJsgF2i1>#EM_3esS#"+Jk*.F:DD%THjN(_ZiH.H:d=R^KQ8,)-r#,kKF,L
%Z-*.^j:a?OSRoYJH).^_QJ3<$:^<pV/it:_HBoBXp&S=,XgoX[o0ebjEd+HqD-_>C`tbKe_:X[d90/d7nl#8X?F7#7)hgRE#<CLq
%5Bm&*ra>2Ar,T(#[nAN%='PP:Z<MDn?mkt;"aRITGDiSlEZBiM5/Njj3EoF,@<Wb4J*>)I0H1,<n*Xj1,:J(H?a??kWiJ*'PLA@5
%l<q*2;QD7(43f(P3:5)Z0\A`dn96C&ZmiSE$!Bh77Bp::]o28d<EJ6ccpLI4(K;6dD\4./R;Q3n(@DWbe+b?D];S!=Ls@<S'4,`g
%YH(F9<co<QO*@md-VhQ4VYFG8^_\]?kr5>KqRR^Yh1"<D&0`?c%f8T3c<Ip;?&U7d2:$eP\^G!ui2(.^$[tjQClei*L_^ZZ"=[`^
%"O8r:LTU>]:3g0rW'=%,YT[L0"62`._F;:[Eg=5(G^&cPKab>Af?r4Scj3DFnF*9.W%VKOp9#J&.p7tsq;]tci%5(u/Z3mI$NYDR
%"]ZPtA-Q)p\BpNYA.;a!76d)1F1Qpk?tu&/jXqgohuaj$@+Y+q4`nT-*,\<3Hhs!RHX>G7$b3L,pR?:F9LFl%o.*E/)Q$H5\1k^(
%><C_n742A'\5odbimMp$%.)CT.I*9p1md.kiG^D0Vur2'WAfn9],`s$6b;kF1-AoH5^K6(Riloa9*:YN/<NV`4%\rqSZ,oo`I'02
%mPb!Z@G_:I*\=9MAr4(#2%Ce7(u\(3Vra`H8SBfCiBR$b9E2_=cjsp]4O48A&IZd.;7\=2*%$\9L/FA:_gSlRauJ/%k8:*E5/j'Y
%VpU:;&eEB.E>Ml]f>XarXT!Q!_i&m"GmZbdH"Wj!9VEH-/9VMt>LBrCa`nrQMKJ,2:1=MD<`flsIr0ofeVdMsI4p83"hl[C.sq)?
%NkaJ>Walatn(>/mQ4ZV/Mlb3AFF3UWEGf#l+!gYE80$iE01,HV3[H5,)u8?I3[!qj`e?\+fKOsC6&7$f6;`oQ=LDO:?L[R9o'+$9
%glrmZ3>+g&,7bQ'U(`'jOfabV0hS=R8b<7bZs1HW"<:3jZSUYDBIhCbFh=*Vh]h_Ibs$9-h0seo?'1nr%ip5l5N@C`+bSR<$NegE
%1nLJ((dj^7m5Vb(47hproL^$1R4r0Q&qD!Lb,I252MQ`A4nh1Y5O-C$bJLfK]FPBa=C+m%.&?o1Q`u+>1fq$0M:tWOR+80e;q3ot
%Lkn?f3?VNp>)ZgQiW0BS:#@eKOrgac;Y[FUaorYLLG6*;L4)T^JB.k30YB-e$Ie<Din-Dq!#2<_#"_P>W)>Dk7bL&O?s?cA?eN]2
%^e$M$V&5Y&&Ik]U#&q12MuT`TM!*J-1D;:LI7jWV+L:pH.Y.m\:ej9a%%Q@s"O-/XQP;1Zfk`,"5k;(QLKu$$..s8umE6ZM?uPnE
%3YU2Nd*FonK-[>D+3[>**()SLTES%.X[IZ\(?Pt!fq<!i38g.NXK[=gK<t[fD')**&Gm`E\<TOr89$H97u\k'-39kC1-/+^@@+fb
%%^lJb@`_*F"?R^s&RC8u?u9_Cf0NL2kWTB)<K0j5#kG2%#&CN3*F^Y>0X(g2!YU<Y,QU?s138!LA%Jb'l+Tc;1>'YPWtiEFE,QpR
%La'cW-g4qLs1qIe`&h4UDE!)qZ+:a6%9n2'W-Bn>;90XE>$<eL!D(:hj,PsnN1Hi"Hh]ZcPe[9="Gu82-Z(oR.GPge5rlMEY/\\%
%J[c\SfJgpG"9\^rgmQm[77CD2X[pKh:k45pW0C1[Z5Y6hfhAGB/A:L&@'Wg"D7b+I\Q91K"mF;s$QXdT:=<UYZ],suA'cS5+4OFJ
%e5c^r7&42V_I%G?5(Kda*=g[/]Dq1GTc`Gd6HPD8Lg'!h>*2B:)kQKHdV+-MhF-m<Xcl>t[rXB0[c.Pm?#<Xr/pd&Ks8'&pVA,Gl
%TcLc'c^.Gs/a9TcS[fj(6Wtb7?uSK53-B1'N2!^!G4>$Bk!"7obh37>(/&&/jK1Z9oE]r5W=-)[:JN$UWXsKM<;9VYi:M#m&p!Kh
%6#oCS+P:@tPno5a&Z:#hr4@GSK0$XT<1hN#10]XOEN6DaJR^iTN#t<U]1pU?$[$d6@4C>J+a_l7eq>Wf4;UeCp[9jRGKA%0N6O?J
%>nn2W)u?X5l*=_/:d'igA3ZF_?PnZN2i1Pd"ZLRqK#>M_J3c+tp+20)4spYo/<pGK\a2p(qZ$\JTr8n)OZP(<eL7njmN-V5Ul2KF
%2V#Xs7_^EG(C76AS,4UIJS78&9(s'mPIH5^c5`4_;3;njC=hC_=?KXmd/ui>."nl?.cnu4qY.Xk?<R+=]eR;>e`!?#Ec`#OTG850
%X`P(.aPi69h4XmO'W_Erl9ejar+iX*LjS)G!@Ffr4GK;6$5@U<n-&Dt9`7J@)?bXhA>WN*Xo<qq=PuH&^GeuSqP8&`BnSGf*%Cll
%-)LC1?B@T5XR7OYWS%_TB9@CoAc/;mk7$3'den%g[0)656KR0O;LeSortS(2rm>5L"B5MZ3g]n2$V*'PYmYfp;Od)!>PStcZ`L`-
%oEZXJO[UMuB;@KRW'Kge4k;&l:(<pfPl3kAB!*"Y4nb7o=UVm;np!;ar&+FT.mkK`Q>cqtG_mO,32SX%5`&64chm7=)-PgS\,Fk"
%_?]5NoCml5IgVIKF!U(6pW,g8@0:CZooW/uk\cft"aN]sY=ts5mJopl_uCk9H0.(fj,+TA>m]Q2)UGGBm8N=tcL\YZf^75rGh4ur
%b:t'6Au22P.5*7_#Bq:5rId!0@<l"$<6PS4N6a0S^+8_(>NL"Sl6HNC/@aWJ626,05sGm$2$Ld\FKET;L)pk*%H/-lLFHfg8mkdU
%9BZ]$6?,sq736[^%WG&A+>n+h.H^u@4s6`CGK2UiiWg)E+'7"nJU:k]27pFA#6cRo9?j7@2nqD\YD?=e\Dmde\(M^i3\u!nkE[5!
%Nf]Kd>XNoS3A]7b)"8?ZB?=_4>f)';R9;7%^UjYEpjh3i+G.skV*O`.U>oFF+MF"C#VoUOrTgfN-nGGJ9/p+Kf[83qEN:'@U,ZHT
%!H!o,ebNMGCGba!Xg8<T_A;`2^48dYk3Pka$RR+$^*OU\06Abj$5CeXGH!YdU%p<t*k^$&Ms5<jq?*^J&<0ES1#o<rfEI$jrn8"$
%'6$rW]m(3-,aGnZ+uTGW.-/C`$igrmZmi,>3L/&3DmiO6ZC[g-+2"i=DZIk>aVh9%J3SVJJ_G\Y]YH2-]ur)W4L4.3Z-@S=M<@i^
%e-&LAoZH?_`!iM!YNUoIR8X<G$Q[s4gk!Daj@i+3M,+cB(^(_`fFj$gAs\Pn(r.^qb6")X!$&O8*Fc@/Q[>fh01ooc2l#H>Z*alk
%`3HNL,6;*UG8tH8/3?6-!YNQ>*/pf=;ORr=(DHJEMtkmGjH%0giU)>4'/7k\R#dGR#fd\,k8[C+0S?N<O'mca!$@m4;S.f.33SJh
%L#lVm%%4t?G4K*I0>c1A?**8AQ@>4HNZI@DBjipb*9)6tF*!N,>?88QFN7[SeHNhG:R;\A,0sVFYQE?48OUAB/3rmrrkRt``<OaG
%KGHB2aOJ+;_DRiqYW9Q?VV8]P<=p`7lP34gDq"F-SqEd@%E"$X0!=q`oGP$e-dhFa$O2IV%T8-kFU#ToEAAkN>E:EE41r"S!;'YL
%5n2EWdH%W&]W7mC;TjH#qWG=_`@L?Z?l-U#Ije^JFRMA9Ff"@<7Yuc:ji!Te5r0n(',,XD<Z4S%C<,A>0u^p#iGaoUC,c^A@6KAI
%=q6(bE4-1?(X[=PNH#B,,8%fHCi)HDK^+3t5HD_jdmXs&/&ljglYe4t`Z60G!1[,bT45VNjX*6#fl>(V%E,B_jYlUd/S*FPEPa`.
%aS6;>+0^mmfWjB1l*eh&n#cBAcB:3'O@@$=]+m\FF9[g>WE4Om455>PYVOQk7jCGq$I[>sb(SarR8=98T6fp&\s/7PK'!2lC\2-X
%,G8OsZOXipjqk7.e.gkC;(%$4Ju.<`PU>,F8AnP$'9h%%RG9ESk?Fp`S.<m0'l_/g>i@b2mff.E0r;aV.KW/64VgL[bEdB-C,Cjg
%?BcM*.8hgg/l@X6&_@JK(H*=Up>F2;r]*e<e>s*u>d?6"3:Sk7s!2j3=N\KP7UM_?YS'aH!nssFmLYWSa^E#?KG)0jd@Wm5^orTB
%(G$jE/R0\r/5gdFUp=R9+-LeUaDpUEC,oP9Y'_0a:\J4C$g^WT2;0Z1OAS?-TWJR&3u=+YXk;kq$i'$`#-uSH6:aA))Fbn#))3%k
%@2Vd<8gOL]`@3?)E4$*V6d_Bc#8`5*#0DZ^5?QH?+I@BgmDmWq6%H:WBfWVb6(!"5es<\]Oj)9?Q@_Z(33.j4QHhLJoH2u8+4CFD
%IbAZ$JR7/m"/7GA$p9M5f0ItEIaQ!'8A%<g)ZHMks5!]B$h@hET4Orj,=+^.lp;P0B?nLT6@0gnN=d0Hp^*_QcQK+-NtVmn%9S_S
%?B>4o',4h%AaO:'GInZT;PV@JYQ4@:c;.?!U7<;l]!!(X(T57a(QZlX\4Dt`j(]fED7?Qoq2WYoMT>;5XOjY%.Fn'L>Z#NKnLSU]
%UL@-B)e:<ur@T4,JgMP)5-sta9><&)`oq$<V,?s7cm`+7BS^aCF@eNSL%MTs27_ZZR2)B30[`SS>"7Tc!$WT>AQJBT<l;u@o24`W
%#-<P^]S0a^+P%j@*IhIRRLUAE;hl>m5m'@u4I(@3\P!?.[?*b&KgRZ8+2\mD$YJ4b:#h=oT7;l=6iu\@#W6"Yb&VOnb>8tJ%Af#F
%3WJ2MJ_p.bq,Rk!LPc\MRaJ0dg(`u8B)t-6k]Mme#"Fb?%P_&+G"!E5J>X)9d&CrK-Tidb!Ap0[!F&!:0O'%rWOfJ8i@GoZ#lLcS
%K?0_fIeHX6l:.9ZB-C_VeZS.j@GdTjIm@9j4,%MNhX6Q%;V5M%Gk$!'<aj'0[i"re:g+JJn+je0[WiiKQbXW\/fjU5+e*6c5,-Y^
%r;uG:@_Wh+&=KdNeH=qJIjAlXqd^5sGGbdma!b3=1^SS?!(t"n[9b'+(tldGkqkJ!I()D9(Ql"a'4S!X#;f(_,6;`K@P8,20S396
%_Vg?hUTbI*?jG!^F1X7RH,2_s;!&VfK;9TJnHL]Nn!n+0+^/3Gs"Pr*g(A_9G*6FKTP<hm0((89&s7?9:/;X3Ikh*i4?Jcdr?QXJ
%@b$.ONiXAWm0e")%mrde!;)s5?Ka]_oC6inR"Im5XEC-V,7tiR"R4F@GWmmG.b%d6@[cN]Ud.pa_4:i_&]ig.(;q,'hp0<X.&TX"
%K1/JA0g7;2Op$%/EfNB?AOCp`kBqRlf(kM6<p>h+O9^JdQUfX2X!LsNFt\J02XK8lpK7:PRP:DMPB3kj2Bmo98^Fj._dDF\,h&[]
%]&D^[;G"KN1S-`#p]5I>nO%+1o<1dRL8.#Yik:LmV()h7k?#@MnpfLnHsTm_?*u*Z+g$AZ-AII=g-oA:e@]D0Q6^Hm"OL2^rCCUb
%)%!t[ee?]5(Z7KN(";W9r%B5K,&BccK8<cS]niCt=YTCs)t.6kNZ`So5&U8O(9_QJfs!+g^h]Yk.K.!K*Km'F%rT!j4RHm><lF2A
%B0Dd=#[;QN1q2(pfb0m"lOR_ULH`iBV7T(OCR^T1#2#")5Q@n$b1[%i>?bjT/cHT)?M<N]dhNs]bC?$Qd_/oH_)7ZapVla0%r1s^
%@fS^4H.&*GHZpcoEFkFQ&<Y1m%QJ,3J_enDX\AroBmjeIl*[X'L*;J)K+&@`njsee\5ka9]+4M)=J#LUj%i<hq^PIs:HN*_ocf&+
%0@Qc3`3bGi5@Tj+7B%Ra1G#<f1=&;*/1NF#;PLQ9,Qm[Kl;7J6<&DY7]bu4>KT8mt378hLpQu?lJB/<X-<32H6_KNrbO!7J(pYS-
%cuORHrf/C$LiF$(^BP8N'5q+jUbB(3N#3f[m7A^U_NOBua.M#Dc9XI'pp^<<R8]*lj@2-Nks?Q]cai']O2ji+>u(?jn!DupSE;t\
%Mnk:&.)nughD)&MrJ[U2ouD]X%F,Gif(``S,$X-:<cC=>;Zm^A+]hHgIAX2NYnW<1-@:Y\)P`/q=Y"&i(n?K;W7+rRM/4Is=gN8&
%@>3^:CO:6(JH=j@j7_W4DrIP?\#qO`DX(]+%'Jm@$an#TK-kecIQc$+Vsl!>CK$^*m+K5YFYV]JOuXI.jr5;J)8S#lSJgAFq4HR9
%GqL_IXNU\6O;)9lF(3cg="fp.r_5(K]&s0,DPeo2k/Q>F*c!YAP-VRC0,d$qO7u^"VWI57[M2]2TB-3"KE&CrM<AGBDS"h+>X-Na
%F$IFpjW#tjlu"D0QH2Ws+Teo'cpblFN/IIB.?r3!<820:e#?R_Q:V27X*@u)?M=)&('de[V0tYfPMf9K6]UD1Z&`j66*!F$#7?FD
%p/`<pl=hp.l2'KJc$naP@^\h,3%uS]l'D]<hCPdbn<NTGifls63G`@mk^GmVE[e/@o=@/'GHJo""`\3s4A_OlR5p7cU<$$?Ntdj5
%gof7)F7n0%06]Pe'if$)^!nL&EdUs(RG&lerUu(TFZoKu%6Vs#8c"DU6T>nIPQZ<LGhO8q]<LlD-92'H3<(3?+5WN<T7?83VcUkh
%E"fI2]mrGF,5hOG]n]qh%K<i9itI3-Lu/2G-;"F/MH]K\"KDB!c5rP:88[ef"<X1D'S8,uR_jn?i'g.VfB`&-?[dMOj'p:dIdZ3h
%Y+HauK!J^GVD"f=h2[?S'#FpjA9IJ&A]mT=S5[UM:F.kA&5>QVCCM*WnuVi\47Z`2WEZNDietjfGj+J&UNgE1RT*,qUcE0D:9iIl
%gcmBNc5am@es;'+)hZch#ViqYdD,[GPP?Nn^6];nqY#>ddc\*MGidKX/crK213I3>SC<ccp>FQGSSh1>IZb;&BH&7tRNrKePYBW?
%8k/IuMsl\C;04BoBMJ[G>6l@/348;LC\NOXF8`g=43@WM-#YO(]=tFE$A2^nA,X@dCfA:jGWM^B6BjQ3/O3-F5osQuR:%B+qD?AF
%TiV)U#Uaj<988;%PEU6V4dm4n<-<"X$r)KZ>u8_6b"/C'U*SfWY%2jW/#sVWR7ALBqjkS*J#E$kU(_f/*QgM6AMG9l@qQ>:j5NfV
%\3fT@Cr3'h8G*N-ZFiq5*&R*M?q@4!"HM#+.TQh&-\Gl!/pOWfh^ZbggErccVNh'SEWB3^EW:P`Z']2*NH3!L!G$0s+=o.f)NHp/
%Xd'>F,)$GVQee'X>aA[:kSaU3k1WXe%i#:CZ\1:=Wa>S`>QmP8L>7QF2$4FDL/a0V*IT^:%b3_%2YB=be>T#`4S5tKq=*.a?nonc
%M(9)4dio&Rr)mMBiO>4Q*Tb3hB*4ojSALA4U</SSM3ht>;eSUFK26OWQ4Ur!44-e(>EE>$QLr/P4'a5Q,G4(k3ho1L9c<:jWDbBF
%,"tC-JLIg)bZ-cg_8/NunoJ"TR3*/Fdm$1=ZSSuL!?-8Ds5]4D5*ES/K]>](Lnkf6>U3X$B[<[3^;2a]3e*67/'G7D(_i<p.`?=_
%k\^E:kqlQ1_3;?d>(Uagq'anO0b(7n4^.7?dZuP@^.Ip&qomsRX7K8T$Xam=N3''Ajg3+cmQPR6Q[cR?A/P/uh.Q($#ed[6Z6f`'
%Fge%7k4mS.;nCn\fP(?:]6bXu1cTZHUk)AqkB@9:d:3]S&qF87Jo7PO:HWRhMR>s)/>0%/"k79*:c]'(LlC\,'+uX:Z(6U;d7+/;
%8Bl4]L!kH,8`,,2]XEDF1Xd>mZ33h@"(__oQn6Y6@MG=<l7Z9%#M$aT]us.)jio;_9Zto_),PB/d;N+Hm@rEaP,TC2>JcOWMrp#>
%;C'`*imcgRiRZ8>U'/r*MAEQe`2Ne@2rJ`n<lT4Wfc6VYp;sUY\rfZ?d?FIsnA%@],;,k&o"6lib8'miDXoXu&fj_!OX,[%#c^S2
%8[f7$@cCtVeM1:eb$3(%m0Z#b7oGW-\!g\WS/PAZd)8fCNe&MYA>cr+P8YQe\e@i(*:+VH,ner6>q.K8cr^M%FSJgQW96<;FNsI@
%()55+<Kn'R!ZQk1kt#PZp]O'`6G!6<4<:9PK-17M!eq>q$!=&W$'Wot-\brmT;`IDrZF(hX9>IB7l"it`rY"06/0"CPWmeS(,cS9
%$dcEA-*"s+6j7lp9X%&pS,2?]2r"P_Qp/kKT?lsIIY]\YDjL9DBa!m?C;7W7oCCdb(FEJVesU$WqD@8e'o`/ENTk2o>j&NGN<E9Y
%egW00fl+4l1o,7fWmoXn-qmi4.Oq-.e0>9f,5]bi]Z[\XXluDoPN/?+-!,)Cguaf,,OK$#d$-U,rQi*31B9XSdP&ZSUo7.Tf\s=e
%M23_-GV'\(<:S&'4M^R88<5^m+^-Dffa0aj4*r^$ms>/N&-L7n3tlNQEG,Ap?h6<?_piQ*VK2eAi30S";Aie;3fQT?!%qW,8Ed*u
%@9AG5;JI`Xpa(tZ-GB'2@jOR)%lLPgI[9Ah=BFO1H5r6+nX!QVHU)F,4/`&e:_/[=XEllq4Z)CZ4MC/AA'!:"eX(;DcP,NaG:BB2
%qr`MoL\]R@hAAWJ&/g#UV&_YIY6Sr#HM;]Q0F^;ULh:qQ8QQZm5Qpnq$qK5N-mj["*:[CZb=6OHY:\N#qHd:?V7F8!h")MLDhdk$
%esK1Jk\t2aBL.>;87Zh<$jTt^G&_(Y(M<A@HR..<(mS/YX>]tDWiTht4n7uanr2IuNq[kqWdG+Y<sic5*$PjZY%!d!\]ksdh]-Nn
%DPYCA1s=b"C/%l:jPL)?6/K**ULhoTP-6:N0o=<%[".d"]Z,/$pNJfTI_9@g4<L1Q+7u["8:Y5b5.4_I5l+sRn4-.ZPDAal@('!\
%>MtHZbZgJJkbO0LjSeP"kOlDge>q,Lf7eHh%m3X]h*(I6MbS*Z*%IldhEWg*'I@pnY=<'[jEVV."a4lDf4QT(\M>i3o\\S%G[BD\
%9=QaFhrb,i*u0GNBB60@1.5+<gG@,>CSkMSm#oRE#RHL$>Ue&RcP,oLegVq5?@AS)m-BcqV/4L`p*@e.@l=V@e-d>>H+O$-H,?n+
%VGLrL9U6U7S4g*+._f3PKVYdGq`#X6DSa@d'W\PV-5?Mq'k'Wn)u^FJOqdS7RVnIUpD]qOgujT+"(J1S0rcqNUDiF\d%EoVO3A6I
%MG]R.,D$_H)u5g4q!XF.a/Oq;h>3Wq*5ECPogts;P*pc=RXQ'Zq1>VB@2jac/B"jnOIVI\BdK*D3lrMuXQ@Z+QsP=Idc.3G7<Vn3
%$=jXrl3mepRqLm!GS`+=-[B%LQ33au=5oYU^)Z*CmZa8=p1L(d=Zg8-E8[iNk[PFH0g+P15<I!,$(8BH]\E:8\bi)]c.'V`^u(Sk
%K5L,_73f4%ApnKlV9Dl*hj5[/]/5KH\7pdY,qYWc,Z\=]%nY6PIR^a\m&:j"W&,,9=CR4nPgFt97G3^UKmOb,SCN!pl%g3-&Bpf0
%BeWo0p"B/#NX>bb5rM#uV%R\[qL0!_%!X.')EV)EO>Y"GO<rjFrCFV#l)(@ung*gJ.Z%OIWk'Can,R^(0egPVN1hMO=Khe-6CUC7
%_:g$K87I).&C[Oec-Rbo+afW0>^D_2i&pns6%8n^Sq0oieTV\`:E(%Dk,q6_X;;!0+L%8F-Zi3nk@#c5DPORLb%$b$Y!`YOR-cUF
%NsK?KSbY:WTHA2L'%Oi1;55+?IG,3!b)^$HHi!6$"p"\&"OZE&6cW#)&#,;jMgBIM2-i3KAZ.;=+bS5Ol^!MtikiLPp8T9I\N!c,
%"aIbFJIiD5;O*WtFfHjS/\&W:a1>]H"GWuAOg?I*W=%+ZDE.\10uQT-0ia8VoXW'efH+4E,bp*f/0VS*+_1tVAX2onq1&4Pc$[@#
%qQOc^!./!M`R,Yc[/i4VS006l*Mn_=+ZGnlYVKHA#FWYPbdu@<#EO.*a:ccd9*tNG%.R(P0CJFaV2(Q^HsncsQ>n\TNsBX@p-'d>
%FS8"7&3>E7l@[n*4Y^Ia?FVf]6"9YAL&1QV=8JuQ)(#Cos6IOeb8K5P4Snlcq%&'BKaPX-DdG]%f!%'K&Xs+++I[*$(8G!8:c.PX
%i>7&d'cPpN]*kY`Y;")tgd7luam![$],<(Rkeh7Q>K-+Ko&5bl&M.inNa0\HlhSd?-B!nuKkh?T9&b/*.j3[g#WuMX5G063qV"@9
%TD(Qr696(0L?/H0'1fD\N3LtH-gNPZ"gBB<CnrC8gM%f>^tu1b.5!>oLm!ZKK7c6pQ*sKghSciGMI>9P>FZsG?7r^f)b1_,5Q98*
%R_P(X94gcVaj^?J`!(n%<OmaF<RcBj?tL@!-A.Np#&("n\\S9W6B3h2-45e'&`Frqs*1cWBTPi(Q1?@LfRAArf6%k-1Bfk<On@l%
%GsC->'4)%ap&$hA+51"m4X1#1i'k!Jj-5;6Cd<^7iBqu$.@]@CVaM,l?QAOAV.7DA@cIs`(3R\`W(u1"CeLFpB&c?8OfC"kc5;Iu
%H<la<+G7t^e8pe-^K;h$AiCHW%;H<#c_Ln^SS''771#<H./#>:pIgQDXc"WS)4gIbE`Go'q1&;S:sl'(Yui:t)-@6Leq<I%>egL^
%#IpujN;`Ihp5*)Fl[("<QJXi2?grH@Z:m6t]`Y1jfV_tL$Nn<Y0?t;4o(.JIlkm[=P_>p4qUKF@":XJWR(;a1G#)#[^sb^-Y%CI"
%%n""MJ&KaFR=H/k72uhjfFc\2a%X=1TuSG+,^?r-Spo0#7iNGS3gQ;IG.NN']hK>!IL^HLk`CCg-[GsmD`GdUFpM1Dk\*m:1kcXV
%\l9W(VHUsER-X-FAKO@]Xo\h.?J%RnAWl<EENM(7AYsV+a69@Ui>4[!6(mIA<[^\r'E$u(jX/77#SY23AnZ,ir`HB2</.Pp2n(Hu
%KLS9H(VjhMpIuqP0[f+/a5[q>rNU;t4S[4-46YT@4oHXdM2*C)?L$:A!W:`t[&!6;Bf[5<ATdKK3m.O$K1h8H9GiYM'd;O-$E^k3
%,IcoV-EA0c77:V^\9d,o.^l(<L-J-D=&RKd6-qdtU=CgU1"]X!CWQNPn@jd@n'(t7nC=>L29rsJAp"##*BsHNh"3`2U_<VXHA=]E
%*HDZLh=;h)nm$S<]nK4Q&p`G4*VN[#bn*Wr=5sU<,$eH1aWc[H^dFL"G6<DO-]am]4,%^kRA$WP0i<hR6_psWg'XRpnEt?O[$RMI
%4;dpVD&.BYp=eCte#-9NVtZ;eH_9U1Dk3,qVD=-Xh*LD2*eP<K3T*k7$&XXRo=K^uHsrohf)-8hJ)25JHg'j'j+b[Lg0:"il,bPu
%Itsqg]j4CL_^4pLYOq1(Ih.lo4bb1sW9_&4g&u&G9G9OBLMp$X.>qmoQGF'+`>b*Tb,8bp_)/ALLEZ8/6d1o;W]$mgU%gT%gAoT?
%\7-O,2MSj\Q#V'H>glI,d..as4;o.$bZ:\iGKNQ0hC!4:iZgD8K(3"-!Xj,RYV(g.)3?2pKQ7PgH_`1>+$iq<7A''#5W7^TPl&(3
%'iBoGFgDXuZp-4hm:sVs?4&n?BEM9C2FPGC9@aZA:@3NRP=(LJP'%DC)s69D=V_A.hq`\k:)`Z[<k/,t8r\1#Z>[1RhK\Lq8lkI#
%*';%*i".+R"a\(2i%e6E`?*NnNknSI$k9t>N)WhMNM1VF5]IU,h4NQq=,Yl@g:cPDdJJFl.;9S]>Wj0HhA;m(,,";rAeD&pT[-_m
%AsRY:3T]m`PoJp6npSqp,2*L*FC_gZ&?&<s&/,&adO\^=ka(<>Z)TTC=9T>dU\R<&9lSjY,R>u"7j&W%Cad:(NMC>8PAW*Cp$1qA
%b76`t`4h"UKPGfNVBXE7:6a8W"MK1Q]amj(45EbD)F'.!'^\WWb0%@H@W4*SOYg-3j#pQ8mDjFO'1L#U3ZMLsHdk%9R=mKJU?n,<
%1EPM9emQca5B]70&L5N#D1;B@D9d'3FZ[B]@P).ZB*bCDOlOp7hQEaQnN,_qipFNN1J3N'oIgGHI:+E_kLkKO2):2B2F5#OX>XR:
%qXg(?@iOhH-H=+/Oop>/g*$*/,BLViB;ZC&9u"af(YA1:b]U5%?NO\f9Was[V:ZadI*FgOfn(dE&eS)>iEM__66)dhBp16..'RTU
%cV\SdmNHJY.U@0]1B:)o^j`Kq%lnK0-/<Ni&;b0K>l\8F,9,2'oXdQMbaT(p\&+B3>87pbaWSW_f%AC\TuJTWRHWi/Y#5;2p^0O+
%(OKaZ`K"k'0o]IY%!\9N*8@:1XLp*T;/3kV0D&Iq\:)=e^:]b]U4%]`H-<1CQ)a1+"bN[4HC1L1X+lh#d2`P[/-n9Z5<J%lKh`'b
%LDNV:%e=;dYF%eqXq]]]fc7$):gd@bq8H-a8m7(Y8>Qma9FR)(jn<jq[n'+&Vge(!!#Z^.N26NRajdX>7@Z`:k!B,%ZH^0H7Eg5Y
%>:E5H4AF0iW;%8OVAlQY9$p\"ek8Z>`$hm<C4A[hS-X]"UGB\K<NFOB@]"ZBDq9G1"k\*YS!602#pDTnDHLGD:5>2Z-mfIA%dJR<
%3l3&7!4An@e<3P\%[<CXiA(lfd1\U"S<4"bD$,9Qk6\^rgma3f<Pe8\'->PYe,#hsf%KlIr2IT(eIdV/3]3Q4Y-Z4iZ_ZeN',lj^
%)DbXi_Z#R<^2)VgLgcRCNW<2;Vu:=XcLgAuaCnF">]WZ<q4n8&(3>FDLeOZcb1lP-(+mAJ==3s$BY1itZ!YWK4\ji[,iY3W!&QQ'
%Ji#-9qbTjb31a*C`+`bT6)lJ"cObQdDFhf1C4d>f#cUMHa_"Sdg.7f5TE$k&Ttc"lSe^.hJfpRD$"2or:Z2'qN"F$bjI\,:nfRXD
%-*#ac$mO`e'$s,s.6=nmO,kLgdE`;H7;=_B^aGoV6!CIQ;uUBG^1ZtcU>l83<4XVOC8Tq/SPJcqWea_j(6)`L[L3<g(-sppLrDOa
%ICMp\&@jlZ@oAq1bA))$M*pab1a4;[85GpHdEEI67TjjO2#A;#3U/9c"C<'fDm]&"j7Di3`F4]K*lbg!+5*FiL3Z%.]k/9i@[qtp
%b!);m\UD!uo$5J$0;IT3EM!KK+iJV9;lIPjSV)kb5tA!_RSR"[X/0_fd-"X,q)5tO2L^!i?X3$FVSUEQ8M8Mk,L2om3c@=eQ<A$m
%mZJDB$uCablhhmj3%P1WI`R]QJg\IIrJG$3EQc*S/Cs]r+MT!FM;nc4@fQ%J^7U_QG-tA3:B187PCt/TJPBm:F-&W3DFdkeRq.S(
%@\<`Md>9`u.j6N2fS*K31:1:a3r%cKU+k6.ccVu4;aTVP.o>Q3lBl\4"pmYS`B:5VLBqLJer''?fQ$2YKN:A^),,r,=/4&r:6qTJ
%&'ki2rfI:_-.WEB/BT4DnDqOgnig,=]mJ;a[b57a]um6'rZ$Y4$0HS$';JdWCNcoa9,80AdV>nB]@L+D<5,,b"5&.+LBK8`:aiNY
%[lP(GrCs2;EqIBsJ0J_1"Y"<s[&gO>GV8QN/_mK;j;h0:fc9`a@s;F-4ulb<')W*((r%rEN5E)#ZV*G$pSC?(eXIj)Oh=B@aCaBo
%E4N%GekjX"n[B:q4PW)8kds4T`_,p+XnnE@":KV3\1I'%>?&XO2#4f?O;9.)ldOTP\EQ5L1&L5UcLksoaGAl&&l1&<VM?UaP/9Qk
%-AfMP#a;2P$pM';e-+Si/^5SN>l5p=WCnEq!31\I;5a+:k*YU.KC(uP(c?DSK-6p9Ban5s-!)hLo/t;!O9.cR,#N`3AA/4-e%[s@
%0AO,,9P=7nSX[sd2r5Qp&!sj1L7=r@9I(blhTQ&oo_,a9he>%:[&l(aqUA.Mi,l$C\=3lj&bP4ZRmM>jesmgE4QM`cGuK@Io-V0L
%`$TU=]*\nbG17e:0p=c>N*]3Km;hJ6mnj!6X-FQ9>4q0"YWWDDFOidg3tDrRBH+,uj#3Y=/jIQ>.O9=97%GHh_/+5P:U,AI6fCt\
%kn5/HqH<\3k?a=U7'c#&kDX(Frctom<u.p\3T!;4(R+8#qA)WD@rVXH@LJ89q&n/N#7dlj._8`>b`0t$*ot4g0G+iK1@#EMApk4^
%0?Msm@jZ_a9S.gn9ObBX:K%#s^&)g/gu[sN1,TS^9&(!2gdsJ;"D5cKPN,`*o4pRlf@*p\Xpj7OYR6#_J#jU6A\)>MdLmG/!RpG?
%?7ZEW.Y-76MkM<s9H;]i<UN0TfNZF9kOD)>%mm@Nb6e=#KHhYq%@Q8-gc7b2,.u@jM$I.e9u]r]*='Y5#;uW?_%H:*(%Q[NLD2+W
%T&0#2_rq<o*-3E_j.'_'YEn;)%^d]A5p;2(/_)edA]mH"V@5IXd?_'\:1>.p,F6"g0KbQ>c@M.%O9tA1<+r%32uKo?:`#DQQ]J/U
%V?e_7KL!Q0</=SI*3C/2qs'R<T2t;TLNqu%=<iI4>R81.hm1ufQ9dPu`XXWq%WW/+&T\[L")erJcqG*4ECG_;7fGBXhGC:PGQ,;;
%OuY.;jfD>U'FE<s$Ehf*hQg9VOrn;&a>t1@=J_e41CAM*F7ebr^##.ko_"UI`7fgNI?i0X;EcoAJ`S3)%h:Nos6&be<K/YUn^BtB
%4q<JMfUgfSY]rX]A=^aSN+EQ&N%iE.`l4Jj9;[1P7K`_AbAI3jql`bN[g.bB_G3>sRinqd8dGKhZh6/S\#Yqr,2tccE@Ep/p2mR_
%`#sN/n;_$NQM?1`#n.YlJEjS=]g&`S>h(\SPsaKW#I!`0Skk]m%#hMjCG'U`p0]$Idg!%foN9$7K,3_j^Y+7T'SJ^GG75@XM%5&2
%i97]a*k=FOcn@V]/qPa3f#;hjD&T6$0V_U&-V;m;FV@CoI:a"kLoMQhpfRn*&MT-D;!1S#Upnm",`^p1,'ePER7C<.+GTr[,;p.\
%e_g8,Hc43]XtfJP@5AI*c&q\<p=T,k6o[n$P/iUi[EQXhWG7mud@^rR$oOc\9\+9q:tV$upcss_/1<uVmM>L/q$3bM[^o0O4.GXP
%2+Wgn5g'>I"2(0uSW7cC<u_W*YAAp;nS#j:[XPjB!-`?-90(id],qST7W(hGOeA-\.NtLR-tgHK.C"P+gnuI(LPYbTWGitXXO`j)
%rFGao"*p5nR<64FUEPUCV=,Z\"]drT-U-e9dZmT2#?oI;eEBd#2T-NHY'.:dG&pV8eG9HQ`St&dag#Q*$pDAn2m>-ZVP!ejA].Z.
%2q<H^ldmHdQ>A>LPe^BVi"-X$Ue7KQaOpQGd+hVX[/-]g>.V5:3a,:RG/qH=N6k\eN1M)WI6[eJ&-9a-(d9c%[N8-cU`S&^*e7?e
%IW#J3/LEV^i<\_i0)UVGoD)+q1$eK<8]pcX]PA%NGgkoH+"-jOW07YR94:1]W9-ie[>np\3Yb/,aSN@F,F5-aZXSceS*Oe>2Fi%u
%9GMc3s&&GYjQ0uJlqDNJ&oV3Db%cHrOp1[B8j;7O9%(pn4^EW\Q8A)`(5:S%Ii!t=bn571R4c-EPQm*lOg<!<2s*kr^K29=@n91c
%Ca]J%WLOY$=L6ijC''Q)6ahRA8Nt5f*c0m>!=s7.o_u'qm'uMnM#^HfV'?&&\#Hh/1rl4^R/]e?4'@i+Fh*c5c4f#me5`mtTg]Ro
%@4]nk8a:5;?U5BYX([C`?.:/T'UUR>As\2>SYonKX!%\G6F__+dN^^r`HHn!,*A.@=Gf#.>$VKKcoo*dMZP-f/IU]C"`0tPbr#:Z
%FanN9;-%ZVVXrUP5`?PbB`Y):#2>1[+W4H(VUeLZK%.(rD&&!t&n5?89,o>6*\,#J[6+,.2?HhI;S$qHj9=<XQL=2g2B:X6;R]I*
%1G0VtFOu5iU]<ckD!aDkNk4:=f)[*`LaM4jSmM"iV\*Y$E>ZspEujHsIc:\R.:e;k)<2G$P#5(6j!K(rJjCWBZoPm_S4^N\Ne@++
%[44eu+;L'+Zm5`ke`>_/88.C,[/k^m+P/T`R!HQ@1W]c@4&[V3-E5*ULi>#,4&V`3]Sb:t'ZJ.JAKom#hY%ndI87hroo^#r&,[4R
%$l"`O&-Ic]jA]q[.3i:9`uk,lkkQ8m:jHV5VhT#5O9sqk:$U8`,7-[eHr(jH87OD*g.TN<K>\rQoZK$p@/ZsuD6IRk6t<0lF1AbF
%/=[\:/;l36h!*ZtjM,*,7URO%7NMD_M+56)R[R&qf[s-$Kd,=[d[1eU@ht=X=UhS6DP5b2gc`"ph7eg$-Q5N(UZ[q$Z`G&sTo]Y2
%M)YnJOpcioc[BPApV;tObI<%^UD?)"iK`)jc@"H.(_`\m<OJ%.j9*1$+/sR`NXJR.7+L^\eUB93YCe[G`WXqX'*;i&W0V4MbSXh7
%'NW%K^oNs(TG<\VBXT9'dG4#]iC1-'DiDmINsB2)W@3hk@V=-C/a[1_&o.3eeKpJ@7H$m;3u6FK<[N?M>$]Zb;@.a!<Ou<%?-K[E
%i`$c3V#MPC$8f@3REN!?YiP<O6FI<L%m3q<<>cm04E*.jNJ!?M:<%8sAC586o=Pg;Z4^_&Z\0l/g#(o:dYC,;0<6gp.Q2g=Y:VAd
%^Zd']"o%O9qB-lF)H@]*)qg:L-W\.3hq"bLZ><WNX6hOV[dtN%fIVWJ8](Srk0O_:Rhfk-U)B^:cJRD0ef7IUedOHb;abP\C>tk&
%.)b'G/\2P%4PA1BRDBi4d[+mO(D>L47/D;,.RN7C)XP6cZ1kqTl*<!F^lo/G"`el86jSi2o]e,fO^ZVXHS%%l([b\DElioQW8t=s
%T]Q+2&DJl[@g0_EkM[o9EFEc.]a:IkUUIBdH$?4^'<a\&.JR2l37$c3r)Sb3f!4&FgVX(_".Zsa1[q`p7Lg2%i>5_tVti\]%C7%/
%OY%i?o0*2=4PZSi:Z<W:3.Y2TkrA#3Bk/h(mF]Z0D`<-miXf.,`Im\u,Pm/f,'H.Q6lPDgaB'BP'qG]//r29RgT&>5hs_TVf8gL1
%qgGM8nsuu_pW*=(q!A%M^\%R"?iKHmq"VnErTPsW4ra\)nA"ql?iTc5s5f=Af:W*8QiHuUrq51Kq#C?XQTtK(^Yr8noR@t_oZP#K
%j\PpUs8;W+r99Pts$-P\s+_26l28C_r54$[?iT<hr1Et<)K>$E~>
%AI9_PrivateDataEnd
