%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Dogi_Pirate_Win.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: WINDOWS
%%CreationDate: 7/26/2014
%%BoundingBox: 0 0 530 207
%%HiResBoundingBox: 0 0 529.9415 206.9732
%%CropBox: 0 0 529.9415 206.9732
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.1 x399 R agm 4.5189 ct 5.1875%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 52 8%%BeginData: 7622 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD6EFFA8A87DA8A8FFFF4A76FD73FFA87DF820204420442020276F
%6E6F7DFD70FF7D272093FCB5FCB5FCB58C20F86F6E4BFD6FFF272068B5FC
%BCCAFFC3CAFCB5FC68F86F447DFD6DFF52458CB5FCB5FFCACAB5FFB5FCB5
%FC4B206F4BFD6CFF7D20688D8CB5B5FFC3CAFFFFBCB5FCB58C204A4AA8FD
%6BFF2768938CB5FCB5B5CAFFFFBCB5FCB568B5444B6E7DFD43FF7D522752
%7DA8FD21FFA8208D8C8D8CB5FCB5FCBCFCB5FC8CF8204444F86F20FD40FF
%52272044444B444B2052A8FD1FFF526F8C938C938CB5FCB5FCB58C4B2675
%99997427F86F4A7CFD3CFF7D20448CB5FCB5FCB5FCB54420A8FD1EFF5268
%8D8C938C8D8CB58C68444A98C1984A4A756E26F8994AFD3BFF522093FCB5
%B5FFFFCAC3BCFCB58C27A8FD09FF4BA8FD12FF276F8C938C938C936821F8
%9998C1C1C126C1C1C12626204BA8FD39FF7D208D8CB5FCCACAC3BCCAB5B5
%FCB54427FD08FF4A6F4BFD0EFFA87D525227688D8C8D8C8D8C4420C198C1
%98757D51A6C8987520204A27FD0FFFFD05A8FD25FF20938CB5FCB5CACAC3
%FFFFC3FCB5FCB520A8FD06FF4B996E75FD0CFFA827204B446F444B8C938C
%938C6F4AC14A264AC827275152C8C8744B204B4AFD0CFFA8522020204444
%44202027A8FD20FF27698C8D8CB5FCB5BCFFCABCFCB5FC448C6927FD06FF
%6F4A6E6EA8FD0BFFA820B5FCB5FC8D20938C8D8C694AC1982698C1A67C52
%A827C8C875444B4427FD0BFF7D204493FCB5FCB5B5B58C6F2052FD1FFF20
%8C938C938CB5FCB5B5B5FCB58C4B204B2027A8FD04FFA8446F6E4BA8FD0C
%FF4B20B5FCB58C44204B686920BB99C198C1A052A87DF8F87CCE206F204B
%52FD0AFF2720688D8CB5FCCAFFFFCAC3FCB5F852FD1DFFA8208D8C8D8C8D
%8CB5FCB5FCB5204A4AC174992020A8FFFFFF7D6E446F26FD0DFFA827208D
%68444A994A20F84A4A9998C198C9F820206844C9754A204A20FD0AFF7D27
%8C938CB5FCC3FFC3CAB5FFB5FCB520A8FD1CFF52458C938C938C938CB568
%4B4A9FBBC16E4B6EC12027FFFFFF7D6E6F6E7DFD0FFF7DF827689999C199
%26202799BB99C1C87C689368A6A627204B4452FD09FFA82068938C8D8CB5
%B5FFBCFFCACAFCB5FC8C20FD1CFF52448D8C938C8D8C6920206EC198C198
%7598C198752052FFFF526E444BA8FD0FFF7D208C93989998C19826F8206E
%9998C8C8CEC8CE754BA8BC8C207DFD09FF5244938C938CB5FCB5B5FFFFFF
%C3B5FCB5FC20A8FD17FFA87D5252274B8C938C938C93684B999998C19952
%4BCEC8C1984B20FFFF516E6F26FD10FF2768B58C4B99C198C14A93682720
%9998C17551F84593CAA84B27FD0AFF208D8C8D8C8D8CB5FCB5B5B5FCB5FC
%B5FCB5207DFD16FF202020686868208D8C8D8C8D444A9875204A9F51F851
%51C8C8C1204A7DA8206F447DFD10FFF8B5FCB5444A9899986EFCC3FF4BF8
%26202068B58C4B4B2752FD05FF7D2727527DA84B8C938C938C938CB5FCB5
%FCB5FCB58C4B686F52FD16FF218CB5FCB58C4B8C938C93444B99C1269FC1
%C97C7DA87D7CCE9F4B4A7D6E6F4A4B52FD10FF27FCB58C93204B986F8CB5
%FFCAFC6F20B5FCB5B5CAFF27A8FD06FF208C68932020F8938C8D8C938C8D
%8C936844204A4AF8206F2027FD16FF52208CB58C8D44698C8D4420989998
%C198C827A85227F87CC84B444A524A20206E6FA8FD0FFF20936844F852F8
%20446993CA9A69204BBCCACAFFFFFF52A8FD06FF278CB5FCB58C208C938C
%938C936820F84B99C198C1747D529920FD17FF522068934444209368444A
%4B99C198C1C827206F686FA0A0264A2027744B4A4B4BFD10FF4B204B52FF
%A84BF820F84B274B207DFD07FFC352FD06FF52208CB58C8D208D8C8D8C8D
%444A6E5275C198C19875F826982627FD17FF7D20F8938C684420446E2099
%98BB98C8A06E686F20264A26F84A98994A4A6EA8FD11FFA8FFFFFF52A67C
%2627A87DA8CAA8FD05FFC3B5FC4BFD07FF4B458C9368458C938C932075C1
%75275299C1757D75C299C14A26A8FD17FFF8B5FCB58C4B446F6E754ABB98
%C1C1A675512075BBC1994B4AC14A6F206FA8FD15FF75CEC8CE75FF27A19A
%A8C3C3C3BCFCB5FCB544A8FD07FFF8204469208D8C44206F98C1984B20C8
%C827F8A0C8C8984B207DFD16FF5244FCB5FC8D204B4A6E6E4A9899202720
%204AC198C198BB684A986F204A7DFD15FF7DA0A6C2999926278C8D8CB5FC
%B5FCB5FC9320277DFD06FF524BFCB5FC6F4444446F4ABB98C1C1C8C8CEC8
%C97BCEC8C84A6F27FD16FF278CB5FCB58C20446F6E6F2026206FA8B5924B
%98C199BB4A9368756E4B7DFD16FFA86EBB98BB9999F86F8C93FCB5FCB568
%4B2027277DFFFFA1A87DA8208CB5FCB58C20446E6E26989998C1C8C9A027
%26A6C8CE9F264427FD16FFF8938C8D6844F84A446F4A2020B5FCFFBCB526
%BB98996E2768442052A8FD17FFA84A98999299984AF820F8442020202720
%272727F8266EC1984A5244B5FCB58C93206F6E6F26BB98C1C1CEC8CEC8CE
%C8CEC851444BA8FD16FF27689344275252206F6E6F20274493A8CA8C4B98
%994A52275252A8FD1AFF529998BB99BB4AFD04274B274B274B274B20276E
%C1BBC14A208C8CB58C8D204A4A6E444A989998C1C8CEC8CEC8CEC875444A
%20FD17FF52202052A8FF7DF8F826F87D522720274B44202752FFC34BFD1E
%FF274A6E6F2026F82720272027272720272020F86F98C1984A4B6869684B
%20204A6F6E6F209999BB98C1C8CEC8CEA04BF82752FD1DFF7CA0275252FF
%7DA8A8FF7D7D527DCACAB5B568FD1DFF522799996E272727F8FD04274B27
%27F82727276EBB99BB275227F85252FFF86E446F6E20F826204A20262020
%20F852FD1FFFA89FC8A0A8FFFF7D6F9A76C3A1C3B5B5FCB5FC4452FD1CFF
%7C92C1989920272027F820272727525227204BF89992994A7DFD06FF2720
%6F4A2727B5FC2068938CB5FCB57627A8FD07FF526F4A6F44FD12FF7DC8CE
%C87CFFFF526F8C938CB5FCB5FCB58C4B277DFD1CFFA89999C1994B202727
%4BA8FD07FF7D7D274B207CFD07FFA820F8204BFFC26F20A19AC3C3CAFFFF
%274BFD06FF276E446F6E4BFD12FF27CEC8CE9F4B522720698CB5FCB58C93
%2020202727FD1DFF20BB989998272051A8FD16FF266F8CB5BCCAF8A8FD07
%FF7620A8FFFFFFA8206F6E6F6E75A8FD12FF52C8C89FBB99994A272021F8
%27204B204B274B277DFD1DFFA84ABB999920A8FD17FF2799986E68B5207D
%A8FD06FFCA93205276A852446E446F446E4BFD13FF27C89F9992999899F8
%272027202727272027272752FD1EFF7D202752FD19FF6F99C1996F20279A
%C3CAFFCAC3BCB5FCB54A4B924B6E6F6E6F4A4BA8FD14FFA86EBB98BB99BB
%98FD04274B274B274B2727F84B27FD37FFA17B526EBB98C14A20688D8CB5
%FCB5FCB5FCB544264A4A446F4A4A27A8FD17FF4B6E9998BB98992020F827
%202727272027F827F84B4A5127FD34FF75CE4BBB98C1C126F86F68B5FCB5
%FCB5FC93202720996E264A52A8FD19FFA87D274B4A6F204B2027F8262752
%52272027272798C1C17527FD33FF9FC85198999875F827F8202044FD0520
%272720444A4A997DFD1EFFA87D262027F82727FFFFFFA82620206E9998C1
%9876FD33FF7BCEC87598992675F8FD04274B274B274B2727204B992751FD
%1FFF7D276E2720274BA8FD04FFA82799BB99C19975FD34FF51C8C8752620
%759820F8272027202727272027F8264A4BA8FD1FFF529998BB9226F827FD
%06FFA8279899984B7DFD34FF52C899BB99BB98BB4A20F8FD04274B2727F8
%4B52FD21FFA84B99C198C1999952FD07FFA84B4A51A8FD36FF2699929998
%9992202020F8F8F827F827F820F827FD22FF20999899989926FD0AFFA8FD
%38FFA826756E6F2652FD04272052FF526E7598BB4AA8FD22FF274B6EBB6E
%7DFD45FF7DA87DFFFF4B4A26207526FF27BB98BB98C120FD23FFA87D527D
%FD4BFF20BB99BB98757D5298BB99C19875A8FD71FF2692BB98C198277D4A
%9299989920A8FD71FF4BBB99BB99C1F8FF7D7D275252A8FD72FFA8274B4A
%4A2052FDFCFFFD71FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Dogi_Pirate_Win</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:CreateDate>2014-07-26T12:32:42+07:00</xmp:CreateDate>
         <xmp:ModifyDate>2014-07-26T12:32:42+07:00</xmp:ModifyDate>
         <xmp:MetadataDate>2014-07-26T12:32:42+07:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>100</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAZAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXif5gf85J2Gn382ieSbSPXdThYx3Gp&#xA;SuV06Bx+yGT452X9oIQB/NWoynNnjjFl2nZvY+fWSrGNu88vx7mH6TqH/OQfniSWaz164jt4z8S6&#xA;dFa2NvG1K8BLKryOfYsTmHHV5cn0R28/wHo8/s9odGB+azS4j0iP2S+eyD1e6/PPyVPbvP5m1BfV&#xA;q0Jvjb6hbSgGrJy41770YEdshLWZcZ9cRTdg9m9BrIn8tlnxDnxdPhUT8WIt+a3nGLz5d69Kw0jz&#xA;Bf8ApPI1nU2twkEEcPEJJyDrSOpSSpWtQQd8Ms8ifEgdu78fe6vJ2R4B8DPGpbmMh/EPI+XUF9W/&#xA;ln50Xzl5Ps9aZFiu2LwX0KAhUnhYq/EEsQrijqCT8LDfNjjnxRBebzYjjmYnoynJtTsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVQep63o2lRiXVL+2sIj0e5lSFfvcqMVQmm+cfKGpzi303XNPvp&#xA;z0htrqGZz/sUZjiqb4q7FXYq7FXYq7FXYq7FXjP/ADkv58v9F8vWXljSZ2t9S8xtItxcxkiSGxhA&#xA;9cqR9lpC6xqfAtTfK8uTgjbsOy9CdVnjj6dfc+eNHigt3SGJQkarxjUdBmizkkW+v6HHDHUIiogU&#xA;Hvv5def/ACnF5b0jQ76/uNFu9NuWuZJofhhuArPJwmajEo6txK9yBTtmVptTDgESTEg/N5XtzsXV&#xA;HUZM0IRyxyR4aPOPIXHzHO+62N/mZ548s6rptnoPly2kg0rT55J1mc8UdpOTMVRqvTk7GpI+WUar&#xA;PCQEYDYO17B7J1GDJLPqJA5JxA91d55cgP1vEda1XTtY024Nlyeexf1Le4VSQJEBao41PEjb4hvk&#xA;sGKWOQ4uUuji9r9p6TV4JCMvVA3E+Y7utHlvze0f84sec401m70J5ALXXIBfWaVFBd26hZUH+U8N&#xA;K/8AGLNhpTVwPR4TtKIkI5RykPx+PJ9NZmOqdirsVdirsVdirsVdirsVdirsVdirsVdiqhf31np9&#xA;lPfX0yW1naxtNcXEpCokaDkzMx6AAYq+XfPP5+ebfN969j5UuJfL3lmpVL6McNRu1H+7A5r9XQ/s&#xA;8fj8TvQYWo1Yhy3L1fYvszLU1PKeGB5d5H6GvIf5HaP5itH1/XbqK1sp5hCl7fH6zPcTVps9w23x&#xA;bDxO1MxcXiZRxSnwxd32gdFoJ+Dh04y5as36qHfvfv2pS8+fkx5a0jRINZ09Y7nTZbhrR1ltha3M&#xA;cyct1K0JB9M7inbr1yGYTxgTjIkX1cjs6el1mSWny4McZ8PFcaqtuoog7jqmX5VfnDrflTV7TQfM&#xA;99JqXlW+kW3tNSu3L3GnyuaRrLKd3t2b4at9jbegzL0ms8T0y+r73nPaL2cOj/e47OI/OP7O4/A+&#xA;fp3M95RxIAqdgOpxVhPlj82vLfmTzde+XNNV3+rRPLb6gSvoXIhZUl9KhqQDIOLftirL8NCa45Yy&#xA;kYjmG/Jp5wgJEbS5M2yxodirsVQGq+YNB0hFfVtStdPRvstdTRwA/IyMuKvlT8/Nf0zW/wA1kn02&#xA;/t9Qs7fRreKGa0mSeMFrid5AWjZlDV419qZha3kHr/ZCI8WZ68I+/wDsYMCQQQaEdDmve9BVEvvM&#xA;N5fx6bpFit5dMoeSV24RxpWnKQitBt7V7VO2VThihHimaDgdodt5cMhDHATkRe5oD9P3eVlmel+V&#xA;tDj01tS8w3sGoeipa6AcfUIiBVhw/bp4yV+Q6ZqcuryGXDjBjfL+cf1fB02o1c88eLNIGPcPoH6/&#xA;86/gi9D8s3+tavPPpV/dW2g6OtotjpWnj0FCvEJj9Yikj5MsgYcadq98s1AnihU4XklZJlv7qoun&#xA;xZcc53HJwwjXCBt77sPN/NuiyeSvNLXNlG7aRKfrK26O0fAS8oWUMOgVm4sO6soNd82uh1Jz4udZ&#xA;Btf47x+lxtRhGCfLixc6/Hcf0Pq3/nH7zbPr3kUWl7IZdR0eY200hcyB4JQLi0dHIUsnoSrHUitU&#xA;ObjTz4oA/D5bOk1ePhyEfHblR3D0zL3Hdirw78y/+ckoNK1C40LyVaw6tqdsxjvdUuC31C3kGxjX&#xA;gQ08i/tBSFHiTUCrLmjDm7Ts7sjNqz6BUR/EeX7Xm1r53/OfzJfRRf4nvjdXLUtrLTIbe3A6mgCx&#xA;uxAHdmO3U5rpdoTMqgHsMfsfpseI5M+SQA67RH2gsoutK/5yT8vWrakmu6g8KDnOtwtjqChRueUa&#xA;rzA8Sv35ac+eIuURXl+C6yPZXZWeXBhzyjM8uIbH7I/eyL8tv+chbi91a18veeLWCxv71xDpus2n&#xA;IWc8p2WGVHLNDK37O5VjsKd8jBqo5eXN0/a3YWfQn17wPKQ5fsP4D3DMl0zsVdirsVdirsVdirwT&#xA;/nKrzNcLp+i+TrdysWrvJe6qF6ta2hXhE3+TJM4J/wBXKdRk4Y27fsPRDUamMT9I3PuH6zQeGWci&#xA;xTqTsvQ+wzS5BYfWcMhGQeq+SfzUk0LTYNH1DTLfVNJhmNxErgeqj15KULck2f4geNffHBq+AcJF&#xA;h1vavs6NTkObHOWPIY1tyI8+vLzSz8wPzW1fzU8VpdpHBah/UtNOt4zNMzgEVqA0rmhP2QB7YM+p&#xA;nl57RH45sdD2bo+yhxSkTkkKvqfdEft97zua017UrOSDUoLXTINSHDT7a/uI7aeRa0HwMWfkxI24&#xA;imRjkxwlcTKZjzMQSHV6nt2WfHOGSAjDJtEEgGvt3+ArzfUn5DfmTa+bfJ9vp13K6+aNBijstctZ&#xA;6CUyRD0xP/lLIUNT2aozoYTEgCORfOZwMTR5qv8AzkFqs+n/AJX6gsEjRzXs1raBlJFUknQzIaD7&#xA;Lwo6sPA5DOagfc36OHFliD3vCvyRXULj809EW1JDI09xcyDcLAlvIj8h4MZFT2Zge2a/RRPHY6B3&#xA;na8h4VHmTs+vM2rzTsVUrqFp7WaBZWhaVGRZo9nQsCOS17jqMVfDWseWH8ueZbvRfOVr63mFWLfp&#xA;K85XH16Ik8LmKSYyFuQ6gGoNQd81WsjmBsE8L6F7M5Oz8mMQnCHjDnxC+LzF38QEquI7V9dgj0az&#xA;E14VdJ7a1RA5Q0bm26qtGCj4iOuURJGMnIaHm7HXajT4NRE4ojjoiUYAXXOzyHMDmRzNLLnUpIrh&#xA;7Fraa31GOpmt5oyHijXdpONaOAN1Ct8XbJRiCOIEGP4/Hk0Zu3sfARAHxP5pHLzPf8Du9O0/yxpV&#xA;35Sm0aynMSXoR7m+SjSToWVmZmFKiRBw26Kds5/LqpxzDJIXw8h3f2c3Ay6cZIEX9fOXf/by93JM&#xA;9Th8ieV9It9E1PR4rbR/NCzAXcUE0qCW3dB6foWvCRpG2YMZF2Xr1zO7NhLNLxZ5DxQ+O3xdLrr4&#xA;xgxQ+roOpQPkXUbC089+WtC8oaHcWuki5uZtQ1O7kj9SUfU5VKJAjy+jFWjjlIzMQgY/CozZa3Li&#xA;nhlRuW2/xac/Y+q0vDPLHhiTXMH7ixX869ctNY856jaacq3CKr6ZaIm/rXUpAnK0/ZjcLU+KnMXs&#xA;/D4ceI7b8R8gOXz3b5T4sdcyY8EfMn9W3ye3/wDOKnl6+03yRqWoXjBjqWoSLaupJVre0UQKVJC1&#xA;X1VkCmm4AzfYK4AeV7uj1R/eEd2z2rLnHeU/85Gee7/y15Lh07SZjb6z5imNjb3CGkkMAQvczJ/l&#xA;KlFB7Fge2QyT4YkuZoNIdRmjjH8R+zr9j5dtbaC1t0t4FCRRiiqM00pEmy+tYMEMUBCAqMXpP5Y+&#xA;cLLyv5ih1a6t3uLUwvC6xcfUUPT4kDFQSONOoynT5hiyWWXbfZstbpfDgRE2Dvy26F6xN+Yf5c6Q&#xA;lvdx6te6vqVsty9tzMspH1s8zHJX04iFoABXambA6nFHezI7/a8ZDsTX5yYnHDFjlw3yH0bWOcv1&#xA;vnvU7WDUbeeC4UenPXkF24kmoK+HE7jNRDIYy4hzfRNVpIZ8JxT3jIV+339X05+RfnC781fltpt5&#xA;qEnratZGTTtSkrUvPaMY+ZPjJHxc+5zp4ysAvhefCcWSUDziSPkz/JNTsVdirsVdiryrXP8AnJb8&#xA;sdOneCwlvfMEsTFJf0RbNPGpH/F8hhhb5q5yueWMeZAcvT6DPm/u4Sl7gXgv5tfmHp3njz/Y6pYa&#xA;ff6fbw6V9U4ajHHE7SLcNISnpSTAji475ianJGcfSb3ep9nNFm0+oIywMOKBq/eGN5gvbroNJ1PU&#xA;45bkai+laBYhn1HUAP5N2SI7827HiNj4n4cryZ4QIHDx5Jch+v8AH63nu1NfkvhxZDCEfqI+4H9X&#xA;Lv6M78pz6Lp/l3UdQ07StRRdPgae7uL63ZLq5RFL+p6jgc1+4L4DNRqceXLljEyieLpE7R/U6qGp&#xA;hGEsh4775fVL4nn+hf5CtvLXnTXp9Xuolj1C5itLewW7QzReoqSzSRxFkHAoUPJjsx+zmZq9Hlw4&#xA;hCEriLJrbnQ33dZi7QxzyGc4bmgOvLu2QPnOTUvy+/Mew816UPS1SGKaW/tQ3FLqG3MQmialaiaG&#xA;TY0NGVSN8v7F1MhEwlyBA/01/pH2su0tPHL648zEn/S1f3/Y9K/5yR8zaZqXk3y5FYXCS/Xb2K/4&#xA;BgXEBs5WQsu5Xl66EZvNWagXWdlxvMPK1H/nFvy8Cdc8yypvyTTLNz4KBPcU9mLRD5rkdHCo33tn&#xA;a2XiycP8177mW6p2KuxV4n/zlTd2MnlHStBe1gnvdavvShuJo0eW2ggQzXEtuWB4SEKqVHZspz5e&#xA;CBk7HsnRfmtTDFdcR39w3P2PCNGl0/y1rcFxwS3064iS1MvaKVJC6M5/lk5EMx70rnO5oyz4yOcg&#xA;b/HufQe1dFDSzjOA4cXDwHyN2Cffe5PWrZb5+s9A1HQvrd0rDULdgNNmhIS4S4c0VVah+En7dQRx&#xA;qe2a3QTyQycI+k875V+OTqdVphkoAeu6jXOz+jv8kq8t6T+YPl/yk2vSWi6r5YsHEUl3CUhuYuR+&#xA;LhCxAmjVmVQE37U223GbRR1ETkHp9/IteeM9FljpyfGJjfpHqj8Oo7vL4Mi/5XB+Xl3oMel6zCNa&#xA;tnPr2traeo10j7/YEfF4m3P7SncitDmvw6HUYyaFDvPL9rjZJwnMTwyPidBEEy+zcJKvn+2tJ1i0&#xA;ny/P5a8t3LGPVtRinNzrRtWFW9OSUyC2Tb4qMxXr8PUbHDhgZes8ZHQbD9v2N2q7L1uWPiZ5GMeV&#xA;yNmN8iRfpjfOrI501rP5ZeUfM/mi1sPyei9T1o0k1C8LSNBpdaFXe6JZvUbf9yrF6g126bc4eI3f&#xA;pPR0412PDiniljj4w2Ex999/uq+vn608u6LBoegabo1vxMOnW0NqhVRGCIUCcuIJpWlaZlOifGX1&#xA;7zvBquoaZrnmjXV8w6TdS21036Su4ypDHi8SiQARyIQy02odts1er1GXHPb6XvfZ/sbQazT3IHxR&#xA;tL1fKvh+lLPMOreY9Q1fSodX1u71mCxhuRZ/XmWWSJpTH6n72gduQRftE9Mj+ZlkxniHVzsPYeLR&#xA;ayJxkkSjLn0O3UUsyh6BRbVNSijQ6bZyX6STJbqU+wZ5GCJEjUPORmP2EqcIwxnLhJqX2uo1vtDH&#xA;Sj0Dj799h8e/yHxZj5d8q6vq2nx3mo3R01mZ0lsYYlM8TxuY2SR5DIocFSCpjBU7HfYarV6mOGZg&#xA;I2R3/q2+9oh25qdRASiY4we4WfmbH+xYp5q0qXRPMlxBqWr3v1M2hudKWCMOZZfUCC3koEjUlQ5L&#xA;lGA+H4c2vZ0oZ8RNASH499fF53tHtXW48wvJIjn3fYBRPvBe5f8AOM2tw6Lrfmn8u7xybtLx9Y06&#xA;d6D1oJo4kddgq8owI2PHrybwzYaDOMuGMh3Oj7ShIZ5GW5Ju30DmY4DsVdirsVdir5M/Mv8AKnzD&#xA;+X15eahpNnJqXkVme5R4Bzl01SS7xyoPiMCblZADxX7XidfqtFxniHN7H2f9p/ysfBy74+h7v2PM&#xA;tQvLzUIodRtLZmtrdhKszVTmlCGCIRzaqnaoAzExwjAmJO5ep1WpyaiMc2KBMIHis7WOvCOZsHqA&#xA;LqrWTTvfN9Ws5VVGWstzuVAcVRRSh+KoJp0X3pkq4dy4XaXaBkPDwnmN5dwPKvM/YPMh6n5bk0fV&#xA;fLcenyWqJp00ZheyOyoyHhJCaU+yykVznNUJ48vED6hvf6XAxxhkxAV6eVfoZL5kv/Neh6FY61oV&#xA;uL+w9eSDXbT1JIGVG4ejP61vSZEiowbi1PjqelRk9k+Dv4gs9P1Op7RhPJmjASEQep5C+pYE3n26&#xA;ufN2gXWsa1a6V5esL4X76ZYW7cJZI0KB2INxc3UzclQlix3r8I3zd5M0smOUIwoV+O5j2j2Tp9KI&#xA;mOcZchPID9RLHfzT88y+cPOd2um2V2S6jT9PtXgkSVY3Wkkzo/GjS8SVFfsqK03ynSaaOKHFIiuZ&#xA;N93T4feXHOWXAYiMjP6ao7X3+/p7l/mjStXsdPW8v5rSz+MNFYxv691bxhOMUZdhxmWONQr0UbDb&#xA;xyEdXDPlPCJfo/Z5OTjwzw4hGRiK325j9fm93/5xch1j9Ea3JKXg0qC4itYbB5Wl4XYj9e5kXkSF&#xA;DLcRj4ercqiozbaOzCybHR0/aJj4lCPCeu97vcMy3AdirsVeP/8AORXkXzX5ktPL1/5asDqV7pF1&#xA;OJbRZIomMV1F6fMGZkX4WVa798pz4vEgYuy7J140mojlIvhv7QQ870//AJx+1ldOudf/ADL1KLSP&#xA;L1hC9ze6XYv61zJFGvJo5JwAiVpTjEGLdARXK8OkjDd2XaftLn1IMR6IH4k/H9Ty3X/LX5j6De2t&#xA;lLouoHTnukfSbVw1xGguz6dtALpFYCVPW9JkZvtfZ674kBhyyJgRZ28/l9ttOi7SyaYxlK5cHQ+Y&#xA;rY/Gq5dz1rVI/wA2dW0PSvy6Ty3b6PeaZawajdPcajFIhSUyxI7iCJjV5VkYip3HfrmVk0olAQ6B&#xA;npO35YtVk1HDxTmOp5cvLuFdGWflz/zjfoNhpslz5iupL7V7qdpr0Wp9G15ED4EXj6nEfzVBPXGe&#xA;jhIAG9lwe0upwmZhwg5JcR26+XRn0+kflh5L0ycXNtZ2NvcRvFMsw9aaaNxxeOj+pLIrDqoqMlw4&#xA;sIvYNJza/tKXDcsn2RHv5RHvKQ/kFrmiXHl3UPL2lQi3g8vXjw2qGNY5HsZyZbSWUJUNJx5Ru1as&#xA;yFjucsw5RkjxBw+0uz8mkynFPnQPlv8Aivg9Qy1wHyr/AM5HXWia7+YMVhoUItta0eNE17XUNQ4d&#xA;eUVn6f2JGQMGLn7P2fbMLWZowjRFl6f2Y7P1GfKZY5eHCP1Hn8K6/o59zyvWLCPTPq1808swikpM&#xA;ZCCeDjgSFQKPtMDsMwMGQzsUHtu0NMNNwZjKUuGXqvuPp5ADqQdg1brLcTwzXq8bFZYzJZ13aJpA&#xA;rmVlPZW5cRttvXGcqBEfq7/1Oh1mvyZv6OOx6epF/wAR/QPjb1PVvLFpr/l2DTY5Tp72UyTWU1uO&#xA;JhlirwZQpSlAxpQjOfwayWDN4n1Xza9Zo45ocHLuZPJ+VVhYflnPpOq6/NZXd4eVxrjhj6bzzCR2&#xA;l+IbPXi7PJ33bxyo5zk1HimNn+b8PvdFkyGGPwomojr3/sRv5d+RvKk2jXVs91H5ia1uVEOsrawQ&#xA;W4kjgjQGzEXJPgVQHdSeT8q71yWvyynKyOCxyHP4tWmyGHI3R6vNtV1I6R+d2h6jZODc6XeafZXL&#xA;r+0t1cSwTxV8WguQfuzO7EJjAA/xGX6P1Fye1oiYMx0Eftvb7Q+wc6J512KuxV2KuxV41/zlHqFy&#xA;vkvSdGjYpba1qsMF+B+3bwxSXBjP+s8SVyjUzMcZIdp2LpY59Xjxy+ky3+G9fGngGpX9ra2shkdU&#xA;UL8RJoFHvmgxYzIvser1OPFjJkQAPsY3oUkMlnJLCvGN55mUU47eoabdszc4IlR7g+d4ckJ8UofS&#xA;ZyI+ac2Hm2TSbybTLW1a9vr5UuIIuQSNGoY5GkY1KikStQDfMTJpPEAkTwxjt+kfezwZZ+N4OOPF&#xA;Oe46Ad9n4W9B1fQfzJtPImmeZovN729nqjGOWz0uL6uIJl5cAZnLyyjlGyt9kbU75Z+Vw4oCcY8V&#xA;/wA79XJnpuz5arVZNNqJcGTGLHDy99netwa6+S3yfa6FFpset8Xn1e9U/Xr67kNzePMh9ORWmf4q&#xA;B0I2oNumaTW5MspmBPpHIDYV02To9JDGNh6uR6mxsd/ewfzlq9rd6y2o2siIlvDNDHeK6AG6SSOZ&#xA;eG9T6JXr0qSOzZt9HpZRxASG0jy8qo/O2eLJiyzyjiHpxEXf8ViUT/m8P2sus/y784fmfqdjqekw&#xA;SabpE0EK3Wq30DJbekrNLW2VyklwW9Qj4V9M/wA65k9ndnyxxMZcrPvdDru0oE3jNkgXtt3/ANuz&#xA;6h8n+VNL8qeX7XRNN5tBbhmknlPKWaaRi8s0rbVeR2LH7hQUGbqMQBQ5OilIyJJ5lOcLF2KuxV2K&#xA;vPPz2vJ7PyNFcqnO2j1XTGvQfs+kt5GV5/5HrCPl49Mx9XfhSrnwlyNLEHLEHlYea+ZvNuqa/pU+&#xA;mTlYLaelWiFJFZaFHVj9lkkUSIw6NTwzjcWQ45CQ5h7D+S8RBB3t5j5x/MXzjD50e61XU5Yr9tNt&#xA;bcX2n+rB60MMs5VpY4j8LlnNQvw13FK0zpseolqICUdq2P2OL2fDTaPLOGoAkJCJiTG/53vpVt/z&#xA;c1qS2KzeZr6m9UE9wtR13VaVyjLDOTtxfN6bT6jsiMbIxf6X9iSX3nGOV2e3Sa8nfczTco1r4s0n&#xA;xn6FyMNBOR9WzLVe1mlxRrCDM9NuGP27/YzH/nHz8wtH8r+ddWufM2p/VrfUrBV5enK6maKYGJES&#xA;JZCoCPJSv35t8UI440Ng+ddo6vLq8viT3ke7oO4eT2bUP+ciNHtJfrQ0HUX8vKf3usMIoiIh1mW1&#xA;dxOYwPi+JVan7PjQO0cJnwCVy/HVrPZ2YQ4zH0j8cngGp2XnNPMmu+r5b1efUb3Vb25lEVjdTBmk&#xA;nYrwZE4MvphaFTSnTKdTpJZJ30ev7C7f0uj0ogT67JOx5/2UlXm3yx5706LS7nXtIk0nT9SuOEH1&#xA;pkE7mBfXI9FGZox8G/Pc4/lfCgS1az2j/OTGKAqJO5PPbeq6ckvv5Y4tNvZJG4oLeYE9N2QqoHuW&#xA;IAzFgLkAO8NepkBjkT/NL0DSfzA8rO/OLU4ENP3kU7egw+Yk4muabN2fl6xPw3+5y467DLbiAPnt&#xA;97063/P78sVt0F/rUUN0AA8cayXBLDrxFuspyUNDnl/Cfu+95/PGEZVGQl7tygJ/zevvOFzf+XPy&#xA;vtRe6/DbtO13qDCyiSMFQWhin4yyyfGKckVVqCxpsc/S9kSlvM0PJxM2Y4zRBvz2QH5T/wDOPvmu&#xA;PzNaeY/PAitotOn+uwaaswup7i+UkpPcSp+7Co3xqqk1brQCmbzDphDf8ANOp1hyREQKjz95830d&#xA;mS4TsVdirsVdirCPzb/LJPzB0C001dRbSbyxu0vbW+WEXADLG8TI0ZeLkrLKf2hvTIziJCi36bUT&#xA;w5BkgalFgtv+SX5ffl7p3+JNbS583a1BJFHp0F1wWJ7yZxFBHBbCkSl5GHxScuP2u2QqGOJPIBu1&#xA;Ouz6mX7yRl93y5PO7n8mvPvmTz/5jWwfSdJuZpotWvLGe4ubiNE1FpCZLeVYIzJWaCXkjIvE9CQc&#xA;xMZx6kcYsdG3Fq8mnHBseqM1j8l/ImieYNN8teYNaMGofo2fUrjXuSW0sl7cTxQRLHz5KIYY7dwI&#xA;2J+0T8ssxhGPCeTHTnUZMviY+IzG/p5/Yj73yxrn+CV8sWH5geWr3SIJjJE93yhuQeTSbm3mmVt3&#xA;P7H3ZRPwuHhsAe92+mn2iNR4/hTnMit4SrkB5JPouheQNC0eOHzDq115pvleV20jTS9npdZJGfjJ&#xA;M0cNzKp5b/EV7cTmHLJp4S4gOKf6vx0dni7C7R1RPiEYcciT8zZ2G/8ApiGTfkjZ/l95h81+ZtK1&#xA;Lyrob3B9LVbCIWFs/oRvSGaFC6MyqjJG6jxc5naTOckbPe6L2g7Lx6LOMcDxDhB87/G/xfRUMMUM&#xA;SQwoscUahI40AVVVRQKoGwAGZTol2KuxV2KuxV2Ksd/MW/0XT/Iuu3mt2X6R0qGzla7sP9/Jxp6d&#xA;f2eR/a/Z69sSkPl200zzxbWZeA2UtnU+hDczzSTwpWiq0yxIJuPiUUnuc47Pm005mhKPyr9j2unh&#xA;qoREZGEvff4P43eT61rGsavdRahdlWuI0MbWyKEVVrUotatVW/mY502l00MUajyLzOq1M80uKXMN&#xA;6Z9bueZtbO5nCECURwSuVJFRXipHTMinG4gE5/w35wexe+tvLerXFqn2p1sbkRCvcuUC08adMaT4&#xA;gS7yrbTXXmqwXmGuRcq83A1Ea24MhTbp0pv3OYmvyCOGXu+9zOz8ZlnjXffy3eya9FNrsNj5btwR&#xA;ca1PDpsYG5pMwEz/AOrHAHc+wzm+y9PxZwe7d6PtXKMeCXfLb5/sfV+dk8Q8o/5yUsPL97+Xwi1A&#xA;yjWPrSf4aFuyrKdQKsEryBUxBCzTV/YB/aplWaUYwJl9Ldp4zOQCH1Xs+d/y70/RbHzVC/n6GXVI&#xA;LM8m00BY0Vz9i44Dj66bfD8VPpFM1cNVjiQQPSer2mHsWeqxHhy/v4b8JAA/aO6XLpQ3qf8AlX8p&#xA;vKP5hecr3VbGS5HkWwJtdFloFkuZzQ3MimSM1hioY1qtSe+xzOxaWMQaJ9TqdZ7QZ8mSBnGBlisd&#xA;4J6nY106bdQ9TsP+cefy/tHUg3kqDrE8kaqR4H0o42/HIfyfDqSfi3H2v1QFQjjh/Vj+sl5p+etj&#xA;5f8Ay18w+V/N/lFba01PT5jFfWCSMZZolVnAkqXIWWJpYnZtzWOh+HL48EKjH5OpzfmNUJZ8vER/&#xA;OIqN93dyB5dae82fn3yfdaU+qLq9oltBbRXl5zni5W8U6B4zOAzcOQYUr17Ze6ungn5nfn/qeu+t&#xA;pPlRpdN0U1SXU/iivLkdD6Y2a3jPj/eH/I6HBz6utou60fZZPqybDu/Wwj8vfKc3nDzTbaKg/cuw&#xA;fUJo1UPDbLvJIWAqjMBwRv52Hgcx9OJzmN5V7y5WvOHFjNRjxHYbD5vtHNs827FXYq7FXn35r3iW&#xA;2peSmuW9PTxrE0ly5+zyi0q9eIH/AGYqB4jMDtP/ABeXw+8ORpImWQAc2Ceb/NlwvmG21byvcCz1&#xA;axV7Z7t09WG4h5ktBNEGAkiJAdGDKynoRUg89otdLAdt4no9D/I/iQ9R4ZdP2vHfzf8AOXm3V/NO&#xA;n6nrUNiJTYtbRC0WaONlilLtX1GlIasv3ZvcOojqomtuFhpsk+y8l0JiY93JjVj5pukRk+oqxrX+&#xA;+8R/xjyOTs/iP1fY73D7ZiIrwv8AZf8AHW7nzBq9wpWP07NT1KVlk+hmCqP+AyWPs+A5m3F1fthq&#xA;MgrHEY/9kf1fY9M/5xUtC35o3s0coAt9In+sBmBkkae4t+Nank390ST228c2MBQ2eN1GQzlcjci+&#xA;tsk0OxV2KuxV2KuxVC6rpljqumXemX8Qnsb6F7e6hbo8UqlHU/MHFXzBq9lq/ke+m8ua4ZnjT4dL&#xA;1ERvIt/bVpGy8Fb9+oossY35bj4SM5jXdlS8S4Cwfses7P7WxnHWQ1KP2qflT/nHPWfNmuya1qUc&#xA;/lzy5Owla3uEC307kkyNHC39wr9azDlX9jfbd6PFkjjEZ8x9zotdnxzymWMbHv730x5Y8q6D5X0e&#xA;HR9CtFs7CGpCLVmZ2+1JI7Es7t3ZiTmY4BKa4qkmv+RvJvmKp1zRLHUnNKS3FvHJKKdOMhHNfoOK&#xA;oDy5+VvkDy3qX6T0bRobW/CsiXHKSVkV/tCP1Wf0wenwU22yIiByDKUyeZVfzH1zUdE8oXd7prrF&#xA;qEstpZWk7qJFilv7uKzWYodm9Iz8+J60pkcs+CBl3C1hGyB3vC/OkWvf8rAtdJ1nWZtZttNsFutO&#xA;mukhjmX9ITNFKJDbpDG5X6n8LcAQrUzmtZrpZcAsV6j9gH63o+x9PGOWR7o/f/YwH87dXtIoNN0m&#xA;OFZLyWQTyyKAJYbZWCUR+qeq/wANa9iMr7DwSlKU725eRP7HJ7T1EYSgD32a58PWj0vklPlT8wrv&#xA;R1htrDVrzS4IU4xwCSWONQP9UmPue+bfNDMBtfwLu9Fq+yslRlGA2/ij+mv0shu/zc1aeMrN5ou5&#xA;UIo0aXEzVHuiHf7sxuHUS29TtPF7IxDirD/pQT9xLDdR80+tdWbxwsLWK8tpZ5ZlPNws6EhY+tD3&#xA;5delMthoZCEiTvwn7nRds+0mPOBhxR9PFGyfIjkP1+6lxEUl41hp6RXFpZm5ks4EUxSrF6q+kaP1&#xA;PHb4uJ7mpysEiPFKwZVfdy3/ABu6rGPUIgCXDxUOo32/Gz3j8v8A/nG+3vrS11bzVqQntLmNJ4NO&#xA;01nRGjkUMvq3LCOXdT0jVCP5jmzx6SI57uo1HauSe0fSPte56D5c0Hy/p66folhDp9mm/owIFBbu&#xA;znqzHuzEk5lgOsJJ3KY4odirsVdirHvPvkyz84eWp9HuJWtpSyT2N6gDPb3MLcopQp2ah2Zf2lJH&#xA;fIzgJRMTyLPHkMJCQ5h4de/l3+aumu0c3l9dWRP+PvS7q34uP5vRu3tpFJ/lHKnic0GTsSV+iQrz&#xA;elxe0Ea9cTfk8c/M691KTVDoN9Zfo280qQPOvrW9xKszrshaBpowArfEvPrTpQjMzQaA4CSTZLhd&#xA;odojUACIoD5pX5H8necPN2t/ojQ7WK4vFhe4dmk9JBFGVVixYED4pFHXvmzdUZEMx86fkX+Z/lXy&#xA;7Jrt/HYPZQMBdmzmknkhjO3qurxwrwBoCQTTqRSpCQoyWxDyJpWr3HmO2l0u4uLOa1l9WfVIG4Sx&#xA;uNuKyUoHb7PH+WtRTbMHXawYYX/F0/Hc5+h0Rzzo/T1P46voq2/NX8wPL97p7arqFtrunyzQWt3b&#xA;vbLb3VJpFiEkUkLBDJycHg0dG6DjmFoO2DmnwmNX1cjW9jjFjM4y5d733N66J2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KsZ/MnRb7WPJWpWmnIJNSiEV7YRE0D3NjOl3AhPg8sCrkMkOKJieoplGVEHueDed9&#xA;a07zncWGr6RLJYT2sbxR3iqvqkM55wzRuCpUELVGUMj1oRvXjrliJhMWO4/eHr9FpAYjJGRBPUd3&#xA;cQfNg3mvRdOtfLWsXepXbT39xGJGvpyiyNLbjlBGgAVQOS0Cjr3zI0meRywEBUQeQ8+ZZ6zTQjhm&#xA;Zm5Ecz3jkA8wjvhC4FwpidTQmhKH/VYbffnUvJXSMGraaV5fWE+Vd/uxplxBEeX4LfzD5o0jSHuh&#xA;Y2t5eW8BunRpKPNKsaM0avEwRXcVq6/MYJCxXeonRsdN31v5L/5x40HTJ0u/Mz2uuSwIUsrCO1+r&#xA;WMAZlZ29FpJjK7lFqXalP2d8qwaWOO+ZJ6ndlqNbPLXKIHQbPW1VVUKoCqooqjYADsMyXEbxV2Ku&#xA;xV2KuxV2KvKPzw8363pd3oWg2V3JpVlrAuHvNTgb052+r+mEtYJP91vJ6pYsvxcVPGnXMHtDPPFi&#xA;MoC5fd5uf2dpoZsvDM0Pv8ni3mHyF5Xv4Ihb84J0LEXEbFpSXYuxkeXmZOTkk86mpJruc5rT9pZ4&#xA;yJkbvvepy9l4ZxEa4a5V+N3pv/OLPkZdJ0TVfMkresdVnNrp05XiXs7VmUyAVNPVmLfNVU512EmU&#xA;QSKJeO1AAmYxNgdXuMkccsbRyKHjcFXRgCrKRQgg9QctaHgvm78nNe8u3z3Hkqw/SXl+djINFiki&#xA;huLORiWb0DM0aSQsxrxLhk7VXYanXdmDKeKJqX3u67O7WOEcExcOneE9/Ln8n9Sj1W28zec/T+u2&#xA;berpWiROJYraSlBPcSU4yzrU8ePwJ1BY0YX6LQRwDvl3uPr+0pag1ygOn63r+Z7rXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FWD+YvyY8ha7qcuqy2s9jqNy3K6uNPuJrT1m/mlSJhG7Hu5Xl75VkwQn9QB&#xA;bsWoyY/pkR7iwv8AM/8AKfyF5Z/LTzBf6bpZl1NoEgGoXc015cIs88cTmOS4eUx/Axrwpt9OAwjC&#xA;J4QAkTlkmOIk79XjNr+UmjTylkvLsIhB9MyR0p4VEXOn+yr75zM+28oFUPl+16r+RcIN3L5j9TLt&#xA;f1KO5/LjynZajGqzeSr+PRNV50MRtprCSOzuakBfTl4RpU9Hqvvm3zZvzGl44c/1Hd0ulxfl9WIz&#xA;5frGyHhsfLLaXLBJAiW8wrI0NI12OzK0ZWhWmzdQc5g5MwmCDuHq54ccoGNDgL3L8lvMupeYPIVt&#xA;dahM11PbXFzYpqDbm6itZWjjnJGzMyAB2GxYE52+CZlAEiiQ8FngITlEGwCzrLWp2KuxV2KuxV2K&#xA;uxVAa5oGia9p0mm61Yw6hYS/bt7hA6VHRhXow7MNx2xV51df845+TpZGW21XWrGyfZrCG7SSPgeq&#xA;CS5innUU2+GQH3zFOiwk3wi3Mj2hnEeHjNPTNN06x0zT7bTrCFbaxs4kgtbdBRUijUKij2AGZTho&#xA;jFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUh8+/4b/wXrX+Jv+OB9Ul/SNOXL0uO/Dj8&#xA;XP8Ak478qU3xKh8nap/i/wCtf86n6/6O/wB1f4g+r/W+Pav1L4f+C38c5rP+Svr8OX2vWYPz/Dvw&#xA;/wCdz+x63/zj7+jv0V5q/wATcP0xytf079Y9L6j9V4SfV/T5fsV9Xl6nf2zcdn+F4X7v6XRdpeL4&#xA;v72uKunJNZf+hUf0gfU/wf8AWeXxf7wenWnen7r5+/vma4D1bTP0b+j7f9F+j+jvTX6p9W4ej6dP&#xA;h9Ph8PGnSmKonFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX/&#xA;2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:E4A8D89E8514E411846E9A58BC82E63C</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:E4A8D89E8514E411846E9A58BC82E63C</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:E3A8D89E8514E411846E9A58BC82E63C</stRef:instanceID>
            <stRef:documentID>xmp.did:E3A8D89E8514E411846E9A58BC82E63C</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:64874799FF12E4119767B49514B84AF3</stEvt:instanceID>
                  <stEvt:when>2014-07-26T01:06:17+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:E1A8D89E8514E411846E9A58BC82E63C</stEvt:instanceID>
                  <stEvt:when>2014-07-26T12:28:05+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:E2A8D89E8514E411846E9A58BC82E63C</stEvt:instanceID>
                  <stEvt:when>2014-07-26T12:28:35+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:E3A8D89E8514E411846E9A58BC82E63C</stEvt:instanceID>
                  <stEvt:when>2014-07-26T12:32:27+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:E4A8D89E8514E411846E9A58BC82E63C</stEvt:instanceID>
                  <stEvt:when>2014-07-26T12:32:42+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>700.000000</stDim:w>
            <stDim:h>300.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=63 G=169 B=245</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>63</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>245</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=122 G=201 B=67</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>122</xmpG:red>
                           <xmpG:green>201</xmpG:green>
                           <xmpG:blue>67</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=29 B=37</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>29</xmpG:green>
                           <xmpG:blue>37</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=123 B=172</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>123</xmpG:green>
                           <xmpG:blue>172</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=189 G=204 B=212</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>189</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -206.973 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 206.973 li
529.941 206.973 li
529.941 0 li
cp
clp
[1 0 0 1 0 0 ]ct
336.039 91.1289 mo
337.375 93.8452 337.435 96.9761 336.201 99.7134 cv
333.818 105.003 326.383 111.595 316.511 114.524 cv
316.391 115.027 316.231 115.487 316.035 115.903 cv
315.48 117.065 li
314.214 117.309 li
310.364 118.054 290.995 118.672 287.009 110.574 cv
286.738 110.025 286.545 109.446 286.432 108.85 cv
285.38 103.316 293.836 99.9233 302.787 96.3345 cv
304.22 95.7598 305.597 95.208 306.826 94.6826 cv
308.21 94.0913 li
308.21 94.0913 309.466 95.0728 309.501 95.1006 cv
312.081 93.7153 314.01 92.4053 315.886 91.1313 cv
318.304 89.4883 320.586 87.9385 323.669 86.7197 cv
329.537 84.4004 334.193 87.3794 336.038 91.1274 cv
336.039 91.1289 336.039 91.1289 336.039 91.1289 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.75021 .679683 .670222 .90164 cmyk
f
289.188 108.881 mo
289.994 111.484 298.021 114.641 309.675 113.324 cv
322.507 111.871 331.557 103.815 333.875 98.6675 cv
336.3 93.2842 331.707 86.2866 324.606 89.0903 cv
317.503 91.8975 315.053 96.6318 300.918 101.58 cv
293.146 104.302 288.245 105.84 289.188 108.881 cv
cp
.0250248 .567285 .998169 0 cmyk
f
288.151 109.714 mo
289.793 113.051 298.544 115.865 309.816 114.59 cv
323.106 113.085 332.565 104.68 335.038 99.1904 cv
336.115 96.7998 336.063 94.0659 334.895 91.6904 cv
333.248 88.3423 329.283 85.8721 324.137 87.9043 cv
321.186 89.0718 319.062 90.5142 316.604 92.1855 cv
312.976 94.6528 308.86 97.4492 300.496 100.378 cv
299.388 100.765 li
291.752 103.43 286.709 105.189 287.969 109.259 cv
288.017 109.412 288.079 109.565 288.151 109.714 cv
288.151 109.714 li
cp
289.296 109.15 mo
289.251 109.06 289.214 108.97 289.188 108.881 cv
288.245 105.84 293.146 104.302 300.918 101.58 cv
315.053 96.6318 317.503 91.8975 324.606 89.0903 cv
328.912 87.3896 332.293 89.2915 333.751 92.2539 cv
334.696 94.1768 334.83 96.5479 333.875 98.6675 cv
331.557 103.815 322.507 111.871 309.675 113.324 cv
298.418 114.595 290.547 111.695 289.296 109.15 cv
289.296 109.15 li
cp
.75021 .679683 .670222 .90164 cmyk
f
309.675 113.32 mo
298.018 114.64 289.994 111.481 289.19 108.883 cv
289.096 108.598 289.064 108.319 289.085 108.054 cv
291.26 110.282 299.098 112.886 314.603 107.589 cv
333.229 101.222 332.124 88.959 325.557 88.7788 cv
332.114 86.9165 336.191 93.5308 333.878 98.6675 cv
331.56 103.814 322.505 111.868 309.675 113.32 cv
cp
.101595 .727993 1 .0109865 cmyk
f
295.564 102.196 mo
297.489 101.26 299.651 100.356 301.774 99.4922 cv
305.721 104.399 307.321 111.388 306.932 115.161 cv
304.646 115.112 302.111 114.909 299.68 114.512 cv
299.523 111.038 298.202 106.175 295.564 102.196 cv
cp
0 0 0 0 cmyk
f
301.774 99.4922 mo
303.92 98.6167 306.026 97.7969 307.826 97.0264 cv
311.926 100.22 315.594 110.891 313.732 114.81 cv
312.366 115.075 309.856 115.228 306.932 115.161 cv
307.321 111.388 305.721 104.399 301.774 99.4922 cv
cp
0 .970642 .96051 0 cmyk
f
288.938 108.373 mo
288.534 106.24 291.541 104.147 295.564 102.196 cv
298.202 106.175 299.523 111.038 299.68 114.512 cv
294.391 113.639 289.594 111.801 288.938 108.373 cv
cp
f
288.938 108.373 mo
288.902 108.201 288.896 108.033 288.916 107.864 cv
290.045 109.211 293.3 110.804 299.135 110.689 cv
299.448 112.06 299.627 113.365 299.68 114.512 cv
294.391 113.639 289.594 111.801 288.938 108.373 cv
cp
.132235 1 1 .0386358 cmyk
f
299.135 110.689 mo
301.248 110.654 303.699 110.395 306.507 109.829 cv
306.942 111.869 307.079 113.744 306.932 115.161 cv
304.646 115.112 302.111 114.909 299.68 114.512 cv
299.627 113.365 299.448 112.06 299.135 110.689 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
306.507 109.829 mo
308.678 109.385 311.057 108.755 313.672 107.906 cv
314.341 110.673 314.469 113.263 313.732 114.81 cv
312.366 115.075 309.856 115.228 306.932 115.161 cv
307.079 113.744 306.942 111.869 306.507 109.829 cv
cp
.132235 1 1 .0386358 cmyk
f
288.151 110.008 mo
288.152 110.009 288.153 110.009 288.153 110.009 cv
291.575 116.964 309.695 116.886 313.974 116.059 cv
314.371 115.982 314.709 115.72 314.882 115.355 cv
316.438 112.083 314.861 105.943 312.738 101.625 cv
311.869 99.8589 310.449 97.4546 308.612 96.0234 cv
308.246 95.7373 307.754 95.6738 307.328 95.855 cv
306.094 96.3823 304.718 96.9341 303.263 97.5186 cv
295.183 100.758 286.828 104.107 287.684 108.611 cv
287.776 109.094 287.934 109.564 288.151 110.008 cv
288.151 110.008 li
cp
289.297 109.448 mo
289.129 109.107 289.008 108.75 288.937 108.374 cv
288.14 104.187 300.521 100.148 307.828 97.0278 cv
309.192 98.0923 310.512 99.9883 311.593 102.187 cv
313.757 106.584 314.973 112.196 313.731 114.807 cv
309.229 115.677 292.239 115.425 289.297 109.448 cv
289.297 109.448 li
cp
.75021 .679683 .670222 .90164 cmyk
f
338.584 85.9673 mo
335.175 85.208 li
344.229 57.1318 li
344.34 56.7876 344.338 56.4165 344.224 56.0732 cv
340.064 43.5835 li
339.875 43.0166 339.404 42.5903 338.821 42.4614 cv
338.237 42.332 337.629 42.5171 337.219 42.9502 cv
328.156 52.4976 li
327.907 52.7598 327.748 53.0952 327.701 53.4546 cv
323.996 82.7202 li
320.586 81.9624 li
319.671 81.7588 318.763 82.3359 318.559 83.2524 cv
317.455 88.2109 li
317.252 89.1274 317.829 90.0356 318.745 90.2397 cv
322.926 91.1699 li
321.198 104.817 li
321.087 105.688 321.658 106.5 322.515 106.69 cv
324.435 107.116 li
326.352 107.543 li
327.208 107.734 328.07 107.242 328.339 106.406 cv
332.561 93.3135 li
336.742 94.2446 li
337.659 94.4482 338.567 93.8701 338.771 92.9541 cv
339.875 87.9956 li
340.078 87.0796 339.5 86.1709 338.584 85.9673 cv
cp
f
324.803 105.458 mo
326.721 105.884 li
342.611 56.6104 li
338.451 44.1206 li
329.388 53.6689 li
322.884 105.031 li
324.803 105.458 li
cp
.280522 .914061 1 .298253 cmyk
f
337.961 46.3232 mo
342.009 58.478 li
342.611 56.6104 li
338.451 44.1206 li
329.388 53.6689 li
329.142 55.6143 li
337.961 46.3232 li
cp
.215396 .82446 1 .119539 cmyk
f
337.111 92.5854 mo
319.114 88.5806 li
320.218 83.6211 li
338.215 87.626 li
337.111 92.5854 li
cp
f
338.051 88.3608 mo
320.055 84.3569 li
320.218 83.6211 li
338.215 87.626 li
338.051 88.3608 li
cp
.144869 .807401 1 .0376593 cmyk
f
331.827 91.9883 mo
331.745 91.9697 331.666 91.9268 331.606 91.8599 cv
325.131 84.7583 li
324.972 84.5854 324.985 84.3169 325.158 84.1597 cv
325.332 84.0015 325.601 84.0122 325.759 84.1855 cv
332.233 91.2866 li
332.392 91.4604 332.38 91.729 332.205 91.8877 cv
332.1 91.9839 331.958 92.0171 331.827 91.9883 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
324.153 90.2808 mo
324.022 90.2515 323.908 90.1616 323.852 90.0288 cv
323.763 89.8115 323.865 89.5635 324.081 89.4736 cv
332.957 85.7876 li
333.173 85.6978 333.422 85.8008 333.512 86.0176 cv
333.603 86.2344 333.499 86.4824 333.283 86.5732 cv
324.407 90.2588 li
324.324 90.2935 324.235 90.2983 324.153 90.2808 cv
cp
f
327.778 95.6953 mo
327.656 97.6963 325.557 99.1958 323.086 99.0454 cv
320.617 98.895 318.713 97.1514 318.835 95.1509 cv
318.957 93.1494 321.058 91.6504 323.527 91.8008 cv
325.997 91.9512 327.9 93.6948 327.778 95.6953 cv
cp
f
326.437 95.6133 mo
326.335 97.2529 324.38 98.4688 322.066 98.3281 cv
319.753 98.187 317.958 96.7427 318.058 95.1035 cv
318.157 93.4639 320.113 92.248 322.427 92.3892 cv
324.741 92.5303 326.536 93.9741 326.437 95.6133 cv
cp
.0250248 .567285 .998169 0 cmyk
f
243.119 161.285 mo
241.344 161.083 239.546 160.731 237.773 160.239 cv
232.498 158.775 228.7 155.424 226.79 150.55 cv
223.529 142.232 226.504 131.762 228.821 128.007 cv
230.568 125.176 232.842 123.699 235.06 123.95 cv
237.71 124.25 239.413 126.613 240.122 130.97 cv
241.121 137.123 246.625 139.016 251.065 139.519 cv
252.74 139.709 254.527 139.718 256.232 139.542 cv
260.274 139.127 262.822 139.044 264.751 139.263 cv
267.767 139.606 269.685 140.843 270.452 142.944 cv
271.439 145.643 270.585 148.999 268.108 152.146 cv
264.117 157.217 255.179 162.655 243.121 161.285 cv
243.12 161.285 243.12 161.285 243.119 161.285 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
268.058 143.82 mo
267.204 141.485 263.417 141.369 256.493 142.079 cv
249.406 142.806 239.15 140.892 237.604 131.379 cv
236.471 124.407 233.088 125.949 230.992 129.345 cv
227.891 134.371 223.507 153.631 238.456 157.782 cv
256.701 162.848 270.342 150.068 268.058 143.82 cv
cp
.101595 .727993 1 .0109865 cmyk
f
230.257 143.95 mo
229.341 143.359 228.735 146.352 228.87 148.79 cv
226.502 141.608 229.009 132.57 230.992 129.345 cv
233.088 125.949 236.471 124.407 237.604 131.379 cv
238.223 135.198 240.239 137.788 242.895 139.482 cv
242.281 140.671 239.286 138.646 238.515 139.038 cv
237.178 139.732 239.445 143.42 238.13 143.699 cv
236.815 143.977 234.832 141.33 234.019 142.24 cv
232.805 143.582 234.145 147.386 232.877 147.242 cv
231.61 147.099 231.452 144.728 230.257 143.95 cv
cp
.00985733 .0806592 .600977 0 cmyk
f
249.531 185.864 mo
253.794 187.533 258.08 188.456 260.992 188.337 cv
265.137 188.165 268.894 181.519 275.349 162.94 cv
275.664 162.034 li
278.236 154.675 275.58 149.608 271.807 147.85 cv
271.628 147.768 271.451 147.692 271.273 147.622 cv
267.309 146.07 263.505 147.633 259.969 152.27 cv
258.653 153.995 257.311 156.199 255.89 158.531 cv
253.791 161.976 250.618 167.185 248.83 167.788 cv
244.489 169.252 239.534 172.753 239.854 177.797 cv
240.084 181.421 245.244 184.184 249.531 185.864 cv
249.531 185.864 li
cp
.75021 .679683 .670222 .90164 cmyk
f
270.729 150.162 mo
273.836 151.61 275.15 155.773 273.257 161.193 cv
271.362 166.614 264.97 185.621 260.887 185.789 cv
255.087 186.028 242.622 181.146 242.399 177.635 cv
242.176 174.125 246.083 171.406 249.646 170.204 cv
253.618 168.866 258.241 158.74 261.996 153.817 cv
264.81 150.127 267.642 148.726 270.729 150.162 cv
cp
.101595 .727993 1 .0109865 cmyk
f
249.646 170.204 mo
247.89 170.794 246.042 171.76 244.659 173.007 cv
245.868 179.478 258.981 179.885 257.938 176.417 cv
257.067 173.512 252.938 170.654 249.859 170.124 cv
249.785 170.149 249.719 170.178 249.646 170.204 cv
cp
.0250248 .567285 .998169 0 cmyk
f
261.996 153.817 mo
259.803 156.692 257.313 161.348 254.829 164.986 cv
257.807 169.923 265.453 172.497 269.133 172.449 cv
270.957 167.906 272.48 163.409 273.257 161.193 cv
275.15 155.773 273.834 151.606 270.729 150.162 cv
267.642 148.726 264.81 150.127 261.996 153.817 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
262.722 171.691 mo
265.215 172.667 267.703 173.148 269.545 173.106 cv
269.903 173.099 270.188 172.801 270.181 172.442 cv
270.171 172.084 269.873 171.8 269.517 171.806 cv
265.962 171.887 258.153 169.456 255.241 164.323 cv
255.063 164.01 254.667 163.9 254.354 164.079 cv
254.042 164.255 253.933 164.652 254.11 164.964 cv
255.881 168.085 259.305 170.353 262.722 171.691 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
323.937 171.406 mo
320.587 174.527 316.943 176.963 314.191 177.923 cv
310.274 179.292 304.335 174.495 291.493 159.597 cv
290.866 158.872 li
285.766 152.976 286.369 147.287 289.23 144.263 cv
289.367 144.12 289.503 143.985 289.643 143.855 cv
292.758 140.952 296.87 141.004 301.864 144.014 cv
303.722 145.133 305.78 146.688 307.961 148.334 cv
311.182 150.765 316.049 154.439 317.934 154.341 cv
322.509 154.105 328.405 155.536 329.964 160.344 cv
331.085 163.797 327.305 168.265 323.937 171.406 cv
323.937 171.406 li
cp
f
291.083 146.017 mo
288.728 148.505 289.038 152.861 292.795 157.203 cv
296.552 161.544 309.492 176.864 313.351 175.516 cv
318.83 173.603 328.624 164.476 327.539 161.129 cv
326.453 157.784 321.819 156.695 318.065 156.887 cv
313.877 157.105 305.853 149.393 300.549 146.2 cv
296.573 143.803 293.426 143.543 291.083 146.017 cv
cp
.101595 .727993 1 .0109865 cmyk
f
318.065 156.887 mo
319.915 156.792 321.987 157.007 323.733 157.66 cv
324.992 164.121 312.948 169.326 312.643 165.718 cv
312.383 162.697 315.169 158.518 317.837 156.892 cv
317.915 156.889 317.988 156.892 318.065 156.887 cv
cp
.0250248 .567285 .998169 0 cmyk
f
300.549 146.2 mo
303.646 148.064 307.677 151.477 311.324 153.944 cv
310.373 159.63 304.212 164.839 300.773 166.149 cv
297.404 162.596 294.332 158.977 292.795 157.203 cv
289.038 152.861 288.729 148.501 291.083 146.017 cv
293.426 143.543 296.573 143.803 300.549 146.2 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
306.453 163.084 mo
304.496 164.91 302.359 166.274 300.632 166.913 cv
300.296 167.038 299.92 166.866 299.796 166.53 cv
299.673 166.193 299.846 165.819 300.181 165.694 cv
303.514 164.461 309.879 159.324 310.696 153.479 cv
310.747 153.123 311.076 152.875 311.431 152.926 cv
311.786 152.976 312.034 153.305 311.984 153.659 cv
311.486 157.214 309.138 160.583 306.453 163.084 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
278.476 159.995 mo
261.624 159.995 256.83 150.573 255.776 142.669 cv
252.315 116.711 266.166 98.0063 274.86 96.4717 cv
275.688 96.3257 276.539 96.251 277.386 96.251 cv
292.577 96.251 307.27 120.607 308.447 135.903 cv
309.582 150.666 298.117 157.671 287.009 159.305 cv
283.856 159.769 281.065 159.995 278.477 159.995 cv
278.476 159.995 li
cp
f
305.901 136.102 mo
306.93 149.405 296.271 155.364 286.64 156.783 cv
278.157 158.032 260.57 159.333 258.301 142.333 cv
258.182 141.466 258.088 140.616 258.012 139.775 cv
265.194 143.216 292.275 146.15 304.991 130.705 cv
305.459 132.6 305.774 134.419 305.901 136.102 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
301.337 120.7 mo
302.943 124.075 304.192 127.5 304.991 130.705 cv
292.275 146.15 265.194 143.216 258.012 139.775 cv
257.672 136.051 257.698 132.532 258.012 129.234 cv
268.322 131.121 288.842 130.849 301.337 120.7 cv
cp
.132235 1 1 .0386358 cmyk
f
295.327 110.696 mo
297.631 113.773 299.671 117.208 301.337 120.7 cv
288.842 130.849 268.322 131.121 258.012 129.234 cv
258.445 124.635 259.432 120.479 260.758 116.825 cv
270.677 117.811 284.813 116.952 295.327 110.696 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
286.555 101.992 mo
289.709 104.117 292.692 107.176 295.327 110.696 cv
284.813 116.952 270.677 117.811 260.758 116.825 cv
262.279 112.583 264.259 109.012 266.333 106.208 cv
272.539 106.59 280.12 105.681 286.555 101.992 cv
cp
.132235 1 1 .0386358 cmyk
f
275.301 98.9829 mo
279.101 98.311 282.942 99.5439 286.555 101.992 cv
280.12 105.681 272.539 106.59 266.333 106.208 cv
269.504 101.924 272.904 99.4077 275.301 98.9829 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
304.991 130.705 mo
305.459 132.6 305.774 134.419 305.901 136.102 cv
306.819 148.01 298.378 154.037 289.683 156.179 cv
279.926 157.063 274.782 150.749 272.641 142.486 cv
283.452 142.834 297.035 140.37 304.991 130.705 cv
cp
.574731 .695186 .633936 .604669 cmyk
f
304.991 130.705 mo
297.035 140.37 283.452 142.834 272.641 142.486 cv
271.62 138.61 271.271 134.292 271.426 130.101 cv
281.396 129.787 293.108 127.381 301.337 120.7 cv
302.943 124.075 304.192 127.5 304.991 130.705 cv
cp
0 .970642 .96051 0 cmyk
f
301.337 120.7 mo
293.108 127.381 281.396 129.787 271.426 130.101 cv
271.587 125.282 272.402 120.624 273.609 116.943 cv
281.005 116.357 288.851 114.545 295.327 110.696 cv
297.631 113.773 299.671 117.208 301.337 120.7 cv
cp
0 0 0 0 cmyk
f
295.327 110.696 mo
288.851 114.545 281.005 116.357 273.609 116.943 cv
274.426 114.469 275.411 112.438 276.508 111.095 cv
281.735 104.678 287.277 104.337 291.137 105.817 cv
292.607 107.296 294.01 108.936 295.327 110.696 cv
cp
0 .970642 .96051 0 cmyk
f
274.643 143.174 mo
266.861 143.167 260.177 141.667 257.219 140.214 cv
256.898 140.054 256.767 139.661 256.928 139.332 cv
257.088 139.002 257.48 138.864 257.801 139.022 cv
264.391 142.259 292.123 145.737 304.899 129.89 cv
305.125 129.611 305.532 129.572 305.811 129.802 cv
306.09 130.031 306.134 130.444 305.908 130.723 cv
298.15 140.356 285.381 143.184 274.643 143.174 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
261.449 32.125 mo
261.448 32.125 261.445 32.1255 261.445 32.1255 cv
255.488 32.8521 246.715 34.8828 238.753 40.4302 cv
230.663 46.0654 225.378 53.9326 223.046 63.8125 cv
222.064 67.9717 221.909 72.457 222.578 77.1924 cv
222.511 77.1802 222.444 77.1685 222.377 77.1582 cv
219.477 76.6865 216.34 76.6504 213.054 77.0513 cv
208.981 77.5479 204.754 78.6973 200.49 80.4688 cv
200.277 80.5566 li
199.642 80.8164 199.137 81.3218 198.879 81.9585 cv
198.62 82.5947 198.63 83.3086 198.905 83.9385 cv
202.185 91.4448 208.289 95.8027 214.122 97.8218 cv
214.025 97.9258 213.928 98.0303 213.833 98.1353 cv
206.605 106.114 208.597 118.414 209.975 122.479 cv
210.365 123.629 211.508 124.336 212.697 124.192 cv
212.759 124.184 212.821 124.174 212.883 124.163 cv
220.918 122.579 228.474 118.898 233.587 114.316 cv
233.723 115.896 234 117.463 234.53 119.047 cv
236.163 123.914 239.952 126.474 244.668 125.899 cv
250.233 125.22 256.393 119.792 257.28 112.775 cv
260.306 113.239 263.503 113.27 266.825 112.865 cv
269.372 112.554 272.045 111.98 274.771 111.159 cv
285.873 107.81 294.525 103.305 300.524 97.7544 cv
301.747 98.1665 303.053 98.2974 304.38 98.1357 cv
307.627 97.7393 310.8 95.6558 313.084 92.4175 cv
315.644 88.7896 316.592 84.3931 315.687 80.3569 cv
314.059 73.0981 306.434 64.2495 300.863 59.188 cv
300.915 58.8608 300.901 58.5234 300.821 58.1938 cv
297.79 45.7686 288.497 35.7778 277.143 32.7417 cv
273.013 31.6372 267.293 31.4126 261.449 32.125 cv
261.449 32.125 li
cp
f
232.419 92.8149 mo
234.802 90.0791 230.996 81.1426 221.968 79.6753 cv
212.284 78.1001 202.736 82.3066 201.242 82.9175 cv
207.577 97.415 226.161 100.001 232.419 92.8149 cv
cp
0 .970642 .96051 0 cmyk
f
221.966 79.6777 mo
230.999 81.1445 234.804 90.083 232.422 92.8135 cv
226.24 99.9048 208.082 97.479 201.513 83.4995 cv
205.355 88.3237 214.185 95.1416 221.56 88.145 cv
224.415 85.4336 222.704 82.0107 220.348 79.4731 cv
220.884 79.5186 221.424 79.5898 221.966 79.6777 cv
cp
.132235 1 1 .0386358 cmyk
f
213.208 78.3169 mo
209.25 78.7993 205.136 79.9194 200.979 81.6465 cv
200.76 81.7368 li
200.441 81.8667 200.189 82.1191 200.06 82.4375 cv
199.931 82.7563 199.936 83.1138 200.073 83.4277 cv
204.808 94.2617 216.039 98.8613 224.688 97.8066 cv
228.349 97.3594 231.437 95.8843 233.381 93.6528 cv
234.556 92.3037 234.718 90.1104 233.824 87.6362 cv
232.528 84.0464 228.699 79.4775 222.173 78.4165 cv
219.39 77.9639 216.374 77.9307 213.208 78.3169 cv
213.208 78.3169 li
cp
213.363 79.5825 mo
216.068 79.252 219.012 79.1938 221.968 79.6753 cv
230.996 81.1426 234.802 90.0791 232.419 92.8149 cv
230.617 94.8848 227.793 96.1431 224.533 96.5405 cv
216.474 97.5239 205.753 93.2407 201.242 82.9175 cv
202.28 82.4932 207.205 80.334 213.363 79.5825 cv
213.363 79.5825 li
cp
.75021 .679683 .670222 .90164 cmyk
f
236.33 95.6201 mo
233.219 90.0054 222.47 92.3989 215.724 99.8462 cv
209.183 107.066 211.276 118.372 212.39 121.661 cv
227.581 118.666 242.808 107.311 236.33 95.6201 cv
cp
0 .970642 .96051 0 cmyk
f
236.326 95.6172 mo
242.805 107.312 227.578 118.666 212.393 121.657 cv
212.114 120.851 211.786 119.564 211.532 117.977 cv
219.808 114.852 228.912 111.139 229.712 103.591 cv
230.329 97.7622 226.374 94.4077 223.442 94.166 cv
228.834 91.6924 234.262 91.8867 236.326 95.6172 cv
cp
.132235 1 1 .0386358 cmyk
f
228.51 91.356 mo
223.784 91.9326 218.522 94.8579 214.778 98.9902 cv
207.962 106.514 209.872 118.202 211.183 122.07 cv
211.377 122.645 211.949 122.999 212.544 122.926 cv
212.575 122.922 212.606 122.918 212.637 122.913 cv
222.351 120.997 233.917 115.267 237.86 106.782 cv
239.684 102.857 239.541 98.7842 237.445 95.0024 cv
235.883 92.1826 232.626 90.854 228.51 91.356 cv
228.51 91.356 li
cp
228.665 92.6216 mo
232.048 92.209 234.946 93.1226 236.33 95.6201 cv
242.808 107.311 227.581 118.666 212.39 121.661 cv
211.276 118.372 209.183 107.066 215.724 99.8462 cv
219.468 95.7124 224.445 93.1367 228.665 92.6216 cv
228.665 92.6216 li
cp
.75021 .679683 .670222 .90164 cmyk
f
294.416 57.3862 mo
299.53 60.4341 311.292 72.4194 313.198 80.9155 cv
315.459 90.9917 303.173 101.494 297.322 91.8501 cv
293.582 85.6855 295.034 77.9868 289.684 68.7793 cv
284.221 59.3735 288.97 54.1416 294.416 57.3862 cv
cp
.280522 .914061 1 .298253 cmyk
f
294.412 57.3877 mo
299.528 60.437 311.292 72.4204 313.201 80.9136 cv
314.52 86.8062 310.864 92.8521 306.432 94.9175 cv
316.948 87.3413 309.931 76.2173 302.837 66.7041 cv
298.648 61.0923 294.807 57.5962 292.051 56.4858 cv
292.802 56.6084 293.601 56.9048 294.412 57.3877 cv
cp
.215396 .82446 1 .119539 cmyk
f
290.61 55.1875 mo
290.61 55.1875 li
288.883 55.3979 287.494 56.395 286.698 57.9951 cv
285.305 60.7969 285.991 64.9609 288.581 69.4199 cv
291.374 74.2261 292.264 78.709 293.047 82.6636 cv
293.744 86.1772 294.402 89.4951 296.231 92.5112 cv
298.178 95.7202 301.015 97.2715 304.22 96.8804 cv
307.067 96.5332 309.991 94.5928 312.039 91.6895 cv
314.394 88.3521 315.27 84.3232 314.441 80.6367 cv
312.38 71.4434 299.974 59.2144 295.069 56.2915 cv
293.567 55.397 292.025 55.0146 290.61 55.1875 cv
290.61 55.1875 li
cp
290.764 56.4526 mo
291.855 56.3198 293.115 56.6118 294.416 57.3862 cv
299.53 60.4341 311.292 72.4194 313.198 80.9155 cv
314.751 87.8364 309.439 94.9595 304.065 95.6152 cv
301.615 95.9141 299.153 94.8696 297.322 91.8501 cv
293.582 85.6855 295.034 77.9868 289.684 68.7793 cv
285.524 61.6196 287.284 56.8784 290.764 56.4526 cv
290.764 56.4526 li
cp
.75021 .679683 .670222 .90164 cmyk
f
233.843 89.8579 mo
237.868 97.6392 247.812 116.625 274.035 108.717 cv
300.258 100.809 307.65 87.7046 306.966 78.5825 cv
306.326 70.064 302.379 69.9771 294.334 54.0063 cv
282.753 31.0146 257.543 34.9458 243.174 45.2622 cv
227.398 56.5874 225.718 74.1504 233.843 89.8579 cv
cp
.0250248 .567285 .998169 0 cmyk
f
273.064 37.522 mo
259.256 37.9741 246.414 46.4082 248.22 67.6724 cv
249.447 82.02 260.65 107.592 283.159 105.463 cv
280.407 106.621 277.371 107.71 274.035 108.717 cv
247.812 116.625 237.866 97.6387 233.843 89.8579 cv
225.718 74.1504 227.395 56.5894 243.174 45.2622 cv
251.182 39.5151 262.564 35.7471 273.064 37.522 cv
cp
.101595 .727993 1 .0109865 cmyk
f
263.093 36.0859 mo
255.85 36.9697 248.511 39.8604 242.43 44.2261 cv
227.306 55.084 223.581 72.7935 232.71 90.4429 cv
236.395 97.5649 245.021 114.243 266.643 111.606 cv
269.126 111.303 271.736 110.742 274.402 109.937 cv
286.557 106.272 295.682 101.238 301.522 94.9741 cv
306.269 89.8857 308.652 84.0308 308.237 78.4868 cv
307.845 73.27 306.218 70.896 303.521 66.9629 cv
301.561 64.1035 298.875 60.1865 295.473 53.4326 cv
286.679 35.9751 271.411 35.0718 263.093 36.0859 cv
263.093 36.0859 li
cp
263.248 37.3521 mo
274.97 35.9219 287.224 39.8896 294.334 54.0063 cv
302.379 69.9771 306.326 70.064 306.966 78.5825 cv
307.65 87.7046 300.258 100.809 274.035 108.717 cv
271.353 109.526 268.842 110.052 266.488 110.34 cv
245.841 112.858 237.456 96.8433 233.843 89.8579 cv
225.718 74.1504 227.398 56.5874 243.174 45.2622 cv
248.72 41.2808 255.878 38.251 263.248 37.3521 cv
263.248 37.3521 li
cp
.75021 .679683 .670222 .90164 cmyk
f
241.688 83.9766 mo
246.008 88.0742 254.848 102.352 254.839 111.059 cv
254.83 121.385 240.536 128.93 236.948 118.236 cv
234.655 111.401 237.763 104.209 234.568 94.0503 cv
231.305 83.6738 237.089 79.6143 241.688 83.9766 cv
cp
.280522 .914061 1 .298253 cmyk
f
241.688 83.9766 mo
246.007 88.0742 254.848 102.349 254.839 111.059 cv
254.835 116.078 251.47 120.427 247.587 122.365 cv
256.536 116.469 252.073 105.153 247.268 95.1812 cv
243.505 87.3599 239.647 82.8301 236.98 82.376 cv
238.413 81.9785 240.12 82.4897 241.688 83.9766 cv
cp
.215396 .82446 1 .119539 cmyk
f
237.324 81.0054 mo
237.323 81.0054 li
235.827 81.188 234.514 82.0469 233.627 83.4238 cv
232.008 85.9375 231.91 89.8481 233.352 94.4331 cv
235.02 99.7354 234.901 104.305 234.797 108.335 cv
234.705 111.916 234.617 115.297 235.739 118.642 cv
237.165 122.89 240.444 125.13 244.514 124.634 cv
249.995 123.964 256.107 118.226 256.114 111.059 cv
256.124 101.637 246.708 86.981 242.566 83.0518 cv
240.947 81.5166 239.086 80.7905 237.324 81.0054 cv
237.324 81.0054 li
cp
237.478 82.271 mo
238.801 82.1089 240.298 82.6587 241.688 83.9766 cv
246.008 88.0742 254.848 102.352 254.839 111.059 cv
254.833 117.437 249.375 122.756 244.359 123.368 cv
241.254 123.747 238.319 122.325 236.948 118.236 cv
234.655 111.401 237.763 104.209 234.568 94.0503 cv
232.291 86.8096 234.42 82.644 237.478 82.271 cv
237.478 82.271 li
cp
.75021 .679683 .670222 .90164 cmyk
f
235.102 100.765 mo
237.437 95.2085 266.628 58.5283 298.344 58.7979 cv
295.775 48.2646 287.845 38.2432 276.484 35.2056 cv
265.026 32.1406 232.397 35.3022 225.528 64.3984 cv
221.913 79.7134 231.374 95.9395 235.102 100.765 cv
cp
0 .970642 .96051 0 cmyk
f
294.979 50.2373 mo
296.492 52.9551 297.626 55.8569 298.344 58.8003 cv
294.572 58.7637 290.838 59.2534 287.181 60.1538 cv
291.739 57.3711 294.362 54.166 294.979 50.2373 cv
cp
.132235 1 1 .0386358 cmyk
f
245.208 60.6069 mo
250.651 70.4067 260.701 69.8916 270.774 66.8994 cv
251.342 77.9697 236.722 96.896 235.105 100.767 cv
231.374 95.939 221.91 79.7104 225.53 64.3945 cv
228.916 50.0327 238.58 41.9951 248.877 37.8955 cv
243.562 43.1079 240.391 51.9292 245.208 60.6069 cv
cp
f
261.603 33.3901 mo
255.788 34.0996 247.231 36.0786 239.483 41.4751 cv
231.658 46.9263 226.545 54.54 224.288 64.106 cv
219.863 82.8452 233.95 101.359 234.093 101.544 cv
234.368 101.9 234.81 102.085 235.256 102.03 cv
235.26 102.03 235.264 102.029 235.267 102.029 cv
235.717 101.97 236.102 101.677 236.277 101.259 cv
238.338 96.3545 263.846 63.9336 292.959 60.3818 cv
294.766 60.1621 296.573 60.0581 298.333 60.0728 cv
298.388 60.0737 298.443 60.0703 298.498 60.0635 cv
298.83 60.0234 299.134 59.855 299.343 59.5903 cv
299.588 59.2817 299.676 58.8779 299.583 58.4956 cv
296.661 46.5166 287.724 36.8906 276.814 33.9736 cv
272.893 32.9248 267.207 32.707 261.603 33.3901 cv
261.603 33.3901 li
cp
261.757 34.6563 mo
267.724 33.9282 273.054 34.2881 276.484 35.2056 cv
287.845 38.2432 295.775 48.2646 298.344 58.7979 cv
296.485 58.7822 294.641 58.8926 292.805 59.1167 cv
263.304 62.7153 237.3 95.5337 235.102 100.765 cv
231.374 95.9395 221.913 79.7134 225.528 64.3984 cv
230.34 44.0137 247.795 36.3594 261.757 34.6563 cv
261.757 34.6563 li
cp
.75021 .679683 .670222 .90164 cmyk
f
300.955 79.9155 mo
304.79 85.7407 301.364 94.7598 293.308 100.064 cv
285.25 105.369 275.609 104.947 271.775 99.1226 cv
267.941 93.2974 271.366 84.2773 279.424 78.9727 cv
287.481 73.6685 297.122 74.0913 300.955 79.9155 cv
cp
.00985733 .0806592 .600977 0 cmyk
f
289.088 76.2573 mo
289.93 78.1069 288.391 80.6201 285.648 81.8672 cv
282.905 83.1147 280 82.625 279.158 80.7734 cv
278.316 78.9229 279.855 76.4092 282.598 75.1626 cv
285.339 73.9146 288.244 74.4048 289.088 76.2573 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
288.412 76.5645 mo
288.33 76.3848 288.218 76.2251 288.095 76.0757 cv
287.938 77.4243 286.742 78.8701 284.945 79.6875 cv
282.841 80.644 280.635 80.4131 279.655 79.2314 cv
279.605 79.6597 279.658 80.0796 279.834 80.4658 cv
280.563 82.0654 283.071 82.4883 285.44 81.4106 cv
287.81 80.3335 289.14 78.1621 288.412 76.5645 cv
cp
.636561 .700954 .654597 .746487 cmyk
f
255.775 74.4014 mo
258.35 73.2827 261.336 72.0522 265.48 72.0601 cv
268.251 72.0654 268.05 69.7881 265.439 69.2979 cv
263.344 68.9038 258.657 70.4966 255.476 73.3428 cv
254.119 74.5571 254.713 74.8638 255.775 74.4014 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
289.945 56.0322 mo
287.999 57.7231 285.802 59.7109 284.328 63.1538 cv
283.344 65.4551 281.325 64.3799 281.808 62.0186 cv
282.195 60.1221 285.331 56.8677 289.081 55.3623 cv
290.682 54.7207 290.75 55.3354 289.945 56.0322 cv
cp
f
286.86 76.2681 mo
286.997 76.8774 286.377 77.5361 285.474 77.7388 cv
284.57 77.9419 283.729 77.6133 283.591 77.0039 cv
283.453 76.394 284.074 75.7349 284.978 75.5317 cv
285.879 75.3281 286.723 75.6577 286.86 76.2681 cv
cp
0 0 0 0 cmyk
f
263.502 86.125 mo
262.944 86.125 262.432 85.7563 262.274 85.1929 cv
261.569 82.6665 262.571 80.124 264.887 78.5581 cv
267.25 76.9609 270.165 76.9053 272.141 78.4194 cv
272.7 78.8477 272.805 79.6479 272.377 80.2065 cv
271.948 80.7656 271.148 80.8716 270.59 80.4429 cv
269.322 79.4707 267.485 79.8804 266.315 80.6709 cv
265.792 81.0254 264.128 82.3486 264.731 84.5068 cv
264.92 85.1851 264.524 85.8887 263.846 86.0781 cv
263.731 86.1099 263.616 86.125 263.502 86.125 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
288.471 72.7378 mo
287.912 72.7378 287.401 72.3687 287.243 71.8052 cv
286.56 69.355 287.446 66.9473 289.556 65.5205 cv
291.802 64.0015 294.777 64.0186 296.791 65.563 cv
297.351 65.9912 297.455 66.792 297.026 67.3506 cv
296.599 67.9092 295.798 68.0142 295.239 67.5869 cv
293.893 66.5527 292.089 66.8867 290.983 67.6333 cv
290.413 68.019 289.145 69.1318 289.699 71.1196 cv
289.889 71.7979 289.493 72.501 288.813 72.6904 cv
288.699 72.7222 288.585 72.7378 288.471 72.7378 cv
cp
f
273.758 50.3643 mo
275.473 49.1582 276.475 46.4116 273.446 43.2466 cv
270.417 40.082 263.694 39.9893 259.781 41.6924 cv
255.869 43.3965 252.367 47.519 253.363 51.9155 cv
254.253 55.8379 257.5 56.9092 260.969 56.3066 cv
261.552 58.2319 262.164 59.1948 262.579 59.0542 cv
263.283 58.8159 265.917 57.5039 266.429 57.249 cv
266.263 56.5166 265.808 54.8477 265.808 54.8477 cv
267.233 56.6509 li
268.072 56.4756 271.084 54.8462 271.385 54.6084 cv
271.146 54.3081 270.048 52.5854 270.048 52.5854 cv
272.235 54.1479 li
273.065 53.8672 275.581 52.4541 275.581 52.4541 cv
275.838 51.687 273.758 50.3643 273.758 50.3643 cv
cp
0 0 0 0 cmyk
f
263.679 48.5864 mo
264.328 49.8037 263.931 51.2827 262.792 51.8901 cv
261.653 52.498 260.203 52.0054 259.554 50.7886 cv
258.904 49.5713 259.302 48.0918 260.44 47.4849 cv
261.58 46.8765 263.029 47.3706 263.679 48.5864 cv
cp
0 .970642 .96051 0 cmyk
f
269.601 45.3457 mo
270.506 46.3838 270.508 47.8647 269.604 48.6523 cv
268.701 49.4409 267.233 49.2368 266.327 48.1963 cv
265.421 47.1582 265.42 45.6753 266.324 44.8882 cv
267.227 44.1006 268.694 44.3047 269.601 45.3457 cv
cp
f
307.614 101.061 mo
308.735 103.874 308.549 106.999 307.107 109.632 cv
304.318 114.72 296.393 120.711 286.32 122.862 cv
286.162 123.354 285.969 123.799 285.738 124.199 cv
285.095 125.315 li
283.815 125.459 li
279.917 125.902 260.56 125.007 257.217 116.622 cv
256.991 116.054 256.842 115.461 256.776 114.859 cv
256.159 109.258 264.854 106.537 274.059 103.656 cv
275.531 103.196 276.945 102.753 278.215 102.326 cv
279.64 101.844 li
279.64 101.844 280.815 102.92 280.848 102.951 cv
283.527 101.771 285.554 100.615 287.522 99.4907 cv
290.061 98.042 292.457 96.6743 295.626 95.6997 cv
301.658 93.8472 306.068 97.1787 307.613 101.06 cv
307.613 101.061 307.613 101.061 307.614 101.061 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
259.521 115.105 mo
260.124 117.763 267.878 121.536 279.599 121.131 cv
292.505 120.684 302.156 113.36 304.869 108.408 cv
307.706 103.23 303.674 95.8945 296.376 98.1372 cv
289.075 100.381 286.264 104.91 271.786 108.742 cv
263.824 110.848 258.819 112 259.521 115.105 cv
cp
.0250248 .567285 .998169 0 cmyk
f
258.423 115.853 mo
259.8 119.31 268.306 122.796 279.642 122.405 cv
293.009 121.943 303.095 114.3 305.988 109.02 cv
307.248 106.72 307.409 103.991 306.431 101.532 cv
305.049 98.0649 301.289 95.2935 296.001 96.9189 cv
292.967 97.8511 290.738 99.124 288.156 100.598 cv
284.347 102.774 280.026 105.242 271.459 107.509 cv
270.323 107.808 li
262.504 109.87 257.338 111.231 258.277 115.386 cv
258.313 115.542 258.362 115.699 258.423 115.853 cv
258.423 115.853 li
cp
259.608 115.381 mo
259.571 115.288 259.541 115.196 259.521 115.105 cv
258.819 112 263.824 110.848 271.786 108.742 cv
286.264 104.91 289.075 100.381 296.376 98.1372 cv
300.8 96.7773 304.024 98.9385 305.244 102.004 cv
306.038 103.996 305.987 106.37 304.869 108.408 cv
302.156 113.36 292.505 120.684 279.599 121.131 cv
268.278 121.523 260.658 118.015 259.608 115.381 cv
259.608 115.381 li
cp
.75021 .679683 .670222 .90164 cmyk
f
279.6 121.127 mo
267.876 121.534 260.123 117.759 259.524 115.106 cv
259.453 114.815 259.443 114.535 259.484 114.273 cv
261.479 116.662 269.089 119.871 284.961 115.798 cv
304.027 110.903 303.881 98.5923 297.348 97.8999 cv
304.031 96.5557 307.58 103.468 304.872 108.408 cv
302.16 113.358 292.505 120.681 279.6 121.127 cv
cp
.101595 .727993 1 .0109865 cmyk
f
266.399 108.937 mo
268.393 108.153 270.618 107.421 272.802 106.726 cv
276.354 111.925 277.404 119.019 276.722 122.749 cv
274.445 122.522 271.936 122.122 269.543 121.538 cv
269.657 118.06 268.72 113.109 266.399 108.937 cv
cp
0 0 0 0 cmyk
f
272.802 106.726 mo
275.009 106.021 277.175 105.368 279.027 104.739 cv
282.866 108.243 285.69 119.168 283.528 122.929 cv
282.146 123.086 279.632 123.045 276.722 122.749 cv
277.404 119.019 276.354 111.925 272.802 106.726 cv
cp
0 .970642 .96051 0 cmyk
f
259.313 114.579 mo
259.076 112.421 262.236 110.568 266.399 108.937 cv
268.72 113.109 269.657 118.06 269.543 121.538 cv
264.337 120.253 259.698 118.048 259.313 114.579 cv
cp
f
259.313 114.579 mo
259.29 114.404 259.296 114.237 259.33 114.069 cv
260.35 115.501 263.47 117.34 269.297 117.683 cv
269.503 119.074 269.579 120.389 269.543 121.538 cv
264.337 120.253 259.698 118.048 259.313 114.579 cv
cp
.132235 1 1 .0386358 cmyk
f
269.297 117.683 mo
271.407 117.812 273.87 117.746 276.715 117.401 cv
276.989 119.467 276.979 121.348 276.722 122.749 cv
274.445 122.522 271.936 122.122 269.543 121.538 cv
269.579 120.389 269.503 119.074 269.297 117.683 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
276.715 117.401 mo
278.913 117.128 281.334 116.686 284.006 116.042 cv
284.458 118.853 284.383 121.445 283.528 122.929 cv
282.146 123.086 279.632 123.045 276.722 122.749 cv
276.979 121.348 276.989 119.467 276.715 117.401 cv
cp
.132235 1 1 .0386358 cmyk
f
258.401 116.148 mo
258.401 116.149 258.402 116.149 258.402 116.149 cv
261.271 123.349 279.342 124.684 283.673 124.194 cv
284.074 124.147 284.431 123.914 284.632 123.563 cv
286.439 120.422 285.346 114.178 283.566 109.707 cv
282.837 107.879 281.608 105.372 279.89 103.8 cv
279.547 103.487 279.061 103.385 278.622 103.533 cv
277.353 103.963 275.937 104.406 274.439 104.874 cv
266.131 107.473 257.542 110.161 258.044 114.718 cv
258.098 115.206 258.218 115.687 258.401 116.148 cv
258.401 116.148 li
cp
259.586 115.677 mo
259.446 115.326 259.354 114.96 259.311 114.579 cv
258.844 110.342 271.502 107.283 279.03 104.741 cv
280.308 105.91 281.475 107.902 282.381 110.179 cv
284.194 114.732 284.971 120.42 283.528 122.926 cv
278.973 123.444 262.054 121.867 259.586 115.677 cv
259.586 115.677 li
cp
.75021 .679683 .670222 .90164 cmyk
f
292.697 78.7515 mo
290.351 81.7695 281.305 86.7739 273.187 87.1865 cv
274.287 95.7178 279.993 101.636 288.938 97.5078 cv
297.319 93.6401 295.449 83.7051 292.697 78.7515 cv
cp
f
275.232 87.9824 mo
276.759 88.3223 286.875 86.1914 292.428 80.5493 cv
292.964 82.5195 292.696 83.5049 291.891 84.4893 cv
290.518 86.167 283.85 89.1865 280.606 89.8633 cv
278.456 90.3115 276.396 89.7734 275.232 87.9824 cv
cp
0 0 0 0 cmyk
f
278.636 95.3267 mo
278.366 92.2817 289.472 88.4302 292.696 92.1025 cv
292.964 95.7739 281.77 100.79 278.636 95.3267 cv
cp
0 .970642 .96051 0 cmyk
f
514.234 39.6675 mo
516.986 40.9287 519.01 43.3184 519.784 46.2202 cv
521.278 51.8257 519.676 61.6318 513.874 70.1392 cv
514.099 70.605 514.266 71.0615 514.375 71.5088 cv
514.68 72.7603 li
513.854 73.7485 li
511.339 76.7588 496.713 89.4727 488.507 85.7119 cv
487.951 85.4575 487.434 85.1313 486.971 84.7397 cv
482.659 81.1138 487.072 73.1431 491.744 64.7061 cv
492.492 63.356 493.211 62.0586 493.832 60.874 cv
494.532 59.5415 li
494.532 59.5415 496.125 59.5098 496.17 59.5088 cv
497.295 56.8057 497.964 54.5713 498.613 52.3984 cv
499.448 49.5981 500.239 46.9546 501.86 44.062 cv
504.943 38.5581 510.436 37.9258 514.233 39.6665 cv
514.234 39.6675 514.234 39.6675 514.234 39.6675 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
489.127 83.0229 mo
491.396 84.5313 499.613 81.9097 507.815 73.5269 cv
516.846 64.2939 518.772 52.3335 517.318 46.8784 cv
515.798 41.1738 507.818 38.6494 504.084 45.3081 cv
500.35 51.9712 501.441 57.189 493.609 69.9536 cv
489.303 76.9736 486.476 81.2612 489.127 83.0229 cv
cp
.0250248 .567285 .998169 0 cmyk
f
488.85 84.3232 mo
492.23 85.873 500.792 82.5273 508.726 74.4189 cv
518.079 64.8584 520.103 52.3667 518.551 46.5488 cv
517.876 44.0146 516.108 41.9287 513.702 40.8247 cv
510.311 39.2695 505.677 39.8589 502.972 44.6855 cv
501.421 47.4546 500.686 49.9141 499.835 52.7622 cv
498.58 56.9668 497.157 61.7344 492.523 69.2881 cv
491.908 70.2886 li
487.672 77.1768 484.874 81.7275 488.422 84.0859 cv
488.555 84.1743 488.699 84.2534 488.85 84.3232 cv
488.85 84.3232 li
cp
489.381 83.1631 mo
489.29 83.1221 489.204 83.0757 489.127 83.0229 cv
486.476 81.2612 489.303 76.9736 493.609 69.9536 cv
501.441 57.189 500.35 51.9712 504.084 45.3081 cv
506.348 41.2705 510.17 40.6089 513.171 41.9844 cv
515.119 42.8774 516.721 44.6309 517.318 46.8784 cv
518.772 52.3335 516.846 64.2939 507.815 73.5269 cv
499.893 81.623 491.958 84.3457 489.381 83.1631 cv
489.381 83.1631 li
cp
.75021 .679683 .670222 .90164 cmyk
f
507.813 73.5239 mo
499.609 81.9097 491.396 84.5298 489.131 83.0229 cv
488.878 82.8613 488.678 82.665 488.524 82.4463 cv
491.617 82.7998 499.34 79.8687 508.014 65.9678 cv
518.433 49.2651 509.829 40.458 504.624 44.4658 cv
508.531 38.8804 515.871 41.4326 517.321 46.876 cv
518.774 52.3301 516.843 64.293 507.813 73.5239 cv
cp
.101595 .727993 1 .0109865 cmyk
f
489.848 73.8135 mo
490.748 71.8711 491.854 69.8052 492.954 67.7944 cv
499.113 69.1055 504.77 73.5122 506.851 76.6841 cv
505.047 78.0894 502.953 79.5332 500.818 80.7617 cv
498.502 78.1665 494.406 75.2314 489.848 73.8135 cv
cp
0 0 0 0 cmyk
f
492.954 67.7944 mo
494.063 65.7603 495.181 63.7935 496.088 62.0601 cv
501.283 61.9458 510.868 67.9019 511.899 72.1157 cv
511.008 73.1841 509.159 74.8882 506.851 76.6841 cv
504.77 73.5122 499.113 69.1055 492.954 67.7944 cv
cp
0 .970642 .96051 0 cmyk
f
488.612 82.7861 mo
486.952 81.3887 487.96 77.8667 489.848 73.8135 cv
494.406 75.2314 498.502 78.1665 500.818 80.7617 cv
496.166 83.4258 491.286 85.0308 488.612 82.7861 cv
cp
f
488.612 82.7861 mo
488.477 82.6763 488.364 82.5503 488.274 82.4058 cv
490.001 82.7383 493.528 81.917 497.98 78.1416 cv
499.088 79.0059 500.052 79.9048 500.818 80.7617 cv
496.166 83.4258 491.286 85.0308 488.612 82.7861 cv
cp
.132235 1 1 .0386358 cmyk
f
497.98 78.1416 mo
499.597 76.7783 501.333 75.0313 503.152 72.8184 cv
504.779 74.1245 506.069 75.4917 506.851 76.6841 cv
505.047 78.0894 502.953 79.5332 500.818 80.7617 cv
500.052 79.9048 499.088 79.0059 497.98 78.1416 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
503.152 72.8184 mo
504.555 71.103 506.001 69.1118 507.492 66.8022 cv
509.758 68.5249 511.494 70.4517 511.899 72.1157 cv
511.008 73.1841 509.159 74.8882 506.851 76.6841 cv
506.069 75.4917 504.779 74.1245 503.152 72.8184 cv
cp
.132235 1 1 .0386358 cmyk
f
489.036 84.5513 mo
489.037 84.5518 489.038 84.5513 489.038 84.5513 cv
496.083 87.7817 510.082 76.2749 512.876 72.9316 cv
513.136 72.6206 513.232 72.2051 513.136 71.812 cv
512.274 68.292 507.175 64.5288 502.801 62.522 cv
501.013 61.7017 498.392 60.7354 496.064 60.7861 cv
495.6 60.7949 495.179 61.0566 494.961 61.4663 cv
494.339 62.6548 493.62 63.9517 492.861 65.3242 cv
488.643 72.9399 484.283 80.8125 487.79 83.7642 cv
488.168 84.0801 488.586 84.3447 489.036 84.5513 cv
489.036 84.5513 li
cp
489.569 83.394 mo
489.225 83.2358 488.905 83.0347 488.612 82.7886 cv
485.35 80.0454 492.397 69.0947 496.091 62.0596 cv
497.821 62.0229 500.041 62.6602 502.268 63.6812 cv
506.724 65.7236 511.211 69.3052 511.898 72.1138 cv
508.957 75.6323 495.627 86.1694 489.569 83.394 cv
489.569 83.394 li
cp
.75021 .679683 .670222 .90164 cmyk
f
512.947 34.0581 mo
509.824 35.6226 li
499.109 8.1377 li
498.979 7.80078 498.743 7.51465 498.437 7.32031 cv
487.322 .264648 li
486.819 -.0556641 486.184 -.0874023 485.65 .180664 cv
485.116 .44873 484.763 .976074 484.718 1.5708 cv
483.722 14.6973 li
483.694 15.0581 483.783 15.4185 483.975 15.7261 cv
499.587 40.7554 li
496.465 42.3213 li
495.627 42.7422 495.287 43.7632 495.708 44.6021 cv
497.984 49.1431 li
498.406 49.9824 499.428 50.3218 500.267 49.9019 cv
504.096 47.9819 li
511.375 59.6528 li
511.841 60.3979 512.795 60.6665 513.58 60.2734 cv
515.336 59.3916 li
517.094 58.5112 li
517.878 58.1177 518.234 57.1919 517.914 56.3745 cv
512.919 43.5581 li
516.748 41.6382 li
517.587 41.2173 517.926 40.1948 517.506 39.356 cv
515.229 34.8154 li
514.809 33.9766 513.786 33.6367 512.947 34.0581 cv
cp
f
514.575 57.873 mo
516.331 56.9917 li
497.526 8.75586 li
486.411 1.7002 li
485.417 14.8267 li
512.817 58.7534 li
514.575 57.873 li
cp
.280522 .914061 1 .298253 cmyk
f
487.423 3.71729 mo
498.238 10.584 li
497.526 8.75586 li
486.411 1.7002 li
485.417 14.8267 li
486.454 16.4912 li
487.423 3.71729 li
cp
.215396 .82446 1 .119539 cmyk
f
515.986 40.1191 mo
499.505 48.3818 li
497.228 43.8403 li
513.709 35.5771 li
515.986 40.1191 li
cp
f
514.046 36.25 mo
497.565 44.5137 li
497.228 43.8403 li
513.709 35.5771 li
514.046 36.25 li
cp
.144869 .807401 1 .0376593 cmyk
f
511.513 42.9937 mo
511.437 43.0317 511.349 43.0474 511.26 43.0337 cv
501.755 41.6187 li
501.522 41.5845 501.362 41.3682 501.397 41.1372 cv
501.433 40.9043 501.647 40.7437 501.881 40.7773 cv
511.385 42.1929 li
511.617 42.2275 511.776 42.4434 511.742 42.6763 cv
511.722 42.8179 511.633 42.9336 511.513 42.9937 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
504.483 46.5171 mo
504.364 46.5771 504.22 46.5796 504.092 46.5122 cv
503.886 46.3999 503.808 46.1426 503.919 45.9365 cv
508.472 37.4727 li
508.583 37.2661 508.841 37.189 509.048 37.3008 cv
509.254 37.4111 509.331 37.6694 509.22 37.8765 cv
504.668 46.3394 li
504.626 46.4189 504.56 46.4795 504.483 46.5171 cv
cp
f
510.716 48.4248 mo
511.886 50.0527 511.204 52.5425 509.193 53.9854 cv
507.185 55.4292 504.608 55.2798 503.438 53.6519 cv
502.27 52.0229 502.95 49.5342 504.96 48.0908 cv
506.969 46.6475 509.547 46.7969 510.716 48.4248 cv
cp
f
509.624 49.2095 mo
510.58 50.5435 509.833 52.7222 507.95 54.0742 cv
506.066 55.4263 503.764 55.4399 502.806 54.106 cv
501.848 52.772 502.596 50.5938 504.479 49.2422 cv
506.361 47.8896 508.664 47.8755 509.624 49.2095 cv
cp
.0250248 .567285 .998169 0 cmyk
f
436.942 124.376 mo
435.359 123.547 433.811 122.57 432.334 121.472 cv
427.942 118.203 425.609 113.708 425.587 108.472 cv
425.548 99.5366 432.101 90.8472 435.617 88.1812 cv
438.268 86.1714 440.921 85.6133 442.899 86.6484 cv
445.263 87.8857 445.998 90.7031 445.087 95.0225 cv
443.799 101.121 448.248 104.873 452.207 106.945 cv
453.701 107.727 455.364 108.379 457.019 108.832 cv
460.938 109.903 463.344 110.745 465.063 111.645 cv
467.751 113.052 469.094 114.899 469.053 117.135 cv
468.999 120.008 466.991 122.83 463.546 124.871 cv
457.993 128.16 447.694 130.005 436.943 124.376 cv
436.942 124.376 436.943 124.376 436.942 124.376 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
466.503 117.088 mo
466.549 114.601 463.06 113.127 456.346 111.292 cv
449.473 109.412 440.6 103.926 442.591 94.4961 cv
444.051 87.5845 440.339 87.8008 437.158 90.2119 cv
432.453 93.7803 421.414 110.163 433.857 119.426 cv
449.045 130.735 466.379 123.739 466.503 117.088 cv
cp
.101595 .727993 1 .0109865 cmyk
f
431.203 103.568 mo
430.562 102.686 428.917 105.259 428.163 107.58 cv
428.547 100.028 434.146 92.5029 437.158 90.2119 cv
440.339 87.8008 444.051 87.5845 442.591 94.4961 cv
441.79 98.2793 442.736 101.422 444.602 103.961 cv
443.6 104.849 441.537 101.879 440.677 101.965 cv
439.179 102.131 439.964 106.389 438.636 106.174 cv
437.309 105.96 436.415 102.776 435.328 103.33 cv
433.712 104.143 433.589 108.175 432.458 107.583 cv
431.328 106.993 432.036 104.725 431.203 103.568 cv
cp
.00985733 .0806592 .600977 0 cmyk
f
431.574 139.078 mo
434.036 142.939 436.955 146.208 439.379 147.826 cv
442.83 150.128 449.78 146.971 465.939 135.756 cv
466.728 135.21 li
473.141 130.778 473.979 125.119 471.964 121.476 cv
471.868 121.303 471.771 121.139 471.667 120.978 cv
469.378 117.387 465.382 116.411 459.794 118.076 cv
457.716 118.696 455.333 119.686 452.811 120.733 cv
449.084 122.282 443.453 124.623 441.651 124.058 cv
437.282 122.684 431.215 122.595 428.503 126.86 cv
426.556 129.924 429.098 135.195 431.574 139.078 cv
431.574 139.079 431.574 139.078 431.574 139.078 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
469.731 122.71 mo
471.391 125.709 470.001 129.848 465.277 133.114 cv
460.555 136.377 444.194 147.974 440.795 145.705 cv
435.968 142.484 428.769 131.197 430.656 128.228 cv
432.543 125.259 437.302 125.364 440.889 126.49 cv
444.888 127.747 454.587 122.288 460.521 120.52 cv
464.969 119.195 468.082 119.73 469.731 122.71 cv
cp
.101595 .727993 1 .0109865 cmyk
f
440.889 126.49 mo
439.123 125.934 437.061 125.625 435.208 125.819 cv
432.374 131.76 442.731 139.812 443.932 136.396 cv
444.938 133.535 443.284 128.792 441.109 126.551 cv
441.034 126.528 440.963 126.512 440.889 126.49 cv
cp
.0250248 .567285 .998169 0 cmyk
f
460.521 120.52 mo
457.057 121.551 452.3 123.848 448.151 125.326 cv
447.65 131.069 452.313 137.652 455.314 139.781 cv
459.465 137.183 463.346 134.446 465.277 133.114 cv
470.001 129.848 471.391 125.706 469.731 122.71 cv
468.082 119.73 464.969 119.195 460.521 120.52 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
450.581 135.393 mo
452.021 137.651 453.749 139.503 455.262 140.554 cv
455.556 140.76 455.962 140.687 456.167 140.392 cv
456.37 140.098 456.296 139.693 456.004 139.487 cv
453.084 137.46 448.205 130.896 448.875 125.032 cv
448.915 124.675 448.659 124.352 448.303 124.313 cv
447.945 124.272 447.624 124.528 447.584 124.884 cv
447.175 128.451 448.607 132.299 450.581 135.393 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
528.975 123.018 mo
527.882 127.464 526.168 131.499 524.391 133.809 cv
521.863 137.098 514.267 136.339 495.363 130.909 cv
494.44 130.644 li
486.944 128.505 484.333 123.416 485.071 119.319 cv
485.106 119.124 485.146 118.936 485.192 118.751 cv
486.209 114.617 489.679 112.409 495.506 112.191 cv
497.672 112.11 500.247 112.282 502.972 112.464 cv
506.998 112.735 513.082 113.143 514.605 112.029 cv
518.305 109.326 524.021 107.293 527.959 110.461 cv
530.789 112.737 530.072 118.546 528.975 123.018 cv
528.975 123.018 li
cp
f
487.582 119.771 mo
486.974 123.143 489.619 126.618 495.141 128.192 cv
500.662 129.767 519.879 135.497 522.369 132.255 cv
525.906 127.654 529.101 114.653 526.359 112.448 cv
523.619 110.244 519.146 111.869 516.11 114.087 cv
512.727 116.562 501.788 114.506 495.601 114.739 cv
490.964 114.912 488.186 116.417 487.582 119.771 cv
cp
.101595 .727993 1 .0109865 cmyk
f
516.11 114.087 mo
517.605 112.993 519.458 112.04 521.275 111.628 cv
525.868 116.344 518.642 127.296 516.41 124.446 cv
514.538 122.06 514.581 117.039 515.922 114.216 cv
515.985 114.17 516.049 114.133 516.11 114.087 cv
cp
.0250248 .567285 .998169 0 cmyk
f
495.601 114.739 mo
499.215 114.602 504.455 115.25 508.858 115.317 cv
511.178 120.596 508.876 128.328 506.717 131.307 cv
501.952 130.18 497.398 128.834 495.141 128.192 cv
489.619 126.618 486.973 123.139 487.582 119.771 cv
488.186 116.417 490.964 114.912 495.601 114.739 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
509.79 125.632 mo
509.151 128.232 508.111 130.543 507.017 132.025 cv
506.803 132.313 506.395 132.374 506.106 132.161 cv
505.818 131.947 505.759 131.54 505.971 131.251 cv
508.084 128.394 510.596 120.61 508.08 115.272 cv
507.925 114.946 508.065 114.559 508.39 114.407 cv
508.715 114.254 509.103 114.392 509.255 114.717 cv
510.786 117.963 510.665 122.069 509.79 125.632 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
476.392 131.356 mo
459.54 131.356 454.746 121.934 453.693 114.032 cv
450.231 88.0732 464.082 69.3682 472.776 67.8335 cv
473.604 67.6875 474.455 67.6128 475.302 67.6128 cv
490.493 67.6128 505.186 91.9688 506.363 107.265 cv
507.499 122.027 496.033 129.033 484.925 130.667 cv
481.772 131.131 478.981 131.356 476.393 131.356 cv
476.392 131.356 li
cp
f
503.817 107.464 mo
504.846 120.767 494.187 126.725 484.556 128.145 cv
476.073 129.393 458.486 130.695 456.217 113.695 cv
456.099 112.829 456.005 111.978 455.929 111.136 cv
463.111 114.579 490.191 117.511 502.907 102.067 cv
503.375 103.962 503.69 105.781 503.817 107.464 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
499.253 92.062 mo
500.859 95.436 502.108 98.8618 502.907 102.067 cv
490.191 117.511 463.111 114.579 455.929 111.136 cv
455.588 107.413 455.613 103.894 455.929 100.596 cv
466.238 102.483 486.758 102.211 499.253 92.062 cv
cp
.132235 1 1 .0386358 cmyk
f
493.243 82.0576 mo
495.547 85.1348 497.587 88.5688 499.253 92.062 cv
486.758 102.211 466.238 102.483 455.929 100.596 cv
456.361 95.9971 457.348 91.8413 458.674 88.186 cv
468.593 89.1724 482.729 88.3135 493.243 82.0576 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
484.471 73.3535 mo
487.625 75.4785 490.608 78.5381 493.243 82.0576 cv
482.729 88.3135 468.593 89.1724 458.674 88.186 cv
460.195 83.9443 462.176 80.3745 464.25 77.5693 cv
470.455 77.9521 478.037 77.0425 484.471 73.3535 cv
cp
.132235 1 1 .0386358 cmyk
f
473.217 70.3447 mo
477.017 69.6729 480.858 70.9058 484.471 73.3535 cv
478.037 77.0425 470.455 77.9521 464.25 77.5693 cv
467.42 73.2856 470.82 70.7695 473.217 70.3447 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
502.907 102.067 mo
503.375 103.962 503.69 105.781 503.817 107.464 cv
504.735 119.373 496.294 125.399 487.6 127.541 cv
477.842 128.425 472.698 122.11 470.557 113.848 cv
481.368 114.197 494.951 111.731 502.907 102.067 cv
cp
.574731 .695186 .633936 .604669 cmyk
f
502.907 102.067 mo
494.951 111.731 481.368 114.197 470.557 113.848 cv
469.537 109.971 469.188 105.654 469.342 101.463 cv
479.312 101.149 491.024 98.7432 499.253 92.062 cv
500.859 95.436 502.108 98.8618 502.907 102.067 cv
cp
0 .970642 .96051 0 cmyk
f
499.253 92.062 mo
491.024 98.7432 479.312 101.149 469.342 101.463 cv
469.503 96.644 470.318 91.9854 471.525 88.3052 cv
478.921 87.7188 486.767 85.9077 493.243 82.0576 cv
495.547 85.1348 497.587 88.5688 499.253 92.062 cv
cp
0 0 0 0 cmyk
f
493.243 82.0576 mo
486.767 85.9077 478.921 87.7188 471.525 88.3052 cv
472.342 85.8315 473.327 83.8003 474.424 82.457 cv
479.651 76.0396 485.193 75.6992 489.053 77.1787 cv
490.523 78.6577 491.926 80.2979 493.243 82.0576 cv
cp
0 .970642 .96051 0 cmyk
f
472.559 114.537 mo
464.777 114.529 458.093 113.029 455.135 111.577 cv
454.813 111.416 454.684 111.022 454.844 110.694 cv
455.005 110.365 455.396 110.225 455.718 110.384 cv
462.308 113.622 490.039 117.098 502.815 101.251 cv
503.041 100.973 503.448 100.934 503.727 101.164 cv
504.006 101.393 504.05 101.805 503.824 102.085 cv
496.066 111.717 483.297 114.546 472.559 114.537 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
459.365 3.48682 mo
459.364 3.48682 459.361 3.4873 459.361 3.4873 cv
453.404 4.21387 444.631 6.24463 436.669 11.792 cv
428.58 17.4272 423.295 25.2944 420.962 35.1743 cv
419.98 39.3335 419.825 43.8188 420.495 48.5542 cv
420.427 48.542 420.36 48.5303 420.293 48.52 cv
417.393 48.0483 414.256 48.0122 410.971 48.4131 cv
406.898 48.9097 402.671 50.0591 398.406 51.8306 cv
398.194 51.9185 li
397.558 52.1782 397.054 52.6836 396.794 53.3203 cv
396.536 53.9565 396.545 54.6704 396.821 55.3003 cv
400.102 62.8066 406.206 67.1646 412.038 69.1836 cv
411.94 69.2876 411.845 69.3921 411.749 69.4971 cv
404.521 77.4761 406.513 89.7744 407.891 93.8403 cv
408.281 94.9912 409.424 95.6987 410.613 95.5542 cv
410.675 95.5459 410.737 95.5361 410.8 95.5244 cv
418.835 93.9409 426.39 90.2593 431.503 85.6777 cv
431.639 87.2573 431.915 88.8257 432.446 90.4087 cv
434.079 95.2749 437.868 97.8359 442.584 97.2607 cv
448.149 96.582 454.309 91.1523 455.197 84.1362 cv
458.222 84.6006 461.419 84.6323 464.741 84.2271 cv
467.288 83.9165 469.961 83.3418 472.687 82.52 cv
483.789 79.1714 492.441 74.667 498.44 69.1162 cv
499.663 69.5283 500.969 69.6592 502.296 69.4976 cv
505.543 69.1011 508.717 67.0176 511 63.7793 cv
513.56 60.1514 514.508 55.7549 513.603 51.7188 cv
511.975 44.46 504.35 35.6113 498.779 30.5498 cv
498.831 30.2227 498.817 29.8853 498.737 29.5557 cv
495.706 17.1304 486.413 7.13965 475.06 4.10352 cv
470.929 2.99902 465.209 2.77441 459.365 3.48682 cv
459.365 3.48682 li
cp
f
430.335 64.1768 mo
432.719 61.4409 428.912 52.5044 419.884 51.0371 cv
410.2 49.4619 400.652 53.6685 399.157 54.2793 cv
405.493 68.7769 424.076 71.3628 430.335 64.1768 cv
cp
0 .970642 .96051 0 cmyk
f
419.882 51.0396 mo
428.915 52.5063 432.72 61.4448 430.338 64.1753 cv
424.155 71.2666 405.998 68.8408 399.429 54.8613 cv
403.271 59.6855 412.101 66.5034 419.476 59.5068 cv
422.331 56.7954 420.62 53.3726 418.265 50.835 cv
418.801 50.8804 419.34 50.9517 419.882 51.0396 cv
cp
.132235 1 1 .0386358 cmyk
f
411.125 49.6787 mo
407.167 50.1611 403.053 51.2813 398.895 53.0083 cv
398.676 53.0986 li
398.357 53.2285 398.105 53.481 397.977 53.7993 cv
397.847 54.1182 397.852 54.4756 397.989 54.7896 cv
402.724 65.6235 413.955 70.2231 422.604 69.1685 cv
426.266 68.7212 429.353 67.2461 431.298 65.0146 cv
432.473 63.6655 432.634 61.4722 431.74 58.998 cv
430.444 55.4082 426.615 50.8394 420.09 49.7783 cv
417.307 49.3257 414.291 49.2925 411.125 49.6787 cv
411.125 49.6787 li
cp
411.279 50.9443 mo
413.983 50.6138 416.929 50.5557 419.884 51.0371 cv
428.912 52.5044 432.719 61.4409 430.335 64.1768 cv
428.533 66.2466 425.709 67.5049 422.449 67.9023 cv
414.39 68.8857 403.669 64.6025 399.157 54.2793 cv
400.196 53.855 405.121 51.6958 411.279 50.9443 cv
411.279 50.9443 li
cp
.75021 .679683 .670222 .90164 cmyk
f
434.246 66.9819 mo
431.135 61.3672 420.387 63.7607 413.64 71.208 cv
407.099 78.4282 409.192 89.7329 410.307 93.0225 cv
425.497 90.0278 440.724 78.6729 434.246 66.9819 cv
cp
0 .970642 .96051 0 cmyk
f
434.242 66.979 mo
440.722 78.6733 425.494 90.0273 410.308 93.019 cv
410.031 92.2129 409.702 90.9258 409.448 89.3389 cv
417.724 86.2144 426.828 82.501 427.629 74.9531 cv
428.244 69.124 424.29 65.7695 421.358 65.5278 cv
426.75 63.0542 432.178 63.2485 434.242 66.979 cv
cp
.132235 1 1 .0386358 cmyk
f
426.427 62.7178 mo
421.7 63.2944 416.438 66.2197 412.694 70.3521 cv
405.879 77.876 407.788 89.5635 409.1 93.4316 cv
409.294 94.0073 409.865 94.3608 410.46 94.2881 cv
410.49 94.2842 410.522 94.2798 410.553 94.2734 cv
420.267 92.3584 431.832 86.6284 435.776 78.144 cv
437.601 74.2192 437.457 70.146 435.361 66.3643 cv
433.799 63.5444 430.542 62.2158 426.427 62.7178 cv
426.427 62.7178 li
cp
426.581 63.9834 mo
429.964 63.5708 432.861 64.4844 434.246 66.9819 cv
440.724 78.6729 425.497 90.0278 410.307 93.0225 cv
409.192 89.7329 407.099 78.4282 413.64 71.208 cv
417.384 67.0742 422.36 64.4985 426.581 63.9834 cv
426.581 63.9834 li
cp
.75021 .679683 .670222 .90164 cmyk
f
492.332 28.748 mo
497.446 31.7959 509.209 43.7813 511.114 52.2773 cv
513.375 62.3535 501.089 72.856 495.238 63.2119 cv
491.498 57.0474 492.95 49.3486 487.6 40.1411 cv
482.137 30.7354 486.886 25.5034 492.332 28.748 cv
cp
.280522 .914061 1 .298253 cmyk
f
492.328 28.7495 mo
497.444 31.7988 509.208 43.7822 511.118 52.2754 cv
512.436 58.168 508.78 64.2139 504.348 66.2793 cv
514.864 58.7031 507.848 47.5791 500.753 38.0659 cv
496.564 32.4541 492.723 28.958 489.967 27.8477 cv
490.718 27.9702 491.517 28.2666 492.328 28.7495 cv
cp
.215396 .82446 1 .119539 cmyk
f
488.526 26.5493 mo
488.526 26.5493 li
486.799 26.7598 485.41 27.7568 484.614 29.3569 cv
483.221 32.1587 483.908 36.3228 486.498 40.7817 cv
489.29 45.5879 490.18 50.0708 490.964 54.0254 cv
491.66 57.5391 492.318 60.8569 494.147 63.873 cv
496.094 67.082 498.931 68.6333 502.136 68.2422 cv
504.983 67.895 507.907 65.9546 509.956 63.0513 cv
512.31 59.7139 513.186 55.6851 512.357 51.9985 cv
510.296 42.8052 497.89 30.5762 492.985 27.6533 cv
491.484 26.7588 489.941 26.3765 488.526 26.5493 cv
488.526 26.5493 li
cp
488.68 27.8145 mo
489.771 27.6816 491.031 27.9736 492.332 28.748 cv
497.446 31.7959 509.209 43.7813 511.114 52.2773 cv
512.667 59.1982 507.355 66.3213 501.981 66.9771 cv
499.531 67.2759 497.069 66.2314 495.238 63.2119 cv
491.498 57.0474 492.95 49.3486 487.6 40.1411 cv
483.44 32.9814 485.2 28.2402 488.68 27.8145 cv
488.68 27.8145 li
cp
.75021 .679683 .670222 .90164 cmyk
f
431.759 61.2197 mo
435.784 69.001 445.728 87.9873 471.951 80.0791 cv
498.174 72.1704 505.566 59.0664 504.882 49.9443 cv
504.242 41.4258 500.295 41.3389 492.25 25.3682 cv
480.669 2.37646 455.459 6.30762 441.09 16.624 cv
425.314 27.9492 423.634 45.5122 431.759 61.2197 cv
cp
.0250248 .567285 .998169 0 cmyk
f
470.981 8.88379 mo
457.173 9.33594 444.33 17.77 446.136 39.0342 cv
447.363 53.3818 458.566 78.9546 481.075 76.8252 cv
478.323 77.9829 475.287 79.0718 471.951 80.0791 cv
445.728 87.9873 435.781 69.0005 431.759 61.2197 cv
423.634 45.5122 425.311 27.9512 441.09 16.624 cv
449.098 10.877 460.48 7.10889 470.981 8.88379 cv
cp
.101595 .727993 1 .0109865 cmyk
f
461.009 7.44775 mo
453.766 8.33154 446.428 11.2222 440.347 15.5879 cv
425.222 26.4458 421.497 44.1553 430.627 61.8047 cv
434.311 68.9268 442.938 85.6045 464.559 82.9678 cv
467.042 82.6646 469.653 82.1035 472.318 81.2993 cv
484.473 77.6338 493.598 72.6001 499.438 66.3359 cv
504.185 61.2476 506.569 55.3926 506.153 49.8486 cv
505.762 44.6318 504.134 42.2578 501.438 38.3247 cv
499.477 35.4653 496.791 31.5483 493.389 24.7944 cv
484.595 7.33691 469.327 6.43359 461.009 7.44775 cv
461.009 7.44775 li
cp
461.164 8.71387 mo
472.886 7.28369 485.14 11.2515 492.25 25.3682 cv
500.295 41.3389 504.242 41.4258 504.882 49.9443 cv
505.566 59.0664 498.174 72.1704 471.951 80.0791 cv
469.269 80.8877 466.758 81.415 464.404 81.7017 cv
443.757 84.2207 435.372 68.2051 431.759 61.2197 cv
423.634 45.5122 425.314 27.9492 441.09 16.624 cv
446.637 12.6426 453.794 9.61279 461.164 8.71387 cv
461.164 8.71387 li
cp
.75021 .679683 .670222 .90164 cmyk
f
439.604 55.3384 mo
443.925 59.436 452.764 73.7134 452.755 82.4204 cv
452.746 92.7466 438.452 100.292 434.863 89.5977 cv
432.57 82.7627 435.679 75.5708 432.484 65.4121 cv
429.221 55.0356 435.005 50.9761 439.604 55.3384 cv
cp
.280522 .914061 1 .298253 cmyk
f
439.604 55.3384 mo
443.923 59.436 452.764 73.7109 452.755 82.4204 cv
452.752 87.439 449.386 91.7886 445.503 93.7261 cv
454.451 87.8306 449.989 76.5151 445.185 66.543 cv
441.421 58.7217 437.563 54.1919 434.896 53.7378 cv
436.329 53.3403 438.036 53.8516 439.604 55.3384 cv
cp
.215396 .82446 1 .119539 cmyk
f
435.24 52.3672 mo
435.239 52.3672 li
433.743 52.5498 432.431 53.4087 431.543 54.7856 cv
429.925 57.2993 429.826 61.21 431.268 65.7949 cv
432.936 71.0972 432.818 75.6665 432.714 79.6973 cv
432.62 83.2773 432.533 86.6592 433.655 90.0039 cv
435.081 94.2515 438.36 96.4917 442.43 95.9951 cv
447.91 95.3267 454.023 89.5879 454.03 82.4214 cv
454.04 72.999 444.625 58.3428 440.481 54.4136 cv
438.863 52.8784 437.002 52.1523 435.24 52.3672 cv
435.24 52.3672 li
cp
435.393 53.6328 mo
436.717 53.4707 438.215 54.0205 439.604 55.3384 cv
443.925 59.436 452.764 73.7134 452.755 82.4204 cv
452.75 88.7988 447.291 94.1177 442.275 94.73 cv
439.17 95.1084 436.235 93.686 434.863 89.5977 cv
432.57 82.7627 435.679 75.5708 432.484 65.4121 cv
430.207 58.1714 432.336 54.0059 435.393 53.6328 cv
435.393 53.6328 li
cp
.75021 .679683 .670222 .90164 cmyk
f
433.018 72.127 mo
435.354 66.5703 464.544 29.8901 496.26 30.1597 cv
493.691 19.6265 485.761 9.60498 474.401 6.56738 cv
462.941 3.50244 430.313 6.66406 423.444 35.7603 cv
419.829 51.0752 429.289 67.3013 433.018 72.127 cv
cp
0 .970642 .96051 0 cmyk
f
492.896 21.5991 mo
494.408 24.3169 495.542 27.2188 496.26 30.1621 cv
492.488 30.1255 488.754 30.6152 485.097 31.5156 cv
489.655 28.7329 492.278 25.5278 492.896 21.5991 cv
cp
.132235 1 1 .0386358 cmyk
f
443.124 31.9688 mo
448.567 41.7686 458.617 41.2534 468.69 38.2612 cv
449.259 49.3315 434.638 68.2578 433.021 72.1289 cv
429.289 67.3008 419.826 51.0723 423.446 35.7563 cv
426.832 21.3945 436.495 13.3569 446.793 9.25732 cv
441.478 14.4697 438.307 23.291 443.124 31.9688 cv
cp
f
459.519 4.75195 mo
453.704 5.46143 445.146 7.44043 437.398 12.8369 cv
429.574 18.2881 424.461 25.9019 422.203 35.4678 cv
417.779 54.207 431.866 72.7212 432.01 72.9063 cv
432.284 73.2622 432.726 73.4468 433.172 73.3921 cv
433.176 73.3916 433.18 73.3911 433.184 73.3911 cv
433.633 73.332 434.018 73.0391 434.192 72.6206 cv
436.254 67.7163 461.763 35.2954 490.875 31.7437 cv
492.682 31.5239 494.489 31.4199 496.249 31.4346 cv
496.304 31.4355 496.359 31.4321 496.414 31.4253 cv
496.746 31.3853 497.05 31.2168 497.259 30.9521 cv
497.504 30.6436 497.592 30.2397 497.499 29.8574 cv
494.577 17.8784 485.64 8.25244 474.73 5.33545 cv
470.81 4.28662 465.123 4.06885 459.519 4.75195 cv
459.519 4.75195 li
cp
459.673 6.01807 mo
465.64 5.29004 470.97 5.6499 474.401 6.56738 cv
485.761 9.60498 493.691 19.6265 496.26 30.1597 cv
494.401 30.144 492.558 30.2544 490.721 30.4785 cv
461.22 34.0771 435.216 66.8955 433.018 72.127 cv
429.289 67.3013 419.829 51.0752 423.444 35.7603 cv
428.256 15.3755 445.711 7.72119 459.673 6.01807 cv
459.673 6.01807 li
cp
.75021 .679683 .670222 .90164 cmyk
f
498.872 51.2773 mo
502.706 57.1025 499.281 66.1216 491.224 71.4258 cv
483.166 76.7305 473.525 76.3086 469.691 70.4844 cv
465.857 64.6592 469.282 55.6392 477.34 50.3345 cv
485.397 45.0303 495.038 45.4531 498.872 51.2773 cv
cp
.00985733 .0806592 .600977 0 cmyk
f
487.004 47.6191 mo
487.846 49.4688 486.307 51.9819 483.564 53.229 cv
480.821 54.4766 477.916 53.9868 477.074 52.1353 cv
476.232 50.2847 477.771 47.771 480.514 46.5244 cv
483.255 45.2764 486.16 45.7666 487.004 47.6191 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
486.328 47.9263 mo
486.246 47.7466 486.134 47.5869 486.011 47.4375 cv
485.854 48.7861 484.658 50.2319 482.861 51.0493 cv
480.757 52.0059 478.551 51.7749 477.571 50.5933 cv
477.521 51.0215 477.574 51.4414 477.75 51.8276 cv
478.479 53.4272 480.987 53.8501 483.356 52.7725 cv
485.726 51.6953 487.056 49.5239 486.328 47.9263 cv
cp
.636561 .700954 .654597 .746487 cmyk
f
453.691 45.7632 mo
456.267 44.6445 459.253 43.4141 463.396 43.4219 cv
466.167 43.4272 465.966 41.1499 463.355 40.6597 cv
461.26 40.2656 456.573 41.8584 453.393 44.7046 cv
452.035 45.9189 452.629 46.2256 453.691 45.7632 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
487.861 27.394 mo
485.915 29.085 483.718 31.0728 482.244 34.5156 cv
481.26 36.8169 479.241 35.7417 479.724 33.3804 cv
480.111 31.4839 483.247 28.2295 486.997 26.7241 cv
488.598 26.0825 488.666 26.6973 487.861 27.394 cv
cp
f
484.776 47.6299 mo
484.913 48.2393 484.293 48.8979 483.39 49.1006 cv
482.486 49.3037 481.645 48.9751 481.507 48.3657 cv
481.369 47.7559 481.99 47.0967 482.894 46.8936 cv
483.795 46.6899 484.639 47.0195 484.776 47.6299 cv
cp
0 0 0 0 cmyk
f
461.418 57.4868 mo
460.859 57.4868 460.349 57.1182 460.19 56.5547 cv
459.485 54.0283 460.487 51.4858 462.804 49.9199 cv
465.166 48.3228 468.081 48.2671 470.057 49.7813 cv
470.616 50.2095 470.721 51.0098 470.293 51.5684 cv
469.864 52.1274 469.064 52.2334 468.506 51.8047 cv
467.238 50.8325 465.401 51.2422 464.231 52.0327 cv
463.708 52.3872 462.045 53.7104 462.647 55.8687 cv
462.836 56.5469 462.44 57.2505 461.762 57.4399 cv
461.646 57.4717 461.532 57.4868 461.418 57.4868 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
486.387 44.0996 mo
485.828 44.0996 485.317 43.7305 485.159 43.167 cv
484.476 40.7168 485.362 38.3091 487.472 36.8823 cv
489.719 35.3633 492.693 35.3804 494.707 36.9248 cv
495.267 37.353 495.371 38.1538 494.942 38.7124 cv
494.515 39.271 493.714 39.376 493.155 38.9487 cv
491.809 37.9146 490.005 38.2485 488.899 38.9951 cv
488.329 39.3809 487.061 40.4937 487.616 42.4814 cv
487.805 43.1597 487.409 43.8628 486.73 44.0522 cv
486.615 44.084 486.501 44.0996 486.387 44.0996 cv
cp
f
471.674 21.7261 mo
473.389 20.52 474.391 17.7734 471.362 14.6084 cv
468.333 11.4438 461.61 11.3511 457.697 13.0542 cv
453.785 14.7583 450.283 18.8809 451.279 23.2773 cv
452.169 27.1997 455.416 28.271 458.886 27.6685 cv
459.469 29.5938 460.079 30.5566 460.494 30.416 cv
461.198 30.1777 463.833 28.8657 464.346 28.6108 cv
464.18 27.8784 463.724 26.2095 463.724 26.2095 cv
465.149 28.0127 li
465.988 27.8374 469 26.208 469.301 25.9702 cv
469.063 25.6699 467.964 23.9473 467.964 23.9473 cv
470.151 25.5098 li
470.981 25.229 473.497 23.8159 473.497 23.8159 cv
473.754 23.0488 471.674 21.7261 471.674 21.7261 cv
cp
0 0 0 0 cmyk
f
461.596 19.9482 mo
462.244 21.1655 461.847 22.6445 460.708 23.252 cv
459.569 23.8599 458.119 23.3672 457.47 22.1504 cv
456.82 20.9331 457.219 19.4536 458.356 18.8467 cv
459.496 18.2383 460.945 18.7324 461.596 19.9482 cv
cp
0 .970642 .96051 0 cmyk
f
467.517 16.7075 mo
468.422 17.7456 468.424 19.2266 467.521 20.0142 cv
466.617 20.8027 465.149 20.5986 464.243 19.5581 cv
463.338 18.52 463.336 17.0371 464.24 16.25 cv
465.143 15.4624 466.61 15.6665 467.517 16.7075 cv
cp
f
422.239 64.6357 mo
420.634 67.2046 420.259 70.312 421.209 73.1606 cv
423.044 78.6646 429.773 85.9746 439.3 89.8872 cv
439.368 90.3994 439.479 90.8726 439.634 91.3062 cv
440.067 92.519 li
441.302 92.8901 li
445.057 94.0215 464.263 96.5952 469.05 88.9414 cv
469.373 88.4238 469.625 87.8662 469.798 87.2852 cv
471.405 81.8853 463.335 77.6553 454.792 73.1782 cv
453.426 72.4629 452.112 71.7749 450.94 71.1279 cv
449.624 70.3994 li
449.624 70.3994 448.275 71.248 448.238 71.2725 cv
445.813 69.6338 444.025 68.1343 442.288 66.6768 cv
440.048 64.7979 437.936 63.0244 434.991 61.501 cv
429.388 58.6011 424.452 61.0923 422.239 64.6348 cv
422.239 64.6357 422.239 64.6357 422.239 64.6357 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
467.054 87.0376 mo
465.986 89.5464 457.683 91.8745 446.223 89.3843 cv
433.604 86.6416 425.414 77.7109 423.628 72.354 cv
421.761 66.7539 427.037 60.2559 433.818 63.7651 cv
440.601 67.2759 442.56 72.2334 456.122 78.5879 cv
463.579 82.082 468.299 84.1074 467.054 87.0376 cv
cp
.0250248 .567285 .998169 0 cmyk
f
468 87.9702 mo
468.087 87.8291 468.164 87.6826 468.227 87.5356 cv
469.893 83.6162 465.053 81.354 457.728 77.9307 cv
456.663 77.4336 li
448.638 73.6733 444.828 70.4751 441.466 67.6528 cv
439.189 65.7422 437.225 64.0918 434.405 62.6333 cv
429.491 60.0903 425.298 62.1465 423.318 65.3105 cv
421.917 67.5557 421.589 70.2695 422.419 72.7578 cv
424.322 78.4688 432.883 87.7896 445.953 90.6294 cv
457.037 93.0386 466.028 91.1245 468 87.9702 cv
468 87.9702 li
cp
466.918 87.2939 mo
465.415 89.6987 457.291 91.7886 446.223 89.3843 cv
433.604 86.6416 425.414 77.7109 423.628 72.354 cv
422.892 70.1499 423.266 67.8047 424.402 65.9873 cv
426.15 63.1885 429.707 61.6372 433.818 63.7651 cv
440.601 67.2759 442.56 72.2334 456.122 78.5879 cv
463.579 82.082 468.299 84.1074 467.054 87.0376 cv
467.018 87.1235 466.971 87.209 466.918 87.2939 cv
466.918 87.2939 li
cp
.75021 .679683 .670222 .90164 cmyk
f
446.223 89.3804 mo
457.686 91.8716 465.988 89.5425 467.05 87.0386 cv
467.172 86.7642 467.231 86.4907 467.238 86.2251 cv
464.85 88.2202 456.789 90.0195 441.897 83.1807 cv
424.011 74.9604 426.353 62.873 432.904 63.3579 cv
426.569 60.8428 421.843 67.0107 423.626 72.3535 cv
425.411 77.709 433.604 86.6377 446.223 89.3804 cv
cp
.101595 .727993 1 .0109865 cmyk
f
461.386 79.7412 mo
459.565 78.6147 457.506 77.4976 455.48 76.4233 cv
451.058 80.9053 448.759 87.6973 448.765 91.4893 cv
451.045 91.6724 453.586 91.7271 456.045 91.5786 cv
456.552 88.1372 458.358 83.4326 461.386 79.7412 cv
cp
0 0 0 0 cmyk
f
455.48 76.4233 mo
453.436 75.335 451.421 74.3071 449.71 73.3574 cv
445.308 76.1196 440.579 86.3652 442.035 90.4521 cv
443.368 90.8535 445.849 91.2612 448.765 91.4893 cv
448.759 87.6973 451.058 80.9053 455.48 76.4233 cv
cp
0 .970642 .96051 0 cmyk
f
467.351 86.5562 mo
467.971 84.4766 465.191 82.0894 461.386 79.7412 cv
458.358 83.4326 456.552 88.1372 456.045 91.5786 cv
461.396 91.2441 466.354 89.9019 467.351 86.5562 cv
cp
f
467.351 86.5562 mo
467.406 86.3892 467.429 86.2241 467.426 86.0522 cv
466.167 87.2793 462.769 88.5332 456.974 87.8296 cv
456.523 89.1621 456.213 90.4414 456.045 91.5786 cv
461.396 91.2441 466.354 89.9019 467.351 86.5562 cv
cp
.132235 1 1 .0386358 cmyk
f
456.974 87.8296 mo
454.875 87.5801 452.463 87.0747 449.726 86.2271 cv
449.087 88.2134 448.763 90.0649 448.765 91.4893 cv
451.045 91.6724 453.586 91.7271 456.045 91.5786 cv
456.213 90.4414 456.523 89.1621 456.974 87.8296 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
449.726 86.2271 mo
447.611 85.5674 445.309 84.7002 442.794 83.5903 cv
441.848 86.2759 441.459 88.8389 442.035 90.4521 cv
443.368 90.8535 445.849 91.2612 448.765 91.4893 cv
448.763 90.0649 449.087 88.2134 449.726 86.2271 cv
cp
.132235 1 1 .0386358 cmyk
f
467.97 88.2637 mo
468.231 87.8428 468.436 87.3916 468.576 86.9214 cv
469.884 82.5269 461.911 78.3496 454.201 74.3076 cv
452.812 73.5811 451.497 72.8921 450.324 72.2432 cv
449.919 72.019 449.423 72.0327 449.029 72.2793 cv
447.058 73.5186 445.401 75.7671 444.357 77.4346 cv
441.808 81.5171 439.618 87.4648 440.836 90.8784 cv
440.971 91.2593 441.28 91.5532 441.668 91.6704 cv
445.841 92.9253 463.859 94.8374 467.969 88.2646 cv
467.969 88.2646 467.969 88.2642 467.97 88.2637 cv
467.97 88.2637 li
cp
466.887 87.5894 mo
463.354 93.2393 446.427 91.7705 442.035 90.4492 cv
441.064 87.7266 442.842 82.2676 445.44 78.1113 cv
446.738 76.0322 448.241 74.2803 449.707 73.3584 cv
456.661 77.2031 468.569 82.4727 467.354 86.5571 cv
467.244 86.9248 467.087 87.2686 466.887 87.5894 cv
466.887 87.5894 li
cp
.75021 .679683 .670222 .90164 cmyk
f
490.613 50.1133 mo
488.267 53.1313 479.221 58.1357 471.103 58.5483 cv
472.203 67.0796 477.909 72.9976 486.854 68.8696 cv
495.235 65.002 493.365 55.0669 490.613 50.1133 cv
cp
f
473.148 59.3442 mo
474.675 59.6841 484.791 57.5532 490.344 51.9111 cv
490.881 53.8813 490.612 54.8667 489.807 55.8511 cv
488.434 57.5288 481.767 60.5483 478.522 61.2251 cv
476.372 61.6733 474.313 61.1353 473.148 59.3442 cv
cp
0 0 0 0 cmyk
f
476.552 66.6885 mo
476.282 63.6436 487.388 59.792 490.612 63.4644 cv
490.881 67.1357 479.686 72.1514 476.552 66.6885 cv
cp
0 .970642 .96051 0 cmyk
f
106.328 172.468 mo
103.762 174.074 100.653 174.45 97.8042 173.5 cv
92.3003 171.667 84.9888 164.94 81.0713 155.417 cv
80.5596 155.348 80.0864 155.236 79.6519 155.083 cv
78.439 154.649 li
78.0684 153.414 li
76.936 149.659 74.3555 130.453 82.0078 125.665 cv
82.5254 125.34 83.083 125.088 83.6641 124.917 cv
89.063 123.309 93.2959 131.375 97.7749 139.917 cv
98.4922 141.284 99.1807 142.596 99.8286 143.768 cv
100.557 145.085 li
100.557 145.085 99.7085 146.433 99.6841 146.471 cv
101.323 148.897 102.823 150.683 104.28 152.419 cv
106.161 154.658 107.934 156.771 109.46 159.715 cv
112.362 165.317 109.872 170.251 106.331 172.467 cv
106.328 172.468 106.328 172.468 106.328 172.468 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
83.9121 127.662 mo
81.4048 128.728 79.0791 137.034 81.5718 148.494 cv
84.3203 161.111 93.2524 169.296 98.6094 171.081 cv
104.211 172.946 110.706 167.668 107.196 160.888 cv
103.683 154.106 98.7236 152.15 92.3662 138.589 cv
88.8701 131.133 86.8418 126.415 83.9121 127.662 cv
cp
.0250248 .567285 .998169 0 cmyk
f
82.9795 126.715 mo
79.8262 128.688 77.915 137.678 80.3267 148.763 cv
83.1719 161.831 92.4946 170.389 98.207 172.291 cv
100.695 173.12 103.409 172.792 105.654 171.387 cv
108.817 169.409 110.873 165.213 108.328 160.3 cv
106.868 157.483 105.217 155.517 103.304 153.242 cv
100.482 149.882 97.2822 146.072 93.5195 138.048 cv
93.022 136.985 li
89.5962 129.66 87.333 124.821 83.4126 126.488 cv
83.2656 126.55 83.1201 126.627 82.9795 126.715 cv
82.9795 126.715 li
cp
83.6558 127.796 mo
83.7417 127.743 83.8267 127.697 83.9121 127.662 cv
86.8418 126.415 88.8701 131.133 92.3662 138.589 cv
98.7236 152.15 103.683 154.106 107.196 160.888 cv
109.325 164.999 107.776 168.555 104.978 170.306 cv
103.16 171.442 100.815 171.817 98.6094 171.081 cv
93.2524 169.296 84.3203 161.111 81.5718 148.494 cv
79.1646 137.424 81.2515 129.299 83.6558 127.796 cv
83.6558 127.796 li
cp
.75021 .679683 .670222 .90164 cmyk
f
81.5762 148.494 mo
79.0806 137.03 81.4077 128.727 83.9102 127.665 cv
84.1846 127.542 84.459 127.482 84.7256 127.476 cv
82.73 129.865 80.9341 137.926 87.7778 152.815 cv
96.0034 170.698 108.09 168.354 107.603 161.801 cv
110.121 168.136 103.955 172.865 98.6099 171.083 cv
93.2544 169.3 84.3237 161.111 81.5762 148.494 cv
cp
.101595 .727993 1 .0109865 cmyk
f
91.21 133.326 mo
92.3374 135.146 93.4556 137.206 94.5303 139.23 cv
90.0498 143.655 83.2588 145.956 79.4658 145.952 cv
79.2827 143.671 79.2275 141.129 79.3755 138.671 cv
82.8164 138.163 87.52 136.354 91.21 133.326 cv
cp
0 0 0 0 cmyk
f
94.5303 139.23 mo
95.6191 141.275 96.6484 143.288 97.5981 145 cv
94.8374 149.403 84.5933 154.134 80.5054 152.68 cv
80.1035 151.348 79.6963 148.867 79.4658 145.952 cv
83.2588 145.956 90.0498 143.655 94.5303 139.23 cv
cp
0 .970642 .96051 0 cmyk
f
84.3936 127.361 mo
86.4736 126.743 88.8613 129.521 91.21 133.326 cv
87.52 136.354 82.8164 138.163 79.3755 138.671 cv
79.7075 133.32 81.0483 128.362 84.3936 127.361 cv
cp
f
84.3936 127.361 mo
84.5605 127.308 84.7266 127.284 84.897 127.289 cv
83.6704 128.547 82.4175 131.947 83.124 137.741 cv
81.792 138.191 80.5117 138.501 79.3755 138.671 cv
79.7075 133.32 81.0483 128.362 84.3936 127.361 cv
cp
.132235 1 1 .0386358 cmyk
f
83.124 137.741 mo
83.374 139.839 83.8794 142.251 84.7275 144.987 cv
82.7427 145.627 80.8911 145.954 79.4658 145.952 cv
79.2827 143.671 79.2275 141.129 79.3755 138.671 cv
80.5117 138.501 81.792 138.191 83.124 137.741 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
84.7275 144.987 mo
85.3892 147.102 86.2568 149.405 87.3677 151.919 cv
84.6821 152.866 82.1187 153.256 80.5054 152.68 cv
80.1035 151.348 79.6963 148.867 79.4658 145.952 cv
80.8911 145.954 82.7427 145.627 84.7275 144.987 cv
cp
.132235 1 1 .0386358 cmyk
f
82.6865 126.746 mo
82.6851 126.746 82.6846 126.747 82.6846 126.747 cv
76.1133 130.857 78.0313 148.875 79.2876 153.047 cv
79.4053 153.436 79.6982 153.745 80.0796 153.879 cv
83.4941 155.096 89.4409 152.905 93.5225 150.353 cv
95.1904 149.31 97.438 147.653 98.6758 145.68 cv
98.9233 145.288 98.936 144.792 98.7134 144.384 cv
98.063 143.211 97.374 141.898 96.645 140.509 cv
92.6016 132.8 88.4219 124.83 84.0288 126.137 cv
83.5571 126.279 83.1064 126.483 82.6865 126.746 cv
82.6865 126.746 li
cp
83.3599 127.828 mo
83.6816 127.625 84.0249 127.469 84.3916 127.36 cv
88.4766 126.143 93.7505 138.049 97.5967 145.002 cv
96.6763 146.468 94.9238 147.972 92.8467 149.272 cv
88.6909 151.87 83.2324 153.651 80.5083 152.679 cv
79.186 148.29 77.7119 131.362 83.3599 127.828 cv
83.3599 127.828 li
cp
.75021 .679683 .670222 .90164 cmyk
f
117.161 163.64 mo
115.363 160.646 li
141.957 147.877 li
142.283 147.72 142.55 147.464 142.721 147.144 cv
148.914 135.529 li
149.195 135.001 149.179 134.366 148.871 133.854 cv
148.563 133.342 148.011 133.029 147.414 133.029 cv
134.25 133.032 li
133.888 133.032 133.535 133.147 133.244 133.361 cv
109.469 150.826 li
107.671 147.832 li
107.188 147.028 106.145 146.766 105.339 147.25 cv
100.984 149.863 li
100.179 150.347 99.918 151.392 100.401 152.197 cv
102.605 155.869 li
91.5195 164.012 li
90.8115 164.532 90.6167 165.505 91.0684 166.257 cv
92.0796 167.942 li
93.0908 169.627 li
93.543 170.38 94.4932 170.665 95.2847 170.285 cv
107.686 164.332 li
109.89 168.004 li
110.373 168.809 111.418 169.069 112.222 168.586 cv
116.578 165.973 li
117.383 165.489 117.644 164.445 117.161 163.64 cv
cp
f
93.5366 167.068 mo
94.5488 168.752 li
141.221 146.345 li
147.414 134.729 li
134.25 134.732 li
92.5259 165.383 li
93.5366 167.068 li
cp
.280522 .914061 1 .298253 cmyk
f
145.479 135.889 mo
139.452 147.194 li
141.221 146.345 li
147.414 134.729 li
134.25 134.732 li
132.668 135.893 li
145.479 135.889 li
cp
.215396 .82446 1 .119539 cmyk
f
111.347 167.129 mo
101.859 151.321 li
106.214 148.708 li
115.703 164.515 li
111.347 167.129 li
cp
f
115.058 164.902 mo
105.569 149.094 li
106.214 148.708 li
115.703 164.515 li
115.058 164.902 li
cp
.144869 .807401 1 .0376593 cmyk
f
108.141 162.887 mo
108.098 162.814 108.075 162.727 108.082 162.638 cv
108.772 153.052 li
108.79 152.818 108.993 152.642 109.227 152.661 cv
109.46 152.677 109.637 152.879 109.621 153.114 cv
108.93 162.699 li
108.913 162.932 108.71 163.109 108.476 163.092 cv
108.332 163.082 108.21 163.001 108.141 162.887 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
104.095 156.146 mo
104.026 156.032 104.013 155.886 104.071 155.754 cv
104.167 155.539 104.417 155.444 104.631 155.539 cv
113.416 159.435 li
113.63 159.532 113.727 159.783 113.631 159.998 cv
113.536 160.212 113.285 160.308 113.07 160.214 cv
104.286 156.316 li
104.204 156.28 104.139 156.218 104.095 156.146 cv
cp
f
102.666 162.503 mo
101.13 163.793 98.5967 163.302 97.0049 161.408 cv
95.4131 159.513 95.3672 156.933 96.9019 155.644 cv
98.437 154.354 100.971 154.845 102.563 156.74 cv
104.154 158.633 104.2 161.214 102.666 162.503 cv
cp
f
101.8 161.473 mo
100.542 162.53 98.3135 161.949 96.8223 160.174 cv
95.3315 158.4 95.1431 156.103 96.4004 155.046 cv
97.6582 153.99 99.8867 154.571 101.378 156.346 cv
102.869 158.121 103.058 160.417 101.8 161.473 cv
cp
.0250248 .567285 .998169 0 cmyk
f
36.5083 186.333 mo
34.7529 186.666 32.9307 186.86 31.0923 186.915 cv
25.6196 187.075 21.001 184.997 17.7354 180.906 cv
12.1606 173.922 11.9082 163.042 13.0122 158.768 cv
13.8438 155.547 15.5796 153.463 17.7725 153.048 cv
20.394 152.552 22.7183 154.305 24.6841 158.259 cv
27.457 163.84 33.2734 164.022 37.6646 163.191 cv
39.3213 162.877 41.0308 162.357 42.6079 161.687 cv
46.3467 160.094 48.7559 159.263 50.6631 158.901 cv
53.645 158.338 55.8438 158.953 57.1982 160.732 cv
58.939 163.02 59.1138 166.476 57.6787 170.215 cv
55.3652 176.241 48.4326 184.077 36.5093 186.333 cv
36.5083 186.333 36.5093 186.333 36.5083 186.333 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
55.1699 162.278 mo
53.6626 160.298 50.0117 161.306 43.6064 164.033 cv
37.0513 166.822 26.6875 168.025 22.3994 159.395 cv
19.2559 153.069 16.4795 155.541 15.481 159.406 cv
14.0039 165.123 15.5107 184.819 31.0176 184.365 cv
49.9443 183.811 59.1987 167.57 55.1699 162.278 cv
cp
.101595 .727993 1 .0109865 cmyk
f
19.0967 173.575 mo
18.0464 173.281 18.353 176.319 19.2012 178.607 cv
14.8174 172.447 14.5396 163.071 15.481 159.406 cv
16.4795 155.541 19.2559 153.069 22.3994 159.395 cv
24.1196 162.858 26.8105 164.736 29.8486 165.572 cv
29.6138 166.888 26.1538 165.838 25.5322 166.441 cv
24.4614 167.499 27.7168 170.353 26.5439 171.006 cv
25.3696 171.663 22.6924 169.72 22.1846 170.829 cv
21.4219 172.469 23.8257 175.708 22.5732 175.946 cv
21.3203 176.183 20.4678 173.965 19.0967 173.575 cv
cp
.00985733 .0806592 .600977 0 cmyk
f
60.665 206.742 mo
56.1128 206.247 51.8877 205.08 49.3618 203.625 cv
45.7676 201.553 45.5161 193.923 48.3999 174.467 cv
48.54 173.518 li
49.6685 165.804 54.3701 162.543 58.5278 162.734 cv
58.7246 162.744 58.9165 162.758 59.106 162.779 cv
63.3389 163.239 65.9863 166.386 66.9727 172.134 cv
67.3394 174.271 67.5083 176.846 67.688 179.572 cv
67.9526 183.598 68.3521 189.683 69.6577 191.046 cv
72.8262 194.355 75.5967 199.752 72.9771 204.076 cv
71.0942 207.18 65.2427 207.238 60.665 206.742 cv
60.665 206.742 li
cp
.75021 .679683 .670222 .90164 cmyk
f
58.4111 165.282 mo
54.9883 165.125 51.894 168.207 51.063 173.888 cv
50.2314 179.569 47.0938 199.375 50.6353 201.416 cv
55.6636 204.314 68.9727 205.76 70.7959 202.752 cv
72.6191 199.744 70.416 195.526 67.8159 192.809 cv
64.9155 189.783 65.5073 178.668 64.459 172.566 cv
63.6743 167.992 61.814 165.439 58.4111 165.282 cv
cp
.101595 .727993 1 .0109865 cmyk
f
67.8159 192.809 mo
69.0981 194.146 70.2886 195.858 70.9365 197.604 cv
66.8687 202.779 55.0581 197.066 57.5884 194.476 cv
59.7056 192.305 64.6895 191.684 67.6631 192.64 cv
67.7173 192.697 67.7627 192.753 67.8159 192.809 cv
cp
.0250248 .567285 .998169 0 cmyk
f
64.459 172.566 mo
65.0723 176.129 65.1221 181.41 65.6387 185.784 cv
60.7129 188.781 52.7441 187.52 49.5054 185.774 cv
49.9927 180.902 50.7251 176.21 51.063 173.888 cv
51.894 168.207 54.9912 165.124 58.4111 165.282 cv
61.814 165.439 63.6743 167.992 64.459 172.566 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
55.5376 188.072 mo
52.876 187.783 50.4473 187.055 48.8345 186.166 cv
48.5205 185.993 48.4058 185.597 48.5796 185.283 cv
48.7534 184.969 49.1494 184.856 49.4629 185.027 cv
52.5747 186.745 60.6221 188.206 65.5806 185.005 cv
65.8833 184.811 66.2852 184.897 66.479 185.2 cv
66.6738 185.5 66.5869 185.903 66.2856 186.097 cv
63.27 188.044 59.1855 188.468 55.5376 188.072 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
91.7861 201.024 mo
87.2075 201.024 82.8809 200.322 80.2129 199.148 cv
76.4155 197.478 75.3408 189.919 76.105 170.265 cv
76.1411 169.307 li
76.4297 161.516 80.7505 157.766 84.9053 157.506 cv
85.1021 157.494 85.2939 157.488 85.4849 157.488 cv
89.7432 157.488 92.7148 160.332 94.3169 165.938 cv
94.9121 168.023 95.3584 170.564 95.8311 173.254 cv
96.5298 177.229 97.5845 183.235 99.0298 184.449 cv
102.538 187.396 105.875 192.462 103.738 197.042 cv
102.203 200.333 96.3911 201.024 91.7861 201.024 cv
91.7861 201.024 li
cp
f
85.0645 160.051 mo
81.6445 160.265 78.9023 163.664 78.6895 169.401 cv
78.4771 175.139 77.4985 195.168 81.2397 196.814 cv
86.5522 199.151 99.9395 199.151 101.427 195.963 cv
102.915 192.776 100.269 188.82 97.3896 186.401 cv
94.1787 183.705 93.5659 172.592 91.8647 166.639 cv
90.5898 162.176 88.4648 159.838 85.0645 160.051 cv
cp
.101595 .727993 1 .0109865 cmyk
f
97.3896 186.401 mo
98.8091 187.591 100.177 189.164 101.01 190.831 cv
97.5259 196.416 85.1665 192.011 87.4023 189.164 cv
89.2725 186.777 94.1597 185.62 97.2192 186.249 cv
97.2793 186.3 97.3301 186.351 97.3896 186.401 cv
cp
.0250248 .567285 .998169 0 cmyk
f
91.8647 166.639 mo
92.8589 170.115 93.4795 175.36 94.4658 179.652 cv
89.8926 183.164 81.835 182.772 78.4263 181.386 cv
78.3838 176.49 78.6045 171.748 78.6895 169.401 cv
78.9023 163.664 81.6475 160.264 85.0645 160.051 cv
88.4648 159.838 90.5898 162.176 91.8647 166.639 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
84.6709 183.017 mo
81.9937 183.017 79.5005 182.558 77.8013 181.848 cv
77.4702 181.709 77.314 181.329 77.4521 180.998 cv
77.5908 180.667 77.9727 180.511 78.3027 180.648 cv
81.582 182.019 89.7402 182.601 94.3237 178.884 cv
94.6035 178.658 95.0127 178.701 95.2383 178.98 cv
95.4644 179.258 95.4214 179.667 95.1431 179.893 cv
92.3555 182.155 88.3403 183.017 84.6709 183.017 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
64.9653 181.55 mo
48.2407 179.481 44.6406 169.542 44.5654 161.57 cv
44.3184 135.383 60.3608 118.52 69.1787 118.064 cv
70.0181 118.021 70.8701 118.051 71.7114 118.156 cv
86.7881 120.022 98.3779 145.998 97.6675 161.322 cv
96.9819 176.113 84.7432 181.658 73.5181 181.914 cv
70.333 181.988 67.5356 181.869 64.9663 181.55 cv
64.9653 181.55 li
cp
f
95.1172 161.207 mo
94.5044 174.536 83.1943 179.14 73.4624 179.366 cv
64.8901 179.563 47.2769 178.695 47.1123 161.545 cv
47.1006 160.67 47.1123 159.816 47.1401 158.97 cv
53.8447 163.269 80.3608 169.504 94.877 155.738 cv
95.1084 157.677 95.1973 159.522 95.1172 161.207 cv
cp
.616998 .700496 .649226 .705104 cmyk
f
92.4785 145.361 mo
93.6582 148.907 94.4775 152.459 94.877 155.738 cv
80.3608 169.504 53.8447 163.269 47.1401 158.97 cv
47.2593 155.234 47.7168 151.744 48.4341 148.51 cv
58.4351 151.649 78.8315 153.899 92.4785 145.361 cv
cp
.132235 1 1 .0386358 cmyk
f
87.7432 134.694 mo
89.6514 138.031 91.2539 141.69 92.4785 145.361 cv
78.8315 153.899 58.4351 151.649 48.4341 148.51 cv
49.4287 144 50.918 139.996 52.6826 136.532 cv
62.4058 138.728 76.54 139.612 87.7432 134.694 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
80.106 124.979 mo
82.9751 127.475 85.5601 130.877 87.7432 134.694 cv
76.54 139.612 62.4058 138.728 52.6826 136.532 cv
54.7134 132.508 57.1172 129.208 59.52 126.68 cv
65.6313 127.821 73.2676 127.849 80.106 124.979 cv
cp
.132235 1 1 .0386358 cmyk
f
69.3071 120.611 mo
73.1602 120.411 76.8213 122.106 80.106 124.979 cv
73.2676 127.849 65.6313 127.821 59.52 126.68 cv
63.1924 122.817 66.876 120.738 69.3071 120.611 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
94.877 155.738 mo
95.1084 157.677 95.1973 159.522 95.1172 161.207 cv
94.5659 173.138 85.4492 178.083 76.5562 179.14 cv
66.7637 178.82 62.436 171.92 61.3247 163.458 cv
72.0117 165.131 85.7944 164.353 94.877 155.738 cv
cp
.574731 .695186 .633936 .604669 cmyk
f
94.877 155.738 mo
85.7944 164.353 72.0117 165.131 61.3247 163.458 cv
60.7881 159.486 60.9727 155.157 61.6392 151.018 cv
71.5728 151.93 83.4922 150.981 92.4785 145.361 cv
93.6582 148.907 94.4775 152.459 94.877 155.738 cv
cp
0 .970642 .96051 0 cmyk
f
92.4785 145.361 mo
83.4922 150.981 71.5728 151.93 61.6392 151.018 cv
62.3911 146.255 63.7725 141.732 65.4224 138.227 cv
72.834 138.554 80.8423 137.72 87.7432 134.694 cv
89.6514 138.031 91.2539 141.69 92.4785 145.361 cv
cp
0 0 0 0 cmyk
f
87.7432 134.694 mo
80.8423 137.72 72.834 138.554 65.4224 138.227 cv
66.5361 135.873 67.7642 133.978 69.0176 132.78 cv
74.9932 127.052 80.5352 127.396 84.1836 129.337 cv
85.4609 130.986 86.6514 132.787 87.7432 134.694 cv
cp
0 .970642 .96051 0 cmyk
f
63.2271 164.387 mo
55.5049 163.423 49.0557 161.115 46.2983 159.309 cv
45.9995 159.112 45.918 158.705 46.1177 158.398 cv
46.3179 158.09 46.7241 158.001 47.0229 158.199 cv
53.1655 162.22 80.2603 169.077 94.8862 154.918 cv
95.1445 154.669 95.5537 154.681 95.8018 154.943 cv
96.0503 155.206 96.043 155.62 95.7856 155.87 cv
86.9023 164.477 73.8828 165.715 63.2271 164.387 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
27.8398 171.098 mo
25.2568 169.517 23.5327 166.905 23.1094 163.931 cv
22.2935 158.187 25.0493 148.641 31.8242 140.885 cv
31.6572 140.397 31.5454 139.923 31.4897 139.466 cv
31.3359 138.187 li
32.2734 137.304 li
35.1294 134.615 51.1636 123.732 58.8643 128.443 cv
59.3848 128.761 59.8594 129.148 60.2734 129.59 cv
64.1235 133.704 58.7925 141.092 53.1484 148.914 cv
52.2461 150.166 51.3789 151.367 50.6196 152.469 cv
49.7666 153.709 li
49.7666 153.709 48.1812 153.552 48.1367 153.546 cv
46.6982 156.097 45.7686 158.237 44.8662 160.317 cv
43.7012 162.998 42.603 165.528 40.6494 168.207 cv
36.9307 173.305 31.4043 173.281 27.8408 171.099 cv
27.8398 171.099 27.8398 171.099 27.8398 171.098 cv
cp
f
57.9282 131.039 mo
55.8535 129.27 47.3843 130.896 38.2432 138.244 cv
28.1777 146.334 24.8398 157.982 25.6343 163.571 cv
26.4653 169.416 34.0894 172.874 38.5884 166.705 cv
43.0894 160.535 42.6265 155.223 51.9219 143.481 cv
57.0327 137.024 60.3506 133.103 57.9282 131.039 cv
cp
.0250248 .567285 .998169 0 cmyk
f
58.3589 129.781 mo
55.186 127.838 46.2876 130.142 37.4453 137.25 cv
27.0205 145.628 23.5249 157.791 24.3726 163.751 cv
24.7422 166.348 26.2476 168.629 28.5049 170.012 cv
31.688 171.959 36.3599 171.925 39.6196 167.456 cv
41.4897 164.891 42.5117 162.537 43.6938 159.811 cv
45.4414 155.785 47.4214 151.221 52.9224 144.272 cv
53.6514 143.352 li
58.6768 137.017 61.9966 132.831 58.7549 130.067 cv
58.6343 129.964 58.4995 129.868 58.3589 129.781 cv
58.3589 129.781 li
cp
57.6929 130.869 mo
57.7783 130.921 57.8574 130.977 57.9282 131.039 cv
60.3506 133.103 57.0327 137.024 51.9219 143.481 cv
42.6265 155.223 43.0894 160.535 38.5884 166.705 cv
35.8608 170.445 31.9863 170.646 29.1714 168.923 cv
27.3428 167.804 25.9614 165.874 25.6343 163.571 cv
24.8398 157.982 28.1777 146.334 38.2432 138.244 cv
47.0713 131.148 55.2739 129.388 57.6929 130.869 cv
57.6929 130.869 li
cp
.75021 .679683 .670222 .90164 cmyk
f
38.2451 138.246 mo
47.3872 130.897 55.856 129.273 57.9248 131.039 cv
58.1567 131.229 58.332 131.447 58.457 131.682 cv
55.4277 130.963 47.4131 132.956 37.145 145.724 cv
24.8135 161.069 32.3081 170.837 37.9526 167.477 cv
33.4082 172.558 26.4248 169.151 25.6328 163.573 cv
24.8394 157.985 28.1802 146.336 38.2451 138.246 cv
cp
.101595 .727993 1 .0109865 cmyk
f
56.1167 140.098 mo
54.9917 141.918 53.6479 143.838 52.3159 145.705 cv
46.356 143.669 41.2656 138.621 39.5771 135.224 cv
41.5356 134.042 43.7847 132.858 46.0508 131.892 cv
48.042 134.745 51.7593 138.146 56.1167 140.098 cv
cp
0 0 0 0 cmyk
f
52.3159 145.705 mo
50.9712 147.59 49.6289 149.41 48.522 151.025 cv
43.3496 150.519 34.543 143.464 34.02 139.159 cv
35.0327 138.204 37.0693 136.73 39.5771 135.224 cv
41.2656 138.621 46.356 143.669 52.3159 145.705 cv
cp
0 .970642 .96051 0 cmyk
f
58.4106 131.334 mo
59.8921 132.919 58.4722 136.296 56.1167 140.098 cv
51.7593 138.146 48.042 134.745 46.0508 131.892 cv
50.9873 129.801 56.0229 128.788 58.4106 131.334 cv
cp
f
58.4106 131.334 mo
58.5332 131.46 58.6284 131.598 58.7021 131.753 cv
57.0269 131.217 53.4263 131.614 48.5566 134.832 cv
47.5586 133.84 46.71 132.833 46.0508 131.892 cv
50.9873 129.801 56.0229 128.788 58.4106 131.334 cv
cp
.132235 1 1 .0386358 cmyk
f
48.5566 134.832 mo
46.7896 135.993 44.8579 137.521 42.7876 139.501 cv
41.3286 138.011 40.2109 136.5 39.5771 135.224 cv
41.5356 134.042 43.7847 132.858 46.0508 131.892 cv
46.71 132.833 47.5586 133.84 48.5566 134.832 cv
cp
.0848402 .0876783 .0760204 0 cmyk
f
42.7876 139.501 mo
41.1909 141.038 39.5176 142.842 37.7642 144.958 cv
35.7173 142.978 34.2246 140.858 34.02 139.159 cv
35.0327 138.204 37.0693 136.73 39.5771 135.224 cv
40.2109 136.5 41.3286 138.011 42.7876 139.501 cv
cp
.132235 1 1 .0386358 cmyk
f
58.2002 129.531 mo
58.1992 129.531 li
51.5869 125.486 36.3198 135.246 33.1475 138.232 cv
32.8521 138.509 32.7065 138.911 32.7563 139.313 cv
33.1914 142.911 37.8076 147.253 41.9121 149.767 cv
43.5903 150.792 46.0762 152.064 48.394 152.292 cv
48.856 152.338 49.3062 152.129 49.5698 151.748 cv
50.3291 150.641 51.1968 149.44 52.1147 148.167 cv
57.209 141.107 62.4751 133.809 59.3428 130.461 cv
59.0073 130.104 58.623 129.79 58.2002 129.531 cv
58.2002 129.531 li
cp
57.5332 130.619 mo
57.856 130.815 58.1494 131.053 58.4116 131.333 cv
61.3237 134.445 53.0234 144.479 48.5186 151.023 cv
46.7959 150.854 44.6685 149.958 42.5781 148.679 cv
38.3975 146.121 34.3687 142.031 34.0215 139.16 cv
37.3594 136.017 51.8486 127.141 57.5332 130.619 cv
57.5332 130.619 li
cp
.75021 .679683 .670222 .90164 cmyk
f
73.2617 53.2339 mo
73.2612 53.2334 73.2583 53.2334 73.2583 53.2334 cv
67.3018 52.4966 58.2983 52.3433 49.23 55.7979 cv
40.0171 59.3076 32.9854 65.6616 28.3306 74.6826 cv
26.3716 78.481 25.1348 82.7949 24.6372 87.5513 cv
24.5762 87.5234 24.5137 87.4961 24.4507 87.4697 cv
21.7515 86.3101 18.7163 85.5151 15.4312 85.1089 cv
11.3594 84.605 6.97998 84.6973 2.41357 85.3838 cv
2.18555 85.4175 li
1.50586 85.5151 .894043 85.8838 .489746 86.439 cv
.0844727 86.9941 -.0791016 87.689 .0356445 88.3662 cv
1.40088 96.4438 6.26855 102.149 11.439 105.52 cv
11.3198 105.597 11.2012 105.676 11.083 105.755 cv
2.13818 111.747 1.09473 124.162 1.44775 128.44 cv
1.54736 129.651 2.48438 130.615 3.67383 130.761 cv
3.73535 130.769 3.79834 130.775 3.86133 130.778 cv
12.04 131.186 20.2627 129.443 26.3335 126.236 cv
26.0815 127.801 25.9707 129.39 26.1025 131.054 cv
26.5083 136.17 29.5654 139.574 34.2803 140.157 cv
39.8442 140.845 47.1348 137.068 49.6943 130.476 cv
52.5171 131.66 55.6123 132.462 58.9331 132.875 cv
61.4795 133.19 64.2124 133.28 67.0562 133.142 cv
78.6382 132.58 88.1245 130.303 95.2881 126.37 cv
96.375 127.067 97.6094 127.509 98.937 127.673 cv
102.183 128.075 105.766 126.822 108.766 124.233 cv
112.127 121.333 114.112 117.295 114.211 113.161 cv
114.388 105.724 109.131 95.2925 104.953 89.0332 cv
105.082 88.728 105.151 88.3979 105.152 88.0581 cv
105.22 75.269 98.6201 63.3257 88.3403 57.6313 cv
84.5996 55.5601 79.104 53.9575 73.2617 53.2339 cv
73.2617 53.2339 li
cp
f
30.4048 105.092 mo
33.3789 103.014 31.8481 93.4219 23.4453 89.8125 cv
14.4302 85.9404 4.14844 87.7109 2.5498 87.9414 cv
5.18799 103.542 22.5923 110.548 30.4048 105.092 cv
cp
0 .970642 .96051 0 cmyk
f
23.4419 89.8145 mo
31.8506 93.4248 33.3789 103.019 30.4072 105.091 cv
22.6924 110.475 5.66162 103.726 2.67188 88.5723 cv
5.23291 94.1826 12.1489 102.935 20.9985 97.9316 cv
24.4248 95.9922 23.5933 92.2573 21.9224 89.2246 cv
22.4312 89.3984 22.9375 89.5986 23.4419 89.8145 cv
cp
.132235 1 1 .0386358 cmyk
f
15.2739 86.3745 mo
11.3179 85.8848 7.05469 85.9751 2.60303 86.6445 cv
2.36816 86.6797 li
2.02783 86.7285 1.72217 86.9121 1.51953 87.1899 cv
1.31738 87.4678 1.23584 87.8154 1.29248 88.1538 cv
3.26367 99.8115 13.0479 106.993 21.6948 108.063 cv
25.3555 108.516 28.708 107.832 31.1343 106.137 cv
32.6021 105.113 33.2896 103.024 33.021 100.407 cv
32.6328 96.6104 30.0229 91.2505 23.9482 88.6416 cv
21.3579 87.5288 18.4399 86.7656 15.2739 86.3745 cv
15.2739 86.3745 li
cp
15.1182 87.6396 mo
17.8223 87.9746 20.6929 88.6304 23.4453 89.8125 cv
31.8481 93.4219 33.3789 103.014 30.4048 105.092 cv
28.1553 106.664 25.1099 107.201 21.8511 106.798 cv
13.7935 105.801 4.42822 99.0498 2.5498 87.9414 cv
3.66064 87.7808 8.96143 86.8779 15.1182 87.6396 cv
15.1182 87.6396 li
cp
.75021 .679683 .670222 .90164 cmyk
f
33.519 108.76 mo
31.8599 102.559 20.8521 102.28 12.5034 107.873 cv
4.40918 113.294 3.70361 124.77 3.98828 128.231 cv
19.4521 129.003 36.9751 121.671 33.519 108.76 cv
cp
0 .970642 .96051 0 cmyk
f
33.5166 108.756 mo
36.9722 121.671 19.4492 129.001 3.9917 128.228 cv
3.91699 127.379 3.90967 126.051 4.04834 124.45 cv
12.8335 123.421 22.5654 122.022 25.1694 114.893 cv
27.1782 109.386 24.1533 105.174 21.3667 104.229 cv
27.1982 103.135 32.417 104.637 33.5166 108.756 cv
cp
.132235 1 1 .0386358 cmyk
f
26.9648 102.73 mo
22.2393 102.145 16.4263 103.71 11.7935 106.813 cv
3.35938 112.463 2.38232 124.265 2.71826 128.335 cv
2.76758 128.942 3.23633 129.423 3.83154 129.497 cv
3.8623 129.5 3.89355 129.502 3.92529 129.504 cv
13.813 129.998 26.4219 127.239 32.3022 119.96 cv
35.0225 116.594 35.8691 112.607 34.751 108.431 cv
33.9175 105.316 31.0796 103.239 26.9648 102.73 cv
26.9648 102.73 li
cp
26.8091 103.995 mo
30.1904 104.414 32.7813 106.001 33.519 108.76 cv
36.9751 121.671 19.4521 129.003 3.98828 128.231 cv
3.70361 124.77 4.40918 113.294 12.5034 107.873 cv
17.1367 104.768 22.5889 103.473 26.8091 103.995 cv
26.8091 103.995 li
cp
.75021 .679683 .670222 .90164 cmyk
f
99.1338 85.7246 mo
103.358 89.9199 111.868 104.396 111.661 113.1 cv
111.415 123.423 96.9517 130.64 93.6099 119.867 cv
91.4736 112.981 94.7456 105.862 91.7847 95.6333 cv
88.7593 85.1846 94.6348 81.2573 99.1338 85.7246 cv
cp
.280522 .914061 1 .298253 cmyk
f
99.1294 85.7251 mo
103.355 89.9224 111.868 104.396 111.665 113.099 cv
111.517 119.135 106.507 124.118 101.707 125.047 cv
113.744 120.243 109.628 107.751 105.047 96.8037 cv
102.344 90.3447 99.4609 86.0225 97.0562 84.2778 cv
97.7554 84.5786 98.4585 85.0596 99.1294 85.7251 cv
cp
.215396 .82446 1 .119539 cmyk
f
95.9727 82.6694 mo
95.9727 82.6694 li
94.2461 82.4556 92.6567 83.0874 91.4971 84.4468 cv
89.4673 86.8276 89.126 91.0347 90.5596 95.9878 cv
92.106 101.327 91.8828 105.891 91.686 109.918 cv
91.5117 113.496 91.3472 116.875 92.3921 120.244 cv
93.5039 123.829 95.8804 126.021 99.085 126.417 cv
101.932 126.77 105.238 125.595 107.928 123.274 cv
111.021 120.604 112.846 116.908 112.936 113.131 cv
113.16 103.711 104.083 88.8433 100.032 84.8203 cv
98.7915 83.5889 97.3882 82.8447 95.9727 82.6694 cv
95.9727 82.6694 li
cp
95.8159 83.9351 mo
96.9072 84.0698 98.0591 84.6582 99.1338 85.7246 cv
103.358 89.9199 111.868 104.396 111.661 113.1 cv
111.492 120.191 104.614 125.817 99.2417 125.152 cv
96.7925 124.849 94.6563 123.239 93.6099 119.867 cv
91.4736 112.981 94.7456 105.862 91.7847 95.6333 cv
89.4814 87.6792 92.3364 83.5049 95.8159 83.9351 cv
95.8159 83.9351 li
cp
.75021 .679683 .670222 .90164 cmyk
f
32.5015 102.567 mo
34.5234 111.091 39.5752 131.92 66.9326 130.595 cv
94.2896 129.269 104.635 118.344 106.179 109.329 cv
107.62 100.908 103.812 99.8682 99.8721 82.4248 cv
94.2007 57.3135 68.7891 55.0259 52.3501 61.5562 cv
34.3022 68.7261 28.4209 85.3604 32.5015 102.567 cv
cp
.0250248 .567285 .998169 0 cmyk
f
83.2256 61.2822 mo
69.7188 58.3784 55.2158 63.4526 51.8213 84.5215 cv
49.5391 98.7397 54.2183 126.264 76.5742 129.646 cv
73.623 130.104 70.4136 130.426 66.9326 130.595 cv
39.5752 131.92 34.521 111.09 32.5015 102.567 cv
28.4209 85.3604 34.2988 68.7275 52.3501 61.5562 cv
61.5103 57.9189 73.4673 57.0181 83.2256 61.2822 cv
cp
.101595 .727993 1 .0109865 cmyk
f
73.8984 57.4751 mo
66.6558 56.5791 58.8364 57.6074 51.8794 60.3716 cv
34.5762 67.2451 26.6763 83.5259 31.2612 102.861 cv
33.1118 110.663 37.4448 128.933 59.0615 131.608 cv
61.5435 131.915 64.2124 132.003 66.9941 131.868 cv
79.6743 131.254 89.7461 128.578 96.9297 123.915 cv
102.766 120.126 106.497 115.023 107.436 109.543 cv
108.318 104.386 107.313 101.689 105.649 97.2197 cv
104.439 93.9712 102.782 89.521 101.116 82.144 cv
96.8096 63.0771 82.2144 58.5044 73.8984 57.4751 cv
73.8984 57.4751 li
cp
73.7417 58.7407 mo
85.4619 60.1909 96.3896 67.0068 99.8721 82.4248 cv
103.812 99.8682 107.62 100.908 106.179 109.329 cv
104.635 118.344 94.2896 129.269 66.9326 130.595 cv
64.1338 130.73 61.5703 130.633 59.2183 130.343 cv
38.5742 127.788 34.3159 110.219 32.5015 102.567 cv
28.4209 85.3604 34.3022 68.7261 52.3501 61.5562 cv
58.6953 59.0361 66.3735 57.8291 73.7417 58.7407 cv
73.7417 58.7407 li
cp
.75021 .679683 .670222 .90164 cmyk
f
41.5371 98.7603 mo
44.7363 103.781 49.8569 119.774 47.7412 128.219 cv
45.2319 138.237 29.5376 142.097 28.645 130.852 cv
28.0747 123.666 32.8311 117.44 32.1904 106.811 cv
31.5361 95.9526 38.1304 93.4141 41.5371 98.7603 cv
cp
.280522 .914061 1 .298253 cmyk
f
41.5371 98.7603 mo
44.7358 103.781 49.8574 119.771 47.7412 128.219 cv
46.522 133.088 42.2041 136.494 37.9678 137.433 cv
48.0771 133.879 46.4858 121.821 44.2383 110.982 cv
42.481 102.482 39.8345 97.1533 37.3569 96.0674 cv
38.8433 96.0288 40.375 96.9375 41.5371 98.7603 cv
cp
.215396 .82446 1 .119539 cmyk
f
38.0215 94.8203 mo
38.0215 94.8203 li
36.5249 94.6353 35.0439 95.1514 33.8496 96.2725 cv
31.6699 98.3198 30.6279 102.09 30.918 106.887 cv
31.2524 112.436 30.0313 116.84 28.9546 120.726 cv
27.9985 124.178 27.0942 127.438 27.374 130.954 cv
27.728 135.421 30.3682 138.388 34.4365 138.891 cv
39.9165 139.57 47.2368 135.481 48.978 128.53 cv
51.2676 119.389 45.6807 102.891 42.6123 98.0752 cv
41.4136 96.1938 39.7832 95.0386 38.0215 94.8203 cv
38.0215 94.8203 li
cp
37.8647 96.0859 mo
39.1875 96.2485 40.5073 97.1445 41.5371 98.7603 cv
44.7363 103.781 49.8569 119.774 47.7412 128.219 cv
46.1914 134.407 39.6089 138.247 34.5933 137.625 cv
31.4888 137.243 28.9863 135.152 28.645 130.852 cv
28.0747 123.666 32.8311 117.44 32.1904 106.811 cv
31.7339 99.2339 34.8076 95.7075 37.8647 96.0859 cv
37.8647 96.0859 li
cp
.75021 .679683 .670222 .90164 cmyk
f
31.083 113.454 mo
34.6929 108.628 71.895 80.1055 102.603 88.0449 cv
102.659 77.2031 97.3911 65.5596 87.1045 59.8623 cv
76.7285 54.1152 44.3047 49.2847 30.5972 75.8525 cv
23.3813 89.8369 28.6333 107.871 31.083 113.454 cv
cp
0 .970642 .96051 0 cmyk
f
101.41 78.9243 mo
102.22 81.9277 102.618 85.0171 102.602 88.0474 cv
98.9512 87.0986 95.21 86.6699 91.4429 86.6582 cv
96.5396 85.061 99.8604 82.5869 101.41 78.9243 cv
cp
.132235 1 1 .0386358 cmyk
f
50.6094 76.9375 mo
53.5181 87.7637 63.394 89.6963 73.8921 89.2314 cv
52.3584 95.2686 33.5913 110.093 31.0854 113.458 cv
28.6333 107.87 23.3789 89.833 30.6001 75.8491 cv
37.3618 62.7339 48.6831 57.2744 59.667 55.7896 cv
53.2476 59.5605 48.0356 67.3516 50.6094 76.9375 cv
cp
f
73.105 54.499 mo
67.2915 53.7798 58.5093 53.6284 49.6855 56.9883 cv
40.7739 60.3833 33.9707 66.5332 29.4644 75.2681 cv
20.6357 92.3794 29.8213 113.752 29.915 113.967 cv
30.0962 114.378 30.4805 114.665 30.9263 114.72 cv
30.9302 114.721 30.9336 114.721 30.937 114.721 cv
31.3877 114.772 31.8315 114.582 32.104 114.217 cv
35.29 109.958 67.8882 84.6768 96.9951 88.2788 cv
98.8008 88.502 100.58 88.8394 102.283 89.2793 cv
102.337 89.2935 102.392 89.3032 102.446 89.3101 cv
102.777 89.3511 103.113 89.2612 103.38 89.0552 cv
103.692 88.8154 103.875 88.4448 103.878 88.0513 cv
103.942 75.7212 97.6011 64.2178 87.7222 58.7471 cv
84.1724 56.7803 78.7075 55.1924 73.105 54.499 cv
73.105 54.499 li
cp
72.9478 55.7646 mo
78.9131 56.5024 83.998 58.1421 87.1045 59.8623 cv
97.3911 65.5596 102.659 77.2031 102.603 88.0449 cv
100.803 87.5796 98.9873 87.2402 97.1519 87.0132 cv
67.6572 83.3638 34.4814 108.911 31.083 113.454 cv
28.6333 107.871 23.3813 89.8369 30.5972 75.8525 cv
40.2007 57.2388 58.9888 54.0371 72.9478 55.7646 cv
72.9478 55.7646 li
cp
.75021 .679683 .670222 .90164 cmyk
f
100.025 109.167 mo
102.334 115.747 96.8291 123.668 87.7266 126.865 cv
78.6245 130.061 69.3726 127.318 67.0635 120.739 cv
64.7529 114.159 70.2598 106.236 79.3623 103.04 cv
88.4639 99.8438 97.7148 102.587 100.025 109.167 cv
cp
.00985733 .0806592 .600977 0 cmyk
f
89.395 102.744 mo
89.7646 104.743 87.6621 106.809 84.6997 107.355 cv
81.7373 107.901 79.0371 106.723 78.668 104.722 cv
78.2988 102.722 80.4009 100.657 83.3628 100.11 cv
86.3257 99.564 89.0264 100.743 89.395 102.744 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
88.665 102.878 mo
88.6294 102.684 88.5596 102.502 88.4756 102.327 cv
87.9971 103.598 86.4863 104.712 84.5454 105.069 cv
82.2725 105.489 80.188 104.73 79.5234 103.347 cv
79.3711 103.75 79.3213 104.17 79.3979 104.587 cv
79.7173 106.316 82.0493 107.333 84.6094 106.862 cv
87.168 106.389 88.9839 104.605 88.665 102.878 cv
cp
.636561 .700954 .654597 .746487 cmyk
f
70.5566 99.9238 mo
71.4893 103.115 70.0527 106.344 67.3496 107.132 cv
64.6455 107.921 61.6978 105.974 60.7661 102.78 cv
59.8345 99.5889 61.271 96.3623 63.9741 95.5728 cv
66.6777 94.7842 69.625 96.7305 70.5566 99.9238 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
69.8159 100.14 mo
69.7173 99.8022 69.5923 99.4805 69.4443 99.1787 cv
69.6055 101.432 68.4497 103.479 66.5117 104.044 cv
64.5029 104.63 62.3354 103.438 61.2964 101.314 cv
61.3257 101.726 61.3848 102.144 61.5068 102.564 cv
62.2974 105.275 64.7993 106.927 67.0942 106.258 cv
69.3882 105.589 70.6074 102.848 69.8159 100.14 cv
cp
.636561 .700954 .654597 .746487 cmyk
f
68.064 98.3765 mo
68.5122 99.5239 68.0737 100.766 67.082 101.154 cv
66.0923 101.542 64.9243 100.928 64.4756 99.7813 cv
64.0273 98.6338 64.4663 97.3911 65.457 97.0029 cv
66.4482 96.6152 67.6152 97.2295 68.064 98.3765 cv
cp
0 0 0 0 cmyk
f
57.73 94.6831 mo
60.499 94.2212 63.6943 93.75 67.7134 94.7607 cv
70.4004 95.437 70.7563 93.1787 68.3418 92.0708 cv
66.4043 91.1816 61.4712 91.5923 57.6958 93.584 cv
56.0854 94.4336 56.5874 94.8745 57.73 94.6831 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
98.8921 93.188 mo
99.7754 96.3447 98.3838 99.5488 95.7856 100.34 cv
93.1865 101.132 90.3638 99.2144 89.4819 96.0552 cv
88.5991 92.897 89.9907 89.6958 92.5894 88.9038 cv
95.1875 88.1118 98.0103 90.0283 98.8921 93.188 cv
cp
f
98.1997 93.5635 mo
98.105 93.2344 97.9854 92.9224 97.8423 92.6289 cv
97.9956 94.8193 96.8789 96.8105 95.0103 97.3613 cv
93.0728 97.9326 90.9844 96.7764 89.9839 94.7119 cv
90.0127 95.1138 90.0688 95.52 90.1865 95.9272 cv
90.9463 98.5615 93.3564 100.165 95.5693 99.5117 cv
97.7817 98.8594 98.9604 96.1943 98.1997 93.5635 cv
cp
.636561 .700954 .654597 .746487 cmyk
f
96.5547 91.645 mo
96.9927 92.8115 96.5537 94.0796 95.5737 94.4775 cv
94.5942 94.8784 93.4438 94.2568 93.0054 93.0903 cv
92.5669 91.9229 93.0054 90.6548 93.9849 90.2554 cv
94.9653 89.8574 96.1152 90.4785 96.5547 91.645 cv
cp
0 0 0 0 cmyk
f
95.8462 85.6992 mo
93.5474 86.8682 90.9351 88.2651 88.6719 91.248 cv
87.1597 93.2432 85.4614 91.7119 86.501 89.5371 cv
87.3359 87.791 91.167 85.3931 95.1699 84.8394 cv
96.8774 84.604 96.7949 85.2178 95.8462 85.6992 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
87.2314 102.215 mo
87.2168 102.84 86.4556 103.329 85.5303 103.307 cv
84.605 103.286 83.8667 102.763 83.8809 102.138 cv
83.8955 101.513 84.6572 101.023 85.582 101.045 cv
86.5073 101.066 87.2466 101.59 87.2314 102.215 cv
cp
0 0 0 0 cmyk
f
81.6353 115.901 mo
79.8911 115.685 78.3364 114.826 77.7251 113.167 cv
77.6035 112.837 77.7725 112.471 78.1025 112.35 cv
78.4331 112.225 78.7993 112.397 78.9214 112.727 cv
79.6851 114.798 82.5073 114.904 84.2178 114.47 cv
87.2026 113.713 88.4233 112.478 88.1777 110.468 cv
88.1348 110.12 88.3838 109.801 88.7329 109.758 cv
89.082 109.714 89.4004 109.964 89.4429 110.313 cv
89.9355 114.334 85.8682 115.367 84.5317 115.707 cv
83.5913 115.944 82.585 116.018 81.6353 115.901 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
80.7896 73.9102 mo
82.7451 73.1553 84.3823 70.7334 82.2095 66.9292 cv
80.0366 63.1255 73.5356 61.4077 69.3276 62.1128 cv
65.1191 62.8193 60.7231 65.9717 60.626 70.4785 cv
60.5396 74.4995 63.4312 76.3252 66.9429 76.5806 cv
67.042 78.5894 67.4023 79.6719 67.8389 79.6357 cv
68.5801 79.5752 71.4536 78.9395 72.0122 78.8159 cv
72.0283 78.0659 71.9902 76.3364 71.9902 76.3364 cv
72.937 78.4307 li
73.7935 78.4639 77.1104 77.6123 77.4595 77.4536 cv
77.3018 77.1045 76.6519 75.1675 76.6519 75.1675 cv
78.397 77.2134 li
79.27 77.1416 82.0518 76.3789 82.0518 76.3789 cv
82.4873 75.6973 80.7896 73.9102 80.7896 73.9102 cv
cp
0 0 0 0 cmyk
f
71.4399 69.7461 mo
71.7754 71.0835 71.0322 72.4229 69.7798 72.7363 cv
68.5278 73.0503 67.2407 72.2212 66.9053 70.8833 cv
66.5698 69.5454 67.3135 68.2065 68.5649 67.8926 cv
69.8179 67.5786 71.105 68.4087 71.4399 69.7461 cv
cp
0 .970642 .96051 0 cmyk
f
77.9707 68.0347 mo
78.5977 69.2617 78.2407 70.6982 77.1733 71.2437 cv
76.106 71.7905 74.7319 71.2373 74.1045 70.0088 cv
73.4771 68.7817 73.8345 67.3428 74.9019 66.7974 cv
75.9692 66.252 77.3433 66.8052 77.9707 68.0347 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 15.0.1
%%For: (WINDOWS) ()
%%Title: (Dogi_Pirate_Win.eps)
%%CreationDate: 7/26/2014 12:32 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBp7R8QJhLpW;iMDNj*`*e-$;DBMWFI8P'ulQB-!qB=orR;'BSP>WL*)2Cl,imU*`t^r&H99'0!:Pbq:"OrtA?*Zj0tLX//"
%Y&5mgcRs]]Y5[tC=]N[PV1k@PV.["&m,a/O55Vgq+#Y3&(X7#l(q_Vl='5Q*6VW_UGg!bJWl"WK=!tHnS'.;iYHL\Z+$[28k?$7W
%s#OqF?XM*m=oSQ<XCqQWF+/T2gT3DBTDT&je6a#1=(g]ce^a?3qIZVf#utSUl/oa/KY*lXr+t]6^-"Ej4l(JrpMWgA^4>**dP']d
%qXS6>Es%tfV^h%1qp#0>5@JL03_SUHOe`?`f;6kp7N[dM:#U^rPg3p6s5so^?d:jl>d&(kXtKb?$Z)a?>'#b]Cd+rr#C$kD"Noos
%j(tuG\%Y#?iNCK(<UfP@M]"GC5A/l%^m^=+Q_#LF1N^PNrh_/H+m#!+J,ZbQ-iBL[Z<>K!q>U6p4sT.sF>D#Ipc5`@W87W\k&]f5
%!r0g\`J='Xc%b@DKBWU<;"S,i74s=oUC3!%Sn4df]dcX)URp__S84\2A*LV=g`so&mq8-Ir]9qcc2)O'D=O:5^3Oen:RLT+8S2+g
%f]jPrcSsI*]0*\+aDjS%kMhu3e'0mK[(Um1^;d,_iIcXAMBCI%^MIcf\$+(qE@Lslh,D&$]m.6iI<5?a)DlBIqlmX/n`o#2UT]n2
%Ar%H]77h%jW`nOWAM^/V0Se(%hN)kR]-U4upOK's?(_(9G59`k"\`f?,SkmE\ir4KkZapjMZ;$_k#Ln/o!TQm@GfjV/u@_\IG952
%>=t(S2fJ%=IXHWlnakl=%)J610P`IJ\.'SYj^NYEL?E;R$NIR1a/o+8L6bjAY:RT+0V@hi#62-6e7KTtT4RdJTRaknr9J)d\+=H?
%j(2ES2m)U*Xmn0K="A"7(qdj*]Z.aFDDqbQ1BoMM:\Y_ZCKnHQD=Q2c`F%=7Y?A!sf@<K/\p_!'$W\dlM*&sfjrX%Kq,b4/Ia=)g
%idZ1jNXPmHAN2:[/cUQX_S:=)%LW6afEE7B1QDkCi\qhkrl(`O=PP_C$NJQ,nH2hP\F?I+;sjZmL-rknGg0uWFYZV>H%n/nP!OeO
%q,SP"%tM:<^#S9Sk@L[S&q8eN3(Eh(:%:XBaS@bVEVKPf__K;-1MHPq*$bI%D`C#%"8lprO&brk0>fO(?_0q\(BuMd!1t^M5b/]b
%P,[Io1@4Nd#+iVb8'_:1c?%V4akX<u)dadB]ESTh3/Rg6gNhlX1QE(Iian)73(AW1hi*'T)B9mT/m'_VM8@6Y?q_AY(8MPTUWt[<
%0N,t9Oh#&eF8m*Nr+$!QF^?Ca`lHoUbN/KS4?('jo?2<K(FioQcTMAdRon'r;;&.%^'APBea(hT!6_PJ`cP>c*Y[d]O%lqNrG2kC
%rG5l6"IsSG#DmP(\h$Y>LA=lH&piO:Q;f@28lP`2s3Il2kO8D"I_kD?_,^JaI[)4/p]'icWq^p@\YiO&<S./4s.<Xm_r(Fmr.<Z>
%$a0(#o4tntn,@fc-15@/4O,,Ljn\$,nr<[i0rB5c(TW6rY#][F=60M`ifA@jlIDWQYeFADW\d9J3;eL459a64l4s6,.&"V#Od9]j
%Z;oWnnug\'=]KdEQ[&ZDJS+Ej?/_u+HdfD\bZb:$kltGP`HdJ<lG[KA]n7YJF/u`eC]'g>,C6_B"0J](m?W%uD-%+XKl4\\iRJ(E
%am6To!A:VJ%<b6C-Bi(!7=52\'QBbn9C,NIi?O4:/W1<\7o6<'WBpT]#sOWHCrbE's&FuM6]AmU!AkR;@Ngf*+C&^OSL-d_%75Cq
%DS<&Rm$I/[%fic]AO//tQnhH1!a&a:X$pVDOQYRSpr4bXVO,dhMAXuGCn&%A!T]pb[Ad>@.KiUOkTtDhR(S0N)n]#p(FQAY"]r/N
%NtWX?iY)r,Lj;A68dW#D0MJ>oJ6'X[LF6M%[JUO]iEJ+U!tfM3]]4W`p?fNAQqDU0Ko!kgO=V8LM\JJ#GT^pX!"Q,"M9Jq1!LKch
%[hX?=bc[p**7Z5^BOYD+3+;n8pO\26@[=fq+U^gHI/o_E/7C7Z/`?h-02*rAFP\\[nEKEa:0FXUR2Z(F$d1jO.H!fu&gkD2[5<MT
%kI!fJ8X:H@0d.C'&G$ecOgSR=ids'F1_tZ3afoHFeEM]b<tM33n9D2mD6Sem9!NMh<7qo0j/AoG"f!ZWg^)d4[>tKHM+Gl>SK^Yl
%i\W5c_<V6](6*A$)1i>)#LtLa_FrZ98;nHm_>&Ou!Y;"#X_AXr_-0iMgFeUPi,uEdTUf7WON/t>Aa4Y3*F?[B\lqqnrJG&Fd],&]
%#3UV1-GfdE%,HZ7ZUbj`"a%@^@/s@SM0M+c!dGZ]Y'<BN!44WBA&>oJZKa\F*R:%XGuA<WG:NgFYIKIG(nqIIPZ]k<Wt;"O#qHKn
%m5p;h7N.W?GN]Rc770=/5)tOW/WF0u_u-u72K`$c=ppo8GRXb8M(4/1Opa`QU%H8?Us"$SNALYMHcXQ"8mCdT>cR9--BLm=5XLHq
%,o=p]W<B.j]W`9I2HZ:?#5H&P%J>6@Cq(!]b]GBK8<9<c$g0:@1U=<?_BBYuI5&$=nqN`oFL=\s^_@.7N@:NG!EZo8"GL9]OAqOQ
%A@SbI."H@#Kn4NQZ(]U?EY;9\GYp2N[0V@/<>od`9Z%M"bgaBQ`&9,n=Fm9R:]rb3e]@38gCekQY-0>606f;H'Z:9o:S>anTM6Wj
%_ep-N'NS=dDqJ_365bNSo0OLk_^eoZ3!`Lf^W;Cj%gYKE=Y$6<Ya/I/^K_m)0IpB1N9d_E)JY5hcOH9Nd27VBZ:Ko;\fr%.$3uk^
%&L]/5"ZXGc_fu+;/m)B+9I^;c=1%+'#Y<L6o-3OhK]BHK7dN736A83&/0e>!Oe>MQZIZZVoLeTp#rb&,a;7-+_,_.R9T:PPD]7W1
%N7BInclbpk8mXiE8J)RZWH*etk(r\$nTYf,+:nUqR\U169fOf8&9ia3iUkYlSKPs?-m5/"=[9udZbZ2T(H6=O`#jFdXt[Ia9;Hof
%5TKiJ#W6cl0*/NhTcq49M3@s(QJ?U.(d)MUNcL5*&lpn@TQ8CYN=[G)NB42(BH%S?Y^)rG,l9T`!g@/b03O<Q8^L.%&1(rDn/u,g
%KuFNlXC6ng+YBi'KJBWT5hr*1chMm]4gO?d8J-kKQ@XH2Zls;rj8rORH4M$6=PCQa0ZkeKJVDH<6>C(HJin"<9Va^UgGB1^/gD)u
%)hFkf`Y#YFSmES?ed2ruXqnU$'\5npfHZVI(ncZq7-efkaHSQdipg[@hDI/XA-7oa,>@#RNQ<VlcdB<=5nbqg+c$2=BC00IWZA6l
%RUVLD/RMn+_5+Xd:t^O@0+`jsirfIj.83@^"dAk]@HrjCF5G"%CEST2`.jYsWa`585\q;pJH<@lY?EXf0ocK7?_UXT>RpUF?qHW:
%FXYKYPlkRAV=R$>Qo"g&db'\,@&'gdUhH+4cCslfbQqk4WZoCG/8[nE=%p\9Q'F\l`0FGDNA9<;,*bgAEBYr+["J6RpbAHOIOp_&
%FG;kU(0h;:B*@WKZ>*WL`%kJb^ut6AFF0"RNnm-K2_7Vb6qG0RlEKo&L!'V8K")p;KibhJC]s.%J!1"?'@M29BE>SOnInIul\j9[
%L4G!u&Ej/B]d7Y9po,%!>#fr)j+@/%3j_i28EN?4K:\*/(#U3X=U<cBed7Je;P`$PXV6F';-HikJ^Q*2)7,3[.*7fckK1fRPUZ=!
%Uj8jJQO$0;27ALPqul6WP*ZReJMb$.Q]>A?<np0'YCLBjl!SfECjK[X;R]f2OEeprAgpZ`Brc&EMBEK<6G9XSA)Su8d51>K&Rh8$
%:T(#hQa1-<RK6#t\U;N!3,+a?la-X:6/&VM7Cme8:F?LF8;@jM=r'-#GBj8,hK$/mCMI$_e9U6r:+VQ@U<L"[9(<*'NPLp#MUZO8
%H^&al$7K9VeS*?b]>F/5)AM-j?4O!?X?t1k&/f44mP,k:JB00&//DD0U(HFYoi]d)E:a:u`2`i"1%[(=TGC4:pi8$%'E2"QM-5c`
%-H.27fd=TO=)&G4O>sPOD'>#R,bPB/]TD^<Vfu0DBc"jR"U"W2/]'$032SgV,'agR,%4V"/4j@R$iuYHWV^s7q&<oZI:@kcb;+L#
%Z`cusb"H'^\6q^-%7FZ@!msQ9R&VBa"_cO)9E06Z+?GcMmr$XUMOt9p;phpm((*<+ZpYfe)b%5r5gK9BW=:U-UqQD*_eKc\\sen%
%q\X0%AjQj0n.SXPJL@3UG_I,fEKJ,H;G<*!6?t29FqE)m$#-K_LXf>#71L\JpK03@B![Q\B/-#KXV.H9I+lr;O?-dr1dfh\`G0!V
%UlafN[o@V&)#@5d-s:\E!G^m^5)lJ6MgYjRLGGo\Ff!:mkimr4cQN:nA3j"B<Q<?s/7\!t*tC2)e-7XrD3\Eea-B-b2"Q"0">[d?
%b*Q\W8uT-a+^_R>;m,J;T]("3go'-jR6PF!Nj81Y`=mhi&IJR2ba^(Ub.9]%#<P^^/L"VZ_B8q5M+Ofb3=C<OMauE"KI]A*0=EBi
%'NJfh'*XrJ"l.m8$:d?*j'Tr%P*H,sC8kmj.5um$YZq`h(YZ\N#qr%W@cr)<#ltk,UJ,s1Y`B(cRVcF\DXm*^^HYq/St^khIVc2?
%ck$0(3IefY^,j%*`W#/;cu3h\2n'l8Z;6r>hL9eT2k40JKDFVeDu$m-mJ#eQnDdU%=199c^3k.to#9ebl.++LfoObN'=`)Vh9Z,7
%3P"rpp:7<pTAJ@ph/)6>ZO^EudF@H/ID)'=YAcROL&^&hs'tJ(Cu/H'?hai8G'WoXc2#nFTOCp.^-%tba85YMR)Zm*?XKt>BCpgl
%qt8Y"iKlD%bI?p*7Q%fgrqHKo7lSgQSO`%V+S][#UXhBmB?g87o(8\mS\K>/c]r"/I.R6ScWB:B+"plO@?(.HZ?J6slc\`L\XV3[
%+5bCn]Xg/uJD^h%:O\J1DtooVH&0(WkQ125iATPqcd0pd\R'c1Is*TsrkS!j6!NatKgd?loq<bQ5IlRBml69h+J@V_?(Snb7.i\'
%XtDnGaPH4-qt12q`[b-,Q+l)6/J.0.#et\nRlmUjXLS`mq<E9SH3Of9Y<YJ,Va-u[B$8Y12B8"f%iMC<-*qF=SA'C@T.aOsF)=`h
%ThhJ9dAO&qcrla[bKLZS_+uO2dt6jaWX@!nBp$;gI.l7Jk5'oR$T^51k%<&q9H'Bl>;Ku.Am:_#ZQbg:,f01.D!LC$2:m5'P+ECa
%g9KYZqXpZ?ia+JMO6qP'>EJX7c.1qB#E3krrVP8$QQ'%iLrDa3(nt)X4>)gQb>JO1@aO3CTCS`##mmY+X.7Nf.<G,X^k]Qr(`O.P
%Dj#FrqcDu:#el:9Wl?l<ZY5YA!a8+Fk&&M?+1#jSG(E9[,$e`;Hr2FkQE(eo!\VJpMoBG!/CS1=ba69]`71,,QK>DUeki"o-ub$&
%^K?%>P!DlD;Hkn)pc#*H\LiO6$idthiG.uBWm$cnhI47OnL<\iL:;hc:eqkZ-g2fKXJ%i/<"/C:91];HL]s%`7YW4CU7`dT"Cu@#
%98YS-i#j:O^&Ws+J4i?#d811#<Xph,!-0M:mg5;'Kb)1m./p.gQam,VQV]NS]E$%9BZGAnU.r`<Qo$<Acr##rg]3L[%E6,APu';_
%ZgoGY;CF6Ts,1MIJYK*as!_:U=7WbH:JUq&e4*38jn,[JDqb1$"AD"i^U^t6n&atSbWZ3%>d*L$GQX$Dn94m8`_QT>\q\ORD<P9U
%-+s]5>k+B4>La%oc-i]O]eGF[%9c!c>oHhPVD($/*uV^WKf$pt0Sp0^[oH]kn?/c(MQZNMW3RnTOp\RGR%acb?C0#(=dBtl:/PW"
%!aQA^1cTocXu.UTg?;EN:i`,l6n:MnQro`Q\pt"D#CL*UfH`nK06+kNB`jF>@J,a74j@!0!)](rS9ju4J8MSQX0OK217dN0RUqo0
%&jWZ9+A/-S0KCJ^i*Cp9Q\3SJbH(bU$@iJM'Hj.N/dRjk^nnHC5uk!3k\,PX_M:bccrhNLP-5\;rUL-k[/jC`(@4.M.]jE$C.7V9
%"LSds'[$ZE'&]&XgerZm!k>@/(PS^7;F/@4+o%=+'*MaR>!Y`%!_\I1Le,Ig/1i]"Ju:(4/94jA5ci$])F1\<f-Mt'7,lq;'d9&F
%5V0cp"d!"laOUVs&2$Q^VTI;G!o+D48./O9\53SD>>YW)#,E;H5dY4`j.].\"ChL$32&p!!c+&Xs*MIj<f'^b9I#?W/;Q&8<@EYA
%UdPB*rR\FE$X@&GRMo?k)Jr]/$+N<Pd*oSI?m%G`%7]gup+%8&4GP6C45kL<Q?&?9_JkkYS.c"2@IY8u!3d6sDZKVPi19u1'7fr]
%n<r7;$/2A4FURtK>O2OK"o'R!nBsW?OB01;!$[(M:)o3s#A&QE6CJJ*_AXJ49BqDO!ct$/o&pmspn56D<af7IUg)!M=4/bK@R<m0
%0$>hX0j%U10YXtsROtAm;G:2c7K9LD;T^R[%i&c_fM_8l-/2<K[b/!VG4B4<%*U1d#iW5qnH(@@1lE5Z1#fJC\q*8u-m[%H?oooR
%^j?c='"AK[)6=+>l'cFX(!n-lFK'h6dfPe<P":fKg)t$Yj[OVa_`FiKF!0pba8rssb-usG_rIFf]JRrc;o:*85UV[t)@dki$G&K+
%$3Cro:;OMr7Y-Z\9>aq'qJ22'?jI!7k%1fl#uDN_#*^9`7Ze3rU?C`G6i,XNV<?d8'hk>GPANd:Tn!M"k*J%s9cUVG:'0G*b897I
%3AHa4kYb12)0o!aHjJ@@na;,of-llc#b_t&q$d%$6+dX9]kC*AJ`_M?!Se1g0U*7W0bjbTU^.s+-L%6K=ec1if`L8?e4Va$4J0d@
%--rB,Zab*5R(:nNB]^5$24?=m0pi&%?T_O#2cD0OP+<bf+.f$gS!i'VMNJd%q81F5Ec[r14>\euFp9],rQ7DIiQa,iLdN7)]P@c<
%Q%Lk[\TAC#*Gh!n.mqhm6pX">U9$kjAnL^ndV9O,n1N'?RMG''WRW[Zkno/^N#)3FOu*Uo\d%Xn:"k=FIA:r]L'fdJ5S7M6%Fd48
%1om=)_c!]dALgudkYJ_(Ku@sFYANd>+mt5..2L0^j=p-S"gV7Qneas!,*OSb,8VVl2:rVbAsJS)=?6Q;'sKV#\19)'/P1[c)6G&"
%(2p3DP/T:V6kUCNe.p1Z95"cSGIS2bQq1nYQ-b\W?'$JhU1hm$=VXJ?.EZ6FiHj1YL/,$b#,;Z=Z\2mG^tY/#1II=.$!:J8#sj]4
%YThc%Q$#R':L6S<("5X[["T`q)_6[]>(J!%71pS?D@9BKi;*":a>NP#Q/cjDeLg<i`c@jnJE8d)!X/PT<gFsZ_sn])-2oQ=Q5mL'
%q+2?AOOWe0s4>F?M;p&as%ar-W.D_5".G("rr"@TUM(?%NP?b6e-*8"6YI[fn.)Jn&=Nl,[t?.oKI4RYfKg5o65+nkm%B6JBqj)C
%O:GF)AEd'l[ATgqZ]<:VG<mfpC9=9I\Ib`S5dM[cJ\5/9$X8ord&O<jJfcX/&jeRlN@8mD<#Q.GIobl;&SsI4fW(K92I$%q]=3Yk
%,@p2WZGL(;VW%[,SJ3lcO^quSaiVDQKp6P^V6IY4+tgZbM)>g`5))#q5`9I>@11?&$GfD@;HqeF6fcGEG`[hsR0g5uKk6ahm>BV'
%?G>W*Vn+1dUZC7ZZ%oTLCjXQR'OW$0@_&754,Xt+d%^P@hbfiPFSWDmM?.J>V&+P/W_5'sAcPOCVA`,e6HUIY,F#.,N\h.9"(WjX
%+an&_Q=mfBXWkAN7WLa+b-`?((m5^S94qA8?'6LmV(cIlgsen=/<^blVc]pPj^(=J2O8e2/*D/f7jOdq!]`=&jQ)\dFoQn_:)7iS
%84O'R;TEY'J3OFV((T3am%RFaV1H$O.jI<;/2+6g+;unK`2kVM`'IS:lPf*`XS[q26;e4_/JUi7[?Ya!e2%CH@RW1([%*q0+!sTU
%1&n]5@($5SB*VJ_hV+,<bLT[1mAd.N;3t<=Xf]PR,Z;E=P"3WS]!>3^9;!ha(0:!*J^c,(VjB>6g14>"FN;tTRbK+4=O-9UR'D=D
%8\Y]\9Th'Np1LHYWj(&&Du13+<97po=_O(Pq%1.PcAV*nV:[+@G!A^L@7J\:ZO6mWK>R0pml(g8J[-VjQ1H+LXVYF)p_\([Rf!K"
%j*6j\/;SL9><XK@1NT.B<;<Nc3+)ceB0#M!Gop51Z"rZ\i53.?Zp"dKL%A%"+s2o%,.1_ajU=[1kH@uKM5.JM$\$XWK4,%,\W@L-
%(p0plTs3AWnP<[j&lN&.$T0r4M(U`tPPYdZYDAD0k't!&-^GgoKbi^;h>Fn*s#UB"!OT@0K%MZ)Cm/'#[lYk.Y/E/iJ#?'</Zcn5
%&o_]!dtL>g<YA,tr)m,PJ_18oaoo?jq/U1$#)T`+Ue[((SGZJLqa'6f`FU/6_RbEn)bPi[-FDVpp'_k_,TGq"'^t2$Go0WLF!UN,
%OdB!W]eko<qXU3$GS/4SrZsQ[S4tq$"Ej1l'[LB.]p[T#0iOf/88j=$/3q2tpk\YF.E-mPJbM7!pCUI]o,-I@JM*"J'J3b[X[3qa
%=s)*rde]%0k<tA.lU1NmG"^?]fOC84*64AfRX>N'F\?2_.)E02&oEi?Q/,L%4\Dh.ZF!ZRQ3\\WCWLcVi^0a2Z/lRCe,n\f[$IA<
%L0RE9?a-hB_Nqli,a0P*T84*tq\Y=c3J+[DIi%I2ABuO61[D/RcXgfRRDsP2>EZKm_J64QF34DXPcX-bH"u#:RTf0Zpec%-jGjSi
%2sjXCDDa]Ymd@;#IF/h@<RDphLP@inl6O%>^/A`2?l>sQC^;F*/Ziki"a5R9g(>6=7ptYmfZ(>,N3cNs-&*ai"FS&\#br67C17W]
%#nO;`iK^g#ZYlE;h8!1-5p*%^h,sWkg:\6s.s#@p2@eKG/?R0$3U;:+Gae^)=A*$Z8jtdmpfhV3$X6_'=BH"u4L[=BAtgBO"bJFk
%MJ*19=s:DkTH64rGJ$DS394*0IM_Ou!;8[9\Wag%-Z@VfMRR!J?=]++Mq!hOMQB\9jV:u6@h@Cg[)F'8.T)sOI8Z7U8XSM9:C0oJ
%@`=LE%`krEoYcK_%9&_DcLV\2(+Dl_Z>r>(VgsX=Q?k)iG#I*J7?di;!CfOh'NK^sYU1EIgb0+GDp1,?pqWtKo3lci?!Z(f"^:Qp
%;86r=_[ZJ0fV\s+pAKBnr.8NRM>W@[UAq[H=5!=_EZ+M'&qq5VgC-:#J8JYd:NTsur4dfD33WN<SE<j6s+;X_<c3<pMHm>8lX:A)
%6L8"!a]k'O<(u@S#e^RNT7V*p?0kKt%?GTnTPbD:+e#"t'j0'$D3+?QdJ-TYq%<K?8Floj*63P2%C"l*&3Z+461Hh:/h#Erl[p0i
%;j4t\[6iFP75JK1:p`U@%n/i"*DrOu=AK&p9b@dH_nb!#k_l/iVX1q(=sKm)E)sq(a_$Nl2%/M$jWq0u,Vqg!T&((r6LeM-"*;*l
%7u)&J(e9BFclrI712%>G\4%P25m9/tLKamH7NAcA4PV,g@tAqaJ__)m8Ak6+!LYoYW8:FFS972b']bJ,nkUYZ:)8=PL-f.ki`8I[
%<ttY?_H[8Oe[u6@]/!^T0P*lamZL/B?#WkRK=cAbMt:mV@LjB"A?e'Gbc>bW?5@raiY+!Ce-1<'BTe&P[)??f'#=uN3DMUq*%`o/
%P(PAQ5Vt1Gq&#1r!3%.M+!X10'"a:#Z=.sF%1HHE;ufl@<+&,P--g+rfI2u/UQBQoLi?Z4X,iZsiKRU7*%QbGImXSbR6T,jN83AO
%=XFEe9q4"%,@Zg?`O-%>E#0L?CRl?EPZfrm)@f*qe%,\KhpRtg`R*L$g7reIs,r-B>$UQp?Kp/M\AZu-gds)P^\b=]cnf4R#u!5;
%mcYQr6?P@'"a_rmP/8i6r<BER?AT%/KZVMgG5)GDQCpn[c-o^`BD4VHlHBF;VW8Lh'X2:S[s]od"T.r1#.qaA<r%?;%.\#\QJ[Ef
%G"mi`jh_?!Xdp$=D[r$9.Ro:f9%8FoB5Ol(#R:`8D)dWc+YgJNl;<Z^<4K/9)d$=]\fd(f-q&/Ce,r^NMS]l];2j"YflEa&6c"R9
%d0-6KW=-+>iqeF1N^2).R$cWYckW[,%L0%kp#fI!"Bu4;AOC/OP2/)bBLt[TR),NYUiFBc<4t(CD_Z<M>qfkV9GOQ!JjM5.Re`JP
%1']4#BQ?BM<Wpm;+GaWfJgdfHHJ?"2c%=SY6BGo<?6Yq.qC'ASeqIgYTI)E^TRPrgCE,FCFO*fI&UY/">pbBK?J4h+gbV6(?)u%'
%0&`63aB,m%M4l'(a/G52JE7GtCAFM*&fI;a<6GLm!5:ZhW0RrdJ2R-JTisW.!V#hT6FD36(9Fd'Tis`YjcG)&;]QfX]`J@RX.i%-
%':0mm3[uES&FV8h-rO;D<9gD=S^R@$:8^N[QCSXkj?*3b4?Rq@.-k5C<:Zt%SYDlWqEi&=eL;gpecQoq;D-elLuKor(YG$+9\)0O
%[4YR)ksc&ig+d.kCpn;2PeM,+XG"nPaP4]XZk>crZJgmG4,7E_CI",7=uIUG:ouT%&e0rL=p_?C_kM=J#=oSK,@Bi^N%LO'O[cig
%>=Dr^J6O`jC>rnHFt8-Q%EZKq)sk*\@8'@W.0V54`$78N<s!@lB:*L?3:=YO-TQh\i+N46`DDCJ8&B<n5SpCq0DK"P;/_E8M;7VZ
%r&P4Un&*/A/LI=0N78A!%ti:t"4;!b;30Re-D;USNcd0.hI:(sHZ?\TDDR\s,Km26=BX7ZC`J@5I?a0/Wr%Fk^8Um67A&-.RR03N
%1nrb@WnM?^)NmUt<Tb$Yn/@T`8<Q=TSgCnC<T#C])O4OWI>N3lOKk:DA4tC72Dh+>V+JhF,tWXs7+mm5o#7EATq8dm-6m4,.0rKa
%']-AEH%T[gf$8&*F"Pg1(!%JU7JnSCi699tS-@jpWPr$UI$1]HO7d]f-$RK_*4)p:^D;$XG#r[1)=K'J*Q:R#(<r.Ch-%mo6@2&B
%?uKUUS4E)Uj$o1#!Z?F'\5=N85XqA"DA372=J@lF1kA?1GCjpW^NY:%?9!E]pS!VBc"pbB%LQ#sMr$(DgA7!KSLCho`g.>tZE1[%
%K&Xj2p>64BU!]X>0re7"j1j73nL%8Vb88_D;Ho8^4T6$bg1=4]SPqUo6g`ap"Fjjfb-%Wp@gPeP2cH>_3JJ=9A.&&\j\A7eFth3-
%7N:`>gSuT'O/B3hF2W.>ntl#HBC%2ToVor.^9h5;gu<EMr[dc&1[_JC]G=ka`KA#`[q`q>?HfaS(-TWgCtZF"Mk[Zg`("]6`\32$
%!/)^,<YO$T44'PolNt4u0jF.PLG9/C),01)gW(;rQ9iV?D&J`94q2eL)B4gr=Oou^L1l+5(dhjPAO4>Xb'HHQW*W:WTbjSgm2":0
%?'3RmO9'ml2(2WQA5bWH4\XR^ZBI".M]>-+=1O5`3JI_iDI[fN).jGgdj`Y<s42NW>Mt-#/%<,f5c9*.B]XCr$3iIS,d_U()[0c`
%*B%tO>N9,/U%APS%4-,\%6DT?(;8c5Pm[h]":(>(>Y/bQT5<0F3_I)de8CHDG$6"p@\Xt#Ng8:#id$Ej@b'&s,q0"ZmBW!6FIYh'
%dm7h#hJgAjHYJgf7R=m>"g^@-BnKnN)erBl65%L8=%ir),nZD1=;#V1oiFL);eL_2]%B'57(;K`Xk-\\1fi12F)(r+OPWT5X(\RK
%>(`8Y+GO<<c'%&k'Eqn>cl*UOE8FV0MP4]q7HhQja8'XbdjX.nOuRh]@2_._3Q;D9bfg]3As)fM[r6At@K`/N,!S]7=J#c(f\HfF
%q`=TQPjLXJ;G*Y%h7f3E?LL_tr@5'BV4pf=d$(20J8<bhikleMQFr*Fi3hYR?:PLtA/cl?_2?6e.;%Xh8,CY3TOQr5PtOVQJAI@E
%&Z8=$M4WpeN[01aRZgIEZ6<ehDH8ZcN07U:0bbVWd%2Bj:J>J6+C`n9-Id!b@KA"#"t?F&opUJe.\bE%KatLY]`lS>A5Rpo$_m;/
%@<tAl^EJ!f&4XZaY66+/Ueq^-apIqk]MZ=%m+q3gT$$UDp'%^.W!Ri?D;[cb8786Aa53_jpIn0LQ,%Si6'UB`P"dPhdG!"PZAAWl
%SBm/']X3u*01(B2^(l?-5&H\AJ-@G/LannuWX>h#G+3"VR)YUX.\bjDf-:=U(SZq7,_V2Y-oB2)RS.`aZP_oCe#`9E.5Oe2i:Y*E
%a0#^618;&oVT(s:+rXWe&\fXB<=uqZ3s9pHmh_9>HL\_C"?n=T[`V0n`,DlaIVgan@iu_jE[FWD_SC$M_R=NoJc.5VP!!0W%/&OM
%K4T#NkL0XYOPfLuK4Tk*5A@>1Gm$S@b61;*g'1W4V<_,0UCqo!,&[XeT\,kKq`;<lfM`DueLMTk-!ln?#:B/jZr-)aFooDhZrhPM
%6=$cl)3rk7'RQU2%7,p/>8@%@FsiN2h6)>/N'+V^PJsnl-H6psI#Ln`_?%'&(!9cP?mf8o3*HU_A3XBk!X6'P$;&=s@&+@\6B2eT
%oMM0(T`o^S_O.%>,q[IrW>(+$g47$[jm/0>.pVSS+#_N2ENqnE?75i/)'L1-)7hLh8O3O,,]AsLLrtDk17ek;$g)acq9n50j/h?q
%=4T;ZQm3FlfHBe"r:FE5\_FA8],"p9=(r'2q3##kZMdJH5LJ@[p4O3LPpC7.=W6X&p\WIh@(1I[5Q<55bC2=f/3k%<Y\-ZE;.^5R
%YZ%[0!i0^][QDX?B6U&+1+J0[G&EY2PYVc"Z9`e&GaRRP.r61b6AOJa.kdaUk9Sb^`'.B4#[=gPoSW?(+m[T04KNSV)0r\i9?_Fu
%mW`t,]-BMIn&u*qrga_7/P&"5T;-W*c&;!6^h:)e(??2nGKK_&ToZM6;>)0`DMP"Eh&'d"%)]:pgPUYL[N;T;r@5j:3Qp4gk%fgB
%knmR?HmoHDJd7\t3PLfF37YMuFr4Fub$c)A@EG:q\4gXkb6H%Ue-tHgd,[)PL<DkC`k'5hZ?%\SmSpP?;@qhqDRiRl@YZ.a6dD*5
%HC<keJiL=O)9Nf+k4?_qj=X,C5"3aHLD^emPl38Z.H`M0@91-s%9#SA+;%0n2e#Lt=u:\t7o$A28Ii;-FVJkF^+^+>@5GSnKGkCM
%Z)WPH^H0$3qhi7J,d9g+MkY#oet+?QQ3nF=,[j/OT^a?Ijan&PkOMeF\\.K>NW\fh/P)u77[i1_-L9h-:KNY"/(i5`jZK2Ag2S1;
%riW-@"US9g1^`+P#C76b0c^0I)upV)J5E&T%s_"^el`Qu1)'qu2%ToQ?n`G9bsiZ]1)LK6#DBl484^g0:e5,#F$UsJ^9RRueqjj7
%7-,lP/(#K:mpXkc.L96dC9B*.%g+7dciX$`Hn]+t+f7r>>FT\5k]JB6P``g.l;D)t[l0JucY".5Z)>CbC,'W%gn1ONqV]g^i5;#$
%?0H!>2[L27NfKqlGI*1l3+S\RR_YSe;m:1A3A!\@#C`)o*4`teWJL%=4UjMGO0[%>]FLW(V].cr3.M,6J>fe+@e5/uRNVNGM:^Mu
%XXRa!O]85S.Wu@2g--kRB6QeXh@7HP--Os_q78Gf_M1'ATS%nYKY\-NJW:+`E'Y"t1<66W_J%XW<L45G-s^jG8^#Wg@1X%WOZ55=
%"[g)<'g^h2fc;:$[\?.qX:u(r7bl7#670T$`c%4r@b(V)AnbD+B.V8-"Aa]ELh/=M5k)5(KuFA7#TnZ&MF%j_=f$C:F@ojZ*<nG*
%\0la&@I+Xs`N6)#GJ*)^`&j$&lp9Wq!0u;b]s)2N`'.?c/6gO,?\ttH"!G79<%OiNeX-"+r(0HA@njO?K.[.MRn<@*q2d!sl<X\N
%*?bK.5Au;X):5\4V7-[:ghfF`?4@PIDF8G?KCqugkN39qrI3d#k`C]t1iRW.,WsNU&'YCN"%d)IaU.#1!5^i`2J\#iip&l3!907-
%bXB!GI8E2s/-sDcU)oIQfgX-QVj2B5B9ju;oU@N8@/t#'\O5-=IT;VlZ*a_M7DB/fG9e?:p*jST_?eT*U.*E3[br`C=^VX/f!3S:
%QFKa!T:9QZfFL9?ZAD/m8@I!(eP=*t>5#&"cc`J^r&[)hUL\8,S;iFL$P-BoS5m_dV)$37P=:e6I&dEChR[?`$Js.([s9E8QWi&^
%>YAi_CF)'&[7:sBN@JUHb2GN>gm7LBeW_]l0g2F[8ng1$]#N0l_WG>o$je_l?m&!+RH?KX`IbtO;]EtmfR7FC[gJ#H1,bVUACr>9
%2N,T;8b<lP4DV)iBRDD.4A%ppNq-Jo\\9B9c;7h86dFtfdBVbUDTSk/&ZHtqaa0^u-8$!b*5"Ag]0dMJ,c=2l6>S-@X)AT(fb@sV
%YAC;qdKr7ojpc%,CR1[<)+0\m?%afA@i(A.`oROnXkDhadcBt;oo]Fgc4e'h9hJkh'k@WuG3g`"CDS6cfGl&8Hmm*OcEWSUDAu&r
%0G*`/15*/SRc:hs3?5o"3sIH"R#kBoXU[$O1,oQ[&>%94^E^t[Y]*@YDPlWflmP&IK/b.2_<_V6PeCMiS<Ms(,d#h4fRrN":B->q
%2j@&F&)<FSSOLHaU7T9D-MMNj,J3WSZ$)reVpV0lW:)\Y[h6/MLKm?%cD)uZUMUL:@2Di&6k\*ZTL)@U,PIWb+ug?S-I'f2[@&j0
%ZYds_WL:+M94qfjf81thAMsckSd%][4`.fYG2)'2/<X.9c@H%0:Y*d`8NC&dGc8V<hXVp@X'*;NY,`6j"$RPc%?>A/k,QMOkWHB\
%gs/]M$T)1@nj-U7qarkqc6UPG*.t52i*rhi=ES3Er'rU7OR\fc=sj&ta)>mG.bl^s7p8&)DV-;.W.tR01]X*pm%H7-4[f)-5T4VD
%E;fm=WK+Is:'sOH$3$=`FDqV&%cUYGM2uD*+dE&(:9i-5/nfXfJtO44ns%F%XAf4mD%#Sj<FlH+a0bCCGbjpDB`)B!@9\",bfSuS
%7+*I%*8BOQoe<"N79)Nc%rINc_kI4;Jo1ek65+4*UFMAb,CmBV<?\@f79.`&@4kI<)?T.J7'.hMlk,Tp]FcECa'uVsjmg^FF-Oe<
%#WfE!Vnf;Hg&d*?gT4BFFC_`4mSg4f1C)>%8J_B9Gg@%8^H]@.FnPob?(^0!ZJjE'JqiAP=g)*)%th,AcCO`BB:NpUZg:J-Oj,!m
%95Lr/7)5ll9=>!q"3e:j`)Im7c3nEj:c?T?eS@nmk`9^c\U>fmh-&`uE8Ul$.qeP$SA.XU,&9/g_8\g^>A:ul[.,JHNbcto#@WT-
%L(k`APJha26=3XBO2Rp5fRkG>^%?\BZj02ikN^-@e-*U/iF+@pK3[u`K3ZQMK3Ytm](dLUjA6YBYY/rJMb>YZh6Jf#Dc:L+4[Y8h
%lhE<5GqtU42N5bEFKmG8`T;_L2Ah-8;$n8?Db+I"B`6M:Te&d/'CV;!`:+!P8a)#taD,P<$$jg$GR!2WAeSUZYti_Uf;*AoUj=XB
%%*J%h8mPO*#F1N+TVQbs@tAAHRIh+iF>K7?)\lac0.!U8P$K?gV)=K9Uq89Qp8]`\'JJlj=kW"Ffp@u7SQVCjJnqu2V/aV<QZe_H
%asQ%AjCh[Q!RU8F_QLI*8;A037$]V1lmW3`=5K*`/GNZVX_Al7Z?arIaTkJD]ndJ"nSYNFm@J',:R%RO:RZGhnIDJ8m;1LiB>M-g
%?G:ARY-+6EG'&G@0'DR.p+JCL(XNKWo#d`@P"XtsC3ob&LNZ8CPd6P?>VargH`FDB1.Wq]'?^mPP2r^.0\bQ[F^Z?%G'%hO'OPbL
%On]c7+(alH;K?)92J2efF#IcFDOU[]^Ck2=>e0'>N^&jIFGWAO=S1<9U`1,:/ql>^lVJeU__Ul,[hlOFE#UG'YqaNm'4[eY\4/uT
%lR4i$'("cJihL_3qY`8%rCZL\n::'^7Z)P7H]mD!:=<IQ0fsSXLR%gJ'I18dE3oU(*E=#9Rk]*K'ZJG8csRAP(ILP0*Pt^k;o$?h
%=1d+bJij]$`eIS7?nUAHLqe@#Xp8sX=!CT*J!,O\78ZWhR@8bePg+6$_QOGlkag=^[LQ!!<=5*8PNHrl-lP@k("Qu'1fd0\C$><'
%o:?Tfh_$S6(Rrn,0=GVm:p;">Knj7a?iMWnRd.h0#18pImE^VQ5$ru!4.T>Rm`OMG$hl9*5a$[pMG>:J$d8$BXD4*m8(.*mgXX]F
%pir9Z4K?)Igrc0RWl&8Fb93f5&"JqC\_H--ZS[P'A#ElTHR=*][mlr$LC.=QEV.p>3/EruLXN"cEQ8U%$0k3>b=BO7X6_/b?.+dk
%6MPE_&!t&4--'st.;9PMcru%'_glNpVi2:AE:C7<?t\P\d-bgD#EegYm#%Us-HO6Zg(Y`.7Qtj;"M+<_BK>!W#:%d8-QU:pZBI2j
%lk]W)US@qhU#GOXXl6O$=DOX<93^S.[0O7-m_/QAEhCRrf@e("gld!+c(lb0d0\BJq9\PP&t<H'O7Jr(ZB2]S4`4nn42YkH6r*Au
%oZ10HiLZXj7Z?\k-0du6%E/sjBHi?6$5897YscLW7%IF(8(tQ;Adt8a($&@3cK42Pc%N'2#4el*Al&#4G<ACA?,:3?ba$Zm^N\5s
%l1EXMI-9j1W?!<L=$Y8uMMuq[,Wdq]P,)L'?\QK_1gV%B`Ftr#A<(24)DL,?[:3EL.P".IJuMWqquJ4N@P8MS5lM6O5T4H:E>'`t
%W6"o7"H?QN)";=[4tX[iK&r>`e4sUGj"7XVKa)(Pa#3I%JRsbX![::s72Db>;96(.,r?$Tp-pQ^0!TT9l,N.`[&,=1oG\-^mY!^s
%dc&5YWMXMPe#?RjL/epJ-)ksM1JA]Bcn'$1Z^aV,&Q9[l/8(%r_t4;#g*9:n^h8\8f!Lg.fq[[cT#).k@e7Dq"X;ee4g9Lk.CYre
%Gf:i]7,?`i*H.bAD5DCfX&#&,MNaKm@HWK1=bT]de6/7t+:Cf?G&&&5/I<$$(+$6O8qH*bCeK]MAE2%J[*>'#Q(l\Cg6(<#9i)Tk
%&Ioqq&>Z*fZ&qC-7K/,#h!It#;?k,0EPIg)%9j%h/t`H%YW;WdUqfL(1Fss,Z#Z6h@aR]S-09%ABPTOPfj+<Z$(A=HBfbK$TaeRj
%jeC-T$i\"[h9%/GrIQqE@@gWDI#hK'2/Uf7BIddkq<i=Hr6JO690+8Wo?T$;pM<D?YnG2:>=Vn1l26QdZ.b-oiI$E[*5_''iAmQ>
%ZF`P%q"tjU9i+0(1dMFTV(:79g83_#*gCV<KF'QRj:d+6/BOlA7#B/Uas&6N:`>ZHqHnNCk/4Ll%rYC"Q2]]Xqnq/&JQ+fmg]$]F
%,F]cfFLM,K>6tMf<$bZr@*g<FYa'f/&,8s&'\'@<j.<`;77CtqO@O"097[0!gN!V@dH#bP]<n$eT"jK_pV0q($^)XV)p*@tB?&e2
%E%aK];Y[4=6f.RW7uKg()4$2R^>g_ds-3H9@0Znf1"11ViO5/iJkIZ=U7_<"0_Ft3a.I"^j+mJMr8'Hs?,bZ'Ca*S0gU=G-j&q*a
%RTm)F-Q4_]L^?Q%gO(?D,,I+Mi>/dIfRfF"/@aO'@67"J[)#\dn+;8W+r-,?GU$(QAN<G%(:*r:Cd3k;+BjVlF-3t[6ts]4*(oDJ
%md$h,VF2(gld!1;4$rj'7?QAlIcnk(_cE;8@FDM48sgr&pgH]ZN$F<F*$`\80TNh_AMC>\]=T7rp6#lhQ^GU2=:E=0[0no!F!lWC
%eBOJeFI3aH*K\>LCu&T"A']^33^L-6;e7>%?K8I?>26u6"Ll'E"la&6@@=QUA(AE'3l!^Z85k>f+tiW,$%KOe:lLKJ6rX8-_UFJU
%,:*<,/qIM/jIj0k?&\!))h!:4.rtCuJp66C]`#3XoYh+[&RI/FOfSk_.CuM<]^FeU:*mN!OP@J8@E66rd^k<ki("kVM?$F7XooS/
%a%Qcq`4/_Rf'N2PihpI0k_PG]TTk8lOkIHAnHQF2#90prRU;[,;So?#?ir:l:/s1tAEBm.EaJU"cELoM7JG$cQI=o!HNgAskhM75
%Md+nf`?uE+k7tV"8.3R:Pu;M"r[t!_Od!t&.)A/%]tijYMNQ"'.1=]ipC?Z#hbP]9\#"_ih]<W(E_qdT1S'.SQ/<NEiP^B_'2D4\
%YnJL.W846acN1blok(eP#(79o`SG;dYHUS#e*_;H^!?$$&oWi9fjT:&rGR.l_Hq%UfV(M$j@fpXUp*W%qkUGl$N$X':C?upYYPW'
%,`#7=fn:"P:/!XP081F-53Sl<'7E=AQc93uaq5%[Hn]L'%V,R=bGD',8HMhg>:!.P^c5Vmlp0j3$`(ZE\d8HPJ!-JZN?jl7\09KJ
%pu*o[P+S-jJ3.uPNpaiL+\]0<K-Z8"8^UCD.dP;J8U:4>Yp76t8p`s_`#1B-Gi>nO`/.bKNts!828T+D4u%O:8bcQs@Ri*9kq/$(
%'1f3RmOBaKlHTh#<^rC^O5634k>HIc<`WQ8jqK*2G^il+ld=%[XT.chaCR';5pEb(006H_:;\tX&`Rd.JUi/2A7<N[mn.g^8/#gV
%YoZo$kX$'j*#?$d)MC0$Fsi#/V`f6Z1q7$5*):V=\dl(_+$LKU3*u(D\raf1MP<e^oUc.*/8\?u(DFqCq[=nl&9&iMD(+$jZi`3M
%-$8*h(.qCWK`b73A-iFrNY>jDol(R7T2S"5*H!SI/%-ckUJm*s%:+c)gF,E[)dG]dM\FA6E$CAVL=-:4Hn]Zt8PWnb,-Qi`3[)Xu
%LRi+oOd(lkBjojk3bX&=<"0!gB@+I@baB?-:X*9t.m?XW10&">3?NIng*kLg;I+r2;d;NU,]uVK+B3?Wq4e#tQ7lT]UTtIWCWCi,
%Orfqg+I'6SGke2g`'7C_JXrO-];4lJW^\)=6&4kj3/Vi,L)"[e&Q,Vs0s!Vf*YH@PI+ZI4.+[;ZK()V243esnq-rO'mWY6g5c9M2
%;=6"XiXU9'67;56FP<mpPB@>*S_MT7\#Tf_-CgHB@`!t!3"]e"]n[[gRB+7ge-Tr0h@f:ZPBiafm7@tC9CD2[:*/!H-\sJ.eZcq0
%l8oU?p*?i\rL?5Z(Y,7(KMAt\_K98A(KS]admlp\FPY6%4e17[YG#HBqJPK?*kGSZM_.OM&@e3N]AR5ARHQo)-(i`5DIkkd-LIZD
%$QR:>II'M",3"tlGDUO6aLB[4_]h)hi[bc]k,IQVXpEGWKNmbR;nc%W&19aTa%T4)KSD7m9:E%<+bEFCJ4(C6OoupjK2,19ZfquK
%!CC?2+@u'URa`*:kmo4:6G#c%Ro;BpLJMNgD22cN<K+>](s2#`I/]Y+4.!NWkK4q)LN5(]6+lNjlHXtgK_Wc'$Ls.YPVS&>;*V];
%%q[;]PM@VoU+R-GaYA^0qlHRMMU(n*qd8KS0d6I*1RLQnaF_%pJL;/&haO6tmfWs6[5>\J&=/1O/F#PG#?Et@IN2OPBtO"9Cn>e#
%j-MEj_L<J.O6Nb@8)'(lRfFIH3Pp73FSCL4P1BbM&:EaFQY"16Rtq\PFAbkah@K51\tg!,#K_^W-er^Ip3>mWnUsOu!Kou<q*[IG
%7!+ejGaqJ]!<m)Ql5jWFj%,ZbTf0`l2U;0<rd/SL$LQ?jd5K8`_oDC2.)m":Ks_>HmcF*JEr/+[\P81uVo]cLPd)N7`Ze*A@Ijs8
%ArKBKYqoYi[+Is<0fEI[QBW8-FRd5E4)'>C-U.2p4ci]3V\Nca8.o$%MEbY%biYtSPUs^CMQ/?XH^%Rk&Zo.q0iL\SZAV]DKi0h@
%0X/Sa;ppNPk+Ji6/budqgqmQta)j;p0r89u:j-r<9C>,]6@$^"Bc7r/7qYC&"nA^2g=G5U]eF7U%,.b!E]fu.2%J4G6h[7i4Wh6O
%"JhkhM<h(?C:Akjo`?*6AcmTt$m2>X>6E<2_14?UA.AoudCSb9?8.feTq!GD#$ZdIG[[ma03rr#=p"6\psDJO"C1bu%>Z+G"aPD"
%"Mn-Pd1ZY!1'XA2Tc\Fm"^FWlSrD$M_::h03&t`9'>lG.?4ouS?h(4k,pdkso9.J*MKD`pGhu7Lk7&$Ipq3<SSi;lESi>/Nm[VW1
%ApA2r9qe?j3c0]!)@G#9<6eW(mj[C:%Ng+69.ZA/7GT8WN&\/?/!PSN5N9nQ^/J6*ppB))JZ8)ThoKkQi\:M+NB3E'4%;/a:N6#&
%3(b%H':c`LNY+`?o'DolN.\""/7E$ZKc-L2jZu@](9/"u->0Th9K(ilp\;QP53O]C-Y^o(o[glO0bZlkd_\iGI5F\98g0J;/Bu6S
%PYtDY>k2Y2JDl'-1#aWcHRq6#k2ng=mSpZ0kJFTI@G87Gm9H$%/ke>CVO\+Dc@ouq_A&+p7B''B1#^'('7Y,(Jbt*poP=U'\T(8a
%aNe%@:S=.pdER#`!68mWi%4q=2ZSdD+g6N4\hd<1A,u2Q(9QbE9GA,Y+H;@Q489S$D\bf!OLZc2FNGU3Z6X_9:]CM%52j>CV?i_r
%O)Jia=YoZcV32@XZ.,EabF:!@i5;'/<42oO_V2WV5f(0fD;g8@==KWrT`\@O3I6hC-2eCn*C5MF!>p%A8ed'uLE_JhLq*7-h\M:j
%RC+:c;1]E,6HXTAXQ_42#UobuSLUE"I8dhB7]IC*[BV^IZ[B3Of$fJQkoLO;ZJBirW#-<oAW7Z]dC"/]\/;)i'Hon;,1+F+YaFq$
%QomJ^L=Ac]ih_Ss16K'F[+=">gjo>Qm^SW<B$*V;l/;'LRd>e]WLu.iMSLNX;kW'2;HiFS-QhFp0gBAbDW816be8(d-a-_N:[q-S
%fHVK7'LjTEF;4_nGm]VFiQqMES)B['?5/no`^]*XAfFp4O1>Q]`J<@g<u2s6it&l/8(kC^E4!prhRP-hnZUm`3<T@$FaWW,,Y9)d
%,TUP\.gjX+ctp*B?HC.m8Q8OF:)&fB*ujS\`:kf2dVJ%lZ"bu8.h/8dHH-@iN"*lcrI]h#7gl;e#7ECQ[YnV?_q;-kiBe11j^Yp6
%7ghb*?*jub93g)7h8_.F/)5L<,J%F#@Pgk2+&:o"Q%ELiIE]d'nQrn-g]lfP[R>HO*f:(V^FRm9*Jj<uj%(G/ETEfa46*r)#VWui
%XbS*;NUH@T#Ch8Z461tV&sNE61!*&YZDJ`TV<moX;EbHpWiDR'6#j53JXa'B4?fd9rTKF?E6(7CG9g^^%l,)6c!-*m[#SA"\[WuC
%UEV^oE;F!TA%WJQ-_aYNZq'6"k#/C2`nM\YX,"8\Og4UN"B/bB`:1QSLS`b,feknM/*WEB)V.2?1=C:>82i;tl'WWNTP*(eojT0j
%,=pDp&oPl%i@,["YQ3mJKqa9.X;,rgOp7#*ojU:hUERmgV00/`'h2u!@d-GlANdDn<Et\Fb5,dG[%O8o4/eQ"OcjZG5A@&F;4jBB
%'"PSE=04GOMiU(MSTR6:a(`E<:*\J.1pGGBGd#Mf%W15u#Bh)(eYNNCoA.$P7dl%OI=kknfF)h?*WNt01rbVb]GV?YXQ7:V&-6i`
%(&Gl,Dl&t);UTi'""2/Q\<4h[XC@9%'jZ\S*G%8PAK'bsdo!!k;5Vf>VMB8Xl(K*Jq5EmT_k&ujRE'>:4ie@\f-`Cp`JH*?>]Jb\
%'3@:mY';A-k]$=gA%5u.a;)m4)oK%B@G8^TD.AsA0hg==VJQaj2MPob_k/HX@L?81E+6\@#q$2m-iQNg(ks82H@[G=9Y"MD[dJi]
%>OgFHk4]>/?Aa7r+r"2:rD;R(&@27F'BF9<OaZf8Xr4i]arV:D/"c^4\&sE1`'RiKH5d3GE=d"Hn2:Qgr=ks&2N^*u]1:8[;5'7=
%m92HUZ5ZoV''#`]Q.?DGoHqOp?tIBG]9c@2&V5T;`l^VHk*..9%FPtH12=6P9#e-99T"^DN&cTG%+)%F27"CiAHo-#\HhfmB=7.X
%;Km%1WI+8Q33W!OAns.6:s,E_E7E!II1JcU:\0_jj\l6q0;(8?#)kOK5GX''&BZ(SZm`T#ldcGLHF6SE5:lO,OkEAnr458jg.B6N
%,%Ec&k$u>^9V>m)`-]GhN_H*Xa?S2uHnk.1,(k;a3(+UQ_>KaM@bE,t_jNH;Pj3hZ#\ou6Jui+[-RPlDFF+RMdumk6P/q%+0j&[V
%:-Q%=5D2H(a80ChNDu$)5QaG?#Uq<&dpuO'ng/[Im3iU'C6L^50[tL7OM[/+nUH35&F]W)XH_:&R?t&[MG?SQa@*8:<`6;g<g:?0
%M'1n)a-Ar$O9qW<IhiA]I[?1!a@m_@[]tN;&;*"bjBZLs7hKcS0'u]WFspe4;r3IUN3q.NZEga<MS-P=7D)5t0#tY+j:c.c=A']F
%M9ns4+<lnc3?q=@mT2781Z"';AjLI%3E(-3P:WTl,%JN`367DaTNV"+:De#*Cu%K>WB;q&EYub>#bOX:gmS<mR"M\1P52#"cT1t2
%85k:5p*Vfq>4*5togAX35SkBP&@-k+qEkDT-kP\'+X59Q=AC(gS_S'QY3opa\?G"eMgBqEdL:A`m`q?6%"(Tr.DbFNh=2)aFr0Gl
%mR1'k:=N^e,eYV4D!78q1<X\^kf>,3P[.>&P1D8mZPe$94*2cJ^kVkjKE&t!SE-(3=m!>R>?>P)mV@f+6^ESdMs02L:oKP*)i`&;
%cc*meaF4XG0>$&)<:l](2&*K`b))N=N[hG`*b>"9)AIR10!ZsJXg7fLqbHK!'`/j^XQ>jtb.uBu4SVs!IP'o8%0!'iY$:^uFPloo
%b2tQ0h<s&Mf1.F@'AW/.b3\\4)?WHT?fTcZaZi'=H'E#Z./E&1\^\SJ8\C54%F9#eILflII(@7_b*LK=MgtOHfNH:89g3nda#Ef2
%V_F20eoO\;]KffZP>SCEACT%i#U((2F?Z]f+dKLO#H+B/BWuru;E&?i)nXUZ@#F[="jp"XVl3?^_U9+;_ee\q?$kD@Hi<m/nNO\4
%DEcdj'^Y,NZBQB`p,6.6c827cV/_:n1krk^",Hf)[Z)Knn6&X%W6l"%Y[K^0kk"@65Lek!\>HaM<:i+5&1=lK<+KjuBcHHo-WFKA
%9d@8<S/e8r!+W9#KW,*%Gd2Ia=,qj#LlFm*'O$`o@n@Ka\s*e))OkE\#9kfH"N`5g(EuEZ2$mB)U68;\P<Eps<6pN/$k*NK.E+\%
%!O).Y".S]n*HK`aH9Ye>WM;/sfM^KbC5"PYWlSeb$4(M'#m7=4JlrS"b(k7o3U:P,heIcb[R*LHQ7^)kJf;"@YCfNW>,5Fh0XQ*!
%;'s1H_-;pT!=504BQ2k!")+!afd/9[BV6?iC,ENVckK<<S'C-\%auV%o;^;c@+]aP>9'qQAOSo\atl.R$6)Z[OL</?P\BUkdd9Yl
%fT)iX5e*MnS/8CF_G38.0mfi*Yb_[3PuO$G`9'XVksETq#.(D[Nqb@Yln6[0Knkq-kgOp(,MWY,D6CD?ck;nt!Z]_p,3Pgq1:!UQ
%6DNjT%`GkLX:;:.F!):XKKVV2T>W,_2/g7C]);R(m.0<*ns<F]6=X<rbKC^ZI\>RRrpBUUc->DInuoCG(ME&lX38spHi*Es,MMbK
%MOC%P_!GZ*blRb,X=E@8U8h@1joqD/G5RYQDpP#CrU`1$s53>A^S1A1=[)^pp7MAMbYDMSrD,Z9n""&DJi_ZYlo!@:SekJNh6.&e
%Uq4aC-8+`:`99s%o!#m8)lCfqAE`)P)RLkQTEk+bddW!*3L-Lq'jfgZ+O#DP3;[ELGNZs#?jqIWkK'j:_jQ'N))[$gF,]UdB;QSE
%^/LGro*Q87]D_D!RoK29r$BPL5^LTJBk]U]1DkT5[&?lo-F^`2C=>CA(NU:/>oWFC_T\2FTG7K6g5%4eN<>eKj">H.lp"5&'0V=9
%<t=n*.ck@VGe7hhVfgrc:K%JKJ$/601mQ<cRZ2jm]:kXRSeV^O4tEY>cak'^+q,W:YB5^H\sb,O"?L9BWY>l(gKtK!fq1'8,Ko+-
%],RYZcCuq5g[n:*V&ZVFZC7,*11oCd'NTP5kuY@=rmRUL-;V5mVr_X?ZKemOIp+[Io!IfRO\0n&1e$4Yq\Uc!6l6em_I@%TB//sp
%CjK_SEg7gF"WRX[)8u\#U]p.&8jJll]\!Aeo>,2Z(55_SC$bWONi0/:qg8'PQ&-GUA%/YnnT7=)9]G4D?IPf<j#P/)>/$PKN9?)Y
%C&)qT(fF'G>1-QJ,DgZCWSTG*!@8b\1Qltn/ZB!l%%]kS<A?*oMg.AOm^Dp&:,/>`O5q#>/l"-mFq7KfOg9X6mWdI!?'Z<\-cqWF
%r1(T=qJ1=<7iIVZNLEp0c\AXYcB7PW[S[uqq=:o/.gOY0*Hd&4!lG;7`q-r_Rh+JdK0>O*%:2&FqghpKC7uY&;]j+n4&,N`r9`U(
%j\&Vm6.*%hj3*3mSe_:V>i1!Xn(Me:F]:MVqCc/%1H\cep=!q5?ejXr:pD!@.p8j!<E?Z!J`9CKor?L[<,VaU=2"$$,mC;WRd9dh
%JL\D(P'THcq$q6L8HK5`*Qt>/N4*#]W\Ob@a>Tm]Ee]K#$<sbq!!SEop&j]i2C7h5en(!7LCBs1;%q/I5t2YQS?BXGGF5G*L4?5f
%#eJ]-04?ssBe[(940Rg==kTKMYT@L,^A`8a^7'\o=]i0:m;/itmJPaR.T7IMV8bjXh]haLVG^M1.P\UhD6"3$q719/6(e^JWsa]]
%nSOiM#)?Ws6"aS^R+^Y0b^TDLa5P"<Z:kt6ac`kCY#0#65a5"+E+9s=>?&o2H"p61:GpHlQ.pTer6d:S_YSiWAL`=&-m/_-Xm/ZX
%e9@U^.bo/CqCZ>5n:#ehrU!NDcq(>r;<-F#D$q>l_QD&Fk]0%T0X0'Dlhc>2q6ACS_'J)u1>V2LVkCH&kY='-@6hB'ZJ4aR^85OD
%o]l>@hmIhUfNq,/=dBk0R)??'7&dO$X0%rGep7;NB^Q*$o-?"#RLSdLJ5q9cgP8#C]tsC_[Hp]T`HDO"$(9&5GX[t+7&2lF#D&Pj
%KX?9^;5DofVe)NlVjNd$DKNK,;nd*!IRL[D0Rqp\r]=/SX,eB(W=g=knf<PAL"PF`Fl8tLcGuIalD%)aG.tlL3hK!8!uWeYk/L&>
%ZTR[`H>6K1(an`#&be%'/"0#;aF']2-Ju*A8WF51hm9FKPkbsH.=%QeA56#lM_*=D5bKQcr]=Ke\l0+qOm#c_$/a%:qOjBP&"=pi
%#TeB-G<j-,8UI5SE2Df>Ak@>Ikb)]r=_1_J<1_/jEinoX`I?0"ZXG0QiM7!XU')JbC0&+cog(''*&$:]LDP^ZigT8N!EsaB$#mWF
%.l[4CGn<meS_jt@h*'NXA"8lU<HF?OGotf>;Mh[70<H(l>s$g+rt'#@]o0-YXES>\U'E@;+E0>rMpaet=7\OQBl@_,TVFs:.mn+`
%+lq"u2&ddEm6_-5?&-=U_[1>-p>GFsYe>?B[LXn\Yfu8[%qp&aQ)4)h>+=:skZ>`ZrZi>Hbq#?MCA,nF(*usXV8:&&KV%F#8UZj?
%QC`ZoCb%7%NE!d4YVH:`-jrf_e&#X#D_UpoD)Nn8YQcsR,uf_L:g%?[;0P#40t/i.B'V5i(g!/`Kd18399h6[K.7TucP9"LC!-*?
%;WRO\ks:3V6lPGXJT:%_[stB\D\ct52eQ3Ylg*G@J&T"F?R`e9Ubqq+fjEUk>b>=$1Ae^ulB@FdM]]*>ep-^$Z[]ea^Vi>l(hK<I
%SKs>;olL]M(W3A%*a=X)Ga5<"?t)bM.b#i2Fq^n^dKN0L\Z=42$PjRCUV_k!p7l%id$@@AAh,TXgJ'5_$)l(K.[\kgP^9G=2mKou
%c.YA.e<Z!h!"^T2WD/?=E14=o9kD+C?H`VIn7a4-ZX"_5`?-kCBu]KoagDGQ[ZL>::YkTCCh9a^=/iT=]N%stiRDJZlFfG`gsc\9
%0=>h!S!6fRk'8qo\L$3G<@Tr8+pU[]BPPXa!IZY)Wl(gdQ0iNf#Ti3Z(d#+!Ec`O\_^CjWpKW>6s!&jLk9jHM)GG$`=`K=Gc"1o'
%>D`4uguP=YZZdOn=ZErs>?"'[>RZPN8crnG9l4dY<\US3X,s3E14a!_3i@Bcc)Si#6rS_@:$o08ZhRZTAP?+d0Im@CVjUO&[_eVc
%l<-Qp[`C#O,&tW'/u?!M;AWJJAYugkQL=k$>UA1HPm&cO-V2@Bc!^rX,8rn7(oBkBRP&CuOt*r+-4^e$ZMdUJShLeMKNG"Yde*Vj
%9eLiBdXZ/TP(aC49`3jY+WD:/;Im]U*1hOunIbK*cq3U"+#1;A@uGVD&f"/Z.eR@aguN4nqa`&ta^lo(K+R2k(n+]@Q2ah*eClcY
%3r+K,[]n@tAQ1XsWRPQU:,f#37\p>L[ApSs.%-CDe7P!sB1X:!80<`"8Q%LT0bcgne>=EKPh>RlA84al9dq_:"$!]nN0:-99PnMp
%o."aF(jSc>,W#=sbq#jGjB:mu[h.@JEs;_S4AqU1AMCZk;7=1eSJkQbR=Jn3l,mJ<.]t$P*)*LJI4KGtTMC2n"1TA'`GkT/P:Os:
%'upl5g;uc"@;>%CWDY)f(T7F<&K,2K<FHGt%D)`Mp+4q?MR>ISVoYBW%.tp13I"#*<t/K!fZH=Y8upbpBkc\k4BHF^K4(2`(=i#n
%U5-_s=`uM$SWss]]Ac!kUO<LSd*^#.BdO`V//q6]b>_-@*B61[jME.!`!XV?p%s4/ajnBt)j>)mPFG0mC.0J>>`kP_7(LGiZU/\8
%3phVJ=6/>I.-9G4(O9+!H0-G4[ff"_WX't2Q&A9[o2ll?.pX69Eg=(bH<R-'jCZj!ghLgg\_<d5.9KF8_r6eQDD!K>_Oc8JaTXCD
%b:IP+f>8J3n@WI>YH<@"".@&/k"8V><Fgm49QO""I3oWCWeBJ5CfVjV6^^PM!2=3Y$`+hGc9],[>UiWE_a41Laso9O%o?EkdY@fc
%TYAk&@?VOT0dW.FTp].84)fH@ab<7;Z"k/Tn;/K9QPo68+Zq75+5d"n=0&ZKB^4];^UVVBiP5<_c0K;O:,hf**m9S9^79WNO,NU&
%q!f)@nG;M7gDepn!i#gY>d(ckS@h'J5J>qC\C9,<^:q8M5N8<)h`kr@a3Tsq!jIBFr-a!BCTmQSQ:oSr8QXiF\Mo:)K\o9.iV39[
%5p^"Fn_;a]c2/(TZ.C#i@,>hIIX-E!@Pi,a^4oR9rO+oin:(=:h*%^Cdh)]!MtT#qX.TE=F)o`7h-Q[>+.K<J904!>4/-#1]0*_$
%3+?jSec.CB.#18*Df2b.^-1@YSo!hL%c;CV=Bsm5)pmD.\___H4Wh!Sjhe\CI$!^`*mW*tO.4\mk5X8S7#iGjSa6#-\Ff3O?/An8
%GB1%hqe"'($npJhQnGT!gmm2jCu\g;cp#m#5G"F,)I%=V87JoB"DZNomO"*d+7CBl6-"2q_Z>sWZcd4L))4+`C1"LEk3D[:AFn@E
%qSW3:P;+:#25'o-B57a)6!Sij>d&(KY"&o>?b5FndU$4,\GCGn1N'aNU0`qcEd%cfZIlgZI6"9I#;Lm'Prl@h*1n^I:TE3B6^<"B
%]a!Hir7e9YO-;=X310XpF!L$$8#jal+>]362sG@H/iW$8P:efYEWN&M8tUYm2f91^Y0Z4U8Y6qZQt+S-Ra'_KkAT4\:To4oC'WQL
%l9!3E8]cAbr:9%BgMIZ'(fd+=lG1H0e&CJ<B/XL9K[:]F^1SnQX7bl#O([e%B)AYM[bNuSISRqfgs\FWgbE:U_f8KHaE#<Qqh(eQ
%=7>!ogt_6u%?I;nqcrIEdFaJ"Q(OhqK$ern=6EZ:J,Sd5G.f1GbeKd2YmoFQVPWm_@=8!W3Vi)d)h&ePmiN.Go'uGMh>1[Rk%$Ub
%e"Y%[VGST`"pVDZHbR4#ro:oHjlUU-FS0S*gAo9TYJ%OFGdG-9q"u^6Wc5U#P%4\&*4htucH\Fr>K*XbgbA^f@Mo.#]8Z:Ye_0'/
%lZ&eXJ,+3BG[m**CF_=`V9j9Z]>270#"At+PGn).O(e*)*$PP'_%qLU-L6?6JJT?2/GABHde2oI.G'qAA7NW@m;EDCE+tdb.N1['
%"EaAD\D_N#PFnK'I(ql"W^n-T;d<\%h7UMTgl.Yn5;dLE7O@gnQJVKi^3rc?2k0,?2@.F"P]k&FOQSVGT<oD5Pg>O2cTXF>e(L[]
%OomY5.5_;)C`CV""SoE+=6Ij$B(O=\Nk/r^`cKeAU#mTn6/tPO[ppO)([b?hHS//uA&`KOMf?TON^gE=4Zd#3$"5e_[ITfflOWHf
%cED[7+[@$?)Y1P^fQ/0A@lD=H3q7Mkg]&V[Fg/gMe[(&XI1A+"3Fj0M1PdIeG1mf5M3l?#YOrJ/j5I370iIJF81;Rs)?*/?'T@i?
%Se;aiYtYN3Sns:m`OCMA1H#Sh^Z"XVaS"KsO?=')3<H;mT66/2`6kg7HA#e4ID<M/gml.4S8V0Bl1b-\p,0Q+7X/k?5JI+KHfd5E
%Z]?3Rf-d&Gc/m2/lOQM-E\>qig^%!9;.r"26@CVYoffD>j4sg7O(75m\aY\0j5KU.kE't.bTMqjPgeW(i,<cNM8Q3/UCcbL=2tSp
%o^Gr&Ld<#?"?0relQ;4ojNpr^]90p#n'95)a$o?b+7pPf]=tin1Ch!4Dc4t@.42FNiSdI?luRR1^4oOE(s;*1/3A70^4rmVs)%`3
%LnOg6]3/L%Uka?ZhI^AQ$?7pmJ[jFk(e.?g?o[T5hbs4;**MJ$I1>an6TXOhnXZ8Ch44FleBm!Iq\n#He`E/AiSf!i3s$q,5m8(n
%CKTb4Q^dZ(bqga5o94*q`pA6^0&<R?Z+`?4(c;j(nu6s)$kfn[Whr=OK2BoiSjOdGQpD^]q-o4L3@+LgW+C#=C]-7]U5Tu.d26Ab
%osoif'$3kQ.!BE*/BX/Nd0S.j87GFc&a[Dr7<oruo/Xa`N#BR]0[D0`AVro:&=2q#@o:aJ+;SN&Gs?Npoc.F<`XLkZN&ep"M_YXE
%%XrO_LKKcqK/abUmQb5YNknA0N%m2b(>M'O`]iSV\<H*8$H&?FiqP9H*7%$#dU):H#L=lL@K#lR"m,2tqo%X"A)q!,N+L%ml0#T'
%Pb,2)9Q]YfFA5PQD$1+k\i.sDM67j&?!CW&bp9Gdin>Q>[1+>E7+EWaG!Dub$#>a/2Gpl=W]_/u(4(Yj5-_Hn(l?uQ&H&LIJC?9b
%s"Z(%AMaGkdk[AX;0Nn+J+erJq=j(<hqpVQ9n5Yf.n2oPngsbo.O[$]G$h#5c5%<!V!H:Ee^j-ea-OC")'qFCA&^984k\$.bg_tn
%1/eAS9kNno&jF55?c!>[B,&sGG'UZEGBUOq(u&a#5&Ae/Mc'6d>e@25h8RL5N%]fNRkh^*RULXBJ2q!)*n^)0pi:&BdITDtnE4cr
%EZ_lm12[q!'?38)+-(mVgr&N"n2nc_dXab5B.$as+0IeZD#2uTLi_sEL)t/bqiUco>+)OgU]McWA%uof",>9U([Xq4*AN:'`9Z#<
%d]P<7fG;UDN?R'6(rkL^2W%gtL4"J\\>Nkbn3$5ibiG^Ij!RIf[i\i6p"@UeMp9K`8aK6t,`g=bEDNC$G5=opr=6^Eq]$59:B'-a
%KTlF[&2KILGOkdj?Y4Y6ra2CckQ+GB01Spcalbb]HmbQTjR\p;q)E=dn)X('5kS[Yq+a-2K1!,#?i6g7n(ul\3CW#efDk&s*"<2k
%@GnMFDQbZYh74L]W88Ql)VskOoCK$?mN1B`fe;f4i.>#XR,`>-#eN#8nFSGi]bu)t6?MnWo\'n)l1XroBGb67'jj.f0-(rmQn2bQ
%C*B(lKfrBC))HdrJ%=EP0#%O/C@gQ?jltGO='tt*m-8t>oB#Z-oZO<$p#T5He7:U%.+?it7QoGN#)>+icR/NleFR<i5?$)<DohdI
%B,A$9gWkA.&5B=_(RF:t_qCQt[uluFi7^>`Bbk?W-,)js^=V#%"fnc//WVna[!sDLUQ6KT-U?7dT3"]L8=RrY(@_X.m>!bWMm1BS
%HiPU.Pa/>"bMEF_K""9hmpQFeh_H'U-H"#;Gkj-4?EBQK%569>6hZkgn1kkf-H"#;GaSsnPMtUO$npd*lk7>Q].b+aglhJ4*I2-0
%Sti_:4h!#NpG+$hL9W2\`$+QD4k/DaK24B[-HX)t-^tr/L+1fo!C_JZ!EXYdVg+`(h0ct$gM3$<7]&-kR5ea>3+ZP[%-BN\@QFq[
%GY^3_i#1U#L2o,`EQZ)h-Y/7Xk\n3@_G8dNVX-tQ6IYes[r:-,:To4o(.[ge8W$!<c$um%q*uYCN(AIWD.hbdiYc`4jQSS&'?+_b
%@t-HrAdfnZ>G[5fHeBK'ot#JDmc3F6=2X^nF<jG,#VFfoRfADfph/(W*\t@R;].R%RJDN=KB&Aa8OGQD%IKE15._b$a2f6I'KO/B
%@Z8[=8!ua+abW7\G'5nr.*u;0\%uTb#4m:"/g/DE\?Fk942u>4+[+L5-9K4egG/>2a#I`5\9\@&N%nh0lkfu.ktZD\A)XeY*TKu<
%pghF4lki6%a$:+$Aj%WrA^\nrK7<O^H@9h?56(?ACeVK%hfgGU>k<:[d`E.moB^*$cbVq'Ae7J-/1:$$fm/$QJ)%-.2ui>iF*TN1
%X6Em(YHa)/bB%rUnK!^K^Q2!K&RN,R6![g1\N.8^fk0B+N#[)uO([XN`YMj.Uh'LN,oR].1>cAE?&TX-?+-r!9PK6i'EA$.)+s$9
%c7lf>)C$5-m;E]b3,d.\c9%j3)B@Iq2X&TuCJ#Q<$-b)l+)e?4^-.8%I`t9tkEGjTPeqb1>5+7&j:e]KB4WJ3':3duiEg#KE9P,E
%a`@g_)E!ml$MO$AqX(_^n],1cS/_k\J95k!=E\NK"<>dp11M]Xf8`!<fP!$MgT`o[N'6EGIgTJ!*6F\W\Oi9[[(/btS$]^jSMiDn
%Jt03YkFg'__sjmCVpC@D'QKr6gk_(elJ/2\:$UN0c;!TZUs9.#%%`#:2f91^Y0n'28Ym@`Qt'%Yro<;/oU"n:(s4o(F3d.EHZ#`9
%N80hLkd^N6nk+kfgSVUr;guq>5N[%0/+F%hn<>'UTZPcsEtDFK>j/s%I(hf?oue4S?%#hISDF,Bf29!'O#OhGO0MU;lh6$j,EKT'
%pbapL*65LH<etuj\V_Go-g'?HS7C0oTek/YPT[5Z-EI0-ii&&,H>a#P6_eSG7&V/V#3_c0JC,T%RY<sM_2KCVHZ_nM`fEtb]6EUW
%FMGL2[6OTESj!*g(Zu54fY-6oB9*Ykc,k9rV@[%HY>L8bang7/rGI%h)*=qpnrZ'!d("YL7K@'!ca/Pa;'%-0jh@U[(=@3E%AcRj
%*86q#[uhHci7^>P:Q%"Qi3123!WV7[G(_itCJ/k!Bl8u8h0fd84W6?E\P!9Z!)Gc1FDlc9bC=oL]%i7-@/IDQY_XZt]n_9t^L\%8
%%S%q9A>2XB]"92*ll&'&U$0#j.,RZYRUj+RfKC+a`sXrCDS%6c%_QI^Qo0K[rAo[drOPK+2J*BP;W'rQa:<P*gYs`X1$&3N_g&B,
%iH*!$(9;e2G4Y\/CoaFUN(e5>I<P5]@Pd;^N/9P9,!e;4juA+3+$+H_1PU`H*ggDW":T<56^`2Z`#B5Q2]e^tGrfd2:kbK:6PPSo
%5!E[6NY3S.@1JpmFfP5-ku*P(rBKI%ZdWo.;duJL9[UftRN%C@i$`9KRO,BNI<%2hO-Vti_*kj')!Ln61Tdk=mZ0H(SrS&6+)Sag
%B%L3JCbkOnUn_S6H#1WcES-35eT49EnS3^cIdgJq5+RsQ0>mU'8htD-li&'VEs04?H\cGB^Oji'NYD'Fo?-,V7G&V)4h)T>*S&j]
%Z&S6d(69AT#5f`Cmr9L62\,K/]?U$6m!=`dO$fDqS+Y*;B(m^TPNcn:NLpFQmpjV'dFET@-EGnEP95gJN'&I5S!UHlp>"'^WsR&E
%NFqJO'=2;S_',W6i0NOJYLf*_hi0Wfi;dlshAZq7hWf)F3UJ65:7e7W-[8C`O3.$&qbJARp%eEZiB22_:*Gpq-H,Hgp#)Es+FR:?
%Xcg0:b>WU%'%I_!p%I.@bO;,>8n7J8ei0(*c7["A?G?4.K="!1^A7`ekGrZGHEBF2]".XrAMU;n^.;j#rV#g$mE6=Gitf\F^ma`M
%cb(fl'SO*//rd"hqN.L%kcSuj.%T*0R\//UK>c@=oK.O!hsfmFU$fBm55SscTDt2#:>o>?rUBBsX0U184A/X3X5M</-.("me>k@L
%Yo]NFar+4qo2M%p.MFU>.]oX)RjYekK?BK`:t=?3=a9IPY1N8#bOW.TQ-ZM<;Xre?Z:pE<kaQELRqHGqoiX"&N%Stj\cSN=<PQ7,
%7]:flTNTY1WLi9a<P\';3Nl%\=;V260U>UPlr704U&>TS%:>'Z3W.0(g<((H+ePeZb;pGP6d96!54D[&]n-Ke!;tI)H@Sms8iQ+s
%@%_U]e2OA6I<,Js0@iM8l>@]t/T>40_G;&B:LVZm8:u4Qp'fZSMEHV+9VJmr7NfqU;mP9!q,"DC[h#UJ@-_<a#5*H3rc%t'I,ACp
%qLO;9QUB#`h*/2Mi9!:n6UdSG4cfm@IdBn1Zn>f9ja*NO.jL/<YZb#"3u@'Ic0!hGE4:7D%+:g*O53#QJ<KA*$rT<OnD\Jefs9@f
%Fpm(F8;h4hUhP>;#PEQ4"h%@,0pJ=dYuaC;/bE9KSaK`f$oM72qnV%]oeB!iH9ZTQ\,].8D_Xf]5f/G[Tk:?C+5/;cA!$\N^Bm)<
%SKT`6Wd.pd<*N$R5h^9):O,"QVT`RAM(GPEW*0\'YYr`018Du3)c<.u"@Hd38A8C4jY++IheY=)M4tca%k71FRV,(J0Go%i1>$6L
%6>';5qc42+V8,K^YT><3P@XsBfmPOLGCBZpAHr!4$>8?J!0X;ei4`nJ"E^2V6,'u(Q;pp&eGJo><&rQ_TTIq$Q5Z2DGZ"U]CGn.B
%XfMjE%aB%2C0i?Qog"Weo)u(hPt_)OXN]KF;gr6Y$qG*t>[aR/blP$=h?]D3%1^=1b*Y9q:1@Z<noka*79))XYCe;h>JB?08g?;L
%FIZ1I(mCH-,,eC)@4l(#d[]J/>1J(>!4N!n\NZu$cV99)2sXGCH*/V1[*X]kPSD'@;%NgA80k3%@&W#kQ-bVEb&X)jign%?^q@IO
%&5JesMNmm(^q^AT!\7j?\ghZX,tN:r0;0(4aigtg$'J:\FBVj]]26ou&"5hX@6g'Y1tO8F(8k+5+sV[M_RYZ%2h5\4jZ1XAb\&9o
%O:(fIH3S5Lo0[S\5GP5f%R>5#;/.n[e<[rG#1L+;9Taq)gWC2GJiqXfkMfsBVmL9XApn7G"(*-lei+NVWX"(g7ulQcB5^):]SZ=D
%ce^-7bGuL9`sb3?fOAl'^8NpejbM+WS7A;`_V++FZXhsGU:RnL1iL[c32\($1gaO\Sc55jLC8S)[]g*AE:ja7kBsqQ-Em9,U76T)
%(*:k.?(FKP/hbVpr712fWRZYdH^j^J`,q3p2aLB@R_=.F_TY4D@eS9#KR0*;Xp,WDg[k$]c0Wu^=eGWgg\UcRX*`Z[f!SMA;Ft5\
%.Ypq/)(:$_BNCd.9d5]7:afh.bMQm!d'l=W#Cj&h6u=YIV^FKI-nY7a?*a/9EilA$[eP4.PVhgIlen9$UMl(25Yk:CP>M#ngtVac
%i8N+s7iM4!h_%cc5+VXm]fnU6^c^m8n7P!nTMVSiWjtl'SQZTrhZhS@cmfCd$@RCM?YDl;k>2`p$+maP1n\QM.RUn#k+L[Y#0L7i
%'k6BVOW(;Qn:+E1JO721+\gVj:M9q@\>Y5SC*o[0JX7l6;#K,McU>Q)$p88IC.fET4;.bAL]h61+kP-L&)-%3%U$(C=gGPu^+CB.
%,>/dq$V=YTcc`iLM8'4DZg@k]pcEquO'!W6*&LdPE&oq+;t`Oq6C"]<WXSd"!e0/_<+XDZIrV!_$m@mnUf4].X(pC/[F$C0LX_Ge
%pZ]j;>"D3DN%ShOr:AT#0*MeNhuGd[#c@\pP''0lB/q!B?,93>l^[*,',q%9a&Ff;<95Kk^-O9'0ie@RO3m@F:M(LS8;%ml_)Vg_
%Hu5=jD=MfTN$RW0CXM<f_QoQtEgFO3?,VARJC*l`+'S9t(UsUq:kah\d%\j.hI#oY:lnAtf^fH'4-O?&G-5Jlee0?iJgEsl5@+&2
%i6jHSK32%\hc&WXK+"D6\c6`>HTVPaCT]stDb^Af'XJ?])i-nXWY@^((#\M6=(,2c;.>Wkb,2.[(08P:YI=Ttbm<kYLn1iE:Z`u-
%igUS9Z*F?9K/DUiH)9ZU1sUb@5oC!9)moJFplV@@DC)]rbaABLs):Hu$=p\@AbP8.n7KHa&2lc^%;nXs4nQS8fEWYn@"j\6146<q
%X'n<Yo2e1Saoo)N^g,YOouY>C`=H$/5%G4B&+?(fjkHi*+#YKJf;C;Y<q+cHq4>g\emEo<-hGB&=4\7o7ua>d&;j5dIbq`>^G^#(
%bAZnJ_RKO'Z#G@l71+g[P26jR]'GR]j_1J7M958k@3E]+>5>$>`XmX[.keA(We%Z^I"1jNc2%+'lZ\h^)]%Z:D1-\UhN8&P9>.sl
%@O^qN-e#);#3Z-g<;IsUN>G[2>u"l!+!;?"09B4GT^J3V5G\PI\J<6,8nGU!/O<9%<QXg:Hsol<)jN4/.+4oYK]G]qhS5/BLI/;l
%K6e,mbO%W:FdJ2[5G=1/mhCqc:e:#socte!76J'c#ePe$PZBPnk$Sdbo29/]<\YI5RcS5+eQ]uDPYIWQ0j1:AgM@Ic@5rO&9HO)$
%Y*clf3@W=S![uh@0q#+MWUh,CD%d#GmX<:?>ER1Z`"ZW[%O-lEVeb4;J8\oXQV6G>GDk'dAM'S$/28So@,XX_iF!@-'ML\55($.7
%iFSZuOF[KCUaTsa]E5mBVj^>f"_+#GY*@Bt.MQDf=iocOn30d:ZD>i@Eq5mD25;7Kn2#fbR!mb\d^3j<GnOh;4/<BPU)lX^5J'1_
%B!Aq0ZDg'V5eXb?SkRCmWHjZ$-Rj?s2,C+35KqVNd2B3g),87&3UiT=RBDEAc-_N30K"cE#3_a7iZtff^ZnsM#OSsM4)#;\D.uo#
%lAL]8X7*jK=^HUu>GSUXkki^32kqIRCUGYcCM_i7qZDq?-[YGqDt`2\lcm%J#lGqe:\NpB;P#/qakf/5S,X=P1PH"Em6C=!C]DW_
%3+r2.A4\[':_tRM8AfBVU/T`-<J_$_p^n#j28>==;EDe<?DL4pCi\O62?#Y#XTt<6e1<n,GXYP$5F0YXBJ>/:]ZR_>M-jXJ",MN+
%'d0Y%GTZG-k'iA&#ZAnB(hrigK]uoA++P%gfpE"ukWbu)q$/s%H]k*N.=./O-RjA)U*hC9+&Xran8p05$`.P5k-kZj^Vs)mC,f6=
%ZrC[$.6@3aG^pLAIC;P$*>1dYD$&BN\?2-")M#9h[NoL(7Qb=YT@VfdBqIe"[W9Ns(FB*gi<k)30ZfH@*')-'P8sCRacVuTP.64?
%e)a/]r%rF>V2B5S0:\X]N7!X"Ab$:!8/#%^?N)4XZn_.[OJKrS^/V^_%uU=6`>cHfbdi6ZX3uhROKb$5K-]MX_="ZqORkcG,j?2Y
%S7rb(<_7lo+gZBW8Nq)Hi$X[GNaK+N>+3hD4L_lAEuCA7X!PVmA5-<d$J=2K"?Pn"qIH=kjQ_AZX)DmY/huGjVBG4uediCrND`#l
%8a&h=H"jP%?j&S>H/Vr..cnN@EU6b+R:E0GV]?(Z%;:B.2N+"TZu+5US#_?VQ6h?kRW`"V/R`.gJYV<p)s$^uaQ5bgR'>$5.&cg0
%&"8_K#1)G3Fq@,).!rqM\B,,T*@oEcios`7KR!d]6OoYbANA'o8>l0jMM@?fVgpO$:8Et%j6br5@t(60G:NhjeX3'M=a8hZ2\11Y
%P%(`!R&I>XOVbUQB\.Bp'oM^BA;^)<TK84&M?<.e1+dOaR4=1s<j0=7!b,7lXLJgH.4X?7+g.%HA4O.-)JqO#+JB,@q:Z71P6=80
%W6$e@5nF7K_j+[B<sj_rM#8^k`o)#F,cP'FmP."=d%dhrFZsL0cLhl(-*N>^$a'%o5A6jO"p!pnj_D'#P$SlRnN,"Ub%LcT0NOH=
%jXb/pd?s>glOj?0r-1\1Tqg-Gnj@+m\U."H),7E;oplV^PX5"Ne0@flUE-A[D5ciX2Qs&5)M^$@6o]Qd3:7KeDY[HU$n+CZD7i1U
%.5fg'2eX9N'>h+Q+aTn\S*CAVj[PMqC)TOLmBBK.$]^U?NpbUHCr$0mCT^=O]*fl,mmGa__0T"9\dKbi=AJ,u&I:p20"1'bLRLlB
%W_,m7bPu5D:#"CCZ%h63o6jpC+.Sl)0I<\D<O!fo_(6`9!OAoK(iV/eYtaubI!C,;HPWRrgDH.$4dkE'HSQ^C>)pn2UN9u0E>6VP
%_ti"1Ec)FT`l0nG_@3Y=cDj3D5OR<6AL)Xm4sOS<dF\SdEDaYXq%H87P$t4.)C*UL%4*Y09?IBb?tgiq24mR>eJ=q4*CDS1+MA+K
%U5F$r^6(o>Qma];q9D#R!guIP@5En2'r7t"`MS9"[P\DEb4I?.:e&A8R3:5'm`d"(^QYF5<XR,PaY.bk08uJpL$W%F,;,9@k3gAY
%<u)B_?8)E"E0`B=c61RBFH$uDW%lK'P#fdUCSSD$)jIKd`^&-8kV=oHesLjJ8-8('%.hB6NS,%W>1:HfK4_PL$A1rWqID<7"!\`c
%GU\QJDeI#^dmcU:7,HV:lj?a)1J3b82DZaEh&V&DP_B\L<*0aq4(H"Q"S@/qZnZbsBkt<4FO87?7U]-("?'=RR%08S+^BmkOE=og
%IA)MGeS_9*'kenecOZNFp1cP+PYq5I!gGRC0]l%DFdd"l?j01MM_fV2']tWb49A4P)d`3F5f]\YS#YdM=oOO4&U9E>Klr>p)ZcE8
%n3YBu.&9Q&#$DuF!2n&pE[6piZ%Zg;J6`r1o?>.DL-fVB:(eGq,q!D/]FCLoYjU[P4c7<+l@qY/&8m?-!F!ntoD!7E2dM\/neuFG
%&kC'BFM4ZYj)G^$r?j3bBM:$B;"g]?Q<$SpG1lqrW(^0ZG[*W,afjo,q))Cso#?(tP-$)%/#Eddj_m4_qhn]B!!QQ,2Yk?hGWdj"
%MHK6-#1KXt-M.%[!77(G.]Tfr%:^X_'l*8j9+RgcB,cP+Z'(u+WL:RJq_jW5r,#1M$59pqbdRo,`[Z+>^`"SS3R!+6U$3a8QH%=]
%3B)KZ98:FGS_`eKJeHjde`W'KBgOt1`GjYdb<ImH*'WSCFr[9d19c"'+X8#Hb,L5LI2)c4_Qg/J62h;5flK]H\1VTrC_eHnJeY"K
%k8T-,3Kb^S$6;`Ea:1$b;E.TKlSqNU.No6[FJdG=+kr542)EkfdR^;\,G6fr1#=^KIVU]V#rZh3\+ok>^^uW:37K?SO,DhY/B2(&
%(35%!P@(@I,@i?"`XcMR_Sb-arZmZ#1QCXUV+o'01P7]nc9brmPF*lM_H2,U3msT3D=4,LQ;Ik7<ehP8o5?AbGr5(2p\Ya0=t'3:
%"`ObH5o2ra1\V(QC(XULs5*-OM6Kk9paD8bIoW<e,]U!]!Yu-..<,A/GRI<XmsR8UK"7SrLquQG(9ZW/S^==jH[ND\.LN"dA7VQb
%.?5kM,L'(F`AgbhCBUO%Ca3]U&Mi`]X\7o^gMmcr3DUC$Od(cF+HJ;LoI+Z)6%g<\bQ^oArV\rS/laUT)9XR5C\,I7rIgZ35IN&J
%;I0ra.]@S]Am=b7A>h3b!44"]CIb%o;%2/4%pEi&iK?8*PRB2\YjdW7!jQDjnt![[)-2EirKRk8*\(P,(qdhi\-mAMb!+:B,Qntn
%=[X+CRS#ap-M]`,W$tcH!-B.=OM6.7nuk+JBCP2WRP^I7`&+_;Pk&fnFG6hC6dsr;(R7iIl'`qKJ:f/34W.6-9V*BtZ_uaRNUB&>
%>cn?pm0ks+D<Mm*(FNaOZ%tBb%+Z%;d7,7+KQ-<E`%blD=_#f,3!'a4%:bWZUp%JI9k[d$l0W=bKTU>?K'=.6'X8gP\jGS,1lV,.
%P;&!Vd9^onBC[N^onQ(2m>'f_!Vi*4+['"],ANDc<<L#4>A(b$-q^tf=9>4XUX([qOSGT28"_.qXr3E*/M,OF3HS`*aAobRl)p8I
%QUiB][q\kH!WH.86I7G5<C6b3A,eWnVDjt2O]]q"q.l&+8gF^N51]<-KB.4<0ne>GFDi%"XW@"h"EAJJ8pToe%F50UG)$#IOK,T+
%VO.k0Zc&:-pg\)if\)`F0X1kFC>+IhA7CZCJ_$uG>#WO;#E#F@4C,Oq+AHD\pmOY9Ie^,2VDCT8&B`<8BMV!``MJQ^D2c?Ai=#Sa
%e]'mCR8Ma8%f@/(7.r$LN$.[WDDpJ]I;+(un.5_b,R&Haq6-G6a(R?lL&a+L`#JsCk&]GkI-i51$)elORC!P."AGbX&Z!U=6Xr.G
%-ds7)N.oTmimqY7AAuQ<6Mn#3q.mS+bRc4Vo(*1H77Lm/Bk(`oUG-Rr94agiC=m((n;["8Z=%f0(CSYn7Sut^SMKE%FeR!umkXB1
%gGc\W_-N/0bBAnBne`G!YZZa(ZJn-[latLh&Aj7+O<6%VQOUGQ')^sP0>K;P3>NDadtIC<QmsO8KLMc&0>@WZG#J5C7&0G:PmFJ_
%Y#_'t/;QX/JfG[2jenl:7rENYf5#QiTgHcoO5\HgZU?I@Eq"&\!PZsPIgg[hEPAa\SLn5W8hP8.b#60Y`@[Q-WC.#=P*AZ^F8$W&
%EWKee`Q!a5MD!+1,"p:6haOD*.K]8@F@Hln_2:f(mXhK^.Q3/4$oi3F!;n!"K'm4p5%Bl9-JgX"Y8mrm72Gi$/BE5]Z;O@4WhIpi
%&o]sAkgX)o@UH"R(#q\)iI+D;CLr%.Y,[i>Og!mp6gecJ;@bVcUJ!J0>WX?2Bbjar)5nUnBY,tTh(@Hn=^V1<k#3mR)#OZ8AU.k*
%%MPeQ.[aD/9F>-E&p,!mEsp1sch$AcSF<,5bSsm!"bfB#LdUJ`TqZBW>b.n1Pp_cgWk257BP'[Sm_E[uM;9>=.tJWc=*QuP&D@OM
%`dG#4#Vmh6@?'d*fe@U$U+0d0@[+nY&chSiNfM.3.@UIpL3sr%[QFGW`=$"SKaukc7P#\tb7lOU3rh!oHqd1pKY7UO;.89!I%pd!
%^'$59hcUgLm$\kOe!O?,VEJ4(3c&tT,B.>kaFK,tZTqOg0<(AId6/Fg>Pq2AM?Dnr%T"<*iK7*L+>H]P''$oqYbN\'4rSfrP6(>,
%MNd\Z_A=q]Y-CMCPm+='6K@60r]M]D-a!LtYR;<qAaKohNoh;=9G9HHdKKn>^55$IhF`A`Td=&Dk2mM7a*,1eEBn7UO7(L(R;(AM
%S!;&Rl!Sm;r^/J&Q>mX",oX*2TWBuh-?5UGF,F3U3AeBIN7c28hZ8gXnL&SD5VR5WJJj$<]qd+KiNMJ>'I`dmVT%>KGQe[g$kR4c
%NE'EHrsjMLU3CRu9qj&#c5k(?f4#ug]MZtgP5&qVCoBLQ=;@7%QYBD%2khi^hK2Dl4eP==5k89!ip"MmOZ*(3S@+QhKBf5%B.4]q
%`*?8'0sTO&:?j4mb4NmD/0/_P]8c&A[$5m(L,ktX'Y,/;WDUXRB8Pj*<<^bG:oqNKn33!0L1G!XD\3>-Fo"$#0"Z8E.NbWISmnjK
%nhK7;riX9`=ceYj#a,;SjHgtfSt'eJm'A*$;lgaHAGWB.E&M"ZNd.GrPrWPIrkVgmL_WJ.aDsh>Zt"ol;u+mNXc)Le:)B)sk9E;_
%0c<8KT>2`lc&IuHjsNpY1TO1Sc0QgemjZ-`L#JEu!9=)-&eGI3`@8Vj&_YQIEABH-X-@o0Mc10rZ7UXsaSa/RnO4'I'O!qVn7]XA
%bO9r-@hcG?G^$3)_<q;0m[i'WYU6?i'F%-4hoKaDR@K6:1hY]@g?=)knN_6aU_&<]O;eiR'f$;!qVA^",7rSqrCQkeId"itP92Mr
%bYOk>B@`L]laN*r3e+!Am5Dq#BdlBs<PqSFb+L=Tc<6Ag%]q!j8,mTHQpP[YJTb96&FT9bb%jTCbOeH\C1bDkETeC*p<6^h@<k4h
%]9V16YB4H=\JSqMOZq"n"['[eP/k+%ag']9'dpg*g%Ks"ACubI%=+ISC/9Ff&hC,Zk8G#5#Y[J,G;a.$PK,+.Co5U^U#@Zj>W_d<
%Ca]\%@54I]E0's]2>G20luWW\FAB<2)0Q](;p%TB:>k8dr%Z,Ppd`*MFLPk\U]?ubPW:,j,1>PS6,.FQ?CPf`*#Ce7c8Qof;1`[H
%oRbB[>o0D:pPk$%R\F3\SKh/]o#%>a2A9VmD9q;68VT+t=u<P\2>G20=mHinm@8&G1[GAeDW6W%n#hmu1$.g>^YWM=g?+HQQP8#u
%\Z3`-FuJ,.35UVu)9A3#)DV+"kNNI0<'H\@)AAdl-!dZ0hC8`j0$arqBah>.]M,p<,%?UT3\:-o@_N">fAIU3@rVn%G##N4)0Q,m
%2fUBn7u2*T3O=G:-!@FDCq(V.4ScHQbr=Mm/7Y(b]h(;k&EhdN2)XAt=cGU4k<9%!`DM>)9ROd507bpMJT8Vj#kPs2NID=nJ(D*p
%6o@bq2&7=:UAPpW@rbB((7ac^DE0N>#TRaA=C?M$4LOrkgj3O>PM(\Y>#od:-P*>Fr-C^!duC]mp40IUb`e)?^hXg2U2/r;`>]1n
%16'C!M:`&O,b8H;6J8&@dmgg$oU(j9XN0-+.m]Y6RkD#Of9l=_rIQhrZWg1Z*J)+fL`O9+XGY2Qa8P#L.tsTiNR1F6nW(ZG9S@,G
%QV;bE;/PoHHfQ5W:p`3;\\ND'a-nnIFoj.4*"I,Bk\$`Y@[UX\NG]2CKVTV5'9nF_\RG"`7WRp`F:Gr=\Wug5;)4]+X_!5-Ku;/+
%)Gi/qnre`Wahu?IG*PN.`1C[qL*OJHn]m&g*>-J#3XAZ[,QfZ1(se%9(L$&sA&;T;M+,-7^908SaUak!qDC5\-g_`d.?tDjEl6mh
%?C=3H\Ma0%L6!d'$dNih\!@nT'Fm&g4rT7.YrMK!DRDG?<g(Ur'&2X1(`ap,,Hi\59$X5jGRV=,d7GaUA0qY1e,^5bOSk!"M&+>`
%(Qh&hSDn]!DrO7dlkN@PR2F:!?*LH[*#tJ#hjKS#7u?n`@K+)cO:7&+6Y^i:7:RVXAW1``ibpA*B[qL60At0$<Q@)e!kUj&Zsf\[
%,0"[I7M-tKcj18uq\9sp,CQP0:_$c,L%0:#YAUnX5r`/cWa^e1fE0>*_`W83=Yq`ASJR`%6j9ilr*&\?kV0q(VQ>*KEB-jWPO\Z\
%,NtpAm+kd\0kl#9KHF-?4iQ%kY5T)2@53>$^&S`>^G0(XToVEYC^3W\=4]o3PRscY58fFV)"XjrYiBdMi/,h<`%"LS6B4>_&en_[
%UFG?eA1t0\#k]'$;.Xe7QP>j\33&@XQ`"1H74Es*Q%7`XBZd]8o9_lF[Mo-mY*a!qj1d?pbX?Qc_MO'M,TL8d(o"%dHV:ZJOuU]O
%$_JAgdh>Q/.(8[8W^O?N#iJOFDL--?QeE0=ZAOIbZ/&tj6dM/.>n&f3M&XPWaGhCk^OQEs0F3RSV3q*.Mj&1)-9Y"nG<n=5m6ZHi
%OguuSQ]B!T+=!EJJm_*?k9tBIKCglhaD!EG/g-`G=<?11A8Vgn8:"Sg]LcWn!Z2k2^8p6nVU2WtdWqC(WhlNG)\7^tZhRD+K]u*&
%9Sa+hVZ.rp%i$&AmVm2#D2@Zm!Ci?k=&Dk>Mm?X5)e/Y`!G$r$aHUs,"/YZ&'X7r!.;G\a1+EB,&"E([;W(P')(;6^J.NB5M"%0u
%@gX]jeeR'DJdtWu_^g%,i&BKY`+d!kYupl3[h*'3drF:)"(rW7mnSfj(!G33\T?K7%"uEpjHPTqcspf@J%jjVO.>RO1V^5@IYE>1
%0#%q:ZinKN#FM(5\83E[1UdD.=@Jpq.JK'EN/t0\:cK^e+)_VDL-qXkkCqs9R%qJaQ[4:>%0Tab%^Tc$M)a^S0BV*^!FVN6?r,Vt
%*uG6pYl6Wur)n9@>ImcB'ZQjfF$k-1T!!jMOuZO&F4=(;5+P(a@^ZR$'JXori#4Ut$lYCh]#;U=K#q$.3i5h'JKP'Tgpi=C:.lnq
%L>&j&3K9WL:[flo=5!0ZAODUsJMN:kB;$eg*T=sD8021k#%V1`,'$##3&.AdihD-i7&l,"Ife+&T,-dF-luk-A*]"aa&l1AJP_`c
%+mLZl)P+cQ9+/Pp-fLGU8/*A)L*FTHINO9jNR>3Xa*]s\Au_J?MH&%-qSU6[4RPRaA/:>M5R0Ws5*RL_bi/I>Et"U1Vk,N[ZO3oh
%mS.Z!CS0_'07sl^lm^rl,NsB39j0=Yn2#"oDFdc9ZV*kFguqT_45CL4D88pJJ^k-n+j7r>`U\#JA<`6*,lST-NVj2UUF)Q8(][lE
%%Re5P-c'50YcrYc2[jVjmSZtlKSf<ZAKiDinI*BDit\f5['>JJ+.\jokF30Nb;M+&DeOAB/,5B#M"cVi<PV'6T#Y6ed+&T@pe`-d
%W^@GtCt]bK)#<LQH3bupDq.Z5'HHa)H58__j[G'n!DSn'mXJLm+>dc6$HRR#M:hCu8=)Y!>t[)_6;4pDO1?jETnams\EImj<ok-a
%J/S.7KQJZ"mgRQMW$@B,a9+mr%V(SVSDVdDQZ85=.$-7deVH*(G;.l_WeoE],KI(*:I$)CeW9NlSm2FO5D0O%j6LF1N%pV^q@]SO
%@'>u!K7XuK\UjUTf07E.=74"IgSb'PS@Hb]84H&8eY:,H#=W$kW>$iJ?Zm&>@0TRerR*38@@Ut#kf?8,K_u5Zhj.s7Z_Gq?1MY-e
%8qXLfA->Z,E=O4%I-c7u,h4kN7e$A?%bVAXK\6IL'9e;5[k4ZD3Y]l(N;0YBhLR[>#sIP#8THb%,6'Jta4e,M<4@gY5T3[r!,#kN
%pe_;Q7-ASWr!rOF&a%=-Oi3ATKPW?AZ1k+)*Q1b;8tcB4#qYM(?@A1_qP*L(V27%HHQE0@Y:RO=nN+Xf^=%'/(_'uQn_o2;RpG_@
%@^7gs,5P^:FWmY"k/S7QWb!"T2LJ$/ehJM6_L)te9u*GiOa*G4XH!YqSLHP<2"NIIUAT+b*o-i0Nr'H;M1L_R#<__%M5OK2?]>s>
%^QL+V9uVngb@<O")c;j&GEDjEHq9_P5p%4;S9Vg=I5AXJ`],*Cr@;/M2-eKc.1c%Bc:"tqa!(O5S%^2sMOZ$G*fK)V8jlf(Cm+=K
%?DL+%>>n\^24F.up-]n2gLZ=.P>9X/6#4.ca5i8md)g&BH5%?=;MjJ'%j1h]+pK[Q#l?WQ>94\_*-bLPnNk*fK]93ODPUo6gup?t
%6fh[8?m?$QMSE4#6GkJD@-K9K5$B)OeJb?DXKcF.'7*NK"`*sZ'b(+0)>%a(->&'R4#+:0-!4%:\=G9!_5ot'(&>.(?^!_ZcGCE+
%@^WZtaYC`j^K<P/%GqVg+Wi5mZXg"pqj]2bK,J<U7;ijQ]AZYPTT3F.5B8K@SMK$f>`_idMsnI&a+TD"r3r&oMSgt6&X2_XgN6*O
%&>VR3,nVab0F_Ndr/!2U2k_@"o2P`q):KH&P+l3EjHpB9K&Y"\)3XG6UaRslk6LXp!&PMZbRW,Ppkha+s%(+E)jJ[;g1:gCjZWB]
%.6[iV0?0)+,WgBAi`BQ[jPjrO-472gE+/[i:>duu&dP-j^dhe^<"__LE5CVqP,Ru1,_VCfRN/BQecE?#[*,[^dS!m)Se\U"W;)Mb
%08PR,l"A,2T;S`c^fm)'Q#s]s^RD$='q3Do9gjEZKt`YDhUQ$R3K'NVR:=AjMqWVN\be]C6Ru!H"m\PpHG9f!\VTci0&:B+K*hKf
%R/%;P>VJJP=Q3>8bQ*l=Nf<d^6L04p_/s.)33ZdIolWPj81++nBCo[OdVUbRs-&%@TXfI(QmMoPF\Gtj079XdQe4ufO+CjCI@Ch-
%475aqDK^'j.CsqHNi=HC9P.eQAg<'p:KQ%3i&"((Hr5Y@3lukQrfh]Y1+qQn\gP,Vcq2,@drnJ[a<s`Ic*'H$G7c/W^F-9DF;pM2
%B*/+c/K$3Ynl$n_Q#D`9-'K8^A8,RR-;B-i4aB6W(7FERfjm/'kftPp#0R#g/oAAa(PnHaJ4&c?#/>du[d5LH2@aPm.Tbg)q+F)k
%q,CWm7RIp`">E1`Kped8am]GhQqL+%K\)!GIL`040D[]3Agj;O2((%aHh,8Tl;0T:6.&aa&^u:*?V-W[BQ425^)H_>NXNU_YKSTi
%6dOV4p\'@!]*7GG\%h9d/`jM%1l3&VB7(VTZlMN@>b3>PNt+Ni_ZU"\<alQ^=P6BC@hdW)r+tP0bckfV?UJkgk1f,9c6l]aH:0T%
%%DFPOgY@B:SMOJFLE2'N;og8lnb1Z0X3E-@`D!&WCB0C;0+SF`oGTJM`.^G<EL$!?>c9b&HV)X#9\.!f=MB4<[f]"e9/:nR8N3!Y
%h(&[jM7AFK;Icd9R+f6H.4FLk"G7ijYgQbi$h_,^0.P=3`]9Za&Zh<E79.crg&/[hnnZ-^YL#dW`j*k='6<4lMua@_g!&Z_/!iM2
%gZKnKHkC*-;#!#/'1:g]Ksf_Nl^JJNc?<5F7rVieHt<16.E7=M2ftM..qqMDMj%UBGW@.1'6YMSQ+r]G3&.8h#_TBtY$A9!m47`8
%^mLLM$B559_C:H!;PX@ZR:AVaj.?>?2=%rqanS9@IsJIjH6^_gR)##>h];Dn\l*Upn'Dq+kW7)W-:do?UX?rHKj5,iNP?`F>m'ID
%Y#pIUH\"B7SkQ,F!C*stdW\H[Dq*XK,J!Y*VgauSj'WSe/q<pP3J;ili"i$GqKZ2d-1XW6."$^.pcMn<rq[8VjiWemX+X0o/d)i@
%7lEqb*_b.F%%2CI$BiEM)8HG0\B2eQZJdYnJTH1<RN1AeIdbHKndf.6W[H9U#8eJJS@egEc^[+W1%su000a[W1re2>kJ-p7#1+2s
%EIe)[F'*AfghCkn]s%2rq6]U=adi)9T/(Fqab=@^NlE?B9L6)c=eMrQc7m2:h1;W.W3&n<?a,=kVaa"FLZB0>QcsNi?]I*Q7']*N
%L+uWlF?>2t#)Tb_f4U"ATHAh$\HLPYd6U?SK>.^+C"/7'S5dud[7dG6qY27-(EboJ-Y?uAUq>P"^LAR:@!pBQ/=Ia8%56)GAt0fH
%g-DRaeAfW7^'N[MhP?41_#2RI5*'kQQO1C2iZC>1,NaAdbQH#PJh1M5nh5Gs`$r^Ja+6k=n;8=3/"$NU;>rC)A;&XfdNDGSBFH\A
%g*AZs`f<p9.3Om8@##e8.hb)OWsRIk5C++@#Lhqp;(]eKcFi!H$EGuMN5h;"?/]@-V#6L7&%2r#3E>SVT&bOCB2h4mfLk(N^9E;`
%+pBAb';rds2Mm=1dOCmAas)9f*FbNCVcM<;#E-D?EKgkqoJ6fLTo6Oe<plQ4&!1,-Z'%+fg:ktj@OH_LREg%Om1OkV`C'Cl!WsmY
%$NlVc-F%SVq_#?R`,A$+a[>3rZslS1Hf5+_b<OE?Vg4F4&#OE^&bPqrCNmn>P:0UjXs'1"giFCp.ls@CC6,c@[n0/#RsAJA1u%jl
%VG8aTNd_[<.[T)>p,#c7O91Z.n]b,9_9:RMP[qQdKq:en+i6;S$>%Wb,pbqQ#5-j7`AFkhl)mlYKACNt8fC(jHnBCN5ctGUgS!=#
%^=4ki$<U)]BH+pAW*FWR?]QJ`?k@&H:g\o#b,'[k&rDUg=ld=al]J=o\bX;WNAVn>T6#H1R+#9MU@?j4kB=C!jU3e`hh'ApU"`6I
%.g9!$"'*X*-41n$60R5"\R1_`d=mK7bp.:>Q,t!gJQRJ7H5;Pr(pO=Ach`^I1:6K>AVB#q$/DXVg0q<ZhDAbS/i(bk6(#OF`+2%6
%(Cj_WML"pRg<f)h5oAgmJ'9<kY=58:.?=gG$<<;ka'?5t_T)m)f3_q3B_M?X>=((JVW]g@V^L)]*mP?>cOZ!G4Tq,Cc7Ob,imKg^
%V,M)I&WLVW:_!O]!ZDc4<lQAWUhj=.HO>'-TTd458`e6>HSc7j;4MsnbYRLL3gQ2M8s!qQmZetZ`,YZoP*A:N[QU>59eT"X=d:4.
%I%Ol3dc^[@@I.Z/cOM_*;V5*#DTj@JWR5;>Fu6qt>(tC$$]B,b0"<=RiliKb+<q*l$;jG+5NE2G9Ss^W"Q-Si+%]$tq5tA!bcGsO
%dZqEGPt@i]Cr@2Aa^'k+b_\IaR=ZWgrXgR_j!GK*;o[`OV'#f0p5,SBc,+/'"T<a0p6[(1[_9rSntlrj\!Vq6*Z6'W?+Us/gj2YW
%-9&\gHrV)hU4q",RDaWnOPcXS1P=D5N%NYM_k]Lr<>jr;%)]uq'tB:?dPCE=UE!]bh2q%i0a^-3K832gB=),'3q+UG-KPTP>$]O;
%EM"^^\cE47X=Yn]L@#4Y/PeGYhPaWX&0o2m@_)B&9=:H9eM)SAUO.1@^$$FOqBtt-B&Th<32C(iI<BNCZWqqWnZPucp?S%k&A5a.
%`*>Q"?Yn'ERgSQSLUnhmP6#1<9'm:W(V'*L*%Oc0mPmZUqj\8F7&,8ELlt:)YN!@[7WlJXM(AL\jcs]GeiA9s2:3T`?k$[f/LFp?
%N8@HF$\dVF!t6k"'N.ZM<9/iTrKs!@`bM<V3Vq]sD3"K!/"3ejeG+T_L?k4&RL/"n5`Zg-[u6qId(Y5`*>NR=SQ'&dodJaVE>mA-
%nK9VIq*!Z11)9f,pnP.:iOHg#YnF]-Hs=F<q/IQBEBJgt3qbNW=TN\Q`BerPpUcpIiCJ-;gR4pL#;dpf%C9o@K1k;ucAoHSFaD00
%j7mY2U0NZpO,0\Kk"dL<A]S<hcqoufI$RDsTZ;Ll%6ILCC<K=/;>E6di<>SeNmt];`csW#Tn?`;BZaYkaX<d[D"68tm@(ARH$"iT
%FN@rc,t2Jn1J#H_Vc)$N3pDe9SS`K7E2\c`XNZaa423P#bX6^YP70H`J?(&\Du4S3W:6WK@>OHlJX[q2&j\Z"e'VV^loZ5W4D9"t
%5rlQGN8kLL'gq4s7Zc/eQlALpcL7&6K)T<O#VZ[/S+QUndk*(M!$HjKpf!TGIfX]TZI5e'S%bYPkh5%tcdFUr)0>Fde6f?Hi+%Z^
%o*c7#U[Ck<0di'i`TP7-O^A^FrZSi_.+\>0i^S]J1ech/:Jm^,$F0s_:k(qL*#A/adGb.@!h%L?P,,63;!a9/i?FpTJ\j^,3J!@@
%ASchF<#ri41E+\;8s$e.it?V9:O$+g4C%=-/@XT^Zi'_KoOZB8@uHO=DH*9EHamAY]Q&a6-ISCm-@aZ/)EDUSV5gi%^dhbNJPNd%
%6Y@?X*B*Q1Y'IEm<AsYiZ7:f1risq*.IVR:)K2"F?Ao2)1!Ed.bSIoDaD7:P:2?rU2c=s);KI*Ek:t!(RV5ed^@(@L+.F;NM?3'(
%>fn-kcM6CObnsgUoqjOZ>e2a<Cmb3^&`@*7=r\9TmU4YBa],fBN67.FI[@-HB(1VBkGqq!VITooC67d9&!nf+YA7Se5;M:Uc_$QM
%bD/SFCj[[*^_:)G&JtXQ*GjC%RVJR*j(mXBGRl3WrFY)s<F6X>5?)2_mZ*F\k2/dDebK$.kM=EYYLON+C?F\b4/oO=^\meTcd1io
%&cZ^GI0'A^3;<\#!G.Ul_[GS_7K91QXPTou2g^5p]u+INiDk@Yn6[^=G.Rp"FFMYQ\?>]/M1pO4S.CL2(VeS\kL$FtD`C5["$Q1,
%0jT'`>.Zu.ncM<&m%P^_hj;A#o7amEMp]7V01(_K!XSXs""/M[)nTADFIGAMLCh;(UGJckWRpJ8iE@]F*8QB!MsaCB&b8Hg(SJep
%)b2I#DOQ$Pdc0cr6,<MshqWqUjAl6<$;s"Hq'H$\'L3`7\]%o6[i4,9K)bVJBE%Lh9[8_io]Nc-6$mH/r]=^e6&m`/RWTY[0uYg_
%J'm>#)!2V5F)@<%1l7/9FBflN3\PTKi:RTJZ\+4[s+c8'JT+U7$HM&:#q(nUDIa.l\o_#-0V#;2\__umU9UhDJKRA=;P*bP;tsDp
%/`shD#?:ZZrbpb0Vu&u>IRCdn'3Dd7*0uMWI%^\3am[KMcU,TV"kHjo!&K%(3N9JK"n'7PD"0-f4uc6HhJY8,hsab\!>I$>*hX=J
%(F&n,b\"J86'5:*?Es;:&2+D"#jB_/$_/(Q@q!,0B_0Y"5#lZbcjDS-4^YF2ZW*T9$D>)J<;#*uL)I>X]g9>OHHdK!%=6jZk2_RK
%rR-/BF.KMi`<(7*a&BL&=3hiN$e=B:@As5gT#lpK!?B#SWcU=X(TkMb>FPIEme-uI:>C>nZG,T_f7%X]?5t$7dKtjk"-mDmb@*/O
%O6(Nu&G.>.\NhD;^htp>8;ESB%JXQ&+3he//r'Bs6]>Fg]jCZ`_FD#dqId8n!'9s9@o8*Yq!]qE*ri"Ns&%_#:`p.8rEd1da2c.`
%-tkBn:Ffrgi!fOm:-2m0PPhs%k'1sZeT!Kjln%MK`EB$ahK#_V&Qrc&hjYQlFp:=/^`8-cZdq@1^,bTZ3nrE24UfJNIb=np=!(aE
%YBeV%<T>+-$NC:3EoTfph>fO_T0g$6F3qn;TPf^ZU"VWs24NW=GfqlG_9a/`c!I10`Z+pClhk+Frg$^CFO]n(adtFg@5"^k6/+gi
%kC5ViIm!OnjN/jBN\]^2YBsU.4/j<Fs!ZH&kMqtNG(=;;ndlXEUi-8:rFb]]\1u>B_pCD][!SB+&VE1er-?QrYitE"(1t/@ou9@S
%i7.(ch;NuY\fA(1rp+j_$]o/EbsJu:HaE\.@%$;pg+p?=5eT-<l8Jt3dQ%%g0]bd6LA=Rio;sfV_QjJJ*VBYD3H5C&]6/9+,5Re=
%0=.4D`mXH%eXR5+9"*]D]!_h#lVK'\X@;aP/85HGrE$=hiL%\*ALA/"nNS&Sk(s$*,`ZZ8qdh4K3"qdWC@hS"Gm/F?NWjka9?$Ug
%KYsmrG4En.r`OJHn"9S%B<3tA-R+AEjbb7eP]j6l*IeB9r(eO7@Rsi3kQ(iUG)_eJr"2p.DteUa4n:gaqL>g=L)%ND[6K.GAn?qh
%+10+1,>?@pMo'`$r-Pc:\FpbgkOfTp_=Q?/-f*WDfih.HhI4*AH5VNs;MUoO(M.,2/P[!0e?8uPmIY&Mh&j*")uX+'EdM.%g\[l3
%e,3Qao)FdN2L>\%)jGZ.'3O?clhI7bs8@X7SGrrA2*(YHKWZumGWCbEIZPlKCWi&(+lH8]fO;q>qMTuE]7:$BKkuiIiMsRCA7Ho>
%q5.BQ3&/DS$4E)+A1_E7$Lj<+S)?U].kqLI#W3ArHs=1@9-A"91)Q_eEOG.+eTF"H::&i-?152L>WMcqG4Og2o,Qtns.Y_W]\7t$
%J^YV=[K#P=+")^(5,+7^J"_Xq)uX0R$&8Z%\)5HV6%@+^/pF<e`h7(IJ)7@.ahRg*4eJ)Ii'5juJZ)p4=J.[i1k(gFO#DoA@PH@Q
%lS(n'Q"f_>GSL-'pcl/joAAFDSJO_?@g;2tq"lrDHWIKPYNOm8^P@SCearQSiSjfk#3QNmR63?8cEsiF03%k22'sJ?JQ$#IW)2F\
%<\2&\QZu_Q(iSD`Sa?C<&Rat!Mh`/sHc%JUrsl+'"16Z5g4N1(1NosEG2?!=fLm5R]>%(4p@hJ\2g36YHTH>#QORssTQp%8c=&&g
%r9CNYSU.n.(c6LW3sX6<Hfd[R.HdUa"G+&^7*+KinD"!11r_gqk06J5d.Dh%7Zq:AC,#J4EA9$Ok&j=h2c-^6ol=KMH'h8:(r;/l
%X@j-p$$@NLh_j.*[Gnq$D;0_`12<uXHEZ#g,X&Q>=OdJn(/h1m:A1-(;#.Ghp5^D/0H3g8RTLDVpd)>QVhoBkV4i9Tn0*<+:s!`5
%rL_W$Jb&-K-Wi`.`10FC[Kt5^>01n=N=G+WbWeal2rV)G$GPT`;--/e$L92l/sKF(SH:QsYGmn6/4-Ag$fan[69PhC:H0CJ=Fcq`
%KHu*;hV=0Nl(cj3A-=,-P;u5S;kXR]U<&L9&0IGu)R.I.:a'IXCjnog>@.EE2EN2?.iKll*!D#eH,bt)\9smd:^*G1GPa3BXqHr:
%_3dN39IVAIBGcF8%N\cH!mP5L(DHg^!,lBFUJsQ_Q&M\^R8h[P7E=Y[+J4p''psMKkQZqjebtC@rZ@gM!B(fh+rD'2;5InI7BeWR
%Sr1XL!ojjG?qN\9,3HE\GO*V3Jdqu8^Lg!cJ\_2O3$N2D%mNl&UV%'S3N\(21KZdUK`UU$`^Q><81\JoM1T.e)u)fr0odM*<U7YX
%LCS_X6dlLDl!,pC_MSe$W\Q%J4'>[FjtWu>_9QOsVY0@h=<6l=2\mtt`8`Q9EPR<bGa&OiX"a\&')"j0(sOEKEopF[erbu5iro]Q
%S^NH#>1C1n5\h>/=U9MWaYo\sMapZRZ:c>r@msKK#8?&#&ZlL`H#*/[?Wpc@i[QXWM_doN6JIaP`Kk0Pd+QrW`%3#:6=Rh</EBq<
%#Bp9(N5`:b.8t8FXB#HO/PW/W``<L8,QcaMHLQ#o3C;\FU*p1o/6'DY5_l_&5]IuTHupG5j8m1#34.ld^i.]^p$4CfF@[>[rUPd!
%_[/rZ*f=(",n2>CLBLIM'8d%f1dNC<N(!k8#(J()/27jtW%DU4QC'$A2OuU&=<@&P:D3aA/fYG*00S#Ces]V@+93PB?i[WcG:p,6
%EgBdP5,b#2aHN+d9O!0!\H/nN&SZH^p_.P$+;2W7%;$D%rON9TB7g=oYcQ7K$>r#PYSXD+beOWso#Cr#A0iCUEpOqQ-*K(40@I`n
%%^I;6;K;dtPT]UOP0+>Jb#G*9MnB<mF=^=cU/GIG#UFGjk_s-lLFi/$`u0M-L)as-Ul,PO,GL,*e:=*F7$o[0@`4!1&[E7R?]Kb8
%/$YBO0e#6mNUdaHe0,"M$o_16PQ3:5!s&*iK#%+i@ebeao+F=MKH9Oa'R"`B;.a(V[N1<^Q.OEQBRqJhE*2CU`_1QL4!2T"gPm02
%Jr-Lec@D."oAa:.f/o".=@pD&O!;dD%Bbk+PhEr@mLPE+L578>ZV"oTY)eAa,3JY-j<*>[*+>G.!6Zf&-phN2\-Ej!'e]b_?'*!^
%A3.#YMQ$^$[c08D(gne.g(3bi<,a9>Z^omn#qhBF).ojW.d7p\q::(h!MBlNZ\ehL'e'oke8g?lL/&7VQW/KoWWG\fk]7T4_$j;Z
%)I&#sfLb*o7'*.c9_+a+3CZh!OAd!OehZj(+Nt6mW>.h1#3_[E.fG6Y-b=gg[MtTAXGB`#;KK9ZXa\nRlurhQLDURrRe[\qkI==9
%+c#t5c^S=?m=O$>0>)0CGFFcEi/7'FI?Rn,RsJP=:)J_4?+R>4<p-hT:NbAm%[HG)"-U!oMm:>>#P\iXq`4]>6Y<DqL%CF&I_]o3
%JVtL(,K?NkJi1OZ#6rp2(.?VZC^?>f!fIVLrnodk,)8Rfb@gr(%[e(%Kn]Vs-*l*0q@J7Ts7Ju)WY?@sO&"B=dE7V;d?p^lAjL0g
%PJMibH-3=*p]ia\-"94^hI]k9n68dB1hOtOF_E=g9^5kJH.#fDo7(gZ)ui>ZQLYrUrunXcA0\A)rX`3!jM,'Wn.0ta8K<me,5=*n
%?>1)c/J)j=ljq$hAuQ0<LNO6NjMVoD*j(19)45lk9-mV4+QET,JnAN1qLoCYi!6Y@,>#5G.=VBG@VCGsFYcZTB][Is./C&:Q67F^
%!807-Ri4OhW6&9G4'`HtJYJ.C]`Z8b?IA6QM(T@$*JC@CZ^)LX:M`Hlc,/37J3u<aTE!feoHQdN`1r':;gc7/rL@Ah.abh=7bQ6q
%24;$k/Y#\sjg+Q2?h0irR]li^,2-WcW9Jrca_oU<%,8YKp[6^30Fd$!at<k]'$Ck0pa,&6j?Z,f&+c^#(<7qfKW-k`ZNRkkKN-C*
%YSP)XitOM>V@KqQk-^$)'YT/ADl9-%_@hp]ol;j)\,(`I>;2%!*.AIjgZW.^h^1P5SeORKlIY']r*[O$Hra,blMlLi2nEWM,%ig&
%m;pQ*dQ_TsWdTRkPhNmig.@NL%:&+?d0<\gk!@Yj;U^qHpQ&(P@CpfLn+#[*pM1YrJ3W>4_d$]Rg[f88H>0[0lnK?-O<8A%R?hZ4
%q4ZlM6^<"Q;dh\b9Rs@bNG>qBERsIbWq?CXX]t9(@gY$lk,QfmmiFA?q=@Kmjr\7'%Wn)A%gK_u_8RP=n?p'qo/@/#6aL>"2,7?B
%_d:gDSFZFErm1Ac+O*tGF2-3(npA(%?cq/6B)DR6a4#+#nIPRk3o]7W:P)X:4m2g.5h5+BRaXO$h//Z?&#TJmmlL29D"++J3J7Qo
%Bf68WZe$0ZVqk%Od;8QH7#ITAMO4g:ks3Y5A:[ZV`\](A01U]]1PNg*Ve6CipX_ZTgh5ZA5Nn^;!poA/7FB)'*A:DiL&rAjO/[U6
%h8"Vk[IsH1O`LKcO'_n%rs^r5+&g,Wa..RRM]oYb>o;>Xa$/=Arut-`?=M#61ifeRf:Q"/ld&pK?Q*]LL@WJmrR![%Ghf?Dk'I">
%]9@g);K#WRn"f2S[9UC0ht<>g@.Ipqd[_D#_0A.2$iNMt"a994HQ<"JQdI7<=mgDcHAuMS@mGMQV#k2`0<pPDk+I//g=?]a-N<8K
%gc9I/PGrLRe!leh5j37#ffVZ-I%;;U_mAK6lf,"Mg['.=(G8H7RAR>?6m;*QJ804H:1;V(-Mm.RH;/crOKf0L\_,rZH2S^Doil&F
%m;*e[Ilc5YhA[GVlb12&UYBtVcc2&rb';4tLPNcGSPc89Hs?W`3uDk9[p,HFXChcnkH1Ioo1@nK-+t"]V9M?k@aH^nf)()3cR5]E
%9c,FRju;9C<2k(jYP7e>DFSE<0AUP4'FrQdcn^j5jaC^Kn!2r,RNldGZh2=9BYe]?#>H&B8T"XFYOkgENr,p25=tQDLR:AlaV11f
%\rG2,`Lq2*lX$*n^+.25s5IL,%R$t^i(Ce\S!BCZPe?Lu%[>W@',JtV"B><^eA+8Fi5I.=Sa@tKi#iZsrSB*l2ubT\X<"_Ron-;W
%2+VI)KZUa!PdXld*+.3VRt[F$Glg=%WVmkPNY5gf&J4,TDdjp,_Ekk@mki$!J^8cIa4"pKRY:bnDTq[lFm[X>&l2%S65P8`f&_!W
%g8nSegO:NRS%V"U,lI=mnJglH3>H@I2u`m`H41ngLF<g%n!FV\p%"i;J1PMXL96<-TDN-^rnd"4USHNRY+l+EG@7Q99mVMO'dgX;
%Y?^tF+D%A_qN?%ef6Pl=a@l6?Ap^::!'"h>)tc,[couRhY6Q>d!><Z6Ai81!qtGNGJT9t[m(Z4$8QGg:Y9VZR>sOk7k4qHXT-NdJ
%kHrG!fD.Z"GL*UF>f&_&&aVk-)2W=Y8d:rB[@P"JMrE.-T!'[FF+3)pE\E36_.DHrF,963j"A5j?+!l9qIh&&i>0.M%uS.:OL#Ek
%1YdncWjb.NV?Aa(&PIW3c.Ng6p.noU#=.o!=ZEis&'1U!Dg&+GaE24ir2tP2@XZShJsR*NLsc!%h1Ntt;7DWWd1"'kF!#a6WFjQB
%VM&2fFh#e>^GQj*kPa@?OLnI3GM15\Q`Dtd)I\f[P@_kcR0D<]CZ`Ut*&#T/=RNokhk\a`LJHn?bJ9Y+jKC9-0%N4ZY=Q<bHmM6)
%3ronfS];CFG.67FdWVNc0QE%CnBHTEqd1:Sr7McLq[pD(5OT??'g7,DYgXb&NI0e,l_7"A#/bkq*e5XQ`V@lQ3Epg,g,ssm*Yo7b
%/6$s=TR%-h'.eUcam&5gUGmoDEd=kD,/sY?HBD6O,p15^CNQ@qYF)<O5(65>_d^*!>b&HGf?)oaA<Jh]GG@RNa_4b!r-d#aWRlF-
%n`L$kiD,A-Ij.FWe"G5dp%P`4H$jd=lmL,n-?M:6.=P9p7^%/&@GOGE61M1M5Fo'MqA0CYhUK'WqSdVa[2[`ZTS8%[C!HTcVg1s3
%K.$D.F?9T9,G*Da/Pt$J#GWh^W+5k'%Ka),@BO+PTo,:$JBmZ8Cq"na(\?qi3)Djf<1t\@*dVqS)r7Q@oHuqTH5p6ba4lA5]Rm"H
%B`N*WF;bg\"8/[<3f/,HU"bh@\T*qs+u?E[Hc<jkjoNOnd,,<@+(t<(]\*&TYjf9;A61J#H*;SE8gm>mT*<`/Aud_EOHJcJZj(/c
%ZrBN]l`gj0n.g">TrXr<7Fsq13oJrVM>X1(6b-C8C'DuU#S8U[B18]9fP[LRNA2kO-AGO/lfV2cCtEY>O!RiWUb[IU'2aI/)PKdc
%+=Hf8UDdN8#sUGI?l2DhfGDIhC/@8!FSoTFd;OSNHr[pfk3;)p]G_e)#PDDQ&kGsPh`X"%SpN;'4'pcjcon#8F"a^>>h,CYkM?Gb
%C&bMcn$G<dngSm_/"`PWG3)YEc`MSri6#p/U>H*sSP86=Pg#<`]Q_lm9VcorAS9(TqH'<qLoKNE8-G&G)oq`#,FjV_no7rrVda*`
%ZC$CV7a:Mo*SL=3Pn_?(rE.Ijd`0r[rVhJlM8ussW,_Oo7-9p2luE/4-RE%\/BX94f<)r&GMu^!!-lb"_@f!;9sR'j7aRM?qh)>d
%.#>PaF,h=Y]=WM0@6C7Pq'!o$G%^YOS53b*fTg`!g2fA(!)oS6"s!/JI['Iu.=/:*`P&T'4k[F+r]-F=?n6@Kn']b;dVut+.`#Q"
%h`C19=oC;h,Os;(\=:-f@oCXSdPA(;^!CH8=D(CNIrLf;8#J!,Ccu0e9\4K;A!,u6Y@Xb]:j?u?i9;%5f.L-mn1u/=i%gk+eN%L@
%_)c<&NdBS15fiV6!6>C4^tJ(E(,/!7$^JZB1@.$XlQj9ZEnMNiRD0)sj;V#ROmu]hPWRFL(VYpGb`AR'D'$Q.[#S<'rIk1)*S,j%
%3t5:8I([pF[hAR]RVC0Sh&3_2Y2F[+b6k7.'bUs#F&)T"Or:1nrouS-.6a8@feM%Z]Z*st-*n!7p3NqAB-l(:g]`RJ/FnslP>C_^
%!XBoe,"F1)FFPCmU!%pKh%epo7:Q2Mj.)X+Id.L*OtC$M]ha,6Bs'2`doPXN.T"TL=2B4:Y=Flu:Ajrk\'pm%Fa1m'NK[]CX>taY
%A(>2k0deKQ_:PO?i/_dEF?>cait^"iBd[`nH?8O]V<hRcjo.ZoR/bCf$'uRDmQl9*?2q7!(hhNjYFO-7Y2PB1"/`Q,lu^"2m9U.k
%bXkU:pP^6496"'"V1-]kj/qHSs0-.q/qq`GR75HgT>9rMHEUHO"h`cXdK8cO5YmsN3,*OCrVGtBB"_-Y76IC7]M(ac:oO-YO01$T
%[?cJ&'FV,@1bej^kO3Ens4P(6S-(Ds!39f(VJ$i0kV4F8CN]Ea6>$7="dh7eTE@Yk@F2uE)U1U,Y.*\MG+HDF'*B`LkN<tcQmMDY
%)CN&QbtaO'`H3f*g!'a="\**tH^$.]eLt0L:,/GDnT$0(5f:[&?L.LrCX2\2n%njh=5\ZP(LTZ.a@T^;-h13$#5bWUN4O3bX_.,>
%Y)\OPF?=i%HKPiHi_?bXbhesfp5Ac#!;B%KhTre1-\I:e_%<]N!pt6pI?diQD*BX!VD;LQ@eMYja'_<MDDhH]AmoqAog*[!jPoO!
%;fB&kHGTM\8XS:dX,1p7GSe`L7J'hJGUb!lo,[\qqn:S6Z[2*4:%i==d[#1KXX"0[ne(@_Q[0=Ie_JN`;m%>OVO6@>r?eF,SXe=G
%'@h`KMZXZ]h9KCEM/A.3J63[mc/n01XC=C-BK!h2K_jf#:Nh?",]=,EBKqIoSbNAeCn%C?q3")PM$H&5@qr\D.k:[d`-<7ZlM'SY
%2kPY'D#rIYL*Au#at7PFQM)etRusk*"a`e.+n(+\?JPQ7]DQ:&_,C7!gm5PO@_TM/><b2P4RV"YWnj,5Gu/5*MuC9Me]+&gZafjH
%rUI5`al<$7#L?Ft(CaSQPL#tM+q3oC6,38uH9<#!?![;3I'gIIGMZ]o5EuU1c0EaNXe,!h2(0Pb]\Hh!%\%g1f#m#B[9.fq4>PO^
%iB*FR<bqFFmJHQBp"QBbpjR[pFOo:9_i=sLZ]EA%Mcr!Nqkj:nrSS,Y;`tJr%`XNPf>^>Soudjf9Db"6lcWqcp07I%\pR]Y[(=mC
%T$:=!mTn=SedmgL)M2&X.nHr1dAJq3gg4j4>s'U/$n<Xu]uWM#lhtQcCk#etIe)D+%g7gY=$@^Um_Vco^K3?)2fFuEUMk?LHh2GB
%]SO&i_[DhYr\cRe=DR,e1R40nbL1FqT"7-jIQmLKG.$o!<NX]^GkCe(et&#$7\bEi5IG+TNj_`.C(W#HD6J*VlXK2OemZ+;n&^4X
%hX&:@de;Prn$mq(X%QYE$DoONY<T.T3fOAWZRa@f(@9_pQ'Sfcr?G>-2)`G?l(U_'CfIn?Y5r\;6.<PF_;Sk(Z;?<D(=-#nk3&2p
%[bWt(4hTO`[p%Hi^@PrR0%QE<Zb#tKgj*]dh9WFNY7EiKb(DdJB\^Y!Ha'?ek0Y23Q4N,;H.bJ[4YE?j2"M2C?QX.jimXH2eV3kj
%rS"C,pH>%di#b/3.+AEt#nCikL@i[Uj4^g9C&-$-;sn"\>PlR<a`hb=0_fK=qtT^8S?+n7??$(\=]o&lr:^%ESS#0:)"0mrqe;^)
%Gq3%7VfW5SAn;d*2+)--\'!5S"E)R=SqQ7>q:6t]=23!\Nu"=9?`Vd#gb#"J="fn!Wa?g6p.lTZda$[gZdQQeL]Sn"l.mBTkj\Q)
%gTOC*&h#L*k-4OMBf]GI0(q4$TtTbmO7q-7$)B7mrSd,'4%jMeP]10#B'kMDI9d??DUhd7]ouOVij1R>k`d:Il5;Rt7ru#uDZ"bs
%Rea'u617+YLPnO91eY/*(GiI6>Ejal]a4Y>#;%"\YrV$N0's0eQhIlm(Sf=s3mA)srTV)ah86UKjD!M0XjSo%/p?8eD<Cin_odhh
%ID9q:/3g-mHbHt_\[/T+XFqa[J7Er>oOUZ,c7R@lXWbeM/QOgFft-2FI&bTNpTpco(SAmsC6bQr-kK/b%Vq?IZZj>Za.1%n\SYC(
%Uk>/Qp<*:'`r;NoTgcaRY`@k(lMBbY-Hu.')4?HkNY^Mo8(TiXY5pl4%G&jD+2m^9;YYVF-;0j,mSTh2D]*#To,i/:_`O>,l+WIP
%MtbPJVKX++P!,:?fm:EpB0H5"4AEY!mqk9m++-(2/+%c@W\1ZqgM8ped=Vm,g4.[:?@BN%=g+qr0AjW'MpH!HAdgd,m7#9;XnLl8
%XV:GSn24<`eCuS7R`fd@Sue:Fk?Im_nG'ktrRMGo527aWbWYd;911ZIdh&G&G*m24>FrIUH<]+\^H\'I7Nsh%=F8EJq2h,kg$IGY
%[i8Yh4M"l_.]I#L&0u`o'Q>)D:9%O37pebNTDN0U'VF+Ed=0D@[iW9>>JIY]'aD(,Ws\m\"^uS%;(FLf*!)lXIYTO/h>n*Lanult
%ZWPqp9eEc@fK<E.T0!C\j_+=#&r&9U\BnHlATp?Z`dl75X7/nr%KA^<X-NTY(B7Q`N,>W+[MgK]aaM*5P:nGOj@f>`LH\<o:\rV)
%Ik!>RB,CTIqCX\gBkhFo\YrSA+I]/g3_$^YoS]!7?Oj9=6DM&)b/mC#-d168D*1uJR:^(?PY.:e\kLIj5f4`q:NE)2@YY\7>=lj`
%-(S*N5ebGCJO0,p)5WSN:%kq@SaZ3+0m"%GRe/;b'6mN?[`8]Qndsc.V8&=[%G-=MiMK0VFD*U3*".2<5Lo>2Aq&iU`hUT)\?VUZ
%=,JXUR*3r`$87-Z3<t\jY4jQ$CS!X=[1#B_m*pO'5:'eJ/Z1L[g5kj3dWhh\Cf6)=7ZWkO=%QH'(5sUY#!IFDP0aEnAhAW:4RU_W
%Se>`ClAsaX43:"7l"<36o3_Is1(n>gZ7&O@Aq,s@[$PT^QN*KJP:%aV$PnDJmEHHJ]tqD<db_sVgNiVB"Z=%ZA)<i[SY8(Mg<nKg
%8b\e_[ar/oORk]:2CatJd)aD.+H'Gb@ss.MXH08jo)KK7LG(HPb5Tu2CfUaPqn5==Y[5rAc)@]Z[IQL+oFgbOU_+IMBJ%M\*.P_n
%gJW!'p%<qTA2_uUp@bCf<POkfe(CMkgU32N?$KB*R-EBT4ajfkao/XHdI^a_m&_ndgY:8\ffM6-'S6@CHIn7!$`7DL2W]SOC@fj,
%G&FK$%:g7@Q2U0JS]up3Ws<%2NZ!@aAC@>`)I=@d>e8hG/[O"g3%r"9IIauKh5e(`rFaVbdQ3qrMkfZj:@b,7=F5OBmoY$EISsb%
%!nH]"YKO?=%r1Mh9qo9JLe=.X\us]\=KQeuhk7i5>$DYJ/FJp.#,6H/YU=X`!#B&c-#1o5iB]iI1iB[;;m%^UI4Q`A9Q@?=2QcY+
%6Woer^A??,>!72bhcjd]Hmh)9_2Tsjqnls6E[l_4br<#**G2sqGO!ruGme*TI-GE`k3-Na'J/^fQOiP6?M9gq(0&iEq1h`_94"Xe
%h9sb2Dsm`Fbn:MgiGLF60\PU0X9<?l>,g4Lk^;!Q#_DWmb'ZednS.T/Kp^,k_qEbq09>..H2HF^R&-MpF8Va*E2UB;A=RrJ(:WB&
%bg<l!\WPSacAYqG':4:]CPPdIF0KdjhiM33*pqlmK>ka7Fo\UBC_7>M6soh7Fm8/&gL0WCge(BC+7,[+j@*d$rU:b6g.G/D^:G%8
%U!2=upolMp+e)kih*9m`,WJSc[$[>^`-KOFfMGl]Sh,;dBf`FJ_,4IjFC'][GP=]_cH@0gn=gnY\QA`_GWupoM155)MO0p[-\'eC
%`p;Zgf'Yb;#$W%UQN5s_fqj>?'2)9!5AeX22a'$T24iW4k-.3B^-B;03Vdo8EVAr!QS5ncMbhNocXuXk52J:l8T>=QiH+foY1uYL
%!7N2g&m9).HMP5/DO*_fFmHpI@'JaZe_ojeBruCOrB?cCr2gdeC7gR<*n3e82hBki^LTDSOJ[-Wn`mSfA[%=-ie;$W+%nT!b'=4^
%nYRRZf5GEJBN()a#,YNsUuE,R*4K_>UM7e/]+Sc9j"uTO5ce%Y[YKXnfkA.G;VXUL<B9kO!K&h^^5e48fLa20p@5ajO8RZ6o'uH1
%?j4T[<kgk52#UQ@\0scNkJp#rnTk\-@3<biGL`JJ/^5DDg$86_bn'-`M83;!go;G1R@QN"cNBPMIs,>`@jppY@_)%!6#"+)@]rtj
%4e,kbI"'dA79GFqm"E'eZ25;2k7;?Lh.IP#GbP'a*Qko%dDVZ&dFfm[b5;"<+Lhnf_;Gcjb&c1Bg]]7^;dZS$T6?PN?VeigkSWGN
%FgEh"'&*&5dgt73F-YdLg,u<N1Uj-mV=XFs#7J@&WZ26Omot^rO-a$c#Q+81kLCNhT!eOoGP>iZmbH^%IG$%Yd)g\iIeh%Y:>lWA
%gZUBJJFV34\SY^!,)8q$*gTT6H"OHC+((7=5,oZhk80WN6aJD&kgo@Z_fn0E:o_HBnqZVcQ)Dq=X+t?X>WOb/E+T;/X]E%5#0;'M
%bl-qFahgX@o2e.G1\4[-_t@5!Sqiq>^R)nPE$f^?D>mS`$u[c_LF<..+"n\#Sj'ip(O"Igh\VU>8=0&,^"SfO+Ng5c>9DH8:[[Q6
%e'2*Dn]ngd[FP9-p,DHNFj+G3QR],lGE&B<`ALacq0[&s6/33q_TD*/UK;"hk4>\.k_?s\=oW"S/sQ"JVp2mNl:sQYQ0W4XC[tKi
%jjKWF)$S\6A3<fHlL/*\JLRbZ>Q=Jpe6.9$Y:Zr9R<0jTVgWNo=$0`I:Hk)u5gInmV;;+#mod'RX_e+2g?hBVqf/U@](kE7bJ$iR
%=kYNO7hAJ]e*glHd%CkSl>/TZ?<aQiqAGNC]OI*E(]/R0PCEIt6^9$gj0?PX\IFI1*j;%#?1\Vm?f(+;q9IcEU1UO+df/P[VlS"%
%c_$P1/Nd<F4*[DOmID1V_S\PEa&9dB&=OP^C6d5FA,'^9$i8>P44!!O)#_"qmem%g&C8eH0R6p7fAo7A43E?D8"=1:9g8l%5<_XL
%*]Wf@rQ9s<lr4e8Sj+]S)k==AK>1Oq6"''Qf4H+mUTESfs3.*b.=YZPI<RA9(PX?Bo(;6:]X.;1;eF@sP1@7cR7Y5c\DjuSrKd-]
%+'R3iq]"onpQj[_Fj<nVo?PGpUd7[AM7*`WkL'63V&V]d*UYp9I&5\'rTf6,m&;mD0<3':5/%-RA>ZW_0FsLC_;hZ(+VIml^64K@
%f!AFrJ['+:")<<f8"erlBp%2[XElb\5!OXaY7EnaI/C=_[A)a9k8+AqW^lrW@QH-uUc]e&']d-jQFf?`6R(WXhS+Qg^;cuch8Xa<
%>^tFYA*N?3'"YMYZLR@&Sg_@YFp(%#,^L7:E9FU(#*5d\h9N@lg;21'Q*Je'YAbh;!O="r\^l#3)@[?ad%>Z'hX<Y.K6m.Im5TZ*
%DV(K9a$Ze)[r*2iQVF74?bEmrN5r-=[?>uZZsB/H\fPKXWsL';YWnOf&cj8,qtJ?-CZS,U(FIg.YPDD#8`rU:<qPRUS"$>k/X5#?
%k47]iaD?$+^4-X8;YaHr%*#,"cktWpFd@coe9kWW4#fIa4!hGc/8+[FnQ"e<pZD#*$_?#I,FFc/jY6JbEG9q&hOD_\PP!p#]_[AK
%l(\VC-im[U^MVT:%.5+3$<6F[16jdT%:JMBYOMA-3M??Fnq[LU^NU$X$L\$4qKQ3@gjL6I*R'j&f*]a^o0[&ZYdM_;',?M?NB=b5
%,>\FPmn`;ZO7XjIZ-ZVY/[Lg>m85!s4auoj]g[UW,msLqBHL+R*8W1QR*,$.phQjUo&A'`j8Sp8iG$A,61l]k>a]m5n6PkOcKb"T
%et'eAe9%T@[4gnN"0.l*YM-J+CSb^X5JZ%Gq:a'Dr9K5bFk0>AZ*I;\;TgD)?E\L?c&ctXm53UboaNn<DQn5)dHnE%oRo5K+&s+4
%?R01@G%8a?&at92]iV8:*j<!Qe+O:mCs7gh.7,W3+"d4bc:`==6%Uc"*h,)$c?f:hBl@l(e;E9VS_Q&HU\8)tEH1kK.@MpHY&;KH
%1dbo^]\`'5bMh^ETm?V%e*G(=WGE\\giiU7HXd-hqU9ho[!SiDJH>QcG4i)7?s-pOUu-=\fD7U+O'k*e06c<jTtQn)I[%CjK.]PF
%=\%)tio+<UT=_+SHG;T:md'1ZHX?'B^\`'N2:'B,'2/+%,$UIH3HkoSa#Y)l%lT%1\'rW.SE=O.lg<PDcC;?8hX5l!Rou>ppt.?_
%^HYn*CV5&)P&k>8Q]6]&oqI,kRbqG'_Y[`T>2F`+3]3[Uma&&#?9J"i2K(.fh;H[tiYBl/7HGEbo].VQ@3)8SjG*kAHLn-4FR.D"
%ifGU%FG%"c=3tJI0?<qIqr,@^LYh"5*;H+k9@;PW9(c:d2H%G]^^Su!*j3aOIsE,0dF)I_dNs.O"n>ro31FDpDA22;[C=K=/3]P'
%+7Nn8eeQP-%`l\<]Y(r/Gh;kt<.EBq<aAi)G-A=imIH^Y9,2jTNRE`_)g*njJSndc:f`mWlJ]_IlVb36A28M)c9$6oCG-i3mm[+t
%4(`/Fhg+T#VEp.>>OBVodKakNXcION43h4#5Cu=o43)7T"^ZfGpT4'rrE]r_;l$GTqU&.R4md6<2p"<CHJ.*n''6ZTk23?p5:Ksh
%*qhMD1Q,!4!5_q@Ial)="9b-B2feS^Z@^Y:F61\M!eSCmZ2O7R*MB'GPdR!hNfImj<Gfok:+iAA0-.IPO22=,]L19GoZa:&f6jjp
%%A[Ip_iR7ojMg%PokA^=mb6i&EO+<1W'.*13a^`E5954\P1;^g;3ia&]/-[tB4cBI^urf4>^3lq^nW(=^f124D:[31rl3pQ;QYEJ
%=W/ej]>)(.5$PU>lU4c4eMC@AqdD3mhV),[[jmFAB^$K7g7sFE+gBe3BW\BhcQ.2[#5:&X:um*5qdK59XZC]V\$XlnU[rTie(;4s
%s#p?5Gu0fVk#S=cPT9+_`i*t2*kkA;EkgQI7bJs)K_aYtQ_=Y/kOhT5Ht-m7CU?bqje3k?pTR<sNq$>Ne-\?[hu]+q)IPHU?pQ/3
%"[b/UDBJfMIl#Td+<D<,3ttaul4(`ZBR[?l/M%[IpD<&<!"6M+GPKY)FJ3'Gljf;CIf%0(s*'V$IkFQGN=o[OW'hXu;:L;FTgGga
%CC=e-,Vf==N30O%ToiMfNVu2D3u8_&4(DY]d%mmVTe&%Y;\9hBN>8lk`Q1;[-q#cs<<Q$"A!,5,(l2X;KuK@VW3H%s"[7W@/A]H1
%;&""?'?^rV@OuqAW%#ZJ;:K,NB_Yf5q]rD@_2=F'.Y)25EK!nTE+U>P_?Ma(l=,D]GH!HS$'dBP/fN3[U/mt@-<UaO9M5ePTn9Da
%m]]^00n-,;<`6?T0aJ%cd%g`$_nefM%G2qa<f!-XV:((-R*`]Z/:IuBMG;;;ZrdK478Zq1MF4JdAJBP2_*4Rn(SbFj_$4u!U)7QZ
%\1'+O"AQ0M,E'01;,Li:b6mZ<+e#pIN3s9,K92cpI:F#OLgcE<9llL!W5$?4(5A"M[C.bM!]@?t(fSA9P&r$)K_8HC(_m+kk6%gd
%)'**T;[c"HYQ>XFJV'a9M\T,'<g=>ed0Re/jiIcYB-A&,c?6)\;i/I&&HbE"&pd&uFHo^F*r[2$iTN%3SUmO=jOMpgOl^V_!K:Nt
%S'*_Lad).Q;+W?VXJ?K"Y\Ye27?tr!I4LkQ5Y^Q7.N9-4QGmDd#m"^PfSUrK"VZe\C/L*CL(WB&d"TI`R#&UGBu3W\V22B4%,cYq
%FbF?AS7!a]0bB!bJ98e7#,G_f%OJ9::^k0N%A,,/#cEEL$H<W0.1@e5Eu^YpTG#U8bmH[FV(u_<=`o[9MRE)@ALn=rUq2FW;;oE+
%BS%7ZSgL2+#u&Fq65YEp"'?3J/VZOJaRI27Wc=6#pup^`bSA`^-.eRG"0;QMk#qr9&$.P+]$n$*k!'bEWZ8J_UsX1/*ehfd#T`(I
%K(ZVe)*PP<;]4.kA!4^WFa3+No;ASogJ`bYP4o.P/qd`c'$CA\akS(:aI+=i8el4e!V"AhW(++RioDNMN^7Z<'[T1b0E>9!l2]Z]
%"TD?%N@BfHT?>ebgV-61&qqg-UqnO*1l94=GE/UJ6WG(e35C/H'Z./nfSM=6EJuuFQB$Ukk0>B2OLKo2gX+r:!5t_S%HPe?HKKl'
%7fk8R_?k2cF<JR/_otr3Tb@Va)gr(A9f'(gs"-q'KSIEKcG7!l="KYq#*oZ*<j3NRh)`!1n]/KT]O1giDR;bgV,1cZ0WfG5(f$#d
%1r+^.KN(6NSZIEk/,g5@-Ce%5;NO'C6:N*Y1a"L2HO+X7?jZsS7]7A).i.><+_NB7Y)F7G!&ZW*CF]3SPSO8X&Anf#96rjK5]okc
%Ts^=nV,\[]U_R\C!"`kg@9:IC^l@@,UK<cl"l`>^Oc?7ZMDWL+ec#u]J2<L%KXJa'?5s?<;m"<c(DTtM%l:=?9[%I3:'&P`Qqg"F
%BG-_5(`$pC@V2Q-_@3jAF@p(;XW`laf&c#uJU.kbKrfC$$:c0V=FT1-2P:1?<2MOH"V;2b@UtgV;4>7Q.@o#sgboX/B!#0dP;o7r
%*#;$WoJY3/*T)Gq"*j7E)(E<G-`mR"6(5&*$ihbUW!P4,N/!$=E^D<@ml7#$*%07-'1t6K0bD&rnTQEGAW.H#Bs[X>[&u'KfIpr:
%F.f.'B@&-9>P10RriA+>koL==3?Uj'J,;H/R!DeYq^,h4A-t#3Bi,TOe?S4JJ5K][DF,uj@Y*V3&u6'@>7aJOa;4uLK8M2q@LnkY
%iX`t;"N-=gVo0LnW&WO&8qsn+e=`<5%pT/r(O_-^@[nK/V+,D.&;#pR>73qmlTj65gVttV#Sg=u]7?>I*/C??)5E!/YehjsJC2&2
%DH'j%;WK0h>hW3d?PdlZ4m5c$SZs?4U;3HW&NIW`N3$O9J@Rq9?ue4o"H>iX*Xk6*Kuc6n*MB-fG!hoi8$Q*YAfG5'@L$GD=7<k_
%,`RVQ7hL;OTnIQc@1YF$B\]kPSF.d0N5LmL"$Ek>KniDC9WF2*$%a@][DN!\=s#F$7V`S*5nmUV'4[/;%#U$37BeecQ#3dL20!5X
%$CZ_jZf$<Nb6`'>jht;&"7/ur;.dXb%^8k,.`;;mXs,G!P^82#5OS<>eL8D=JO.Ms-I!M3>l^R6+r(Df/3\ckYWf!!T0Zl,0SmC?
%"ik92JSJ5-1eKKa5b=/BZ,:1^1*RE82Wb[<Ue9M)aknW[_?/[qYT9$G8=9`kh_JO[4RtA,h%._k7c6QPaZ)^()aVU_O@KUE6j-3s
%21D?GDdFh-oStYZ!?WF&*<@sF<]!&]#Pp*9"ChpWb`RoIqjT^%CJqqr!70;S"H'e>S7P7:+TnWMSapBGQ-@X@N#W-@b9R(i;'7'l
%6`%>'lkFHdF,3cp'uFA>J4G]/*4Gc<R%K7SQMLKHVo+-R"gRTf:Ih[2CVUdgb(obE4*RYD-XdBTZ?5cj;%P_G)hb#a!S0d%j@.$Q
%"NkEiEM>b;%VO-p:eoPsFXZJ3A$B*<E(@jr!'LD.%M:NLUWDJb'YG*`Ps`GqWY!ER1(MBnap9@X_O2fIk%3iY:^QK5(=\Wr2)LH$
%1BpmFYn6i6]ag/6K\%l9:e<1kcI<P?S)1E@$p"O%^B*':8@COc;;?hZ'=iNkkiaI]6(F%AEaU";5=3n'fEeQL;@D0)$nLs!H>gP3
%1iS1Xa9R<5M2h*T+J'-iLHG@FJ5%>iU^Go-"5/'T#_H&(oFmUR>R)NYa[I7>>'YV-or`BWj&mS3$1cMQP<p-R3[<T*1g.:uA.4pG
%-"*PX$3+DB2KDN2E%uY-5nFmBP/ms!#fnPrM1^DUY=t#tNP8NCq7tl.c%Lo*Nb0R6l&ackU&pf`*'3g^..sf'JrjBY)aUU@W]/p;
%?;'n8M,;&DL?'eIE/a!h4CeDd@A?r9qi>T1`J]lr_1EIikR;U9;*[&n!M0?8*B)S1E_V_!G5N*f*9E8kB*:KNq&Vf8_nd`B:HQ$4
%-m+R?cT&"gm^fWV4EoF%am)-pX`QKG''2^'N?Hl(>+gSfe\$+oi_:@GB$5f7kD`Ck9BSUR_SdV"!ZI>\\<634YQa8()c1gqhZ_i_
%+h]!i&Db=d2[-]/,0t+Lfstl9M0EI'CIPu?M.gQ+P\!@VADEK\!uk)NW,2f\#uV_19>t0D#j3ZDXQ7h:n2<s$Y9I9)i#Rr%hW>)t
%"jOicE##*1C:k50fo?F3-cNf(nhfXaR7db+d'Wq;3Yrkd1[J'Q,'N)]E&tse(97m'Be:M>*-]Z,d8oC@j8Gg9hIRB\,S6+B"LVtT
%Dlq)^#u)P_1c8FMaFXGh;h!AM/',8S=+MEpd+,/Or>k-hgPdpT#-Ls_J8m*$On15/-"9>&-(R78D!T_`YOfNhFdoh57pcm<jKYF`
%;uAa9J\-RCPdH-!A2d?nRLdd0&o2b%EkgB?"LLO6CfhdZd&a*:+<@`p&e3AZkitT@+u'c#VF)7;s"V:sOR.p%bM2qL\f+;:NKAr-
%3>HT9@(2;'_(HNp2F-l0Qu)@o#s4OE65925ogH.q=Wg+[jkCigJr)&QVBH2'4sjh^,a;a;%a_,2dC\]R/EmVFN5l1t*MW3]O$X:,
%7HUr-hh)%(.cpKm#iN.h#+THcG],W=QcV_lch$c./RS\Rq>;Ri-b]H`";p,U%71RY5+H[2jE]rS!fY[6dX][Jg@EuG(GHG:(cg_7
%3ptm^9V@>4GaT$3dt5U%X@3M%f3+"=+@[C@?5k</,E`fVhLW.+;K>S?m$\?)^=*lqFF@8MN;L*"K#!L7P3M?]FR[I%&hLN54?7Jb
%:<#T#Eqc_'3r*B_Lp,_7N@eH>n0KFP(**c!(dVot2ReE53m`V/8*I#oC*FB-Rg_qUl/YWm^ZB\\J:D+n_H4Os_FaC@L=?9XC#,-D
%[LQAP@ZJOV*$MQ2Xc\q;5*=??C?!;N]OHia0#a!;M`2Hlg0]VK'=^g_MA1XhOI#;aRr3\q_"@(09\27O:aV^;KrRfp%?gg3]SLqR
%fS]A?2CT;$SL9Ng7quM(K/B@=E2Z4leLuUZikLb#afEJoi$K8GUJUlD?KDG1Ddlau\)"HY;Qa$cf[/Gp'M73088`H+2JN:O%Xk":
%]1>;S+Z>KF)K#P[a:7R_=<WD[SJmbE;HsM0W)mkX.n)^CX*,F:Z1.f^TACEPrq2&=2,&a`'_.rG!A-@,3]&k)FaQIu)g+'?7ULZ-
%cB3#<l098Wr/J=@M*VP+C4HY0M(50`iZ(ei#YV'7i[@F)FrdnU#fh]?Vnl8gEC4/F#"DXe%P8kpT3>Y#'heu>PG<:fN!AUfTluY@
%TjCGoM/^$Th;aOKm)7)#H+]g[5iDP\;-9XLZ^4:X.cRfVBXJ6r!$)n6Q8$X?n"Cpnee%1Eo$nPVQZ:6re:;V_SIbOgd)p?5$mRKY
%:fER50N*m25%MrpaG&@t8[4Ft!1(_E9WfLuC#18D4p"Lfcc9T^iL%uj@`c\)`uGY(3M:H;G&R(*-I@X6U"=9KK!`o;g---d;%+p?
%^D<3.j;`d&O?H)6.1?8Ug]Ss4"AOcW0;qGFbX''c/CM'1W.=PLr2)a1+qR</,)jmZ!lb9a'ET^Qb2>6<70GkB&1mDQX`oI!2WQm(
%BH`-f)Op[,K0YQue#`%i,RQ4[HJ<EL0HC4(Wl@Un,nWQL[mYhe1N!;LU;5?90=V`X)b;]fW-`$-"BomZ8IHK#5H_h1dY(4i^c-lQ
%D=NG;hiWR8^d_@T/"/h^,/mWqpaMj]W"tP#JRDna5SlrifS#$Sn@k7&o,-j,KH.$2U)Voa6:S]+CY"=8MG53N$4<nD%P!ANq>0V[
%]L@p8S2_Y&i0D<'-\FMg5m%@>`?kqcU2p<&Yl(VSOi^*4!L(@@.VoGO80irW!ne<-##JB@(U4>eUF!eo`&f8O86b]m,+YGS!):NA
%nX>2o&_3TY)(Q#NRS9dJ-q9YGLjTrjJS"n4]#KHLO%8^'KGB'oApa^lqXH!K/(,EmMoSBF/o$Pk<C2.Z;Fo/k%lhAgKAJ<B.)k*J
%*2"k0Qu^6'p(S^ZMZCZY\55/\K`Mo%!T))=WfU,#8?OurSk.eHK"PnZ/\4CR`W25c9KtFEB*aX$+f#;%1W6e675h1-UF(aI+b4Zp
%1-BEs3#45k`elFG`^&d#O-$MV!]VmY*fY]0/-AV^l8_ZcU)QuEAXPdm!<ad;1*,8fj$U/Bn(08%JR%9WkuaL6!u=bd7&#W2KOV1t
%VhqN)GL0n!@n5\d^fYl9!B9$L@J$eD*9eb^YL!;C#DfX10f(^$1X?f;[N[.LZ6GE>iJdq:T`mlKfIl$N.QV7%=!Z`09Lg>Ye(M(R
%&,BSVMQB."/)Oe[B-Y-Nm]aJdO:jduDo(p`9uO6k\'d&/6jXgO`5S.pj7R=A:aVj2,nDH9I03n?Unf.YOBftd449rNS;*\<!$ij)
%O^.68MGAs2<k*c-^E"AMB8R:.cAfYuRmkuqgg`f4H]L1g=^4IpTSENc!UpR!,;P?c5eK[JhG1$QhlJ5ReInSl!5*u'Q[oT,PfG,^
%QQjfj\1h$$V8->tIi(V-hkCJo`N$eU[D5EL,#(I1I$Z%J9Hh_<`iU/l-6TuWL;R!3OJ#rGU_,+IOVg8ia>*bF8040aCClW*$*=Eh
%<KL`:YFM9_.h'G<?qA_*"@[5X-3Oao1lS>W"+i?N7Qq_&4(>E,b'+XS$R1i'#De"em/&/*)ds-`10';#L96RNajL6,5f).j?-YAk
%ke15tVa[PLO;ORUB`Fa1K?#<e$S_],5?MQSCQW-gKrc6p@3_.j,`KN#6p(OeLEZH0JA0PN65oD,8IEb`!7$,/,r^VABnrph1)>YJ
%E^V'BL/VH5rL>jfRi0Y-@cpH.ELo9MMW"R*nJ,N/'?^)F8g1scfG1tDa0VGc+K&F4G_H;T7?%s68F[<u"V(SWXp0_ML"8+!m<!mj
%h=\jCYa'+sOb3noU0._"jE_/"5+sZB$P?U&+q-f?*UeFl&>p#ckobPh&c+$M4]*bj";sX+`?>tT9P>O\L.ooO@*oK)59TU,mOg'!
%m"KQBbg@^bqFQ1U\8_">UQj7F]e]l6=#&=m@DKiX4t[b-$?8)f#nS-Hg-[\n+[aaM$pqo,5'5h<,XaO!iB.[T,`#(3(BI)!oF-GB
%8D#,J3IFMp*43!AqN[oc.m-C^KL-%KL5:+$*4JB)_E]h1a,u8r;5bTS[q)-3b9q1qlLBmL*"#s4'Y5nW)@U>9kRmkh$\US1+=Rc-
%BFu@A$49hO*u+]]q?%bZ#caH#Xi*.ea<R*1'A'&O+?op1,*E@8d(YXT&1@Nik5>Q8IQ*)WPsRLF#B\0VLt!;[6=$\0`(\GtA>Bp!
%Kee;<:4a)`B82q&4<GE\0T`DiSuo6=2NBW6da/8nNMFN54ND5N/Gb)GYHFq&i1mJH#pr<Iq$I9K"t-;C7-PEe_:=3j8INcJ11'`E
%.e]T-2ECg\0,#hmMCJo:I>1.k-n?bEPF@.pUHhu^X\k$6B]bEXO&sMrD4p9LkSDX*)/aK$!^E$)^OdI(`$*ccMn&*&WrJ^%DqC*r
%8[A;Hq[Y82#2m;S%lm^e4M]#AX>D630RnTN4?SM&Lak0<=j:9S_"#^ON,U^72`EgA:/KCYNB@8pYtpCEVp'1'mtI.?/[[MW@Y"0j
%lCjO`khKJRIuuG'23b"/fJ(>V0oY8O65#hRMdFuJ6.g)Z5KE1=qA2JP0%T3j0'>`Mk`6K)KZH5McfYc:kZf=)/;>&KREqQCB<O-r
%WS,aP,FU7J8^0Ilp>?']]--%@8tGP!0bWhIBY?:N.s_pg!J?fp+3/AV/[8k;$5C\I;SaIgB``Y?%YQSN)i#c(@dCJ/ZU[Q7V;Vg4
%7)LR1g^&`e&<dsEl5mnf,.mVU=!W'@*&.Q/M_$OQJqN:rFU;S9NoSIY[X5@4FgC77M!*+5%Ec>U&V1"BR;1JqIn*j)O?80RSa'A\
%.]s!874&Y#6-3V(^#fkkjD"Ab:A`1jm=m_bT9J]2$XFs.oeMa7A^-@:io]YXlkp#G^dn#t*A>C-I.o.$\QtZN]90;@Zi,"Ajd-&+
%Nn;]o:Xod]<a@69K.".2-<t[d:3;Gk:@rt7RLp5uM_&V2!,EiB"UjpfBTfRSpF.N]#=O]`lSTt%=T>pI._`(d5_73:`$V8%gLN&f
%6mo(f>pAZNati:mZW"7ef:N8B,)-B%VkA.IS1TKR;kF32j<*J+m/^gd,>B0a8)/!5Q4GmWTH`iRcWk;<8GZaYL@A57:&sj,0tZlq
%cM+L>0*])P8MT9K1J@l<O3PlL\X)2Y.:ZQp&?q+Q8ZsP#]?jlkd(s**G,GtNceITtSHA:[HBX#V.l+b5#,maTK$!%Fer$-T\?<Q:
%<?+9]p51RPHII3\O,WW<CI_s5Da&>nf6>Q4qtK$P8%WCqF8+;oi15%Y"Ka<"N9ZH)KV&Q-Ce>Fo0onX!js9?@J\L8V+sR=jN4q[>
%*n\K_G0MB=>o%<5Dh0^L*/.5B.Ehl06Wq$:#B8WMi(`@m:%DL-j(\gi\(TkdI,%?N&b!0SBX>8phOQ<kY:7>q_6=<%/)8OeNJ#iL
%`1X88:*M0:*9phCC1o(n[m*?CFuV?4nq5-mTTF/@.SlsSOh&`iUV-Qp]:h*!FE4WoaItB_IWZY<5sT&m$#Uee'/lcH^.d9-P6#LT
%lj84)U9*^#+L/cl!&#jGBW&t`,9^WR?kdUCTXEQ'j)@#XljkR`@`a8iKbI-$>pI-=F/1/GYbu1=>l>lC+#c^Ho`5M0L%W)D%s9q*
%&app)b4ZrQ4HkrS\qu2>^)b1h>Kdh\pQ>qth#\"q+&/D7?7T'tW-&'N$<Qrge]>Oc5QRT_E(f&H"m]OK3I<#tH.O7F%hF^qbn*/n
%[JlL:e<_>j&_;lTq&jts198mK9fMR91U,Hbc&(N>4=DL[KN#snk3bR6as75<&WO-mU-II/Ku'(C^2CuZZY,9HgV9<#gZ>72LPGB_
%@nmdB22uk%or8GgT@MMXVs7ATNOYCfBAO4sf4Ul`nqRd"4AbD*gW!JD[\TRa%uiqZd90Lh_!GK.KrJeM8VrgWViIpCiqB(O_/uZ?
%'G;6d)_A#+7+B&tQhafjT-8B5>t'$?kX\R&#*\&Hk$#ad8OhM`nmk'I%]iC;FK"VfZOBs+Mn.:+Ed.C&ROf>V^uXd#S.FKi!E`/?
%*mS;=BQa@K)_Z1#VAJiD4`Me:L-iNgfi0Y)LWblaCNt69kB0$LN2XgaYpTg$6\]aI;cBfb$pHscnuMMuH/_$E]c,t5h9jmdRZ&@K
%-Q3Vc;&`$W"_p4$.pP<aeT5*1h=WUh]F16H.,g13LIo\?O75]W2XmgcRD7.0"JS8lomi":5]&uJ'K)!:qL!VHgW++@r+^fm(Vi1T
%h2FCa`s%GB6[+hEgKQjE+IgQ0\9ckeGIi8!!kVHnC@fQ'L4Z4%^dMQ?c@cp=Z8En@#ruq9q%1/Hm1t=Be>8>H:%RXEJ(a,6][qt,
%/i[0pdYQY8KNmKk_@4ou$\J`oP-5qilFFZZYr?"'Cnqd76%^JZ'd#.]O%a2=l/_cPE`i(#Rd2=(ZF+`a/N]?<J,gQW01.R',60n^
%DhE5KL-Y,#LJFt8'7Bd:0.sQFOEHmfFqi_6ig@R$BeiOd7>.E[Cl*KFeP*q]!HA;QrJYh<845m5V1u2]4RhpE4=iR>!FHG/Mee:Y
%)$cUlOE\>/q>YXl"3L53?2WKs6X;o>X5hTp&/@K6$;[74AM@!LeC>!:*UDF^2fFRc380UO*#hV,ZmFl'%9NK9-ftA6Zf542a;<0D
%n^Q0oLT+/&g^=$KSlFMWTKj.o3L"kW%rMarlO/&SMGO@+aD(3a@T&.iAcO9piJ`9F"MEK^Y0Z$a8%j/@lSh>cZfVnWN:^ZUc^h,H
%-9<=(7I37p*+*raA_>Zp)@Ig.^`()Mp,kH*GR9QAU0&pE-*`qX"`9W>,Qd(aP_N=$!TUt#]m0b<j%[_c9ae>t9t$WVl@pXs:E6,X
%/>JB^ZI#c)Q*IV6C#LJWAnM3j]++p=8cFUj+/;E_Nkc=Ec]!hh,6<M5\H@1(P_sq,XKs-3)pGW^pOr4=@=0!ifsS5-HUq#=IN9B2
%MT[pOIjPL()\ZLeNqDW[Lm<p@8QPt6XD/"L#!=e)D&D$?g!LK%_h:A&$LTl1MhB$.jI4A\\_YOjGSXWdRj:`?J*f]>$6=1oSf^tK
%6<H1NHQZobapS(,:QlpVT,oD2%)Y=k#Ul/:A2KZ["uV!lb)ph+rjRcKZbSso3_(SE&7KBXlYLl]KHdB-!)kkbS.Wr*G&hOM^ssPh
%`Ob+kZhl9TXk#b/8lTH7)QGT?%2]o^_N1c"L=X6#N+78X?7I('TGB1YCSh!cfkHWe"hQKY!lHaOA5I0:aN=PcL]#-N)h(J8n`17*
%00P':)3Ul-)EG`gG^VLoPu;k2!n2dI:/_Uf(eSI#MLQn73O2VM$q8-ZOh?l&9PdEH/.SG0&-,J\f5=CFae=&T'a<:1+_BEXb9!tg
%@bE,Y,1gnt#K,&\TF#s^4FXb>2^=KWR,@<21l\c(J-d2.m\+=h:Wq"$!'W[<GRdILTMa5K3#r/i%'?;^/Ns8B)Al)1@(bKJ%=XWH
%RI4OVBT^8mOoUFleYt338,up,IbgI\D#A$J24Mu_6#A%oa/9RV>m-fC^oBir#HT']VXV2"@,X8+:!Ooi1gha'8VS.r1mH3@*=dO%
%S=_4K"-Yl:)Ucut6s/a0JHfSjm`6qS/KZu>8=2`rXP@6BWk2_r[5._ADGtp!W'2,'6[B5Nb$+V8J?T9$^^JXK*8cilbNPZiL^Y4Y
%E/nC1.U<t`6Au-Ma\b'BS`h_0L^NoN<8bX#P0fBFgeJ8dE)a*?6j/aQD#6+IFAi>[8"nK\"KV+!%*=dL!hLVS]n9]IqqrhF&e9A"
%j$YES](pHJ%B;i=HpBIUp*H8t@iW_/bBKWgN2UhW3RJVsVG&^W(&hTsid"/`TM^POFjMVT!-BN0PPk^DQA^#FM(g=OCJF4DAR1Ik
%.c"<u!S:%'bpmH76<8>1%@+d:l\LE,F.t+<oouD_h\70=MMA!N'lG_">8.E`U["m<Cd*t[,9sOk$6He?+PPF=^HU0\JkU%AWOI7>
%s.S11ngocu6m:nTR7S8-G>om6kKWDZ&Ge[UI<j;LPkWP2LuS*15T($C,FD3"FWZU"]EW7)S].gS3`A)o&9rSFi.L:AZ\fPpn1.e"
%,#8<hbU5Y7KQ79`8/lNi+EL2Q([3h$Gh\bk8!jB80L3E&\h.qZUrC[+r.A2,I5C[2hEXg>:NB3afs<YNo9_>h<]RLU.=[llqfQr9
%YG;(^]QXn&FB?0O/7KMeF@4]nQq!7enJGap-DrSS(kau5ALJN]:#/gbb5sAOB/V%f_!Jo4(c4I#IPB`fWX;\a?MSa&=o/9im@`Bi
%NQ9)5:o_ckCe,B]UNfs7`@_!M;a735h7%Y'gj&DQ:u)'1,8DaLZm3seA#bW.KEVsc0K`R_$R5'j43`]?)YgUrNHj4/p\g,cg=N7I
%jR9\#3$ZF3Pm+k7@Q#l*K]]M(3Qo5@T,bVc*=7fBX!/OB]29=p3/HqXDu`.<Q!hn39Z(F_Ra6ltpO"\q\'#)*W.3pR"$b3PCO7Le
%CZ/CsE0&DA%5"I0Jh(+!P&t7/nAZbM;_M//iq^Sg4^/iDmEbn'$p;E?-m@e/$/tO.k>4RKRq?.++n'rM/\rE<[7`kBKVl1+IT6B%
%"Oth8gMa<39=.*D2\0V;+>?D9^I0S?-pVI[6NW;a_tMgk!"AqNO7qU?RMoVTd=';e`(al=Lu$n2&PJ*,;m!l0EM#NZR*6Fu^&_GP
%(Rg_0_6PINhs0R_1JR\UQAb2U,QRFiB@Q/Bdn&7`\8G<+oEca*0DFk^#lY;]3?L<KId[kK/d:]r;BoS9+=7RW_AqBDcHm&>:,&g\
%)dsFge`O+=i]IZU0%O_mHnRd1Rb.b]Gso>RPAeIbgS\"o=HH9fgD1E)X@/SNppZmU7(d]L!TNOaB^"[;j.iq$4R_&!IR-\]XqOh6
%UGkV/V?L^'P\B:b^sPj>a%Mom4=r%h:D3p"datCG1i[[nS\h3n[f47;I4$.rNPP]H0@MOUh<Nb'dI>Bf$p%ufZ7\sUqa(ZlFQcpR
%U1ijIYVq-W:o!4Je+D"@]B9SuJ"nfic6k'^C212(QC"V&B/lC::i:uC7qecB&H:k*)/e4$^>CfGX`_;\0DFaG8"Y#):'RQ"YC)mT
%Uik1BlBdkO7W<h2gZ9D;rYT7QU!&-ijXd#=\u)d^2pSY$h]u@hWe8qPK*>-m-)`q0HR093Xc%M`Kea7``Fuk0n_YUD\;TL;?'ClC
%TuL@<B+ROB6&HLO;3X@Y")!?W@%+?*5"RXQ.n5G[25.G<K->#$W@n\QSV(p_00RKd)j!n<B!5bU"O5/F-rg=WA6#F/pk,raCJp<u
%20PP#0r:9rDBKJO^n$"t&pU1=$`4aLLE`_=n8MCan^[3c/f3o=Nm3V`$BdB>1EFu2bq`h_WMn(@6f;^U=iIgb[pq3nU)b965#2rp
%Md*]M`rg?:An!6TrU$P))Tr/n4[eA.0jPo<!YH6K4GNYTA-(/NWkM_1OAqM_2lNd6!YNL`'UaerAJZ^'OW$0^?M+OUHprs7L:baf
%%o_iZg%'U#=c[]%[)[;3)XdKF8>6^)<[$)29qibV*PiFjK$:^[iK8=jIi`'JE#(rI.iA^ikq"Z&&EYEL-A#=)Ld90[AP;O$+eAM+
%7ui._,$ZU3X@Lpfg`[T1gc*h*l')!Ape-2XP'8XZn7T0fJADP?4&+4C4,?*m0BQaLEQ=o5-NU(Y^@#,p1ihVsPT6BuUJ!S)Z^fcq
%?eg+H"l//?[]!@D-SSat`*`])R\G,-bg++^b#`i)j-k7qQSD,d@+1hZ_&b9-a6hpd_ltSfQ-g&9r[Q)LanA>'_>;\-h_(i+'@)(U
%_6KVNi[%%kH63"LP!9I.e6Z7BkTJI5D^*Sbm\DhoI":>,Z_0c:/@sn[HJH">p(:K]9&UWX,@_,.2+QC^*2i:tRMO>!+p`kh8^7hD
%9rT2^*@Xr$klifgc]-4X=#[FZj%rAP"dgj#Q/$b?D*o/*+rV/WRq4PG=^VrWQmK<:]\BlOA@<2;?St3FNWO(rT8.YrbWB`-lH]2]
%`<1HGBGkoVUIn$uB/@nHiM=:P\0</tD3RGjRs?&(IKJ#cdFK;]5>0MO2Jt]3QZ^B-Ou+3bh!"*@H>O2%2iQfr@ZXs\kXQI+ZL@,g
%>'UM#m`Hng+RX[rEclIi/P)99.$ZBP$SsRffcWKf6Oo>ZOdSWsNiN)O"_]1/:If"T.=q1<A:^q1Lu6k,6NS7Y?";_c2/'<^G`+uo
%2Z?8R11gF2YK8'kZXMe5!7._`+p\?=&I.?;hHge\Z[`:YN/f;k?Xr7/`K#i$#ec\':WOUT!]S0PFRhtSAj[%>+lg3V;(R.R>$/U^
%,ni%k=((pTp5Dit3m7k38;-h0$@YBO'tf&r[mOiVbS)Kbl==#=\uV3N'>VjY#\_pi%T/J.DqN<gJ^Fg/hc<:*Y,d8d>VW=\:Bp+S
%?*8Y5S[)XOl67I:/f)TM!S2F_gYZ$uG]5=dh5W%1rGZF-*R:lR$VI6t+1lQ(.9B13?i\J;Fj/GVf&=X7NIA)1c[N`rj4=e&_X3l\
%N"skiE42!0&:K[A8W`\8eW'dBnLSa^4b`Mp<ap3Fjr6LeY&U(Q,SE5/kj9B(rSI4[[aCT<@t\=/(CEAQFV.4<E<TiehDm14m:s<u
%+ZKPEOK?75$P_bn.$]B_Gm*Y6kFGeS9dC@D!DAA6dW!]VP;D?$"6\t1I3m)XnMIXn+9`=Y+cBnf@M1u(jCV&lN+ri3&/$/i?i^tf
%%4nQW'esO!Nb4LYMN>PI\:tFBZp6&>&Jq,[@N%j(0RJ#,Mp6[+QD0i:TcqOj.13!8Afc!3L=&kS;g)'M<,&,'FZ;NPeno77C]I)X
%HNOgj\)q6h69rbk3_$J7&=Wk]"-N?;I`2%[M3'-!At3d*#KUdR4Xip4(OMH-,/8"@I3kW+gdG6i=DArSr7N93=(_$tbJjOaV,"VO
%Q"56mNjf!g7]!AP/0kIS7VLo)`C%K(64K\;@JQ(LXK>[G%)oSF)@B_h\D_GdkGf]qLW%r2b#D?YVFC&f:>T-ss,<;_Y3B;e]"IiL
%f1,:),'D'=V'NVX<@\+H\p2uM#;dMuah5(uq<bRTM><^MW)etJ]Q54'b_$9P9aW5`95UnZ'48gThTUn4(/0=b;,YVBMIV?WOZ6'(
%03MB8-RI9o(]D,U>l2a"#/MJ1;ZNU.%lP/Ed:_kfPHrkd&VQF2c,L]-`6M1ar9RFr,</90>>bsoE#u/DZ]C1AQi\R7(VD,Gm$L7W
%fD?mg.ac^%hEJ[HDqj')0o!gl+si_J1\WGcK4]'jDT`5:eS4/Q6l+<I*@h7Eh"tAO3U=:sOSSY32f?Cg2dG6(oVPhO_<?t104kPN
%_M_R2?-`Br6lHAg-UQ%VMUdn+32r/41AY"u5T2bN;/7T"LX*&M']9HlYQ-F>L6k%4P;&/%AQYp^(U6YW3S(h[d0X%hSJEGGR4#`t
%m>G:Vi%ZorF<EUtaNX]a9ViCi0J]1n_88'r>+*Up+pes9nd86YGUnUQU)FgfjT,OZ)H^L8:o@!cm_YJ>[/ct5(LVD7-oOc,e@)?m
%.F<j.Q<HO]=3N""8=&e:M+@1U</!>#-3F/mUd>9]T4I2r9f6,dH/rf#jg\^\:(&^ZHiP#M8ilOlHJ^?Wi,8XO5itLC3>!ms1g`Ks
%D"9miBc9u,Pm2HaKjl4$<de1;`6LPYcoNI"R!-E'Qlf'2h*5FU@&CZ)9eok%p&p+lR7\(PWoChY;iGTZeLZd"7KB7_K?gJ>#">5s
%BLW!PjPo>E+j)4JJ'Wo,Kg10_5aiS2q%o^VkHp1p1n,-#V3*3#5`K2ZF6]4hC>PGNi4s8C@s>JcQt*S#+)[WLj9D@B@(72cqJtKJ
%'?U0BPc5;5kqq\ar4EQ2_5r6P"*qJ_B4X*SFa<1c+KB6gFB#dPeRQj=i,armAA>3(*-C()G*@\6Er[DHUlKY*hDCD]:c8_l8mYX3
%c5rFBJsbnH&F=Bl&;*,HF-oB(>gI6*CC8,P;H]8Ca,qih.W@/mm7F;".hP3*RDBn9T,OeO;adFb-L&!.9b/ST^-AIC!K5::^=>3u
%#F>nK5TRZY0K.p`Q'JNOjEkS?Y<CCgM7r0?VDP,'>#[V)Rk90a[AYN4\Nl>-RD2Z?:%abdU3,7sdT/IX25;=D-b"6[hCa36a]I>P
%GiBOROKYi;^Hp%3`^>j+e'-[OVY`/)1>N"(n4,A'KM4`3XlI8?-/$,XL[O1g-h([6$38B<WYCU(&Q.\4cR1J)`0PlrCKV?(QT-Rp
%'7>3/7@O'#&C1PL>9sL:71@q@c3c7[#ZfoDeqI(!InPZo7-Rmr'.Sc)Q:8%a9Y55+kGd<;7;&EidZ1$bU%-B`'1hI.dV)[k[B7Hk
%QGcMZm]TMtb#^HY^*<!+:#lc,R\D.*'A208PVqiN;TX>/3$tL2A@7ucnp(74KWee@R/A):o>r:<8K_cTC4f4q@QENCIGK8QF/jN;
%Qo2i*dhtm]\Uu\K9eD*S&t.h4gdbn?qN/uiG'('s\p7MDa$QE@44:*4V&kYIb-Ad6?f/R%?,[NZbAKY!Z&UF)NAg"chO$J,7\Gct
%!hDrhU=XR<]@[K%Nto-#fDg;!ARhZ;9??KQGt2u9-='WKoITO;@0"DGM[JgM$a!L#/:V[\3<o6P8PB<DmV4J3dL,EG,l&6N%U+i^
%3Ok<3.]39lo?'@VG1n\9Wu48)J@WoKab)c+1H<pN)7sX^=DV8b.#sOW#Q=X5IrOi,Ok'X64Mfs($M5)JiLSYQA$;Bj.E/DST,g)!
%S33O5@h#dg?@M>=@hq]eEUPU/L)fg!5;Ok2jDD$;!hnkkWM2?mS5N[38>[R*Lj`WB4!iJtpX\C__g4r]31<5D:Y\t"QPN-hj5Op*
%0_8l3g>^H)]Ht'gXBp02lHATGWg+$HYh0R/A>Pj-f?d)MZNAIuR^N0hA]]ZD,sF]QK(E8h#!*@1:Hm8kK*$B.OXuRB_sZM)PK`!'
%@B"5=6OjutSYLFaMVs93/6dHi<U@QhPj+7[`-%l)6LmmTKo3.GpEE9u#1dI$D2/bF[d/RXNJ['$(c'8p\s/DHJ+4a4gUu%\h*C(`
%Cg<D$peIUXVc)D_`E>n#]7D8de2RS`6$0u6B)/.jmsP3bM.ssff'IVb/KRbY9umn6.t'02"')j'FCDL$?molgOt9Rq7ko@T=AkPK
%X0%*5'dsEZX4:clqF>kbc!)_"P4#?-q!ZV*T3Zb7Tc@el;W<R3`)J);3f24a'T9lnD1=82CP?E)5CNLr%\n!f?+6]EH\rDcQ$cX&
%_#!R*#-W^.m<#_PqlK17#OC=8CU3uC[UY!.Kk_]XK>u<:2b]Hre7EJY%N/E=9_D1hG*)'T=%\(pX?S$6DQ]S)m<9i5^NlQuWI3C`
%/`3*dFoX0Kr:<4]:@o2Y:/;haS-Zh_%<SmP-%\`3]u;M9#nJd/;m9?pmS[n+1U%+j!V0i^5RRs.)H`(?+C0ht:nrMK[*A.s9UeVG
%=Qu;%W]`o`YYL@E,MBlZ*&Ztp<AO8olc>HVQXjAtD=Z)fd20"`"&iKF>q,<8>gNAcNU2<o(6<t(eehl5I2PK32eLni'XR2&=CZXZ
%.>"ZbJI#,/03/10A-LSr\>sCsBE@O1%K"@W'MheoG-"+nq]q/SQAj@*)a?ZkVQ26d_M/pm;3@/*,S$M%V2aFA/rg>h0"c.9'J]4K
%]7"1B'5t3Lh)%VI7ATZW.25?HEgchsV/E%efs-iB'DLm`C+Dm:UZNf?ad5r`RL;\0<2<h*4=dqq`n[C@nTtG\P>+K)b>&T<S*X%i
%[.4k)-V!W&Y7u#GB#E^sAl!K9a'V4M)bpW<\)-t*.t075gL_aXM!QnoolDrA8tGC]7Y&=MF:Vj@%-@D<eR\lD@]s=N-t1MI`9`Lt
%J2sBuTbQ?`]fm!f\H3(;#2k/)P54#s@ioSD/RB^AD%bW7MZ@"+#&$@CF\gS'F`O/NgAK@8QUe?L%oKMZ5bLHQYu8)u<q4&B5,&ZP
%Q!kt"^&VOXN;\o/9(D3@l.[/+U*,^h*4ebj82dd"X./o]hjr:&6?O:_5=*7E"uOjai]4?q(Rff]8>F".bs`.JQ#3796e+ej\3ZKc
%ngJ/X!?QL6rF#ZE7RAD0DsR==WD=l2[`uqPcGp9VDMVMc"dsnN5ue+rA8pZbhhM$AJ9tEUH8:b:*p;o.WoR64Z=,MDH`%KPPh!32
%D'2Fh%_(4V.148J_>p&1/o@P+%g8\85i]ds-[M<'FZh?q#^b4LJ>8KhMWCpTdC=C($.S?_nAubr(G?bHgmN?-hQEQ<7)ORfo@E8d
%kK`pl7iP%7P'7\H'>YD0Oh`Z+>WWc@C.gtL=`h+j>arm0@Ab7+f,2?J+]nSKq0%\C#P&J3m?Wm1b6*7rf_(,nK\r(j&N/^=+mW`&
%U4\1<K-$pbM<(U4Do1kmFT,@E?-;5ES=)`/3fMVpfgV>Fm7[@h#4hnPUNW1GX2D!pfs(JQK2?X"KimaQPO>B4_&0_M!;/W0iE:e]
%%%0/'ms,76kNa/d&"bs<4\N_DPpU+fhg3m'Xu8lfJZ+CLa/'-5JLPh@N[s5sSRaa=f&:&&`j2rGU+TNOrmG+>Kqd?;=elmYTHa&_
%m$_J(IJnmb\n8-Qks'U@V?.EXEX$L[?&^2X/S6=<^7gVh[@3A;#d^B?$)7QJ+2-oSE=%G/1117qUPISIG9"%!\c0A`<D<g-70^rM
%+/BJqS,iCX-nAH&jTBI/Y<,j$TI5MQRHtR+mus,am+V7!rI-GK85mO#DA2nih/H&G.cCPrn77^O6iU11jrf]1!XtHc('J/j@3''j
%l0AgYN@5YFN2!m3?AP>5\_qfKWIl\ua]7tnAo#:P&j%8a0Hpft>e_31!2BfA`Mh<FgJcb8&mRE-fR\!mYimW_g(F43<@5VTPlt1<
%P!agFl>KSd7%B'J)@\@:T-]>K7A)/P,%_Q'la2NMBG)%GU%*NrrK:THc5X_Ni63'*`aT!W-?\8+9]T0al7#Lm4=?==fWjA46r)DA
%T!Hm.6,V5AU=M`&n%=XYgf\t(JFKTp17fAZ+U5-`m2IJ#J6(17HnCPN3JeuE(+"dUXq^P41!C:NZqsu<mV&F(Q3k?0aD*LCLFG('
%d(0VN:`Z$22i#aThl.nM#m;ENWusSPWba0F/Vik"PPNaB.]3du6f/d\&+83dNAon\1If.+^f&;Z\^hp"BF.)E;o$&jHVQJ4)K8B-
%9ef;=Lpe%<+um*@3%]:r#q80j(E&SbF.Q'uYE0&M*g.L*Bf`"-(-9r4e,gAAk[mm:[5$?qdEHqqIEOo37,?OmQt.$1hPI9T;c4,e
%LMF7OhiQ&`K);*6[++2eWbs$te+D!5]YF#B`PG2K_"[N-"XQ3\HD3)PL4Vq&S'S9YP9$1Mq=VCjVpCt,ofQT_`bEt@.c6VsXs![[
%Y.J/3]HjdQfSVKUW%Bn`k>D*.<:^2,16.UT4`aG+^G<-b2Z.?;]Wg+rH/G,7'dWke]?>*\&]%"K5O-5Qgb.4Fh1F@o2WX^W(;Ht"
%)e1o%ZR:&ZmRW)LC8s$4.X?9IK?=i[],ADBb,[Add%1rM]/0-ea@o9bT)?.pp4n@/-dskTOVRmq*os)snYtgUbuX8r6N\l)2q@E!
%\-I(`6NUAgN&P/&"-Xol]7;`U<tmc7lL&sBM[Qkc3lY=+X/\hG"E:O-7GCe:RuTK7_6=-?X#sk??r7!S"Rt"'qDWq[!`FUO&m(=$
%ML!kuTWSN',hSN^N1`cdM'=:h4jYgo+0u\p0h;lV/oB=_J!G3OBshlG2XjO1qo>0;Sc<,flEYrPnsKISMsYkm(2`:VdLI+KPN?b.
%@.@ub;_9)h>)[WZol,ZaE/'PC`@-So3#"3I6PNfG.`Fb;V>/jnKY5fj;RYYiZ8F%1nu@>tZBQ^efP3e-nSD&&"HQ2nO#83Ae&Zcq
%ZiisCBN]S$+#CXs\.)T8m[0hqX5u04AtAOo;]"jU7<>=Q[Um-mL\[!h8Ufk(GRs)?Ih$nCTC6<YU6X(oj)/+0c24XE?n1bg8/nV^
%MR3Y/0_HQDTFWlD""-O=k)j6,*]lN]]RbPeC"1R30dZ*J(sOcGR@'kC8t=,&N<A"]T[?d6n&kXs=4*`WLY8_1p#AJ=D6.\n"<3oh
%pKa<Nh#ZhIH&qP"m`%hh8mlYZI@:SK\U'&6AT+I]R?/Tdk/)5o;2cFJE6kT/]!ZA6D;I_D^,<LtOY$aK$XjgCRF8Y+OE:g^=7'aJ
%cUMkf/WZBH->SjK"Z7p*C[Q>RTH-k11g=K(NugLAMm'8BdX3[+m*Zf7]fH9A":bVk9`,Cq/sr%ZT)#k+T(WK-$[4qGhcrG_JN0*A
%m@CIf%OiKRTkR$CmOa3j,O2>YigH_L\[a5jI@$e6g+E?@PcYbZgtJG#-AE!\?*p=k@6Jks+7"\G0&^oDNb@IQh7lb%WiS=g"fjA2
%,W>URE[T+>!rIaNeXhB,rM^I(30XCNf-d*ohlkVMJmPSW,8]=a%<.n&X(M`dbktJ&>`@D!)2Ot@&J9J#ZBm#Ji-+mMo\/dr1L0'B
%5hp(ul2mSu+IlL,_?/#[np=X!K,)$_PjqS2'5g%fO@+cabt1e>GX=/]P^/P45M:MH&/2>k@4=PL*Kh*J'\.@E*#t!?Sfih#T+lp6
%"/**MUXM46X>Yuqpo6*_BF@c*?H\8PfA(t8aB>ii8"`FqVEr^FhclR1#l-#SaqEMk0r8fVO(S+EMj_.^cJL!\+'Q$>'6ErpVbpjD
%ng90B)>^i1:6tif<h;#Y:t,o0JDr)6l:;1_)AuQ]GQI;A'X^6p@V$;b%18b_]K<a*qG(H:cc-+gM'd=e"K'!!=bJ%mh04.q+rj:F
%9+J"_.k+NTBc`#&=\-M:Po&mBh,<_V,*g%DXDkq@,E(qo)hu4KGpGJ&Ka:R%*(ZeL,$q%MZ8>Lcf'-Gt>9P_F@)8No,bp=ZK,<!t
%&qU,2-Oj'Q@'[!Lim'&R@;)\\="(I+-n26TQ.*&Kgb(2=n!]I8[a5aW@<RI4TN`*='1P&&$Be5f5R0tEa90d773-1i&>Z"^UUVIp
%AG;YFY'h5U/8,2+6G$XG7c0L[9d/Ofgs(d9qB4Lo.10!M(:6""\9R#f>G?8ed@=[t!7P1M-5gY';-_U1]Sbu,B"7or=_3I2=IES_
%Di'sHDJ3YhDG.Q(5#:ntk15c+a@:oZ4!>Yi'm:th8!8)$kYNH0#);9.k,47!A?6.qN`e";jU6m1H,5Zh*k7XM]Nr2<0f+%/8[0^W
%F-fiG6ac!@2r#K,KC%t*@O@#21/VrSS#OIW1iI,jA'U`R7*C,h'KI,dXst%0Vk6*`1\2&%Y2fQN3G^59-nHu`<Pm>Q26^joP'du6
%+#iI(i1>H3g2bYX"Se@a14N+(Ig&A<REqlW2EnN1?=<-cXMcc(@@R\XZ>Y&HC<0@Oi.dr.L*&[G^]KIg+hIk9>ut*)"'DE'K8UYZ
%B"mO`B#OtZ.h^lUgKae.J<m87;:0,'oJ(Ugd&'[>bLkY(^A\pAXV`WE)(M'7HHcd&S+L[8@"H/qL4$k9+[@9d$e6VeJ>%B"jF?rt
%+Yr?aa[07c(gDt<Y"]>](fcbP!,H-/>qrq/LH)>U"Z1!#\fdkYASiI:MP`6cR%lABWF\c?Lg/:[!0e9S#uNJ<*a81+074<oL"3h/
%CFcTf);3RKcji;aQ/[6^g$C&"$qeKU&l`.&3lU(m78T9Rf$Oqr"jA-$<nSr:38'QSN#o*OW:5*hXPbCW/_a[pA^=D)*dJRPKA-Bp
%^Aj'WCo,A5VD_k@cne.\MHfY7P>b\0JJnDBLcm9LeQ$#_f>8):&Gt"&:oM74PFEMW&IFbWr=/O`+;E:0U&=%B-K;MMJYQS>>(bq;
%QUq:]6KAnSZqY+64I^?t=<VKUZk9>f.RYFp@=E*mU(i;`J+<@DRY:r8YYohTAj'_d&pDi?No&"`h7J.1hF[3!%e(-6Tp,`=X&Q-G
%&A4'dG)1I;\`VmG\21>FpbXS#q868e-Mk@lYEt3;,eBG[2FRHigbcM=Y^<Q]bGFn_ra\k,(*6L>)oMXq[R@-%5a'8p62T?Hpr+a.
%HtB8n-@M)+)%$a+\RG57FF+5nJ+2O5>*dq)@_E_3hJ56d!*.1mI`JD`/8*dN1jH`I4>oghL4_FA%osgH7PbcrE]pb&c(o#b-tnXY
%Za)(pXqa^/O[^Loc^7GDrgrC^m':O(=L8Vor%?95\AQs<Lk)JW@d8*iX2%4pKXEKGl*-A#%L.IfAls[XE9W,aZLCN>TA2HD+M8;^
%)*s+<"Vd.7q"^,g='VU0kQ;Y_I@CkjGhI3ak;'Bm;CtDX`nUAk8Yqf5cZ=3Ik&fg#i\*oD:j,4M4[(\lZ8l`u26<G3eW]h.lO0!r
%98Z^1`@BatfD_HJp<FC#![>;4a^81oeIKjE%^!sml#]fna?H0kTm"[:%$:_KT.Zhp\\GF)7]AtsLm'K`A2]g^WAmQtgI)`Ygm2?b
%+#&=)L+hX"7EsgP`\SDCq#n.J2][)baY7$@=Cl<",la4I0NB"7<a%T^$u^H?iT(O\!>:Fk`R'T&^.agKO&C_N]_8$@/*7/3pKQUF
%]O1*]qj$RI^73l4*cuVerT[lb*d:Rf.iJpthaW\;OZc3$.6,K=TSMLg=8<8aM<d3"8J48n)V%)cpJM_ZU#D^<bk:VY.Z1R,cEu]Q
%WMs*M2MQkX4%^*OT$ONKRJ@\GEe.'?:aB!S6K6ft@qEtYDXd'01\SCd]^!-)h7Ed;HS2_hfmD:]TdKWl[:=HB>)3*nhp[k6jQ44Z
%#&Yd\J^B<;HPNob;T_98gKDrcq\IgRbA$E/L"bZ$Mq5;Uq.S(786kfAMtUn*0.c&(;B@dc4@XX?a)SFF'lSX9^dZ^,b&t?\b,dmh
%J^aPN-E`<j_Sk<8`V<6ZPY'AZAH36/fu+#(9"fK1hr\r#>\a%!Q1_6_b_Pc_3fTe]atQ/!@ULWM-3-EF<O+%gH]qMe=q,rn.1R3R
%f#5I/3JMG"A]k`br+3Jo'+b.4coV=Yp=8AG"'4lqMuQmDo\i.&`J!S+UNUj=[XuVSZOt:ekQQ*-*m/m\#;gQ$TRSB+.2Idt,J^^+
%6$0<d-QEC.$[/eV=6on-Kt)1GS>YjZe)2Vl=h)J-jT&f-a$Q=#;s4o1=sI7.qg+sU.XZ46IcmD4R1HM)6r*cW%u#oV523oM_>G>r
%=FP2!(%,g\G'C@8413Ij'OJCr;]2qabUq&]^%*LMj]5X&N&*b03""]%i2DAWUO`Ct,7-6o/!;;BRbFLo<VH[b-acD&@ZZs=j8mE-
%U_]j.e(2_NBXUD0"?0,Q8YauKBP_f4``=,<USQj4Is)f3[ZC&d!TDT(4AE<.anqT-6^c\g1TkuZUZ32UDmpLa5PB#.HUTUlV5(op
%=ugA-/BCP"+%']dSZ=^.&3g4d8J0;HOGYM!,=Vk%gJ:g8@JJZ273Fq;-P,WHU\;P9I1Wi\Bno&;6mF/bEjDZ"QiX1&b9^OZ'QM.`
%`DX+&f07<dE^Hs-*saMYJqW0\pD"9cN<>D<rj@0\S@^f^91(Wu;fH2JTs>a]V;l<hr#86aD-psNQk-bjYi/QgJLMqciQt50]O8IR
%:ATU4+q=*.3]dq=7!&I%M(W_R=!hmu1lT1b*o^G*@ToLh*=qrf[W%'RKEhb:;*%P%7B%>_p=O)E>pXV($<]_IIaUe\JB&I8p7"d3
%ol:$q7e4c?FY<17J9(1\"qqBI-t*ACU9J3*i#tY+-rhifNC&K$Wg%Z<V]l>5(rD*]Uk)AD2$HGpT8]dgp>V:V"PGXHhlDhW*$fD)
%5]p*n)DsAA;H$AIO[9H`MXb32IPi]=jiBjcM[_u#1F-n\7d<;8[t+gmE'pj'9n^$HF!UE+JtA:kp<A;-Q@PG0V,]Oh]WQd8'NJ1G
%@ot6nRPVSRPIe)Q/N^k.RU9"V4<[fZd(.)MCae3o?fau*0SQ#hAYNeXh9$o18jr3JW0*HiRmQOh*J+3BWClt#M3qI*^F$NA^[=5L
%E,Y[@'8b6*.["i>\T::X"%nk?o)SgDVc'`M>kpm7iPYK!J&(AK"WlhK6XYQ^@j=4PUb63uKGNgj9=0NmM1n/G/-ZFI(]WA@S,d\K
%+]Ak:YOhI62p)0JH9'i/5\9C\L4!*3!cMZOee"*7Io`Q6i'eh.s$%u1::BP_:C[5#s&!c)=rV,WC"`cI8_BUBQj2j?s3\,LH<^RZ
%8GN2Io&kKfL\T5!qkt85Mp^kp!`5s+22C#@fFS4&2[Geb?;9/*T:IfgE$FS%a@"5,EIRr:J&R(XAqaT]2OKc7%`gPTer#r+<ldT3
%;U69E!.2A6(RP6hCHSW&p\h/-p_R+0/-T>*5dY[hQ$)cc,2'ob0<^5l#>gFe%WGoC.$4pU;=\)KEWXoNO9u5:mlb`2rf_iN,eT3R
%ge1hhM^_"gPd[6Go^'JOOTPf#<`4!lWK.YL5XYpHFSV?i%"O`Mi92V4nC;YcG-b\_2!+5Vk(c!Ls#2T&<&Slih*4U^%eT2T-F2SZ
%%t5U0.<pE[#^U97K,2/CBO^N&6)rWF#$DpuC(Y.`7[)UP8'(QeSG@KZ(DWkk@-CNj.C.@*-p2q6qL/qS_SbMrV&j#b/pVO(.c_Su
%ah::&Gui9<q1f"3Bb[bHmdCJ*^n/6:0j\BE@Zh^]+,dkrfDsN]%9U_AMa8mI990h^:iQL\qFY$R%g>.,Qhk>L*=a=$,^@]f6F0V+
%%+I3UJ_S3k8X8,kpAp@&n#$F(,j43C.&T;IQ2h2j9lksr>^5iQKeN4M%R5B@hZ:I1O7.@7HI0if/,@klVH/ogGM;YAF<Dk5E"](3
%pLe6;p7ru7,<M<k-5iR=Bro.g4dN%imNBXcP-*-11-!^pTc6UJ$iqnN2_uEQOt$^4h:YGmb[I7FBn88I17geK\E=ZU2pW"">[#2C
%?\3jG_[]rXW;LCS/)HpCRR.a%ZQKC9!H-ame,O-J7csT(f#GW150kfORK?jsGnhF`pZ;.<b-U`/XM/(nJMP9dJo2k"#qE_e_]i3a
%(TSR90UcNQ+3HJSc@Och,jW"-inLqhke+[:'CMd`WROG\f"`F`*gVC?NPVDN,Z1WTX>eOk!JEF50IaX&#$gqlSsYR'R+;`ISh_A*
%g9h<U_BC@aeb&F_-of!:?EdH!'34>_\WC3l!pH?KInj35X<Q&`%PTVPo2UTWK/cF7>"Q(</A+oVZ&1PXVR%6g03Fo]-2dB*[LF@N
%m)C4u'9<$tQEM([$PR'$.>q4H8::44h#HV6,W?Y28*?0Q!D4G32mn<E?UDpo[S0+7Gb=CcB&4!S/T%9%am9!L<=T@>l7`:%K<A+;
%F31(%*g9e!eibCm!HOap=k?pr`'WCBi)%Xp.@S=3n[h3m\H"jHfO:>*>E-3O_4E+^-Q2ZpSClf:-dE\%:,5?+R@Ki/Ltr@?R:?!C
%'Q9<BHL\h0:VFC'^/4B@q1LiP.3HUV+CjM6]/?/0V%pA#S,3OQ(7a)TIh^EZ<X/fG2/>^+8sRg_c)6s'&10[?#jgB(:U"W>r!-Vn
%1@,moHfKs6BoYO+7gGb:8h0A!G92b""JSLtNaJ\!l6e'4_5[lXTE2oqoaeNr^u/(6M8ML-FNJuBEeCP!01m'k?E@tdmQ)VHcVsMh
%Fo:i`q?%IDU:)KdGk+%6P\i6&&tsrVdc7U:!2V@,&t?IMU1-^H2::mKc43(\M0"_$o]'pSHXdqrf'?dFYF!!c#JHW8:1Sh!,-E&L
%JM]+:?*L+pf,`s"bLn4#_!!;Ldt</TXMB$Vg$[2l8bO08nXl\-&Q0[[:,P@;aZ/3GDL/6V_*#g?oHs,a"R.nlP?:dYhh'PrBS=@K
%%DK^tI@u+u/_M'N@iqUjmR6/e<d5MTR!X7W21VOr?\I=>4NI:n[pu0CGhKE+4P!j-.4"&r((sup(AC33.,([i&%O#T:sW;TcQ@%\
%!:8*O'4A2bAJfuh!eblTa:2RQ!YZ0)\(j<p<JMj79$f@p:L.qq>h1jE=n^0\1dFS>Q^g)pgN9o9eiJjE?(a':`NO]Z-j(IXT\;?1
%WC[<);C4f5&sYU3(uYpaI>3+kT:j*OC(_H%.89t2qE(\j<,BETr#pYgI"Wu8VktUK&I954K4rr`#;V2IdO\>'?#S+tFLMnFduGD/
%LT%Jn0uUSY&uW:P\bc^a]WJ0S:7HI.nqmR:,DCcVf*6L`BXYF'd\^OZ:'Ph8E-gq&`*sk?^+bi,aahaYHh"q%^Ur%3aLk:.T;K="
%[3L-'_G"hXVd(1%ppN%Wd'JV!5ck8NW)FlR(19n9hGfY]N+^oLq5Ut[Ncnme5Yr_WYB:E[aU.0EE61@`8L,m.3a/1#h:2*B<U(u7
%`@,%D`+6b$$I*^7#N576nGrTY9S/ZTcbS1:K[E%h=#W/$+PlEB)C<H3'7CH"-;>N)gSAq)j@=mKSIl?(:/`&U<)o2%edVoT`?`4e
%D""c^5C`3$H_-O9*IU7<THHA-Ch`YCU5VT)8iidARM/KR"_+b%eVHnjeXQ\Op/,X]?0%E^WDqbmYo&ZqLMhhPI(-Fl%kGp6#+epc
%<BTeK<X-9Tl@Yb)T3CcJfHo.7rOR7,GB6"kfT$DDjhV(K-k+08Gd#gC@L3GWa!$'$%r07>n*9ZQ(Z]CJ=HJ-SVX?p"^,57kf"sfS
%Gi\Onfbr(footdY(4RR@4V@,?Rj'INWXY:AqIL"TEK,iK]d*`Wf0h5%mT?qV3Cl^)^o(OdK<s&%cEX$.p3LdbD5-Vs]A/P[>fqDF
%Qj4!^hA`uc-H^:t:HX>>0PcZ+k(d`2^4?^@E31fcZFT1U?4rV.HUMhql3'LeSf>2T3AVr:Qp;';`<lSuTP!<S%aiB0rQC6RHPd[Z
%NLbR#'bA^dEpJd7g`s@g<#*Zg3SGXq9;Ns`O,c+t@;r$([53P^U+kTP<EuUk@F#XC3n;U.g5?tHhUK@YANgQ/gqs/Xg^*egMgr,N
%8,2l[#,1W.WAONh&.:<C*C8)#?CJq2Ri`rI5>l91k[r+EF*_re>?\sS1$F8.%-43'_!+/d!>LP><MSo66<'Vq_c0Q+hg1D-").+d
%jop,lM%;:q'F;5(?"DN&#*og$pJp"F>AM)`m[8jh3MdR#`O26ZqQP+M^a_B35@?-Zc>Q:F3Z&KZ58eXAJM4.nKHNRI:T>V&4B'po
%DE,:"iQ4fKa0'e[--oE,9$WhH?!guYn$0L@fUl)qHShm6Lm,L#k1/]L,p<7q/'^l[MTGY/1s&"E42]H,AB"ks^9Y9iVg%dPT%PYG
%Xi2f+&TKbD$\=MQIrt)+(@,l;-KFfM"e89JG%j3++OaFOPP)kD8^,r\5JoZhaPjfo+!fgpNja+A_h5i5jtd=coCXU?=6!J^cJ4D9
%6O0D5QmdqLYUpD"l*!+!jU=Ws0=OnLjG^'Zl?MXci_rTf_^<6<$Cgqg^i5'd.U';t`o-1+_*+&Hg/'+%E1_e+M+W8KVD,94d%qmY
%qG;-a$'VlkABS-WSA4Y;6O^3;!g_u`7V)=?P2AEkmp5s#N-I!&jk2U@DkNuW8JCZ8HHX/7M(GBh+.$r>RhsM>CUg\dq-B1!PJ(t7
%!H7Vo;i-XcP<]@o\fAQ;,]70S_IafM[dL+4'Pp!>aA5)[g1J^TmdW(d0jY=JnAX.rHN`0>)1Og/4e%o1/AAAj_tdEfMC/,W[@akh
%\4N_-<A]Z-W@\dJ<)jZH@tgn:2MK)Y-85UX`nVsJ2aJ&&Rb7!h"M_qcA.euakm8tI"s$?#*)!s$)OF[l][8?UjPs;3Sq-Pi*4I""
%GYqu4<Nd;;r[^0_Da3'H6R]Y=;Sg=oGo"r0md'*S;LcMr;KN3Egta\O4:$_p'$I;W6AOtC\kB*lVnl_.EL&td-_d&<e9=Wl!c-Nk
%"WgL6-"+BN*@&i%>hUgj"F_iS`q-&Jam-MRO.<ctZaGIr@o.Tock*T$M)WHU]nj_[U;/3$)D,l^:;l`*B^AM,+nqeGAX7bk(SrT@
%;,"]ml@O:bTSNB6c\QltadA5#K-8`X?,hN*Zj1S`OpF&Rm?eb7j84kV?>_'33K%DpVjUC3J=p4'1Bs?cAiaiV2F;S4qjj&E_'ntk
%CYaFMg1b43Y:],=efM+%g&bsbK>:L.[:IX#"BhWIm7PIFh>u(u8/sJ!%9JRe8\uUU'Zf@HiQM!CM4h.AFB(n?\^HC"VQCl]2gab3
%3U-R;U&=_ZK4Sr!D"X@<m9um`J7(0"2I&%3K8/^.BY"626uZ%Lpdl!$-/["V#UVq^a4BWgWcAbm/*6gn:toup2I@.$_Z5\I?+=cT
%$NuG+b#1,"fr=3"=C[U@gC03HlZJ!/g4ofM%#8^M=/F/51,_*t<AD>'bU6]chV%C^mq57*bP`H,`L:f-%mt1/X<9MRL.)T(2lpFe
%"`&G&1;*,Yk81h!NU'`*>Ke.1kNml;OQCDlGbVqJ.^TtkZY&FGYUBToL.GRb7B89WM/IEs?+fRLe+Va\;CK;\,6.emEOqo%m_UJG
%]@`^cJbd*G'Y<,Da16NaMmp<iL9bed=L`L[R`'E;h`p0#$L9uBMIgai*pTW>&S!%?j'gQ$;JZ]a6L%[\]"`RKgW(iU4Ls$Y,a(%R
%T'.<R0N@g?:hXDEb`n3-So6a0e^Ij;e+LmO,"`cqWOjegjI2g.K>'<_&NCB2a=Q?R=9#;V4\E^"*a7E+F$[IS(GG[/L.<hP/V_LS
%0$IZaihZp+6s'e0S/$*8^j?Z=>X$HPA"VWEN<q9B]d:PC2bW<-kT;+Aji%<dD7[QU%V3I)"L>G=j+("I\puL]d5(B_EGHt^8G9u;
%)S2sfJuRcP];tam++4&F7o%:0<:#-Q+i4VK>$#O<e9AE("I4Mi*9auHMHLY&Cc,]LIiM_W4-tY#Qg,6L`<^o+:iW0@L'r7i@2'e,
%!+)>0^%V<s;I7'pBBPo!Gc7ZUpG'P'R0rWNf:8FJ->Q^$f??Ju#b`s0)X0o2:o_$XH'p`nUDe3,Q_+$iNlarfe2L._oAa(<oC^;?
%&?nO0%f'5nBr`3t_?@6U&dUsJKB$crc\o&f)<emZ3m"0S0Smd'XD`CD?TA&Q[\W3kpu5.(?Kgt!E@]C0U)FM,,W:aK2q_.<9I4.q
%6E.pCL%Cc'B&36:kY/Kae&=])'OXBo-L1[nDDELU9"0qHgYKDq'.?1'q9@so%OYHBn')&E+%n#Fg.+L<<Y*==\f8+M&=op,1,QA>
%Gj6'(%bK[<-Z%>s26(+P#pNVeJB>M[%)!4Z<tg!lFGKLQk1,N[,no5>D\jq,MC,3T"C75?5ticbG(=g,<g`?gcueTa[47_9E/60M
%!VYp?VDa1.9HuDPW]E22oYhSAS!WZ,*"[_B/L)upj--re*(kQs32MVJ-`\-*X3q(UR&n8'h8=NC3:Bqa!-F/Cg]K,-;(gcKJ!uSZ
%rhKN@'PHVG;P4OH-952C):Sq8l"3Qf[jmhEe,bN3<s'...p(\LJAbYRF#aEr.TWOTDic8g,iD]'o2T`[&i%9NCW)4+\KD8J;RZ7K
%XI/'"-oE0;J<9s?'0E!e!5lm2c_-#ti")*C'o8V3n]6?T)W\F4>KJ-u(>@"!C.NAkr*o5fITd>[TWT*#3#81t<2O*um,mN3Ihqqk
%AlPJ=#NSs;82(oDJWrO]Wk<Fe4-+tH!h)A2&P+%l;Z9[K+hAt/"m^jVYXSS=L#Ep^3)'ij;1C)',gM,]+Fipd5d2oACIkApMdja`
%nss,uX!sO;JYQI&UB'r<S;^nV@@>rQ((nTO2B)m$bS3XE5"D:Ljb,>*(h1F8Jnn@e\fgOFU0WYno\haZ\0ge9L=snBZTPkKOh[>R
%!2qN#21+YEpJI-Ve;&2;]m(">0JF>Dil5A.-GlH:r4+rc+GWQ9L5+nn.sg'Mg(A`1Ti8h=8Cls$*fk/n'8`_"mD.,ol/i1b=&s@<
%RAZSM8ciCQLrtV_YPdZ"*@Z#L,RI%fQY)>DR7KaI@]Z@U]PoXUL#<ij&YOE0:k6)B]GXRD&RqK&\\>i>):hk8TTTS<a1]KH:CWGX
%"UC3TQ14jlo`f)0'bb;'"Ra4QLuoqeWNdo//t:MZfRAY2bu^\.&bO8)A2aRRDo+-YccLMj2W[8!2T%Z%:1\e^DL"e_Rg*cW%NU<j
%'3n'i;Ur<lcXi>s`p9Uqb0i]%%D[BSkgJ"C(J+mj#=e)R>3<W72Y!jRZ,]n!<;^?P4dcG>m#@G\lTt8_2l!kGOufTAgEn6LWBJ8<
%-jmS/3s$Z6pFV?FTZNGT%oP.irGJlSopHW%ENJ3"1B4AOLTR8l[;8U3@.g3$N\qV\?qY[7:R'Va1%U%;j0a1'kk?d*Lem]H3&it6
%:$*DCe.N6#oZT-NIb)4c9Zt90P%k;Y"`m:L8K2^^"&e'tg[5WkmBrU-:-'o4(4qUGO9,QCJI8gPVTa!)[?JaZ29[WX[iU]LEu.XL
%DK5%"3W'.S+/]->gKCliT67ZmO`@Z<+CRS_:`$4pUj!DVjUg2h=+S.MP4[2GLD6<\!es)Kfe*e787M]7S3n!u4?\GK?,]T;]$;>V
%%+_Qr(_"r4Z$V,]UPYh\LAjMId3&jKfL,!lm(u61(oVJK(;r*O*o[/B9+oB<3.EV+_HWB2=c#m0oPSJin!`'RKm=)YmhCWXj!1BK
%S>]sCk<oJR/J))#FYBL@M"CdO@'nKRY3WajDVO0bh4@\Ppp>DC9scJd1ZYfh+(r)s'-b7CE7pq'I2?q$9!SS\lbadPM$?BO0a`*o
%,6cL>f,K0<=W.^-d3Mrs%p^.^kTW"4d-YT%*pQ1>K.(R$AW2G9'WRHG)%/GR:c''9l:/LZ3$L#22pEm$KArO/^M0t"#ZqA$keS/4
%7X&*m8[k(@PQ/K`n$QLV;Fp"-]=b/=A"lTJ0WYdr[J5>%%D*Zgj%U,EBJl+C*F:_hQkuL!7Iql.%#Go/]4)N$B$$"J(q/-iJoi`.
%!\6LO:dS7D7BbI6Om1[FSpLLSL50Oi;>db:Zcm0U+?#<T2f$u]cbSO>pJ/VL'2mUhp.d"Z#hWn=D1_,D^8s"ic)t_JOM%YoEBpdX
%HX>L^eVaAYcK=f`@E2WlBt`/B/d(i3`+FQ,\aD]kOY0s$#45(K]al./BpU.[FF\U)0`Ee>p#P$2f*%hqO57`Z%@k]ZU)=nmDgOh-
%M%tZlj8SbYR8:335=Z$K5sBTU*Z_.&hiCS<]jUD!N+4&`0=>p1>\Doi1h4re?m#0:j4YD-pi@moAKp1uAN@i!@F[r?HjKPA70e%\
%Q5<E>Y5@6s?165!M,o[-U`b@%KFBDsT\i`qRkStuE:&ffm!+_bDN6Yp.\O$rPWpd4lCj,[cQW6Yb1[puV!3&I@0X0H<'^oOd2j4;
%OM#OJRsB"(V'B8^LYK8N=52m1hR_QrQ^dZTThkQ7B5e\Ai)*#\KXYCTLQ>)s^!iJ-Y$V.uLFj/DURPq\3cr]*8;XI8N@GsW5,c2h
%Lr(Mp8os?"I1uorp*Pb<R[^$.&!.hEneJh<am"qf10Eu&nu-nu>q\Q3"0*DE%9D,K=\3;&^sEd(H6.hO#Y/Z(HW1A%?6tS!`ABk`
%HjlDMOGPpH*A[7dcpSea<O8!tTPHpdS:O)M3@n?5hKV=+Xi#!qd^@_eg`k!>c2d3l:*mo4,6E%I%LI<<LLb$03i]pWosnA2g*`GY
%+"-AAVM$6G+?G,]4OKhDKG";5kg.8_C*lJNFVV`C@KrXJ?Js>&rirHtNI4>uko8Rl!DpRj$??aT92dqkVRBTp\@MGp9KJ"OpaF=;
%D\5WMe5\s3s-LI!A^LiN&g/S8nj`BM/Uu]g=(jVWI=6mc5lB6iWK)al-I^od@+/Qk)R4%r/V[M^iYB9'\,r/?W*=3MJ`<+A!Iij=
%*Hq9"8L#`%K]BKAZum.:$2?C"Rt;'&89TNf%[KJ>-FoSE)u6+*8,:S1YcEA<O?4.02(6]Nr+G"E78U(q1=oe/6!B,%]-\/1I#g5`
%oCVsh6hccI<^(]jK!C]KM<MnB>6>!rFNA*<Z:7L88$NmY\<c_e\:&J:hmD@u-dSXj,Z&-:7%e@3A7\RHK#BC92nlq,Q\RLFdQjI5
%@Ij/s[51S'iq?5^@3Cc>^sG+l=hR\T`kgY$ZBWa\;gZ-FmnYq).@>e+Mqu$#*`<d2%;r1USk=8('W%:qQ3o`]6u!:;9eI:PRAckW
%r>V$ZLta97@9T',<0%<sa:MNL6]>>&^HMa6<(RIujV8S(>p;jopO^kL%iS^Xd_"c`,\&DL8.EWg$#!W(_$E(J-R'=oPc_R!>*"c(
%FU7%<N;lUeE[E?Ur8m18Q>@r3=t.H)1ODo!-EIJ6o;HtiMooWbT=]FgWKnTqr2Xq+a:Ur`%5el`VY?XLW5roS8#m"$+B`O/Lle&^
%1@\MaTB]?PQW$"_RC(1dCRPkcT/7a@UluDGhQVr7M(X7NVk,$@SRH"jb1gL7pak!To&ATo1=$3eI]#^r[ULb;`F83&_'Y6ei\2&o
%=c6/U*V@M]\R\SY-7(jC!II_$?Pb[5G*6;@I>=mO@jDVYe.';_:!'X-k%n=;?B,Z:YefmQRqej&U'5sU\9^=f,G7eP3*ufZBN8PO
%LSU*Yl[1o[T9'TY"^6jsa3E=CD7fh>I!]5I8?"?g3_i\PVtqYS;gT,t6aQ/4@:APc/2(hH072B8cO<Ki'mDGN'b#G,THB;VC=FPh
%T`8Ia(1tnL0U<*IU@"e!fNs#:'eU7P=Ds>FRGV-=]K&k>P^M.,%]BZYSBAd9+G/LslYju?5?PbdDY4WA"-JsV'1$"&//4;bG;Nl]
%PZ)G@E2;#dT@_iI[G4i1q7PT\DIJlP?b)4*-Z_1"UB%on=V?TRJ<n^fA.J.6:5mXY!/@M>c2&EQ+,h/]\*dd,G>QE8,g18!D=dIu
%D1:ec::>Gs*[FV:(N_Erh);k_+.HDM19Xd?G-OZ3&Gm/@b,6#GXhA7_R)4jALEkc0fZ"UQW0iQ2)D\aK5tQWiM,U[2+eVVd%:M6T
%alj-E<YsW0&hsDGXEK+@[)H1K)+.@rVJAjnLh5/CNT<]+ifqG9e?FX9fmQ=fO!punWo?"^aO(N_K3b\mC-3FF^9#E(-/r*[H4/q(
%W6B3+GN+0^R&7%*S#earO[R=Fb\8IEE&i:Y?so!C.4SCD).:@\X6^0.kp`_iZ/.f\I4NVfFD&u)D;C',!<f405STHu&F'\pb95g"
%$BGHaJI^bdSjV.6_*<JW+Zf(&#e)>Mq"l@8;K];ajuf"V'')7A'8(\Og`0[s[frLu2_#<:]b$-!J6>#A25g/Zge>`ka.nZ"FBVM*
%-\]emJYX=3q'SHAW-T^pVZaY&MOU.;1iCIVFpFUpLmJ3c(;9KtJ7K/Re+"BoER$.jEdH?X7kGh/VnB\S,X?Zk+W,mH\IalB42^oH
%kZ7tL.,^dIS-;HY!F31MBY%aH/+V0ie`.poCj"tS0b1D#3U@d!p2p[RA4^"%RHYP"8MQ9o.*+R$I)GV)TGB59l.prMXtY<X=lF.-
%"8mJhjg,cmScIhqbGV2@Odj-8(3=rlL3SrNF4/:5"eV.9PV8p'p'^cr[`p??`ikoiq?Ls.0I\L*JE>+Y$_Rfp`kRY-F6D7YLoEde
%;kFHAOmI[4?ZGrH?f;'n+O`k>&pQoAkpGGS:uZ2@Dca:E#n]T5.Y:<BI;WN\*l?+Q=(h:s>i(.#,B"O-%+mikZ2kH!BKr?qN/_%[
%^DAu#j="(%"Y!X@\-jJID7-u)75N89<h:)DN21#)]6PI=9e%>Uo.r,^UqY>b0PQu,nhEqb]&>(\\k_7ZNIj]p@b)O>;.sqc?Pl;2
%]Sg#@=De^VH;ia$+BR:PT[574%KK+@Vh/h;C9)kJ0e7pN):Q$1'@-_a/*4g2#0^NM,#VtYE@2qUhMJ2r@o.V(2VF('+lauYFBKjj
%&G>]Wh_*LZDh1kA;3Jj*<tp!X[E#S$InkU9P'Mi0bUNZ4M3J"RRGu$f("j"ShSR)S&]-QhZOk;i?a>k"2r$&qNRMlJL9jO'=>odq
%!qSelF-;R$(rP"f#AZmqW;r7fm:!)PQH+u'6#HY]"Wr&mrK'&oR$3Yk##udr\5paaeaa+DceRK_MI)>hQ$tmXG'DcL0jf+d%;F3X
%jUPhr+<a6Q/IL?d#d!d+)j%EGHW#79q^Z>G=e[*BjRfA]SNL.e.b:JdqqtVV$E?t`I_<seU6LT>B(3aC4`DmUYnHTADq`!Gn4j>'
%&?fXOl2'AOX=b!e"p+C*%<GHWIVUc"=Mjd!1oh7+HX62nKZ$"kTY]kZD[mXDUY@^mhTI0b:21_U?7O6Q$Zi&/#ng?#8"J]B%Q)\Z
%P>Lc+:!IU7Kc\G<I=F#LMH&[FneGcK6\E&0&qqpG;qW[C)1F"]/O0+M)Z@buSR'fNSkX\DK>H)+27B.b6]r3!%TUOtl=Jje$3H$g
%;6qI<-Iubh8#ih:B.%iqAZpL;aWDE8WYQ\t3g,L(ksd/R;ACDUELtS4eMMbF3i+647*ASgL;d#tU@NNMD9%Q)0Ub4]UuPGh:F,(A
%!Z!a5;E)'1,R<m9AE\XB,+0^\-t6(e9#)5T"Mr&*bCK9jG-@_0=?o-n'`f3Te:8m()\m(m>P,Vhg-g%m+snhT@&SoQ&6Z<MK@7$H
%"Z37JW`Z*k1d+h'2abmj8/7%I9BILQ^c!$cL'<^d)eHC1Fn`!g.VB$]0hC!!'36l_[/;Pg'lPJbB>Jn(.$g4\1BS48aW>^t6q);f
%*Dr&UKO)$]'q"P8)XQa"(I;B:oF=B;p"saV2f^e2,usk3/A"B4/GJ$]+qNQ=fa2ha\G<41qkL+[R$(X;c].cBmL>u&[2TrFVc=a6
%#hQOU5uoY%_]aj.T0<H_"ud8=(js5S,FBILM1S\@3_e8hI'W=tQ0CLqptL[+s8,YN$C!9OReIZ7S()tZ2CrPUi%`Al=2T2[%kKhJ
%0m8O*m3`]meQ%SM?LoVVq\gC#4ZF6,nef1#Mb@O3p_*H06T56\jN&0&'t&\gib2@8Fi'=tH.KPoQABBU6%+4'8->!"HH@6KX35\;
%-MVkl]mHsraZR1#Z&GHZ0'X\2Kh2IP>`)q:<EMY"AHci]rd='ITK=;/;%.H-A1%`hRp_^/ZhR1Kr!nToPhsD:U7,=Y5f"C8PTQse
%OC5t<;#d1i=6*lT)T]h%`[n,7odc-JX#Ksm>VB`rDJ;<uf9W7:?FB?)Z`_YGe[#&nXn*s\X^CNjN@kH&3\!CXlH;E!&CFT$88X@"
%&lBLm\QS)m*+onQTHcc@UA3V"P#0&<I$&\qU3>;BBVsJj\e"#;gP26X+@h99Y9<-`/D_UAdEmUaeYL!e")Gf[O0uorV,&GlB%n`:
%chs/33X6:HAS6#PVhXfJ/T2Z8mRCeZ09i_'3tPDCa#Po=LBb;0d-U&E;nki`8lOIAb@\FL:[1=-fDFd@GCW3$<377Tf7\"H2kO&6
%S"'OZX1arnSQSXF$j-Rsk1(N"d\%/7RWLR#?Ml"`7UY7O0&2a[dhC!63#>4#6dZ]"=U1e]P^pVLD<1p4L!QWEeL@&VLOnSe<UAh.
%djtE*ZGU^:^&IXU%:4nbMVoAk9Q(J#b4R%&!@j$929.cl4AIj-*Oj+-Fj"sP"4h;0cIiWN0G]!/AC]Uhd_!Z]r*hOa(uc,7:r!=p
%#U#`b9&FSI<VRg4K[<hZ.ospcOp"K64pXbfS_rnlksP9UYH.0=LV>g9:ZO1IdBN3Me[;>2Z]u*[5$%.c7@_%Qq`@g#YpTk9+X`r5
%clfMYQ93lN)p6X>8VS]j1r-5NWM`Q9S,JO.@)06=l=1Uik]`?/&Im"1:?9p_Y\K;$B4#;V^,W5.K'k9_6EuWl^2Snk&;tLR`?,rZ
%]#9gGn&`8u02BU>n#a\165ji?qs728Lnr5;i(&lc-9A%)CfBrF0%^/=PEk2ETb[!NbNSDG7n=&G;<T!cZ9e)%'!6d/DU_ZW)BeDj
%Lc_>XU54#@;?RoLEt^k10DjI[';-T0XTojL=AqQ?Je(2r'&5[iR8annXM6c`=NT\pT<:CCWJ2t2,PsuhC<a<u,E)uh#nrdT:+q]+
%Eb;1nH^X=J'k=^Xg[*Y;Ql,&tUY-$>fZjXIVX$7g!BpS$[JJsHeL%[XY;+.UDG"s?]<M/"&$AI,Z?AmpbAWa@A-9<cWq.&j?iV8#
%feq-+mbZr@_N87=qh([G?\fLl#(BGg@?#rI=b`eXIrV.N.YL>o.aKLM&\sdBpb)]@&i\dJ>"LeUG+p,+A1,5"gO9B#a82D#>VYC$
%0e/GZqLAMd21ufL;]HDD1f.+5.7ljSOY<1uT@jr[$O5V50"@VOU]JAj??/#O;E<\3#R2<d%9_T-)[\W1XL(R=k;G7V1J_N9l'"X\
%-%iNC3f1B.I\C`.<XMs$-h0Bu3Jn04I@jI^B?N?/\%M_M$PYcRC0*@S@-qY6QqABaQW8IIphq+</F.[A5jF8(+.RX*gDYZSoR`L5
%R,T<b#XN?.^-IE="baS\Zc*a=!^LCMD*m-2&XJQY"i_nGWa<"Z78Do-_B5OQU.e8@6IM]O_Xm3\D>g<m!^_nM-['Q?P@KG/qddSm
%`HWj8f"5FWH8`.^CpDdW9*l_-$h]UCRJQlDjR1SF6Ahm_+pmP;Q"cN@Sn,r247R'>+CP`DpSLkCIA[,(ZP7]gc-Ut-WQ@:ISd>^=
%;qGpp`(p%T/Q5'j4fF'mf2af_Y8t:A:3=(WE^=7a1JsR";/W%9=UsH+o%'PY7P5`WrTjL\#5X-Ki$<ro&;1<uQRE>rfa+!1k'V.+
%`ulA]pZD,**s@C0>t`>r&^DD>-Q!t?Zm#@Yrdt^>*ABhMN_RQm"qaB0%&W%Vk!K=G(/;4Hat,l;&99,;i#2G<OX'5#/P51Er1srF
%;jLtF9#RC/k[TjOa)g?5kYLme#UYUMl[@ulaGSatH/jGZU/F]q0h$2YhnS-2Y.s96ks'Up`M'B)'Mt?NJace]I8G_"rZG%R.@Ws9
%QbpRd<AIVf-$S*-iDj:ej"eT'&!LogC/]\@pW@M%5,q&*dEF\K&KKXZLuUa-6p-<Z>("_0A#t_J22eG[#.gU9Bg05i%qZAums'mO
%cS*FGUFh"=HP.[Lmf(88qrGROKj,Od"9k-N@,iDa=5-V1W8_`uHDJ0)k_>8JH:Y$s@\hn=isXBg/M%+V,kiTMi\G@Jf@8/[T8G;s
%lu+3c#k0!`\4fa'IC3h,,nZ&il)uR7RDKpr?6,i+X;2Nu\h'7d_"(+_)T5<l.m<4oOJU,aKLgQi_)/0d<7fkJP+<l<QUF<)H-P%D
%mqBs*<NuVQaJrrg/"r0b"KZ<5B\=6%+[3l$n@hFsXnHRs(1gKd4(uAO\8ATb[bNq@;_ahjrOd\6Of1_U=1K%O6V*@;li.RV9a,)@
%1'fq//B^PqQuI_sc#C'8Ul\:LO4=N*OJ.d>&gUWJT*,"k$"%).Cp5WN$WV`76#)7mL]eJ^"O@1$9P#gIHb4,IMk$mE@d)WhUToDM
%Ilak(90F8;e&VPq63-<B5*WZ`Xi578^o$2;LJ:rbT\d]NAkQ>_$tU3:BY_bX(4]PXN%d%k.!9r_F,3P8W@,r]Wesp#(%6tP662q"
%Rc1rK@eXUllFcp1:UcgDGJ>#7f-943qc[$"\YE@OVT%.;nt?Yj!hY&u:L1dZ5AO1mp!kV,lU1,H_7PW9lZocg?CC(Z@rm2nH5Z\O
%,eP]6`p>rGT%<9%nMRr#f4J_96ml/0jClDpW9Z+N]/Hc7B'e(+cUN&*WrK7,_,[4+B9acuo5`_P^>-1.0DA2)mU@?tTTiEnO9iZY
%)#"n>SsJM^\R=kAY3n.ieV..a&,m0Zac9r4$%rmuj,R?M&H=$J/OeVmdqSsg41@17'l&[`;n@eA2?e#a$.(?($\ugQA89e.mQG[Q
%TUnEX?Oe2M2t'9IS,X^:\qm;Fe97fKDGXc(!=NTX6n6oFT^cgR.f+hXgdbVR9WIFYdlot]?gO^F>7^T/&LG8,qrSAk&S0SOgktW`
%)A2jGh^[`D6Gtt62[pu'QfB][,LO^k&d8+`6NJ',neR!N&e#_b8F:[s&+Oe65Q+&h'$$_>*o]O8WrJXAqfZNR%lL_D]ErlZ+5CC"
%aZgels*7RHJ"__dPrhXEH(J#?%Ao>"l*t?j6n?s&>k+'oaLkH23rjd4-mn*D,]OLYlX!J7A?m)-;6J`;UDPj2gRRJW[F)99\SEF$
%.1R_m;*);9<!"<+%95](g_<]:@Ojc&A2P8/pC5N]G<6'lDMbfTd>!$f<>(-GopFKXkM=%crc?ji4pVbjEY9o.>YdjZqE_O`?B_r*
%7$Ts69E3>I1It&VWYkdbnW49l,UlRKAEbAS:0S/@e?sEk?sBaaW7-r5RK;riJJ7IiVQseS=1<bBkZS=Ja>F52cIJIRphm$BI]#FA
%E_E+54Z%ma[pM<fh&(L'&<hTsC*:0O:MY0U4_6h/n)!bDSDr@Ul@#Xke+>g#/n/WSi$>7gjeJ.D0Hqc"E9gmm<renQ<lnc+>"')6
%1Q_+O:@**q]1`JhRuNG"j-r\M-hU&SYEEdReFC4YZAZ+R>JR)74Ds/X1_Sj*e^iHo8YP&gD6sDn$,VfMF89(0`22^gmH`I9gLc;_
%`%e;.2bJCs(S@>oGBo_V)%qIDigd1g0:=eiVMgT?eR[fS<u]Yj8GhD<VK2.7Denga%R_TEOucl)W6f[.YZ<<m7W3sfV"<dW+EUd2
%?j^V*@1nW+pr>FgO37`ukMo]/b"CIqisMG#kiPIinH6s/oL;/+Eb.q,JmS"8fd!G>W#/Eg$"4DC)$e">Jt85#CAf6b&pJ5Fo,KqE
%OVB('L9qN-a`?t;hZ`j$nRe^XBO52K!PZZ@;uT'i+e+lAYTfWDk+?W5S6,Jr#?M-$Hi2c2G`b0">K=]cgn*/,30Bet0-=%"ptYq2
%I.4Baf9&uq/`+l3TOPUqCtO%q[e*KB)i,Fs_c@tKh=NEu]5a!SU-?o1V*Htu4\AUh:DjRo*[r*'\X7Q9*D!pKOV@ueTY@4n$,'[t
%L\H/Sc56.bG&<XKQfCscg"gY>W8$G+I8\oFmmQi+*9n"e?Bd`u0gQOC_&F$!6uR,^qXJV%OG4FdZ]kFu?-'a\J:f!PY!l22#C]Fs
%T[cpa:Qa.+P7a,u-HX]*'d.[6]r[o@<<[2<?fS1(:Y?,Wf&C@27ccKjm&t<\s."7/#6apCe$.1>YSIOaU@o]t0(U:,H6\/B>ah\@
%6nC%al.4jaR_4jC*:Q"#2l3r-"')H]JVo(>iSaF)])IM=nStg\;N:EIAV,ePC`WlM5]nqBDp8D;Y"8\$O8a--"TQ%iNPB6iinHLp
%&7a<-$NUVN#dOjj(8PHK(DU'Fe,oh0RICF`LK'"*5DWXG]"9@YGni9Lpun=1XV(JcmMS^XZT"&c*P\86DW[FOR_g&-7lrs)m4H.2
%.VhgYj\s9l,)BY8To_OS$?^.8^aN-Upi@%9[WcprT^e^D2,FrnY"-T[30kg\?RGt7`,j?-45m%LJ;@*'/2VS:B8CF,#[>il8<[N(
%$:K$%;6EY@f'-4*enCp,r*I)#0dh0M7GDgk6%u:!$c&?hm!Ob\-@gPbi@%@`k[c+1.IsEd2e02u)@b&^8m92GiK3["*Y=_7L'lH#
%s7`%hEGh.`6A7'#7h?i"7;,dIO87MB;.::C6N]h.L55kfqG_@leV`RA7(I5qU+D2'*gk05L&[<D_sfdNPYg^uQkjdK08NK'nhI_7
%(3#2KWrn#Rd!lY((l&ENq3U)Z_Ofu-+`;tohH,\;;9?-,>M84r;EI#You,J.6$M,NL:q766I3AB\cqYeX<cifJ.bik''RTU7iWX_
%`%Qas&FDXUDrdb8#iTKf(W'5J\ZQo@KJoAXBLq[GZfX+9`*31%^'g3qar2Nd3"+=?1k'O1d'd*7LnmCI,W^l*_SckM'UAHdR>0-2
%V>u+CEHb)1Trb32Ip"#[nG&?aClU-"B*Wls#g9o9MR;2J/O"?T780=a=l_:/MQFT5o?D<%K%:-(XnWj0'2G@b;c<i89,O`EN/<Q[
%JqC::=]J=_4&'q=C=>nW/6s+b`R#.B3u,5cT>i8Y8ej5sS-40?M@6A[B5I`/pJ[3]!iZYUDha$t&^Dm'>W90qV'/\(8UmlVO-AK-
%J^U9TJK8:7]b,"`S^;B/@ku`/s.iBHf]J!(,5W#(PMJk\)InLDPBI+Y5R;%Nd03tb1Z3G9?SL.l)u:eN",k<HD^5L^hA&&7J:QYE
%bF@F\[iT=H)W5n,IK3ohDZT=?RW*bWWsd939^/lQ;]rV77K]4&<'-Ef*%:[TX2&C%?MS>F:,Bs#I\,h_"aRe!gaZ]G_F9`-)5T4W
%cunrTQVV/>KK#Q?Uc+eE05q!R[%raq`<!,.b)I6I?c%MbnQjK7G[\!mo;7k0SinTR^stdI%st.Ri7PC"3\H`]G.D9NkTIOaLj1(p
%_e6Q7$V>h;b;f8aYb)<tF10pEkYMX_[4Y+GfSX$[GJ^4bO[.R7XB[QsC1%c![F:!jos!*7Ze!>t-G6Tq_WPBaNNR5Z&Ki7"=V;2O
%<Zqc(X:JMm@9>pLdiUAC&W+E':B`kudXbZ(1h]``pGgfd7BG\%'aIO_))o>n@h<Q"cC\6q5GFfX_5jCQB+6Yr_0Y5L[XdTB)l%!6
%]C:kP>2t]3heUcLB7ZL+rrVb3DF#V)IuM[7*N^PT-![%s68EXU/G#MN6OSWFOhFlbgSGKEeC*3aqESL0r-*X%-!"68e%E0TZaOU#
%bieQ<MX:opCZ@D*?jad5`pF7Y/]O`WZ`)>Y1-at2*VuX08]TmQ=4XJkl,f!M"X%.(RXS<d^>W*Rr25bsgn?;1>QR%.U/[Vl\#:pq
%#a'LmM-;)/ZR,sVMt^c*2LK%A'oPK&-Gj6DlT7/TF3#G`m168X_P'Ytr*`7GrfI$JH[khH,X:o,]H].u*lIAf7k$?j5?^K=&5ND2
%o'D:S,g$@fMQfa"#BCtq/OSiCR*0He?%fq8;es3,(]f0,OkA_"N%q1(,/2gS#,H2d+,<ZGH%-Y.=?MoQKd$D?e.BHn4KS?->:8Nu
%3>tdEF@fF$H*E!n?h`A%nD3X"4ZD;Wq0U[n#t0R?g&Mg8?7>*U]r$MCYP^k\^3_OY7Rp8B`@OO*Y-(;"8_l26TUe%RBB)^E1:Ni=
%n>to<;YU-O$k0_?+SL8"dE\e>@0;k9o"Z(C>n$'%N85bM1utTa:S&@0*"i-@[041.5bqak`J*tiR+N@daE2R\J']7J#2Y[q#G2a7
%^3\ktk'.q@V"9.plrsi7e-!Zeap73Nl?e=Gp.eLU+(;F/j/e._l9enf6kA5A7q\ul3OdBUHe>O0Yf"Am&_gFPRZnfNH,60_guX/)
%s080Z_c>C]KKO$h0Tnfk,XgH>a<U='DD>1oN4q?;ZeLL#nB-E:>JXSIjst>9;*X5/\6,tnA\D4F7kV]M]APf*h??9"JCC<nYaR0s
%Cq=r(=:iJ.;+ci>W&"I(YqWut8jHp<0b"gudOcX5T(q5"iF7AaAoMH;^W-@="pF\ZOt??/$H#qYcsSj%+eBoJlQFQl&D>/GReouH
%KGNGR@U/YDb%^]KFRJ&qAs(Cu]GMYZkdHF0_C8gp**MSISEUt8=<UhrN,4eG7&^)D=<RFMDTY#&oLq`1;@DrG,]\IHe[V/aRq\?r
%4Ala0GmRC4i@5p2pFEPZnscP6\m8(gk@>\dV;=oKp:NoM2hN$Ja6/a)r\m"WeVhYQ'3/<,HIdM_G%-W'%Zafq[BM@6Sf)%BO_b7q
%Y.!?^:^aBbUTYA]=5);*@hm.cIS=@eJsH[j<,LOk[6u?TF?!u4!N[sfR$%4ZXEmVDalB'_MiGDU#?mW&M;4LRA&qhY)aK:=8J6EW
%lU0^rRt+'kRm4L,4T&3M5#m"7$Ak5^!FBi<WsAdc,GO4HYOAV]=^`l<6$s7!I%AGNe#IHaoU!CF60lfR.-#?VJD6o+r*>L!kIMFM
%'Ib:D'G@Ha9Y-s]0HdgLX)c0*E4o9RrZg,+OH@qD5,Ma'lT@c&*/Q.M6riG)[$E:YBIaN=TLcZRTW)\f=,i@FrsRDB9eICua)W9%
%B(ERX@8YfHrD&1hS]"g-E?AJ[$0_$,I0L96r'j$I?a&@Gi)q17&=$P<B\'N..2mr-;:Oj-5VO3@a(m><Lj0@,XQ);U@AZ[YliocL
%N;euAOD0`UYKH@BZ3s/j*V)FY-\])pi!]A<6L]2/N(6dOPi?A,'EKgT;8ZMJ3iE\QQ5Q4V5]'oML^GE<X+N=O5#=1!DYB!laqcBo
%R+Rs,p7SW5aE?[f<2*qFRFTN3<+8Dk_A'o(2N#&.b<g5^+PZipqj=H:bhFgNpo<Yc.&E?("_=3k8t6qp.j;qJ8MRKV\?,Yc4QELF
%iu-l3j4/0Kr:MDiDi>/Pd?C_eEGeAY%'`a#:)?fFb2sKd_@p(cLYj$ll`163Ni'q6n"CpAE>d;kU%SGu"lBcC^-pnLet_*,oA<se
%q65YW&!"bs7a2sNriC_S/:X6Y0GaWm?D;:5#:cKa(,>Ti&OF_a`nk`_,@YahhLB&eF#6Z<jfn`*q#p/4hac#J7o^?<Of[#lcUaFV
%[cke_%mI9k3T`GD?[mOa3')`.o1tXN5OeLMrfVQ]KFGURHeacm7'HG$KFn5PNbn4eq%%3O?X5;QUuI0:EV#Se$Ms*%*MBE>0E:BG
%BhWM,&sTh%,)5"+Q*H5m'3E2d-B'$3Q$WZ[1o(\AP/E1hnboPUVOAr@R`*PH9uY)DrCa$IL$ml*@O!l.(?@e$S(F8i.!76Q;NZPu
%e4dcAMBs)hfcs"h/h8,`K)'ohBFPHt8]D@aGF2Y]XuN)7ZX-!G:f&\Sr>1f[7m\k\EfAKB64U9U_;FXC3l?.Z)sIBmO(4,l'b?dk
%D\uB9%YgpQ(9'7Gr$`\R:RW)CAob+d'rY>t773$Ec85;u*_LXX4>%\*V%`jFHA/%nL$&VK(^=jtl<:8\5s0TR7i,#orj2\FBnN/f
%g)-7!;!JVB<\P9))i(E>ae.Qr%FGJ..[m`DV(sJ07hm:8<h39C+]9iV;ph3]FR_qPE.SCIJN1K%)![q<2.E@M!<pXBKd%S:RpLcT
%'V$%5[!_Q425>l(+O4[D59=HVnA]sHeB_M#G<gECK3eR8_.fB'HTdu90\7aY`/<WKp<FRcm>etkF-Tuu?`6MY"RJ_-%:WZr-1Yae
%8AgYH"o1c"^7]2E@DlQ[0tX-$W[Wl/CQ(-iIRWHp&gh(uK(uLYA-*GJ$b:!eA(8tI`@kQkh3,Vkp8WlDe&4)X"NUWrWSi]m"j(m?
%KTmbW`%5L6Sl]/%-4LokPN!uGmOVBI`qiUmO+]aR\J4+5_mGVT)l^!f=9ZK($7"r'&G%IcEKram2lqLWO<Ql533"WQ.8k+:HRL10
%,R3LM0so8!6TiXIqq-UIB;=8.(;tY1VW/4%+opZOTP]k!Z\]kd85E*:LBdlA$]o*K/UbnC0)>#k8^Y*l?deAp,(0I5k`?)n(H)9,
%,fotJe?qkHa43d@+`Q-;,7.5H2LSt/0`,:43j2o'2i7']I_#+<N`#7J.hn#.(`=ZW=oRPk(C_DScJh![V@iMc/rEp@2A(pAqVB`B
%XoQ3"MQZ$F]=M#s7jKq>,oM[PkjfuoT0o\Ai2_*8&nCNT74nb7)<<"'&61b>F\/qk%&k#i/s:u4aB<).GN;e^c%cNhZ=lNHIL?\A
%c0@VQ,"3,910j-^4`A!5&u#c60kM5iqjF06K8<h\&ss74g4M+Z]5UM28<F1P!%)H"!tQ>q$BdOrlOsQT"!92^<;qLI&Of4>(_j\A
%`7q,6?@;8%;a2\.7Y%r8E.,J$j=.okA!f:%cEii].=T/`NjV,r$&_hdD6,(Qn-HLb3LRXH**eW76g7@a'+g<ma\URu[&=$H:[k&e
%O_QQ[<Q(@M3_F&#PEg+*4"I0OZ##9:&#[*"VeOV".:@KI5=_:KChp&-:um2'/f:<(.1He3h*g9K&-A_#lQM0#+.:1-`CrF:('"3)
%!WaWB1.C\)"V(tl#\\AE=edOu@#,M?Zu\u4-uQ"VeDcXC$Kc2X!LpYI,NGl0,B]SCQ`G)9>Si<E^%rE/K0,q8E!)Di.,p+aX_\.`
%piJQ\<O,$[0cH).NlZud6ZO2GHsGsMaL4c/DuH^m,o\52;SbODbs:F_:ii:c00//K1n)a*0P]YXM62G:^c>=i";sN->nP)AC+sLo
%@Ta?l=Ya)XeM?3G#,>nR`W8Jc^F$C1%+23R]8"TtXGLoo[3sWB`8r=RpqeX)C9RB]0]QYYR'4DbHNFO.@3U\r2O>UG$X0Gi$OT^]
%7pQOoVTQ$=1=X$l@r*0C=L-@ToCR<p-jl?!qX<&C:@?o%]D<#6g_Y,Yc#-`N5p5Mp)QO+BZ#:Bq/k]U!m`X!D"s"FR1(#)eedYMO
%T7V&^mo$%GGqes[X#&FBGq_RG>!k_.=cqcqe):?c?/e-XL]%:SeOTbCCjTfc!FMtNM1;Dof\uoE8tC3kn&#G%g^I:.@>[:dYC[L1
%+10+qTkBUU%8nuc2MIK3fjI/#;0![H=!qa"i]([mhicRW0XZg7.DJTF)0[^+?*C!G/QK_sCNV+uO\^N?>W0o?EkAWJp[_-:V%pcC
%2<T3B\I[G-cj9-Bdp5(,3Y`5T_m&6^TM&$YD_>f\XKD@j<'.:L$VhX(YE^0:A2c,PE3D!<.THJU-gddu(lj3HS;AhZr5ru9<O]1@
%o_`L'Bt:mZ_AI;*Bu8$nPdSTZf>A1sZc(MJOR[>g.RX8]_ot2X;1V<t8VX0s]e!`)MW&d&H=f;q!*R2!7]AsI0VstGP/S$3k$6.#
%O027P)8MlZG`=l4$Z)IO1!ss@#Vldbqnf534FPZ/-765[nPQ9>S$k3i^pHW`4r7a:nJbl@_>I_Ff$TlX",sTIV2,bl*,6n=C(LET
%7]IA%knRlCUps61#\/9.&$gZh01Hud^)4cs0AcC#*74YRYp"HOR-tQ>;-*iHU2d!'Q9gTD_IS1rn:*+kd%3AQg9^.182-Y"Jr*>6
%Me6--n&4ULerXnAgB!G\"#ZCaTT7I[m)MMH2fCnLP>-8Q$%d45I&U*t='LnHk:MW_*5VsmCL"K'PJ\f<7TEau(okc]EOgiWG1tK4
%I,IoZ'<-X\J=GC/ST)&>XX9NEGT.SG9B<$6gKI=CL!!jIgOW!UW#%H\*cN`<2K(HhJZqng,&H`NM[FVNiXjYO',Jn13SrJX/O3?i
%&LrkP/E1)o+?pb`$#oYgE&ToDM:_Re,`=?AbB<u)*5!Xel1=\0^5S32Li/_W7*2nr?H-a83G&+>4&RT+LGm%SBWO9.&S!mlfpn"p
%5jf$h;.Iq%c?j=f!K-Y"HQ,[uP4K$Zb'Zs=R[of.YtjIPM<>D7+=IK5:oT!%U)L`S@<.((*X,_<?0[8t,Va/dlp3Uk=ZCmD?u5&&
%7=lkm[4S>tRtiXM-\RcD%P,2E@4.jQVk7AWb>?E@5Nj:h'a&*EZBo;i-En]HW@@4qS!kQfZs1r2@B^Ykbu1hdd\_="W&sN)`334b
%Kn&\[7k@8[bcGE>%a>.4,cBf*W5H@*fO-a!QmE41>>eIU2_k0G*W2ko6ttj;o8>*3&F3H.GJOqQS,+Ok5;gA8q4pFOMZK]t-;Q0Y
%o,1.uGQQVj>f/?Y34)#)\8&!F?7)P2JX.NFN8SM([n@Z<kke!rCCfRi@AXTXgI*W2"X^AP+dkbAB`V%n1"d$_d''qmLt$#U3`pC,
%6IYt943f#J%U2F*k8!f_/nc#D"$%3/kPWk-<B0l!#^:GPh;q=/9h3dJ<sLbq7;@DTe$SE`5_;8;]$nsF'19E*)9K;U'JC\u.(+IA
%U*toPc`&t9;'h)b,a5gh5\ceEiAOVWSlIe3o,R(4rRFa9r&QBsTZ/,7/>+U<c7<\MZ32"I<pD5#i&$j>&;Jo;&2^&Ua%_/I792G]
%0(S9/(qC&`s#!P>&a?@ARZ&S(9)Ag>pnCMc/B![:NT'Y8l*,,k\4d;[=q20j\Tl_qNW7Tt`7*-u$TKE9#crCH%>-5fpaIK]s)7=0
%=sV4q1\ZM#&%Uqa+Ii7W/8#q3$ku5?8YD=s;Dg%WU*Zgp)>`76^;mM"%_#E%B1@!o0"L3fDK_Z8T(>)N0dFCQ=#B2!hmB:Q`L0qe
%((657gkZ!_!?@QN)2l^X7%=J3U6.3)L^,F\:N05P4UBnPH@9Ml?*)FfQRXTJnV,)03GU;1p;IsF57b_VH%4`(%e/;s,I//okO%\>
%jQ!RI&f6:3[NX*2%*d2M*\Z+sYdr<N[Q\ut(=X_@RPId#r"P\1&GD`MHha$8a&nf'>"4K%H6INc/\EIp6g*D=-"Gh4W1'Pm<"CbF
%T>36]ACaWm]D9[8g+]_j<!Rstf$pl)p/BHd[:M0HbCQC1(Zjk#B/K*"CWd*90+gWRZnM^ZUbsKm(Hc%;kH?(7WLrq]rUAUVBL)78
%0cA6dLO5.Wo-X_-1T=bZO*Cea[$kOG/AN];d1#JrN6K]Qb:YjZc)2_@\:LhM7!/4J+;\Fane#n^eM1l0BkOK/8SMc=,Xd40@K'fI
%+\c](:oDC6BX#K)[`BJc.[EqCR^eT"8n]j#:X$WFPP/>J[HS_p9aPr-L+1@R!ir3_)*On,I,ls%kiX4%i.d2cTIBSC:!3GT\&n2D
%-f6Pgrnh(@iK*R]5NK$C"p`%<1*.6b!nZif`=%$7VcoLl+a]m&_Vjj=/h>I(@9L_E=D&D[fK"l$Q^*[b(11^W\_-/#P:QH(L=VJ-
%P>T3]o++lY4eQMbm*`ANrK+Z=,Y<8meB`*5d(I;eAjjsY\dEmq\BiEJ0XbJ<iR19p=T7!R$$Y!"YGMgO)UQNmE\lXS+fXRs$X?2a
%0JuA,#,S2_>eec#(HlrhYLi_[A<Ud`/VNmVb$0Dg.EBS_GLs/uGOag[nht3CUhQ>mKs2?`Gi5H@nZo?)M')*_YGR4En:A3.@/Fs6
%mBXSSeSOUs;S]+$)ralWqlaAmlM^05l*;tA//^KS7/bIj8rO!kRF"Pqg;FmnQj;BRbr2,s+c01@:dpWoI$NmX`QQ!g3'>?PmOg;X
%!nYj-:7>LN*5Nf0W$G@\a-1mrodUc]I*jTSkeImK/dUuAAo`bfND-7nUjUJuSlLlkR"d1nDN]*8\&@5q&RE)D]m/(7bo37A,2W`n
%FOPRKSLLmL8Wc=5(.*JgJ4+#.o!PXWs.Yj_3jY5[pCWa2WC<Mp;"YJrgYKg^^[64DaGjWA_i4\iUrkB2':FV;.q^>!f0Ksr@C2"s
%4-4SFrt1C0M^.6GgWiF2j\@g0jiT@I`5!t4VL(bS1I&nsXppZE*4dZBJJG^I/O]XWZG%J@7L"NR;gk6>U*WK&QA]udP;!f>BAm&I
%Wt18)U0Mp>`FE8fgiY8,)*D\Z)CoO>G;()hQlVUGbe]O=m>sC`e`nB,;EnWE=sQ;P]>O:Zp'l#_g\1T:i6PueFR`]307VeLR#Rj:
%Dt6d5921.CihT)M&976'Z7M4VXM.GW_/@h6BNE9KI(n+b!:76[VnO=gphk0M3`<P=j830Y6LSIlnqt3daJheAh8Ig^RK5YSE``Dm
%](mO3P-UZ$[1P:>!h%OV=`:<oM4@e8m(OpfZ4$KgZcPo[(K:nMIg"lVpC<H03FUd^E9*.-,Ckm\9c!>`:bsf5@*5#Ed4;Vf5"_<'
%(W?fsHe%PL?%8d=]RbL8Trn0a_H\oH`=49q\H;"'f"AaZkAlQ:`beZe?ekl(&V#h<[]9@4)U`Z(Ieh)<8<s]F@W0h(MBTXbe(QWr
%HEM?>;[&@&4I*"R8<S#1VTu@P3O3c2LB`k$RjpGS<,t?7fgI;DnW1gTB.+#gZcB3]<<%'WP]f0YK#I>Xj&/55DL>c_W9jTnl?>g:
%iJ*dr_)n3N^gp=ULA+cHgN5=X@$<Q/5Wg>5$H0NGMh.Ii]m3'nJBY!QSPr>g6.)A$Jcu'S'<R(`:i".VPnpp;\Y\=C\K%-p&BjF'
%"KPA)oQQ'2RCTT]GCRtH'S7C$MA:]^P!F)r,XBiD!8*=d',5;.c2`\KEHMW'[M,sU>,_G+@,6-bnkYTWdH"Z2_gBLV=mE%jc)D5J
%0UdA)Ud2lP;*?5QESO%c%D]nmnisA\G[g*`inm["#O!f"EMWhR.>unIYoT8^83?jEeE(A_X;0+sJDf0S1JG@%rhK#rTamgV])\)M
%lie.7l+C)0ON=:b"TTnUXdgr70+*<9P*NlenFR8[+lFjJC'f%hk/7fDI*l9h)'@+kS'RMg/a^N)`dR%CVH<4;a,Tn^%"Ak0;a^&h
%/al$d6UP0s4FdO@Au,Tjq%PkD4D'^Ff25+B'+7PW0?ZDG!\;W.1(i'YRl<b>8@7(:iAAMWicgN/*iIF;WB4=!pJT8;R)l*-U^W00
%R(<BX++5h#Grp'KXA^X@ZZ\r&O-pb1dCE@E9p8g`Ehs`>ELBTg4G&NnqlY8"EI:l9$&k-E6P=!$P2XR!?Rj[bjJ'L=Qdl?c+!)g(
%0>jIXiiV\Hk.VLIlMhZkI5N3m6cZAsCF.OIFX?,#16%WnM@1t9l/fh%4)Ko]lobM3Lpc/4!D\A'qg`3r`n\nKRgu%%BmDpgmq90e
%VfjS@VQ_u<,]c^5)IuS1a6.V+C9IYl+.G_4I?H,<d_cV)kib`=<QNIi*.YOk_G.@.VZbc5p*od)<"&=bQ:/6k9Q.6+II9=G"k(fO
%]$U%m"6t4#ki:$q49<!)q"\LR+H:9do+!<m,u6DDB]6faPMDm*8MWqQ"N3S[aB>3l;R=,BioHsJ!9E`blKl\Q!3HP$EGY9UU/Fi.
%WFE7=6^ftfmXIl(SQI`NmsM`McU)(`8,7lu`C'Ph-TQUo[#,^\J0rW1b=>Ie32(EfTTQL!ds!Zp=dT=0N<k%(74Dr`2;):Eq!E)?
%]^98,Da^0\+qK'S!"X(>^0,cNX*'r5eRE/R]N4*U)=-gK)`s(iF+[Q(p%b0b^&Wou.t&B%m:pAp"UY?pD;.AF%qh2bH.98q(+7X.
%6E,g1ZUg-'b7"#T]HNStWPm&_-j5mSGWAg?nZ&HV@+n]>Y2L9]_V.?O!.rRNNX2j%2oN::6Ymur[Yh-%%?ZbaVG3(-a^4)H72N`+
%3V^Z)q/%\I*`8LU)bA,(2/Y+"4:e9-G]sj-F]f1!>O;R>fX:2>liSJ5o8lkD=_q7lbp/?;VDblm\stRMTkA1]HW[q="Cpe2KfW,S
%.fm:iGnK]PVWHK*0fa/B]U&nW>A[99>7Jp6QZ)cT(%]8_oq=LtIK+;$,:a]'Ce]`eCsY7#7Z!K[dTKTP9dEYm/5%>GO<buS"^q'=
%.Xi(^6NjF&"$k)i;nSn^/1NtPj^=3iO71^2^-$3ba7j$Y>Y^WpN"_#iVh>/XP)+7P'ESnuchTr,0(u_WXXGcJNf.Uk21)Lgf_&bp
%&gPj["UTVTKMjhCqbi:@rdhiA`m_];o(3a<mhh.gr+24(3!4uEXWH:tJ'4V`1M"_bHja-,LDV$:&`O'&aDXDqLNJ&/X_10:5jp&H
%:si#`4TX@"X\OoO#)M9J*W.kQMnZoaHJ^$/3NTbJ:NAn@4_uRQQA.Jgk)-p9?Q'EAYsT?>OG.R(h,[3C<&,9^%VNYtOBi:]eI6]O
%Oa(ggh"Tck3atY-G;V@r.<2Rl;h0iF/p4^pPm7R$8+GuVA;FeD.2CY+i7f][%3uP)5C`9WiF7o;B>W2Xq+eQ[gDGEf^&2t&k@W>+
%Z$=QE6tkK=je<k]3<K>@3-3NnrM5ua=$]b2'0X:-CGNg4Q6/?s7MBk;LaJ(Bk(8qa6'JH%!Lcn?gpjpA%:?,4@1<P-;Pbq^ZX2?J
%T_+T<Qr929c8U>+3T77k>gZp05/XEI&i=X%#(D:enGAfg?2!/;jWYuF7-f^N\HoR>nlb8hMB\5BVV?7^!fnCZA8g9_E64e=[2.Hh
%eXJI]Xu90_=^JnV@fs5:-qd#UIQGNAB03lN"GV((ILnSnS9V#8Mq]1u_P_6CB]=A;iqWjbX+l&,+GAS$ei[5'>2m7_W.tus`dN-,
%_Br-H":>LT=.'pl3(nr^+nBf79`&ooX""@S$@UXHP,W2<AtRo-jJ`9f!9C<MNH#J8L/Dp`R3Cs"PTH2mPOXJ!Jk'SqbN/u+CD:#5
%'1(19MrDBU:4chk-K7I^$epi+9un@B.AZ%RfiXtG7IXdls/b=S"GWV1&WD;l'r6pW@"FOEhp%ag9,03W&=;p<ckqn=N!ac(9[qX(
%rk%8-Lb$&A0Cb[J25e_BG>C%>ar?"'+Q^2HS[:nr2O'IH;4Po)Y0,uci^THdQ.R;g>>6e'@8kJ!<4s<G/1gNYCjm(*B:4KO,`%dh
%da7471@SV5HT]"L&Q<OW7q71(h$+.TnH`(8a0)tOhq[n&(t9O4"F!RX\S.L2#@0l.F#WfRXs'Yt_=74Hm,_4#X%ifXDioG8a'\ZW
%dIHd`#O_fN01B!qnWj&BQn\<7Q3=mTc8Z25jL1coN;&MZ/Zc@HXFq^hWQhQ%DnALVRA5E?7mL5e<.Agsh-G"pgcS&Pf3YtAi!KVJ
%;2GfhOMY:_4+b26;Cl7f)Ls`u\dJ_D:kBl^VCW6SR5C$a3;b3t*<DYXpXsRLf@m,mOf8IBlCuB&"Lj7H,tBbL[[X:+-POA/=gXch
%7\7N2KgUN2"sLM;,^WsX%CUPhO8,T3)?=+h-649qAbbn6F>2"<9eAaIZSf[0]UmDhEJRh4i@Jb%;i%8?Vk$k0'aa"n"4CNF\B3Co
%Gm4;5Eb*Grc8s7d_pV);Ag[okUHP#PL*;TX2.4GJ;o%3t4*Xkr$PQU@//1`ah=2!QcQk3Ye\NPN#)F^DG:O?P$nZ'H>Z7Q!*"Zpb
%7!id"(TX^<;+c*Q[G#>6Nl8UR4KDEd-KR-B!`NRuckqeV#UGlp4NK9n@Hq.G0JHeO(.Z_>Q)m,Agk`.R":AR@RE_r+.*W0:OE%\_
%`_J7ZC-[BE:S5&+%5q&s],``rCq(<c(H78bNMsmfOo&XorRNcGL`YfmT"lR[;6[Ge+HVCl*>f6a39&A+J%XR>cC@r^AKHFIrUiBC
%`r2Sn*(hsV,&W(k)9&i^,1+,e;@2gU-]Z$-6Sp;_.P1Z60Z?2Pat<K&.KmdW@imEVJRG-\>!Q=lc>6Gk<6&HA=<1j&Ki_PN@St[<
%pp$?rmU&*EgHpY0-?[4Ti,!$j3-Bi`;tZCr``hMsp$/:N=I6s.]T;P'Vm7.GS>^-iXb@R]L?3T3c-$/^SF!BCmX\,D-%N90L`U6R
%U3"I2(M[?$*G3s&,n%k)TB[_f)%MB(G3sp.#_8^m\lY.*WJ'B72`1V]b#O,J<\n5WN_RHK?$+Qi_rA@he_FH,iNL!'7KnqG\K.=`
%VsC>I-ad)0'%$V4E%X%YaC3eDYm+KJICWH5<qP3G1'WI7e/tYh6Zt+,:&::krD2E"Z-E8E`4$Zt"O@XLFe^Y]=FqjWC5V6GEoeM_
%.1pm3X9goY&n0sV@F%@ih(H>-D)YI#H..TR!%Y]sJKr_jL/B,XZ+c>%aNVk:lbf`.`[p(q4__n\kUh,A,R`EMf[qVC`^V)p@'W@B
%%sGe:#7LTDNEifA$AGLD!fd]DO^_E`p'lee"-GW.,H)IO=L,j2-&\(M]ZX$kg%N?s!7J>lPiXYpP](N]TnGss/L_]>n;qefed%U2
%Ua!#-h!NeQ.&0#,B,kWYd&C#OQ!7_L9Po]M!\3Eoq4$*j:nF-d!M*8o`aNAtU?&IdK&h#3+Cn*oU5pE\K#P,rnq^1ii*qddQUCf=
%34/e<cj3HW/IicRO+CM#V]>a^(r/C2$8Eq,ijhOPN!#a3-a#ZoLQhK@Kb^]1d2_?Z+N=BpC"n`hUPg]Gg<;OC?3@M``N1^hMWg?#
%nl`a-JW2%G9I/Sb!#p>alE.$@G!7tE09pdsb+<Tm)#^[lB3ng.5bN8T6.eLH!0++A^P]=hgc(q?PI5mWK'X@9:[Rk7H$$:l'9l1^
%9Jou`g3TX-_pkQ(7"D`OiZW/qlZ($DPDN5Q0Y?5HJ=b.Q&m"-`AK.>NoErVD)fZ(+Sb0>mpW.@Q2TCPkFBhbC<e8nT&^$<3BUdL/
%f^j:JG3BIUd1DuLj\!&%X;cAIm`u[!jl3mWUG(3grGq)$/V2IVjrCtoS97QR_5'p*h-8_ghY]O^>!U.W&V@RH_iHhrG+nh,64j3j
%(0*.0_9!('lMq&bM3Gbk732e&#KSXX!,g=;OXZJmA/u)A4fc>!b^D;p&WVEh3nH\(3cZS,#UB"n<1l1&;Blj8Hja,(i,:.4/^^lD
%q&.jr+F]d0(a`[_Et74q=:/!+Q,k-JH,qZRHZ#TR-0ms>C7rKT(hV<7(_V4^QG2eFa%/7B$thS'MEn?UFY]QE'!*J8MRiJn@C]YR
%epEsJhr#!QOAK="W$',gU^7E^bI<VEZL$)@+u:e0Nq+0kBhNFnDAWUdleRGk]k_h;6T/(Z9kNmkmA-Bmg+&I]pa1O$Z3!8iSg\J1
%p.ihU*rXDYRO#B[8CfA^%=Ybi,QgJmAtQWp*,tW]mJ^u&gMNDtj(!"Qkd^S;a"0EFZGM"#rB(jj`E:Jk#%Oo-N5^[Z(bl`h*"(fk
%+FXD6)Y-qi1imb@fV;mRYl3]uB8Ye?2,245d?U8)d-^4`Bd75XP[F[KG4\_&D9:i>b)(rm\JBQL"TOBRU,0Ohf?"q'(DS.6OVi".
%U+&1qGEG-D\UD!OW:+s,^5\r_)kF^9=:%M%^X!oVW(84rXh3<&L"?hL)p6^B\:)7IE:_Qm>nnemqKTo9C%>=k=sWL+=m+d80SOTb
%XCQE!)p?J%A`DuFWG/2K[>3PO@1Tn_&)"'Q0$]&iEtcKLHK_"CiE[8W/j'%qNrPAs(0uZfF&/.)p>QdmW=/gH.Hr7&07YhaRFk_+
%TqJNT>SKF^'M]HLs,^+?^:j;fd-i*j!RbLI([`m>+b"Wi<!$Tk.46uIk%!inS'E#R<,@$3&+M(=K(%(>jTC:g+3n_h&'1/M.>$<;
%#n#%4UZDY+#E8lm3bl=__0VU?,L#Zn"TXk6SD(0Y7O"JsT,kLIoHEYnB/>/CZS-ubiBniY!!F3B+l5[dk_\7f`MUo5LZK+no"?Tu
%Vtd>cXHF;m?I'u,V(BBd:MAPBTU6_5i^qfa%B0@(k->,G7U,<:XLN[mY.RP(ndS9pN6%N-aNOEX"WHZ.6DsIQbsg9ZiJO+X(6E]Z
%J\Q3s5'\k"TN5@HfOo:+`=E/IY[3PB(o4XYTOQNOIC*LnRN/7MbB&oVX)+aP1*:qe>df-&%-Hs8h$?M@4>u3X9r+K(74tV4hhA]^
%l?%nk1C?'>Pe*]sC`u6]I(8C5pW+;$4Z*8,Y/NsCTsLVh&dAQ(:<R$,2u4F=JX/JLBA,aXZi3QOl/WL$+<QsuV:cc1SDcP$P+j.R
%3GK*q\t/=U,X)5JJoFOR^U\r"('G@*-d9QJiq1^uTUD*o3=M87[:P6`;;LVcn<%[_,Uhd`CZWtuj(8]B_5%:pbKg'8Q%Cqq$%Ed+
%f+Fl8IXoNW[[X2P=T*aX1e$asJR@iS8C3AS030\!a-UT=DY;n*'!@Y:geBEpS@bc?Eqk[I$`>O!P7>AM3FE29&qgPb$kadPF5C`f
%3UO/h_jG1r7(S;b(Xr$Mj_=R#o6E>j%?8N9IYYWUb2p,G*&m5eR7hMF`Rrru8*iA?,q'%@hAML<[@W%Gb*b:n.1'k/,e=%><3ZJ!
%OPpX%(Wclfc64#PP`]cIV%@NNFZQUi+U<8(V)T,E6YQa,,o->d5s]]?&e@E\/,#`k*DKDF"OM;/U+d<[1SC;qI@l-<](=)6UZjqM
%X'uV?&-jOAFNJDnU=:lb<k!Gqj]dYqL-OVChtVplLRkHGUI]c\=m:8L"bU%f1uu43^i\tA/`g<\\6&4$$Wn[I+k*lMN@\/4OJEP-
%#kJO-9KYjETs#A)%eS'eNal!CTGX#MalQ!)Y"d_X4"7(:Z,$6^EP%_m^VWAJ_=#LE?rT!sUW9H?"%8uC&Ti^'<[+C)"maI"Q7LZ%
%53]]"Hk0Wjapim,^P0/bdNh*F.XAq#@!MNulSLJlW'e'i('Ve4JBU,#l-"HanQ/3dio&D'"!<u>oQfQG5Okdun+mOAc.Ak-^-!$<
%h2R)\58]6_^,Q`c(gFY6-,FNa)+/L.`V_/c8q\/&o\210c/AG4HYWJdVM%^R#T`8-FJJ(plu0m'e&HO_XCsJBYXdOf>a603%kuV(
%:DGqFc4<2Z3=5YgAQaQP)IN_lppO8dH]I+gO\0q0c0L-0'aP\D!0HPZs6J)Y`Pat#IY_m+<>1.<"rqjCGl*5lJ('',"T5bj'D]n'
%GOS,DF<t9V"i:GP`\j;!BC<S,:mjW%4LAg)5-m6Cqo8$hpC1Ujo&^Z/-3R:d7D<*$osuIFGL=OAbH?>UO9=fIN.pQ/qU9"+KlXKL
%"N\)\@M[ZXWHjoZJq:<7;)U-hl8*a?_'EY\VV5E!;B4`eH:3Yu7'*BA;qSrC3m#UH_/kQT>OI*c-t+9?>bK2p*X6_)c#`4[MZUJp
%1&@#Z*6Yp?b8YI*3qYJ[>C80s5p44m+tiNt[Ro"<f[R<)l9[-O6V*5c!jQ?o1(T"4GNaXr:sJ@;)N`T46CJR6nV!EFQ1u)]ojZ#_
%_,VFNSMM[*^)o8WIa0_d!si8E7$YM(e_?G1qH&3%3&/rSXC55t*,W%s@Rk0<0^m$2&8oZi_,h9+=CsfS@RKG+J&FHEUP1K,\!]Y>
%B;=<'[?q6`T;A)^rL'Cq.)&U4Mf(rXfaVFZA?IVW43ob=7riBrqHL')Q>8-j121f^@KEqT=S(]/qmMjOY5qT&0L#a;KUBs0c2^Q.
%ia!Wem?DERG>f!3Ci.Ui<a^M=!'Yd=M3EkF:DCjBGhWYJ:9Tm8V%IpEVFh!5ZEI7[Kr,ns8sbL6>?eO[q==i?gJ4Q;Q@RT+Tn;+6
%"MMhF<+t!rbToNBe![;jVJH?C\V"*sA?eDI2<bn#5as]rNN82=L6,Q1Bofuq6Wm5ZK)n!]k^#=>-Q*3886=Ea7cUm/]LT4Gd4(#7
%^In;7\<tS"\ep?S]W!_rYVq=!,7mgJMrT7hYY/?qde=-AhH0dQnO1]TEnXJO(0`l<CINIA,ijIgp00I>.K%t>6XC!NpT(?#m<\Xk
%cHafG4V\,$$W=?LS28:T3?o?D4oj_jdB'%Z=.g\_7<EXrWLpQ2X$,faZb+p(n+KKuV4ZkD=Zll#NF<f7q4"CB0>%"&eaMsiX][PQ
%6`jm$+MAS^ds+,mU6=q?6[?c:D-O8XZ([7!"nflJGS)D;#ol!VJ5.RD%<Psc@TM0\OQ94H_+[5!@g$ofX+k<,q<1$0V@2R(+rn2A
%WZ3*k2L)Q^3,CAjT8(I(lG0MV/e]iB9rgZe<lGDRA(AVClRuJP41`C<1dM72jtnoH!2NFM(qN2@kqiKpVR"[sM`lb3UE4O5%e\rN
%MYn&*aK1;E):kUFYrE+fK8fY!nP81VjIE1.'flh60TMVPX#j0sRsTG+P#au`5VM!V7GsS;DJGRl.3fQqQO_kej@H]F=3V6kKe,lN
%^KTh+l*SknT*u/Vl5*08MrQm\rQM/#")%p*&Fcu)4]+0QTFDL)Ph;Pt*&&A#8PQO&;<:i53@0MKZ>)t;_/8n]rS5.n/VpkH,`g4H
%5G(SkB`hV1W%HRZ("gW%;cpT/$1WRi;pShd!/q)2#"*afLh`e"#^qW3`uom/c:@%Xp6O4DP13o(BerP^EE.c@8645T:)lnsA;-<2
%Rd3N<m-[I9A")@&aXh]ee(N"C`&F!dB;i-^_j1"4EO217$QL>Y6fuQp.)18d=+E[2fHFGsjZ3s6ph)Ii2>M@@e$>AHcP)ufGq5Lj
%&\^a[-pk14!aIn3/"@VE-$H,;A_:ZmGXqW#if@O-Q=U28?`/18X',M5@B>%&2)c4Aak/pfR8CC]\UPEb<MI2b%'Z'g,\d'HBXE#<
%(N9.BT-%"6rGp<CU_NkjBBQ+**co&jUcEr=^iGf4]XT:EZ>!2j,pVI-TDoK*,4$'4QIu#*e<knd6Kc^%(/6+5r!HO[qs&-!p;TC<
%>Gi+u#)/#m1c'[Z*I2hSA-&o/4Hsjd,jcB?0'3/g3H1W$dT0(bFP%3R")"i!WWAmU$)2"rj9%N5`):u]a'[lLpuFJg,XgR,9a`3t
%G"E>hP=cmcG[uN784f%lqIY^"M$dS>0b7H/q1.8aq[S)05hLGB6h0@G@@1),C%.p!VJil[:]S%M=VC#u\@qMI;I$G;hnBu'lU6NE
%16e(RJBCR]![LK_:KSpA/jg`O:dBJ)gK#Occr2e`)d<mJP'('BF76"<*j(%i,KO%F4YgSPpf1%Vqq$7-.@(.`XM=[2lof;i&8MQ[
%=?e/]V&@VtGY,.f)_L1Tce+'t+cY9Z)hJT\iS%:?@0p#X*8hjSN(<u<!WOM0m#t&RHdn6<:c,&im#&d&Zl(Yt>2ENicg<ZWB@.4B
%?&Jjm8/g1+KeL_-iAk&pNSfFjpbLHP2+l0.EN[$`"ak7nYI!r]q9T187$^%!&k7@%f8lgjmmSnEbC[B.,j^%52CC^^FjP^0TP*pH
%CWR)f(=dDlcnu]EgYC!5H1>_pFJ*?pD(>mA3+:$-n_^W`pE!V*C%p8gV*7?M%1=*s/CPKU6Dti(G\AD)@BK.h>`S&PlqpU,LVHG2
%b/M!,(31CCON4,3mQhHIXX"S12g2.`&Inh:/])!k3QVHS3(\E*h^SC8=96$X)1Z]k.XT9Td>Bdqa'g(qSiKjfXPQ<-)gDIbQ;]Q9
%+WH35+EbVt8UeM*+4`RV)U!;LKVG(O6$6o!6k?3(r.%*PhS8DmEua3,jVN]"Rc>)%kiW=lh0k>tPAE9shLb?Q-S;fPloq';.0.>K
%HknuGX>.;@p!dTXJ:r8sQda/Tf;Rur)&W3,Qi]PTS^Ocn,4t40eoAHi")jp`26V>D$YcH9AE!)I_[H=)AXDh)L\Pig[_L7#A5TRF
%GiBiAn>')jbP:k%IZ63AC?dK4+&ZZjMh0U>:,@Ffa%a-l$*5[]6oF4rQ*+^8fGltDWTT@dq><'bLIhB<#P,S]5s$&F<C_m)>n#dE
%X7RmM.115H^M.['C*RKAe?.2N^H:M(W@\TTRWoN]q.f)*8cpC`P'k184&)(IOMC$F/2A>VQE4U54-)p'IJ'>,s$?t41=qk^70dDH
%5l'!]=[O#FIB`MRGK]Nnbn3mVqq4&)V^]%ck'qnS:,*s57QB(C/6U;ch4N<cZ,J:X%7Sr6s.DMf;"JG5(EgtmD+V=U`g%\Fbf_K#
%,^>\AFUM<KMtd2,LC"OGBj(k=]-r:-Ym;YO[WA#JCkqp%Y,8]9=P2R<QD!&QhBHDM+gs95Yk`uqB?Hqr#YKc?VnZtr'33!fJ!;+/
%OE%sjIkYWY1GQZ;8b8e0ASR)6i%/ScIok<s]/P/7l]591>>0&/aUZg-6Bq$$<dC8\Q:op0P"-);[PJ($A5gs5Y(F/V[g5QC1u/>-
%DoNO*1cI;24HO^?g(2Qa,E/d(,NNAp"PBZc"UVs+aD6Ro/r+:4CU'5V9KM3]5$bhgCHG*;&?gCNZ2NWQ5($*Z*QHmWPO?UoeV=XY
%s,aFpM'g=);IF,[:$*u_"mqh#O`NKK-#'-L`*K.<O*i0U//-!Ib)%`),.Be&erV^ag^/^PJP]7,oRBA'`rePnBD9;0aH5aC%164h
%#Qdb!&"CAbNJ0BmhkGc%6iQ4__)\@MkWGsqW9BCbAEGF3K`HU*lcE"#&,faL#gtn%;b8>W:r,>ik_OI'D>(1LT_*Xi/sH-fT6+NH
%@:Rt,A*./^!PV0%+>DD9c+k0N^!:jT4$qg02\EnQ\7j57!;G<NGh`)[Q(?Hl1u?7Yl!A=AB*kcXid0dPi?`1piW[5qK_g2:<t`@V
%k:4L\"+V#%#_6>]`>&r-Pr;QrA4;iokuqu!eqI$FI51^`^8i*-=g@*U*L"<Ehr5hkT5L9C?$9cud[9YA7ePEVHcQXGHe^I9TEM%V
%G#JU`dbURcpFJEY8a4/[0_V6$J5B@`H0fh5Q=ZG8`i?ZAelk@b3:S0t+3a"j3]CFF.R[!5Zj%G)gDZNl+9=ACplgR9Y5FNYg(#5n
%rR@$^k$d4B/$bl.?Ykp\J`Z[U*$PrcUQd`)UCk8I&S2N?TlMG/kLaYNj=R.mVmEm[5:BIof)\,G'ddPiiX_>"Au$+dp'=YeBl&He
%_qf/+dq]U=<NTVudQPpn#N.<R0Su>cgugZ%Pu<uh"%/cdFlgCeF7p2W\&'6sH&sAL1`uda1O2A^0=>Zt2-A'rfcT9,\Jp^U+.1;(
%k$CCS'R6Z82&2+A%Nd?!]#$$&>(YQ1)(&qeZe<i2m,:"0ZdI/:YP[#gm'sLJ?TnOdSs@kXE4@FkWH5ac<[Dk#7@-7_/nqbSb$@+'
%B9TH[K2P5\$"gEH4GoW,#H1pq.8Y?U6t$ACERSe0PU*bVPUZj^+sGi(-pYJQO&>bk5MIZ/\X@Y/R>ikN?L^=C61<_)Q/6<j48IKa
%Z[V/r5Q&jfZiB'8pOE135Q&\85Q9oFT0Ice)LhR-5Q:Y[^]4,MJ,Au4If@T!rVhjBrkG'hr:l%3i)bC(cf;c(r;PlOrqM!Cj6*$u
%r:+.oj8YkX?TPskgY`"Thu9h:r7-8t=)]UK~>
%AI9_PrivateDataEnd
